!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/lsw/fio/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220220.0/
%.o	Makefile	/^%.o : %.c$/;"	t
16	t/zbd/test-zbd-support	/^    r=$(((RANDOM << 16) | RANDOM))$/;"	h
A	tools/hist/fio-histo-log-pctiles.py	/^    def A(self, boolean_val):$/;"	m	class:Test
A32	crc/xxhash.c	/^#define A32(/;"	d	file:
ACT_MAX_CRIT	profiles/act.c	/^#define ACT_MAX_CRIT	/;"	d	file:
ACT_MAX_OPTS	profiles/act.c	/^#define ACT_MAX_OPTS	/;"	d	file:
AIO_RING_MAGIC	engines/libaio.c	/^#define AIO_RING_MAGIC	/;"	d	file:
ALIGN	oslib/libmtd_common.h	/^#define ALIGN(/;"	d
ALIGNED_4KB	engines/libcufile.c	/^#define ALIGNED_4KB(/;"	d	file:
ALIGN_LEFT	ghelpers.h	/^#define ALIGN_LEFT /;"	d
ALIGN_RIGHT	ghelpers.h	/^#define ALIGN_RIGHT /;"	d
ALLSPHINXOPTS	doc/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALLSPHINXOPTS	doc/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	doc/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% .$/;"	v
ALL_LOG_NR	iolog.c	/^	ALL_LOG_NR	= 6,$/;"	e	enum:__anona13017500103	file:
ARCH_AARCH64_H	arch/arch-aarch64.h	/^#define ARCH_AARCH64_H$/;"	d
ARCH_ALPHA_H	arch/arch-alpha.h	/^#define ARCH_ALPHA_H$/;"	d
ARCH_ARM_H	arch/arch-arm.h	/^#define ARCH_ARM_H$/;"	d
ARCH_CPU_CLOCK_CYCLES_PER_USEC	arch/arch-s390.h	/^#define ARCH_CPU_CLOCK_CYCLES_PER_USEC /;"	d
ARCH_CPU_CLOCK_WRAPS	arch/arch.h	/^#define ARCH_CPU_CLOCK_WRAPS$/;"	d
ARCH_FLAG_1	arch/arch.h	/^	ARCH_FLAG_1	= 1 << 0,$/;"	e	enum:__anon5399c5260203
ARCH_FLAG_2	arch/arch.h	/^	ARCH_FLAG_2	= 1 << 1,$/;"	e	enum:__anon5399c5260203
ARCH_FLAG_3	arch/arch.h	/^	ARCH_FLAG_3	= 1 << 2,$/;"	e	enum:__anon5399c5260203
ARCH_FLAG_4	arch/arch.h	/^	ARCH_FLAG_4	= 1 << 3,$/;"	e	enum:__anon5399c5260203
ARCH_GENERIC_H	arch/arch-generic.h	/^#define ARCH_GENERIC_H$/;"	d
ARCH_H	arch/arch.h	/^#define ARCH_H$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-aarch64.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-ia64.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-ppc.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-s390.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-x86.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_CPU_CLOCK	arch/arch-x86_64.h	/^#define ARCH_HAVE_CPU_CLOCK$/;"	d
ARCH_HAVE_FFZ	arch/arch-aarch64.h	/^#define ARCH_HAVE_FFZ$/;"	d
ARCH_HAVE_FFZ	arch/arch-ia64.h	/^#define ARCH_HAVE_FFZ$/;"	d
ARCH_HAVE_FFZ	arch/arch-ppc.h	/^#define ARCH_HAVE_FFZ$/;"	d
ARCH_HAVE_FFZ	arch/arch-x86.h	/^#define ARCH_HAVE_FFZ$/;"	d
ARCH_HAVE_FFZ	arch/arch-x86_64.h	/^#define ARCH_HAVE_FFZ$/;"	d
ARCH_HAVE_INIT	arch/arch-aarch64.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_INIT	arch/arch-ia64.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_INIT	arch/arch-ppc.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_INIT	arch/arch-s390.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_INIT	arch/arch-sh.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_INIT	arch/arch-x86-common.h	/^#define ARCH_HAVE_INIT$/;"	d
ARCH_HAVE_IOURING	arch/arch.h	/^#define ARCH_HAVE_IOURING$/;"	d
ARCH_HAVE_SSE4_2	arch/arch-x86_64.h	/^#define ARCH_HAVE_SSE4_2$/;"	d
ARCH_HPPA_H	arch/arch-hppa.h	/^#define ARCH_HPPA_H$/;"	d
ARCH_IA64_H	arch/arch-ia64.h	/^#define ARCH_IA64_H$/;"	d
ARCH_MIPS64_H	arch/arch-mips.h	/^#define ARCH_MIPS64_H$/;"	d
ARCH_PPC_H	arch/arch-ppc.h	/^#define ARCH_PPC_H$/;"	d
ARCH_S390_H	arch/arch-s390.h	/^#define ARCH_S390_H$/;"	d
ARCH_SH_H	arch/arch-sh.h	/^#define ARCH_SH_H$/;"	d
ARCH_SPARC64_H	arch/arch-sparc64.h	/^#define ARCH_SPARC64_H$/;"	d
ARCH_SPARC_H	arch/arch-sparc.h	/^#define ARCH_SPARC_H$/;"	d
ARCH_X86_64_H	arch/arch-x86_64.h	/^#define ARCH_X86_64_H$/;"	d
ARCH_X86_H	arch/arch-x86.h	/^#define ARCH_X86_H$/;"	d
ARPA_INET_H	os/windows/posix/include/arpa/inet.h	/^#define ARPA_INET_H$/;"	d
ASHMEM_DEVICE	os/os-android.h	/^#define ASHMEM_DEVICE	/;"	d
ASM_TYPES_H	os/windows/posix/include/asm/types.h	/^#define ASM_TYPES_H$/;"	d
AUTHOR	tools/fio_generate_plots.1	/^.SH AUTHOR$/;"	s	title:FIO_GENERATE_PLOTS
AUTHOR	tools/hist/fiologparser_hist.py.1	/^.SH AUTHOR$/;"	s	title:fiologparser_hist.py
AUTHOR	tools/plot/fio2gnuplot.1	/^.SH AUTHOR$/;"	s	title:fio2gnuplot
AUTHORS	fio.1	/^.SH AUTHORS$/;"	s	title:fio
A_DO_STAT	helper_thread.c	/^	A_DO_STAT	= 3,$/;"	e	enum:action	file:
A_EXIT	helper_thread.c	/^	A_EXIT		= 1,$/;"	e	enum:action	file:
A_RESET	helper_thread.c	/^	A_RESET		= 2,$/;"	e	enum:action	file:
Act profile options	HOWTO.rst	/^Act profile options$/;"	s	chapter:Running predefined workloads
Act profile options	fio.1	/^.SS "Act profile options"$/;"	S	section:fio""JOB PARAMETERS
After	tools/fio.service	/^After=network.target$/;"	k	section:Unit
Author	README.rst	/^Author$/;"	c
BATCH_COMPLETE	t/io_uring.c	/^#define BATCH_COMPLETE	/;"	d	file:
BATCH_SUBMIT	t/io_uring.c	/^#define BATCH_SUBMIT	/;"	d	file:
BC_APP	options.c	/^#define BC_APP	/;"	d	file:
BEGIN	lex.yy.c	/^#define BEGIN /;"	d	file:
BITS_INDEX_MASK	lib/bloom.c	/^#define BITS_INDEX_MASK	/;"	d	file:
BITS_PER_INDEX	lib/bloom.c	/^#define BITS_PER_INDEX	/;"	d	file:
BLEND_OP	crc/sha256.c	/^static inline void BLEND_OP(int I, uint32_t *W)$/;"	f	typeref:typename:void	file:
BLEND_OP	crc/sha512.c	/^static inline void BLEND_OP(int I, uint64_t *W)$/;"	f	typeref:typename:void	file:
BLKDISCARD	os/os-android.h	/^#define BLKDISCARD	/;"	d
BLKDISCARD	os/os-linux.h	/^#define BLKDISCARD	/;"	d
BLKFLSBUF	os/os-android.h	/^#define BLKFLSBUF	/;"	d
BLKFLSBUF	os/os-linux.h	/^#define BLKFLSBUF	/;"	d
BLKGETSIZE64	os/os-android.h	/^#define BLKGETSIZE64	/;"	d
BLKGETSIZE64	os/os-linux.h	/^#define BLKGETSIZE64	/;"	d
BLKTRACEAPI_H	blktrace_api.h	/^#define BLKTRACEAPI_H$/;"	d
BLK_IO_TRACE_MAGIC	blktrace_api.h	/^#define BLK_IO_TRACE_MAGIC	/;"	d
BLK_IO_TRACE_VERSION	blktrace_api.h	/^#define BLK_IO_TRACE_VERSION	/;"	d
BLK_TA_BACKMERGE	blktrace_api.h	/^#define BLK_TA_BACKMERGE	/;"	d
BLK_TA_BOUNCE	blktrace_api.h	/^#define BLK_TA_BOUNCE	/;"	d
BLK_TA_COMPLETE	blktrace_api.h	/^#define BLK_TA_COMPLETE	/;"	d
BLK_TA_DRV_DATA	blktrace_api.h	/^#define BLK_TA_DRV_DATA /;"	d
BLK_TA_FRONTMERGE	blktrace_api.h	/^#define BLK_TA_FRONTMERGE	/;"	d
BLK_TA_GETRQ	blktrace_api.h	/^#define	BLK_TA_GETRQ	/;"	d
BLK_TA_INSERT	blktrace_api.h	/^#define BLK_TA_INSERT	/;"	d
BLK_TA_ISSUE	blktrace_api.h	/^#define BLK_TA_ISSUE	/;"	d
BLK_TA_PLUG	blktrace_api.h	/^#define BLK_TA_PLUG	/;"	d
BLK_TA_QUEUE	blktrace_api.h	/^#define BLK_TA_QUEUE	/;"	d
BLK_TA_REMAP	blktrace_api.h	/^#define BLK_TA_REMAP	/;"	d
BLK_TA_REQUEUE	blktrace_api.h	/^#define	BLK_TA_REQUEUE	/;"	d
BLK_TA_SLEEPRQ	blktrace_api.h	/^#define	BLK_TA_SLEEPRQ	/;"	d
BLK_TA_SPLIT	blktrace_api.h	/^#define BLK_TA_SPLIT	/;"	d
BLK_TA_UNPLUG_IO	blktrace_api.h	/^#define BLK_TA_UNPLUG_IO	/;"	d
BLK_TA_UNPLUG_TIMER	blktrace_api.h	/^#define BLK_TA_UNPLUG_TIMER	/;"	d
BLK_TC_ACT	blktrace_api.h	/^#define BLK_TC_ACT(/;"	d
BLK_TC_AHEAD	blktrace_api.h	/^	BLK_TC_AHEAD	= 1 << 11,	\/* readahead *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_COMPLETE	blktrace_api.h	/^	BLK_TC_COMPLETE	= 1 << 7,	\/* completions *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_DISCARD	blktrace_api.h	/^	BLK_TC_DISCARD	= 1 << 13,	\/* discard requests *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_DRV_DATA	blktrace_api.h	/^	BLK_TC_DRV_DATA	= 1 << 14,	\/* binary per-driver data *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_END	blktrace_api.h	/^	BLK_TC_END	= 1 << 15,	\/* only 16-bits, reminder *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_FLUSH	blktrace_api.h	/^	BLK_TC_FLUSH	= 1 << 2,	\/* flush *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_FS	blktrace_api.h	/^	BLK_TC_FS	= 1 << 8,	\/* fs requests *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_ISSUE	blktrace_api.h	/^	BLK_TC_ISSUE	= 1 << 6,	\/* issue *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_META	blktrace_api.h	/^	BLK_TC_META	= 1 << 12,	\/* metadata *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_NOTIFY	blktrace_api.h	/^	BLK_TC_NOTIFY	= 1 << 10,	\/* special message *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_PC	blktrace_api.h	/^	BLK_TC_PC	= 1 << 9,	\/* pc requests *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_QUEUE	blktrace_api.h	/^	BLK_TC_QUEUE	= 1 << 4,	\/* queueing\/merging *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_READ	blktrace_api.h	/^	BLK_TC_READ	= 1 << 0,	\/* reads *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_REQUEUE	blktrace_api.h	/^	BLK_TC_REQUEUE	= 1 << 5,	\/* requeueing *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_SHIFT	blktrace_api.h	/^#define BLK_TC_SHIFT	/;"	d
BLK_TC_SYNC	blktrace_api.h	/^	BLK_TC_SYNC	= 1 << 3,	\/* sync *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TC_WRITE	blktrace_api.h	/^	BLK_TC_WRITE	= 1 << 1,	\/* writes *\/$/;"	e	enum:__anonab8d7e1c0103
BLK_TN_MESSAGE	blktrace_api.h	/^#define BLK_TN_MESSAGE /;"	d
BLK_TN_PROCESS	blktrace_api.h	/^#define BLK_TN_PROCESS	/;"	d
BLK_TN_TIMESTAMP	blktrace_api.h	/^#define BLK_TN_TIMESTAMP	/;"	d
BLK_ZONE_REP_CAPACITY	oslib/linux-blkzoned.c	/^#define BLK_ZONE_REP_CAPACITY	/;"	d	file:
BLOCKS_PER_UNIT	lib/axmap.c	/^#define BLOCKS_PER_UNIT	/;"	d	file:
BLOCKS_PER_UNIT_MASK	lib/axmap.c	/^#define BLOCKS_PER_UNIT_MASK	/;"	d	file:
BLOCK_INFO	stat.h	/^#define BLOCK_INFO(/;"	d
BLOCK_INFO_SET_STATE	stat.h	/^#define BLOCK_INFO_SET_STATE(/;"	d
BLOCK_INFO_STATE	stat.h	/^#define BLOCK_INFO_STATE(/;"	d
BLOCK_INFO_STATE_SHIFT	stat.h	/^#define BLOCK_INFO_STATE_SHIFT	/;"	d
BLOCK_INFO_TRIMS	stat.h	/^#define BLOCK_INFO_TRIMS(/;"	d
BLOCK_STATE_COUNT	stat.h	/^	BLOCK_STATE_COUNT,$/;"	e	enum:block_info_state
BLOCK_STATE_TRIMMED	stat.h	/^	BLOCK_STATE_TRIMMED,$/;"	e	enum:block_info_state
BLOCK_STATE_TRIM_FAILURE	stat.h	/^	BLOCK_STATE_TRIM_FAILURE,$/;"	e	enum:block_info_state
BLOCK_STATE_UNINIT	stat.h	/^	BLOCK_STATE_UNINIT,$/;"	e	enum:block_info_state
BLOCK_STATE_WRITE_FAILURE	stat.h	/^	BLOCK_STATE_WRITE_FAILURE,$/;"	e	enum:block_info_state
BLOCK_STATE_WRITTEN	stat.h	/^	BLOCK_STATE_WRITTEN,$/;"	e	enum:block_info_state
BLOOM_SEED	lib/bloom.c	/^#define BLOOM_SEED	/;"	d	file:
BLOOM_SIZE	filehash.c	/^#define BLOOM_SIZE	/;"	d	file:
BS	t/io_uring.c	/^#define BS	/;"	d	file:
BSSPLIT_MAX	thread_options.h	/^#define BSSPLIT_MAX	/;"	d
BUF_INC	lib/output_buffer.c	/^#define BUF_INC	/;"	d	file:
BUF_SIZE	lib/memcpy.c	/^#define BUF_SIZE	/;"	d	file:
BUILDDIR	doc/Makefile	/^BUILDDIR      = output$/;"	m
BUILDDIR	doc/make.bat	/^set BUILDDIR=_build$/;"	v
BUILD_CFLAGS	config-host.mak	/^BUILD_CFLAGS= -D_GNU_SOURCE -include config-host.h  -Wimplicit-fallthrough$/;"	m
BW_LOG_MASK	iolog.c	/^	BW_LOG_MASK	= 1,$/;"	e	enum:__anona13017500103	file:
BYE	exp/expression-parser.y	/^%token <v> BYE$/;"	t	typeref:typename:v
BYE	y.tab.c	/^    BYE = 259,$/;"	e	enum:yytokentype	file:
BYE	y.tab.c	/^#define BYE /;"	d	file:
BYE	y.tab.h	/^    BYE = 259,$/;"	e	enum:yytokentype
BYE	y.tab.h	/^#define BYE /;"	d
Basic verification	doc/fio_examples.rst	/^Basic verification$/;"	c
Binary packages	README.rst	/^Binary packages$/;"	c
Block size	HOWTO.rst	/^Block size$/;"	s	chapter:Job file parameters
Block size	fio.1	/^.SS "Block size"$/;"	S	section:fio""JOB PARAMETERS
Buffers and memory	HOWTO.rst	/^Buffers and memory$/;"	s	chapter:Job file parameters
Buffers and memory	fio.1	/^.SS "Buffers and memory"$/;"	S	section:fio""JOB PARAMETERS
Building	README.rst	/^Building$/;"	c
Butterfly seek pattern	doc/fio_examples.rst	/^Butterfly seek pattern$/;"	c
CACHE_LINE_FILE	os/os-android.h	/^#define CACHE_LINE_FILE	/;"	d
CACHE_LINE_FILE	os/os-linux.h	/^#define CACHE_LINE_FILE	/;"	d
CAIRO_TEXT_HELPERS_H	cairo_text_helpers.h	/^#define CAIRO_TEXT_HELPERS_H$/;"	d
CALIBRATE_RUNS	idletime.h	/^#define CALIBRATE_RUNS /;"	d
CALIBRATE_SCALE	idletime.h	/^#define CALIBRATE_SCALE /;"	d
CANCELIOEX	engines/windowsaio.c	/^typedef BOOL (WINAPI *CANCELIOEX)(HANDLE hFile, LPOVERLAPPED lpOverlapped);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hFile,LPOVERLAPPED lpOverlapped)	file:
CC	config-host.mak	/^CC=gcc$/;"	m
CENTERED	cairo_text_helpers.c	/^#define CENTERED /;"	d	file:
CHECK_SWD	zbd.c	/^	CHECK_SWD,$/;"	e	enum:swd_action	file:
CHUNCK_CREATION_BUFFER_SIZE	engines/libhdfs.c	/^#define CHUNCK_CREATION_BUFFER_SIZE /;"	d	file:
CHUNCK_NAME_LENGTH_MAX	engines/libhdfs.c	/^#define CHUNCK_NAME_LENGTH_MAX /;"	d	file:
CHUNK	crc/test.c	/^#define CHUNK	/;"	d	file:
CLAT_HIST_LOG_MASK	iolog.c	/^	CLAT_HIST_LOG_MASK = 32,$/;"	e	enum:__anona13017500103	file:
CLAT_LOG_MASK	iolog.c	/^	CLAT_LOG_MASK	= 8,$/;"	e	enum:__anona13017500103	file:
CLIENT / SERVER	fio.1	/^.SH CLIENT \/ SERVER$/;"	s	title:fio
CLIENT_H	client.h	/^#define CLIENT_H$/;"	d
CLOCK128_MULT_SHIFT	t/time-test.c	/^	CLOCK128_MULT_SHIFT	= __CLOCK128_BIT | __CLOCK_MULT_SHIFT,$/;"	e	enum:__anone3fe4fb50103	file:
CLOCK64_2STAGE	t/time-test.c	/^	CLOCK64_2STAGE		= __CLOCK64_BIT | __CLOCK_2STAGE,$/;"	e	enum:__anone3fe4fb50103	file:
CLOCK64_EMULATE_128	t/time-test.c	/^	CLOCK64_EMULATE_128	= __CLOCK64_BIT | __CLOCK_EMULATE_128,$/;"	e	enum:__anone3fe4fb50103	file:
CLOCK64_LOCK	t/time-test.c	/^	CLOCK64_LOCK		= __CLOCK64_BIT | __CLOCK_LOCK,$/;"	e	enum:__anone3fe4fb50103	file:
CLOCK64_MULT_SHIFT	t/time-test.c	/^	CLOCK64_MULT_SHIFT	= __CLOCK64_BIT | __CLOCK_MULT_SHIFT,$/;"	e	enum:__anone3fe4fb50103	file:
CLOCK_ENTRIES_DEBUG	gettime.c	/^#define CLOCK_ENTRIES_DEBUG	/;"	d	file:
CLOCK_ENTRIES_TEST	gettime.c	/^#define CLOCK_ENTRIES_TEST	/;"	d	file:
CLOCK_MONOTONIC_RAW	os/windows/posix.c	/^#define CLOCK_MONOTONIC_RAW /;"	d	file:
CMDPRIO_MODE_BSSPLIT	engines/cmdprio.h	/^	CMDPRIO_MODE_BSSPLIT,$/;"	e	enum:__anon79ffcf210103
CMDPRIO_MODE_NONE	engines/cmdprio.h	/^	CMDPRIO_MODE_NONE,$/;"	e	enum:__anon79ffcf210103
CMDPRIO_MODE_PERC	engines/cmdprio.h	/^	CMDPRIO_MODE_PERC,$/;"	e	enum:__anon79ffcf210103
CMDPRIO_RWDIR_CNT	engines/cmdprio.h	/^#define CMDPRIO_RWDIR_CNT /;"	d
CONFIG_3ARG_AFFINITY	config-host.h	/^#define CONFIG_3ARG_AFFINITY$/;"	d
CONFIG_3ARG_AFFINITY	config-host.mak	/^CONFIG_3ARG_AFFINITY=y$/;"	m
CONFIG_64BIT	config-host.h	/^#define CONFIG_64BIT$/;"	d
CONFIG_64BIT	config-host.mak	/^CONFIG_64BIT=y$/;"	m
CONFIG_ARITHMETIC	config-host.h	/^#define CONFIG_ARITHMETIC$/;"	d
CONFIG_ARITHMETIC	config-host.mak	/^CONFIG_ARITHMETIC=y$/;"	m
CONFIG_BUILD_NATIVE	config-host.h	/^#define CONFIG_BUILD_NATIVE$/;"	d
CONFIG_BUILD_NATIVE	config-host.mak	/^CONFIG_BUILD_NATIVE=y$/;"	m
CONFIG_CLOCKID_T	config-host.h	/^#define CONFIG_CLOCKID_T$/;"	d
CONFIG_CLOCKID_T	config-host.mak	/^CONFIG_CLOCKID_T=y$/;"	m
CONFIG_CLOCK_GETTIME	config-host.h	/^#define CONFIG_CLOCK_GETTIME$/;"	d
CONFIG_CLOCK_GETTIME	config-host.mak	/^CONFIG_CLOCK_GETTIME=y$/;"	m
CONFIG_CLOCK_MONOTONIC	config-host.h	/^#define CONFIG_CLOCK_MONOTONIC$/;"	d
CONFIG_CLOCK_MONOTONIC	config-host.mak	/^CONFIG_CLOCK_MONOTONIC=y$/;"	m
CONFIG_CMP_SWAP	config-host.h	/^#define CONFIG_CMP_SWAP$/;"	d
CONFIG_CMP_SWAP	config-host.mak	/^CONFIG_CMP_SWAP=y$/;"	m
CONFIG_FDATASYNC	config-host.h	/^#define CONFIG_FDATASYNC$/;"	d
CONFIG_FDATASYNC	config-host.mak	/^CONFIG_FDATASYNC=y$/;"	m
CONFIG_GETMNTENT	config-host.h	/^#define CONFIG_GETMNTENT$/;"	d
CONFIG_GETMNTENT	config-host.mak	/^CONFIG_GETMNTENT=y$/;"	m
CONFIG_GETOPT_LONG_ONLY	config-host.h	/^#define CONFIG_GETOPT_LONG_ONLY$/;"	d
CONFIG_GETOPT_LONG_ONLY	config-host.mak	/^CONFIG_GETOPT_LONG_ONLY=y$/;"	m
CONFIG_GETTIMEOFDAY	config-host.h	/^#define CONFIG_GETTIMEOFDAY$/;"	d
CONFIG_GETTIMEOFDAY	config-host.mak	/^CONFIG_GETTIMEOFDAY=y$/;"	m
CONFIG_HAS_BLKZONED	config-host.h	/^#define CONFIG_HAS_BLKZONED$/;"	d
CONFIG_HAS_BLKZONED	config-host.mak	/^CONFIG_HAS_BLKZONED=y$/;"	m
CONFIG_HAVE_ASPRINTF	config-host.h	/^#define CONFIG_HAVE_ASPRINTF$/;"	d
CONFIG_HAVE_ASPRINTF	config-host.mak	/^CONFIG_HAVE_ASPRINTF=y$/;"	m
CONFIG_HAVE_BOOL	config-host.h	/^#define CONFIG_HAVE_BOOL$/;"	d
CONFIG_HAVE_BOOL	config-host.mak	/^CONFIG_HAVE_BOOL=y$/;"	m
CONFIG_HAVE_GETTID	config-host.h	/^#define CONFIG_HAVE_GETTID$/;"	d
CONFIG_HAVE_GETTID	config-host.mak	/^CONFIG_HAVE_GETTID=y$/;"	m
CONFIG_HAVE_KERNEL_RWF_T	config-host.h	/^#define CONFIG_HAVE_KERNEL_RWF_T$/;"	d
CONFIG_HAVE_KERNEL_RWF_T	config-host.mak	/^CONFIG_HAVE_KERNEL_RWF_T=y$/;"	m
CONFIG_HAVE_STATX	config-host.h	/^#define CONFIG_HAVE_STATX$/;"	d
CONFIG_HAVE_STATX	config-host.mak	/^CONFIG_HAVE_STATX=y$/;"	m
CONFIG_HAVE_STATX_SYSCALL	config-host.h	/^#define CONFIG_HAVE_STATX_SYSCALL$/;"	d
CONFIG_HAVE_STATX_SYSCALL	config-host.mak	/^CONFIG_HAVE_STATX_SYSCALL=y$/;"	m
CONFIG_HAVE_STRNDUP	config-host.h	/^#define CONFIG_HAVE_STRNDUP$/;"	d
CONFIG_HAVE_STRNDUP	config-host.mak	/^CONFIG_HAVE_STRNDUP=y$/;"	m
CONFIG_HAVE_THP	config-host.h	/^#define CONFIG_HAVE_THP$/;"	d
CONFIG_HAVE_THP	config-host.mak	/^CONFIG_HAVE_THP=y$/;"	m
CONFIG_HAVE_TIMERFD_CREATE	config-host.h	/^#define CONFIG_HAVE_TIMERFD_CREATE$/;"	d
CONFIG_HAVE_TIMERFD_CREATE	config-host.mak	/^CONFIG_HAVE_TIMERFD_CREATE=y$/;"	m
CONFIG_HAVE_VASPRINTF	config-host.h	/^#define CONFIG_HAVE_VASPRINTF$/;"	d
CONFIG_HAVE_VASPRINTF	config-host.mak	/^CONFIG_HAVE_VASPRINTF=y$/;"	m
CONFIG_INET_ATON	config-host.h	/^#define CONFIG_INET_ATON$/;"	d
CONFIG_INET_ATON	config-host.mak	/^CONFIG_INET_ATON=y$/;"	m
CONFIG_IPV6	config-host.h	/^#define CONFIG_IPV6$/;"	d
CONFIG_IPV6	config-host.mak	/^CONFIG_IPV6=y$/;"	m
CONFIG_LEX_USE_O	config-host.mak	/^CONFIG_LEX_USE_O=y$/;"	m
CONFIG_LIBAIO	config-host.h	/^#define CONFIG_LIBAIO$/;"	d
CONFIG_LIBAIO	config-host.mak	/^CONFIG_LIBAIO=y$/;"	m
CONFIG_LIBAIO_RW_FLAGS	config-host.h	/^#define CONFIG_LIBAIO_RW_FLAGS$/;"	d
CONFIG_LIBAIO_RW_FLAGS	config-host.mak	/^CONFIG_LIBAIO_RW_FLAGS=y$/;"	m
CONFIG_LIBNUMA	config-host.h	/^#define CONFIG_LIBNUMA$/;"	d
CONFIG_LIBNUMA	config-host.mak	/^CONFIG_LIBNUMA=y$/;"	m
CONFIG_LINUX_EXT4_MOVE_EXTENT	config-host.h	/^#define CONFIG_LINUX_EXT4_MOVE_EXTENT$/;"	d
CONFIG_LINUX_EXT4_MOVE_EXTENT	config-host.mak	/^CONFIG_LINUX_EXT4_MOVE_EXTENT=y$/;"	m
CONFIG_LINUX_FALLOCATE	config-host.h	/^#define CONFIG_LINUX_FALLOCATE$/;"	d
CONFIG_LINUX_FALLOCATE	config-host.mak	/^CONFIG_LINUX_FALLOCATE=y$/;"	m
CONFIG_LINUX_SPLICE	config-host.h	/^#define CONFIG_LINUX_SPLICE$/;"	d
CONFIG_LINUX_SPLICE	config-host.mak	/^CONFIG_LINUX_SPLICE=y$/;"	m
CONFIG_LITTLE_ENDIAN	config-host.h	/^#define CONFIG_LITTLE_ENDIAN$/;"	d
CONFIG_LITTLE_ENDIAN	config-host.mak	/^CONFIG_LITTLE_ENDIAN=y$/;"	m
CONFIG_MTD	config-host.h	/^#define CONFIG_MTD$/;"	d
CONFIG_MTD	config-host.mak	/^CONFIG_MTD=y$/;"	m
CONFIG_NET_MSS	config-host.h	/^#define CONFIG_NET_MSS$/;"	d
CONFIG_NET_MSS	config-host.mak	/^CONFIG_NET_MSS=y$/;"	m
CONFIG_NET_WINDOWSIZE	config-host.h	/^#define CONFIG_NET_WINDOWSIZE$/;"	d
CONFIG_NET_WINDOWSIZE	config-host.mak	/^CONFIG_NET_WINDOWSIZE=y$/;"	m
CONFIG_PIPE	config-host.h	/^#define CONFIG_PIPE$/;"	d
CONFIG_PIPE	config-host.mak	/^CONFIG_PIPE=y$/;"	m
CONFIG_PIPE2	config-host.h	/^#define CONFIG_PIPE2$/;"	d
CONFIG_PIPE2	config-host.mak	/^CONFIG_PIPE2=y$/;"	m
CONFIG_POSIXAIO	config-host.h	/^#define CONFIG_POSIXAIO$/;"	d
CONFIG_POSIXAIO	config-host.mak	/^CONFIG_POSIXAIO=y$/;"	m
CONFIG_POSIXAIO_FSYNC	config-host.h	/^#define CONFIG_POSIXAIO_FSYNC$/;"	d
CONFIG_POSIXAIO_FSYNC	config-host.mak	/^CONFIG_POSIXAIO_FSYNC=y$/;"	m
CONFIG_POSIX_FADVISE	config-host.h	/^#define CONFIG_POSIX_FADVISE$/;"	d
CONFIG_POSIX_FADVISE	config-host.mak	/^CONFIG_POSIX_FADVISE=y$/;"	m
CONFIG_POSIX_FALLOCATE	config-host.h	/^#define CONFIG_POSIX_FALLOCATE$/;"	d
CONFIG_POSIX_FALLOCATE	config-host.mak	/^CONFIG_POSIX_FALLOCATE=y$/;"	m
CONFIG_PREAD	config-host.h	/^#define CONFIG_PREAD$/;"	d
CONFIG_PREAD	config-host.mak	/^CONFIG_PREAD=y$/;"	m
CONFIG_PSHARED	config-host.h	/^#define CONFIG_PSHARED$/;"	d
CONFIG_PSHARED	config-host.mak	/^CONFIG_PSHARED=y$/;"	m
CONFIG_PTHREAD_CONDATTR_SETCLOCK	config-host.h	/^#define CONFIG_PTHREAD_CONDATTR_SETCLOCK$/;"	d
CONFIG_PTHREAD_CONDATTR_SETCLOCK	config-host.mak	/^CONFIG_PTHREAD_CONDATTR_SETCLOCK=y$/;"	m
CONFIG_PTHREAD_GETAFFINITY	config-host.h	/^#define CONFIG_PTHREAD_GETAFFINITY$/;"	d
CONFIG_PTHREAD_GETAFFINITY	config-host.mak	/^CONFIG_PTHREAD_GETAFFINITY=y$/;"	m
CONFIG_PTHREAD_SIGMASK	config-host.h	/^#define CONFIG_PTHREAD_SIGMASK$/;"	d
CONFIG_PTHREAD_SIGMASK	config-host.mak	/^CONFIG_PTHREAD_SIGMASK=y$/;"	m
CONFIG_PWRITEV	config-host.h	/^#define CONFIG_PWRITEV$/;"	d
CONFIG_PWRITEV	config-host.mak	/^CONFIG_PWRITEV=y$/;"	m
CONFIG_PWRITEV2	config-host.h	/^#define CONFIG_PWRITEV2$/;"	d
CONFIG_PWRITEV2	config-host.mak	/^CONFIG_PWRITEV2=y$/;"	m
CONFIG_RLIMIT_MEMLOCK	config-host.h	/^#define CONFIG_RLIMIT_MEMLOCK$/;"	d
CONFIG_RLIMIT_MEMLOCK	config-host.mak	/^CONFIG_RLIMIT_MEMLOCK=y$/;"	m
CONFIG_RUSAGE_THREAD	config-host.h	/^#define CONFIG_RUSAGE_THREAD$/;"	d
CONFIG_RUSAGE_THREAD	config-host.mak	/^CONFIG_RUSAGE_THREAD=y$/;"	m
CONFIG_SCHED_IDLE	config-host.h	/^#define CONFIG_SCHED_IDLE$/;"	d
CONFIG_SCHED_IDLE	config-host.mak	/^CONFIG_SCHED_IDLE=y$/;"	m
CONFIG_SETVBUF	config-host.h	/^#define CONFIG_SETVBUF$/;"	d
CONFIG_SETVBUF	config-host.mak	/^CONFIG_SETVBUF=y$/;"	m
CONFIG_SFAA	config-host.h	/^#define CONFIG_SFAA$/;"	d
CONFIG_SFAA	config-host.mak	/^CONFIG_SFAA=y$/;"	m
CONFIG_SOCKLEN_T	config-host.h	/^#define CONFIG_SOCKLEN_T$/;"	d
CONFIG_SOCKLEN_T	config-host.mak	/^CONFIG_SOCKLEN_T=y$/;"	m
CONFIG_STATIC_ASSERT	config-host.h	/^#define CONFIG_STATIC_ASSERT$/;"	d
CONFIG_STATIC_ASSERT	config-host.mak	/^CONFIG_STATIC_ASSERT=y$/;"	m
CONFIG_STRCASESTR	config-host.h	/^#define CONFIG_STRCASESTR$/;"	d
CONFIG_STRCASESTR	config-host.mak	/^CONFIG_STRCASESTR=y$/;"	m
CONFIG_STRSEP	config-host.h	/^#define CONFIG_STRSEP$/;"	d
CONFIG_STRSEP	config-host.mak	/^CONFIG_STRSEP=y$/;"	m
CONFIG_SYNC_FILE_RANGE	config-host.h	/^#define CONFIG_SYNC_FILE_RANGE$/;"	d
CONFIG_SYNC_FILE_RANGE	config-host.mak	/^CONFIG_SYNC_FILE_RANGE=y$/;"	m
CONFIG_SYNC_SYNC	config-host.h	/^#define CONFIG_SYNC_SYNC$/;"	d
CONFIG_SYNC_SYNC	config-host.mak	/^CONFIG_SYNC_SYNC=y$/;"	m
CONFIG_TARGET_OS	config-host.mak	/^CONFIG_TARGET_OS=Linux$/;"	m
CONFIG_TCP_NODELAY	config-host.h	/^#define CONFIG_TCP_NODELAY$/;"	d
CONFIG_TCP_NODELAY	config-host.mak	/^CONFIG_TCP_NODELAY=y$/;"	m
CONFIG_TLS_THREAD	config-host.h	/^#define CONFIG_TLS_THREAD$/;"	d
CONFIG_TLS_THREAD	config-host.mak	/^CONFIG_TLS_THREAD=y$/;"	m
CONFIG_ZLIB	config-host.h	/^#define CONFIG_ZLIB$/;"	d
CONFIG_ZLIB	config-host.mak	/^CONFIG_ZLIB=y$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS= -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DFIO_INTERNAL $(DEBUGFLAGS)$/;"	m
CPU IDLENESS PROFILING	fio.1	/^.SH CPU IDLENESS PROFILING$/;"	s	title:fio
CPU idleness profiling	HOWTO.rst	/^CPU idleness profiling$/;"	c
CPUMASK_ASSZERO	os/os-dragonfly.h	/^#define CPUMASK_ASSZERO(/;"	d
CPUMASK_NANDBIT	os/os-dragonfly.h	/^#define CPUMASK_NANDBIT(/;"	d
CPUMASK_ORBIT	os/os-dragonfly.h	/^#define CPUMASK_ORBIT(/;"	d
CPUMASK_SIMPLE	os/os-dragonfly.h	/^#define CPUMASK_SIMPLE(/;"	d
CPUMASK_TESTBIT	os/os-dragonfly.h	/^#define CPUMASK_TESTBIT(/;"	d
CPU_ARM64_CRC32C	os/os.h	/^        CPU_ARM64_CRC32C,$/;"	e	enum:__anon741282ae0203
CPU_COUNT	os/os.h	/^static inline int CPU_COUNT(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
CPU_HAS_LLSC	arch/arch-sh.h	/^#define CPU_HAS_LLSC	/;"	d
CRC32C3X8	crc/crc32c-arm64.c	/^#define CRC32C3X8(/;"	d	file:
CRC32C7X3X8	crc/crc32c-arm64.c	/^#define CRC32C7X3X8(/;"	d	file:
CRC32C_H	crc/crc32c.h	/^#define CRC32C_H$/;"	d
CRC32_H	crc/crc32.h	/^#define CRC32_H$/;"	d
CRC64_H	crc/crc64.h	/^#define CRC64_H$/;"	d
CRC7_H	crc/crc7.h	/^#define CRC7_H$/;"	d
CS_CGETTIME	gettime.h	/^	CS_CGETTIME,$/;"	e	enum:fio_cs
CS_CPUCLOCK	gettime.h	/^	CS_CPUCLOCK,$/;"	e	enum:fio_cs
CS_GTOD	gettime.h	/^	CS_GTOD		= 1,$/;"	e	enum:fio_cs
CS_INVAL	gettime.h	/^	CS_INVAL,$/;"	e	enum:fio_cs
Cache	engines/pmemblk.c	/^static fio_pmemblk_file_t Cache;$/;"	v	typeref:typename:fio_pmemblk_file_t	file:
CacheLock	engines/pmemblk.c	/^static pthread_mutex_t CacheLock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
Ch	crc/sha256.c	/^static inline uint32_t Ch(uint32_t x, uint32_t y, uint32_t z)$/;"	f	typeref:typename:uint32_t	file:
Ch	crc/sha512.c	/^static inline uint64_t Ch(uint64_t x, uint64_t y, uint64_t z)$/;"	f	typeref:typename:uint64_t	file:
Client/Server	HOWTO.rst	/^Client\/Server$/;"	c
Client_connected	client.h	/^	Client_connected	= 1,$/;"	e	enum:__anon4f09d8da0103
Client_created	client.h	/^	Client_created		= 0,$/;"	e	enum:__anon4f09d8da0103
Client_exited	client.h	/^	Client_exited		= 5,$/;"	e	enum:__anon4f09d8da0103
Client_running	client.h	/^	Client_running		= 3,$/;"	e	enum:__anon4f09d8da0103
Client_started	client.h	/^	Client_started		= 2,$/;"	e	enum:__anon4f09d8da0103
Client_stopped	client.h	/^	Client_stopped		= 4,$/;"	e	enum:__anon4f09d8da0103
Command line options	HOWTO.rst	/^Command line options$/;"	c
DAIOCTRIM	os/os-dragonfly.h	/^#define DAIOCTRIM	/;"	d
DDIR_DATASYNC	io_ddir.h	/^	DDIR_DATASYNC,$/;"	e	enum:fio_ddir
DDIR_INVAL	io_ddir.h	/^	DDIR_INVAL = -1,$/;"	e	enum:fio_ddir
DDIR_LAST	io_ddir.h	/^	DDIR_LAST,$/;"	e	enum:fio_ddir
DDIR_LIST	tools/fio_jsonplus_clat2csv	/^DDIR_LIST = ['read', 'write', 'trim']$/;"	v
DDIR_READ	io_ddir.h	/^	DDIR_READ = 0,$/;"	e	enum:fio_ddir
DDIR_RWDIR_CNT	io_ddir.h	/^	DDIR_RWDIR_CNT = 3,$/;"	e	enum:fio_ddir
DDIR_RWDIR_SYNC_CNT	io_ddir.h	/^	DDIR_RWDIR_SYNC_CNT = 4,$/;"	e	enum:fio_ddir
DDIR_SYNC	io_ddir.h	/^	DDIR_SYNC = 3,$/;"	e	enum:fio_ddir
DDIR_SYNC_FILE_RANGE	io_ddir.h	/^	DDIR_SYNC_FILE_RANGE,$/;"	e	enum:fio_ddir
DDIR_TRIM	io_ddir.h	/^	DDIR_TRIM = 2,$/;"	e	enum:fio_ddir
DDIR_WAIT	io_ddir.h	/^	DDIR_WAIT,$/;"	e	enum:fio_ddir
DDIR_WRITE	io_ddir.h	/^	DDIR_WRITE = 1,$/;"	e	enum:fio_ddir
DEBUG	t/time-test.c	/^#define DEBUG /;"	d	file:
DEBUGFLAGS	Makefile	/^DEBUGFLAGS = -DFIO_INC_DEBUG$/;"	m
DEDUPE_H	dedupe.h	/^#define DEDUPE_H$/;"	d
DEDUPE_MODE_REPEAT	thread_options.h	/^	DEDUPE_MODE_REPEAT = 0,$/;"	e	enum:dedupe_mode
DEDUPE_MODE_WORKING_SET	thread_options.h	/^	DEDUPE_MODE_WORKING_SET = 1,$/;"	e	enum:dedupe_mode
DEF_LOG_ENTRIES	iolog.h	/^#define DEF_LOG_ENTRIES	/;"	d
DEF_NR_OUTPUT	t/genzipf.c	/^#define DEF_NR_OUTPUT	/;"	d	file:
DEF_PARETO_VAL	t/genzipf.c	/^#define DEF_PARETO_VAL	/;"	d	file:
DEF_ZIPF_VAL	t/genzipf.c	/^#define DEF_ZIPF_VAL	/;"	d	file:
DEPTH	t/io_uring.c	/^#define DEPTH	/;"	d	file:
DESCRIPTION	fio.1	/^.SH DESCRIPTION$/;"	s	title:fio
DESCRIPTION	tools/fio_generate_plots.1	/^.SH DESCRIPTION$/;"	s	title:FIO_GENERATE_PLOTS
DESCRIPTION	tools/hist/fiologparser_hist.py.1	/^.SH DESCRIPTION$/;"	s	title:fiologparser_hist.py
DESCRIPTION	tools/plot/fio2gnuplot.1	/^.SH DESCRIPTION$/;"	s	title:fio2gnuplot
DIR	os/windows/posix/include/dirent.h	/^typedef struct dirent_ctx DIR;$/;"	t	typeref:struct:dirent_ctx
DIRENT_H	os/windows/posix/include/dirent.h	/^#define DIRENT_H$/;"	d
DISK_UTIL_MSEC	diskutil.h	/^#define DISK_UTIL_MSEC	/;"	d
DLFCN_H	os/windows/posix/include/dlfcn.h	/^#define DLFCN_H$/;"	d
DPKGCFG	ci/actions-install.sh	/^    cat <<DPKGCFG | sudo tee \/etc\/dpkg\/dpkg.cfg.d\/dpkg-speedup > \/dev\/null$/;"	h
DRAWING_AREA_XDIM	gfio.h	/^#define DRAWING_AREA_XDIM /;"	d
DRAWING_AREA_YDIM	gfio.h	/^#define DRAWING_AREA_YDIM /;"	d
DRD_IGNORE_VAR	diskutil.c	/^#define DRD_IGNORE_VAR(/;"	d	file:
DRD_IGNORE_VAR	eta.c	/^#define DRD_IGNORE_VAR(/;"	d	file:
DRD_IGNORE_VAR	helper_thread.c	/^#define DRD_IGNORE_VAR(/;"	d	file:
DRD_IGNORE_VAR	init.c	/^#define DRD_IGNORE_VAR(/;"	d	file:
DUMP_BUF_SZ	verify.c	/^#define DUMP_BUF_SZ	/;"	d	file:
DYNAMIC_ENGS	Makefile	/^ DYNAMIC_ENGS := $(ENGINES)$/;"	m
Data	t/fuzz/onefile.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size);$/;"	z	prototype:LLVMFuzzerTestOneInput	typeref:typename:const uint8_t *	file:
Description	tools/fio.service	/^Description=Flexible I\/O tester server$/;"	k	section:Unit
Documentation	README.rst	/^Documentation$/;"	s	chapter:Building
EAI_SYSTEM	os/windows/posix/include/arpa/inet.h	/^#define EAI_SYSTEM /;"	d
ECHO	lex.yy.c	/^#define ECHO /;"	d	file:
ECHO	lex.yy.c	/^ECHO;$/;"	v	typeref:typename:YY_RULE_SETUP
EDQUOT	os/os.h	/^#define EDQUOT	/;"	d
ENDIAN_BROKEN	libfio.c	/^	ENDIAN_BROKEN,$/;"	e	enum:__anona626c76b0203	file:
ENDIAN_INVALID_BE	libfio.c	/^	ENDIAN_INVALID_BE = 1,$/;"	e	enum:__anona626c76b0203	file:
ENDIAN_INVALID_CONFIG	libfio.c	/^	ENDIAN_INVALID_CONFIG,$/;"	e	enum:__anona626c76b0203	file:
ENDIAN_INVALID_LE	libfio.c	/^	ENDIAN_INVALID_LE,$/;"	e	enum:__anona626c76b0203	file:
EOB_ACT_CONTINUE_SCAN	lex.yy.c	/^#define EOB_ACT_CONTINUE_SCAN /;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	/^#define EOB_ACT_END_OF_FILE /;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	/^#define EOB_ACT_LAST_MATCH /;"	d	file:
EOF	configure	/^    cat > Makefile <<EOF$/;"	h
EOF	configure	/^  cat > $TMPC << EOF$/;"	h
EOF	configure	/^  cat > $TMPC <<EOF$/;"	h
EOF	configure	/^cat > $TMPC << EOF$/;"	h
EOF	configure	/^cat > $TMPC <<EOF$/;"	h
EOF	configure	/^cat > $TMPC2 << EOF$/;"	h
EOF	tools/genfio	/^	cat << EOF$/;"	h
EOF	tools/genfio	/^    cat >> $OUTFILE << EOF$/;"	h
EOF	tools/genfio	/^cat >$TEMPLATE << EOF$/;"	h
EOF	tools/genfio	/^cat >> $OUTFILE << EOF$/;"	h
EREMOTEIO	zbd.c	/^#define EREMOTEIO	/;"	d	file:
ERROR_STR_MAX	thread_options.h	/^#define ERROR_STR_MAX	/;"	d
ERROR_TYPE_ANY	td_error.h	/^        ERROR_TYPE_ANY = 0xffff,$/;"	e	enum:error_type
ERROR_TYPE_CNT	td_error.h	/^	ERROR_TYPE_CNT = 3,$/;"	e	enum:error_type_bit
ERROR_TYPE_NONE	td_error.h	/^        ERROR_TYPE_NONE = 0,$/;"	e	enum:error_type
ERROR_TYPE_READ	td_error.h	/^        ERROR_TYPE_READ = 1 << ERROR_TYPE_READ_BIT,$/;"	e	enum:error_type
ERROR_TYPE_READ_BIT	td_error.h	/^	ERROR_TYPE_READ_BIT = 0,$/;"	e	enum:error_type_bit
ERROR_TYPE_VERIFY	td_error.h	/^        ERROR_TYPE_VERIFY = 1 << ERROR_TYPE_VERIFY_BIT,$/;"	e	enum:error_type
ERROR_TYPE_VERIFY_BIT	td_error.h	/^	ERROR_TYPE_VERIFY_BIT = 2,$/;"	e	enum:error_type_bit
ERROR_TYPE_WRITE	td_error.h	/^        ERROR_TYPE_WRITE = 1 << ERROR_TYPE_WRITE_BIT,$/;"	e	enum:error_type
ERROR_TYPE_WRITE_BIT	td_error.h	/^	ERROR_TYPE_WRITE_BIT = 1,$/;"	e	enum:error_type_bit
ERR_PTR	err.h	/^static inline void *ERR_PTR(uintptr_t error)$/;"	f	typeref:typename:void *
EXAMPLE	tools/plot/fio2gnuplot.1	/^.SH EXAMPLE$/;"	s	title:fio2gnuplot
EXAMPLES	tools/hist/fiologparser_hist.py.1	/^.SH EXAMPLES$/;"	s	title:fiologparser_hist.py
EXIT_SUCCESS	y.tab.c	/^#      define EXIT_SUCCESS /;"	d	file:
EXIT_SUCCESS	y.tab.c	/^#    define EXIT_SUCCESS /;"	d	file:
EXT4_IOC_MOVE_EXT	engines/e4defrag.c	/^#define EXT4_IOC_MOVE_EXT /;"	d	file:
Environment variables	HOWTO.rst	/^Environment variables$/;"	s	chapter:Job file format
Error handling	HOWTO.rst	/^Error handling$/;"	s	chapter:Job file parameters
Error handling	fio.1	/^.SS "Error handling"$/;"	S	section:fio""JOB PARAMETERS
Examples	doc/fio_doc.rst	/^Examples$/;"	c
ExecStart	tools/fio.service	/^ExecStart=\/usr\/bin\/fio --server$/;"	k	section:Service
F1	crc/md5.h	/^#define F1(/;"	d
F2	crc/md5.h	/^#define F2(/;"	d
F3	crc/md5.h	/^#define F3(/;"	d
F4	crc/md5.h	/^#define F4(/;"	d
FALLOC_FL_KEEP_SIZE	engines/falloc.c	/^#define FALLOC_FL_KEEP_SIZE /;"	d	file:
FALLOC_FL_PUNCH_HOLE	engines/falloc.c	/^#define FALLOC_FL_PUNCH_HOLE /;"	d	file:
FD_BLKTRACE	debug.h	/^	FD_BLKTRACE,$/;"	e	enum:__anon0847a6820103
FD_COMPRESS	debug.h	/^	FD_COMPRESS,$/;"	e	enum:__anon0847a6820103
FD_DEBUG_MAX	debug.h	/^	FD_DEBUG_MAX,$/;"	e	enum:__anon0847a6820103
FD_DISKUTIL	debug.h	/^	FD_DISKUTIL,$/;"	e	enum:__anon0847a6820103
FD_FILE	debug.h	/^	FD_FILE,$/;"	e	enum:__anon0847a6820103
FD_HELPERTHREAD	debug.h	/^	FD_HELPERTHREAD,$/;"	e	enum:__anon0847a6820103
FD_IO	debug.h	/^	FD_IO,$/;"	e	enum:__anon0847a6820103
FD_JOB	debug.h	/^	FD_JOB,$/;"	e	enum:__anon0847a6820103
FD_MEM	debug.h	/^	FD_MEM,$/;"	e	enum:__anon0847a6820103
FD_MUTEX	debug.h	/^	FD_MUTEX,$/;"	e	enum:__anon0847a6820103
FD_NET	debug.h	/^	FD_NET,$/;"	e	enum:__anon0847a6820103
FD_PARSE	debug.h	/^	FD_PARSE,$/;"	e	enum:__anon0847a6820103
FD_PROCESS	debug.h	/^	FD_PROCESS	= 0,$/;"	e	enum:__anon0847a6820103
FD_PROFILE	debug.h	/^	FD_PROFILE,$/;"	e	enum:__anon0847a6820103
FD_RANDOM	debug.h	/^	FD_RANDOM,$/;"	e	enum:__anon0847a6820103
FD_RATE	debug.h	/^	FD_RATE,$/;"	e	enum:__anon0847a6820103
FD_STEADYSTATE	debug.h	/^	FD_STEADYSTATE,$/;"	e	enum:__anon0847a6820103
FD_TIME	debug.h	/^	FD_TIME,$/;"	e	enum:__anon0847a6820103
FD_VERIFY	debug.h	/^	FD_VERIFY,$/;"	e	enum:__anon0847a6820103
FD_ZBD	debug.h	/^	FD_ZBD,$/;"	e	enum:__anon0847a6820103
FILE_ENG_DATA	file.h	/^#define FILE_ENG_DATA(/;"	d
FILE_FLAG_FNS	file.h	/^#define FILE_FLAG_FNS(/;"	d
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(axmap);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(closing);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(done);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(extend);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(hashed);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(lfsr);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(open);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(partial_mmap);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(size_known);$/;"	p
FILE_FLAG_FNS	file.h	/^FILE_FLAG_FNS(smalloc);$/;"	p
FILE_LOCK_EXCLUSIVE	file.h	/^	FILE_LOCK_EXCLUSIVE,$/;"	e	enum:file_lock_mode
FILE_LOCK_NONE	file.h	/^	FILE_LOCK_NONE,$/;"	e	enum:file_lock_mode
FILE_LOCK_READWRITE	file.h	/^	FILE_LOCK_READWRITE,$/;"	e	enum:file_lock_mode
FILE_SET_ENG_DATA	file.h	/^#define FILE_SET_ENG_DATA(/;"	d
FIO-VERSION-FILE	Makefile	/^FIO-VERSION-FILE: FORCE$/;"	t
FIO_ARCH	arch/arch-aarch64.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-alpha.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-arm.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-generic.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-hppa.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-ia64.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-mips.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-ppc.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-s390.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-sh.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-sparc.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-sparc64.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-x86.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	arch/arch-x86_64.h	/^#define FIO_ARCH	/;"	d
FIO_ARCH	os/windows/dobuild.cmd	/^if "%1"=="x64" set FIO_ARCH=x64$/;"	v
FIO_ARCH	os/windows/dobuild.cmd	/^if "%1"=="x86" set FIO_ARCH=x86$/;"	v
FIO_ARCH_HAS_SYSCALL	arch/arch-aarch64.h	/^#define FIO_ARCH_HAS_SYSCALL$/;"	d
FIO_ARCH_HAS_SYSCALL	arch/arch-x86_64.h	/^#define FIO_ARCH_HAS_SYSCALL$/;"	d
FIO_ARCH_X86_COMMON	arch/arch-x86-common.h	/^#define FIO_ARCH_X86_COMMON$/;"	d
FIO_ARRAY_SIZE	compiler/compiler.h	/^#define FIO_ARRAY_SIZE(/;"	d
FIO_ASPRINTF_H	oslib/asprintf.h	/^#define FIO_ASPRINTF_H$/;"	d
FIO_ASYNCIO_SYNC_TRIM	ioengines.h	/^	FIO_ASYNCIO_SYNC_TRIM$/;"	e	enum:fio_ioengine_flags
FIO_BARRIER	ioengines.h	/^	FIO_BARRIER	= 1 << 8,	\/* engine supports barriers *\/$/;"	e	enum:fio_ioengine_flags
FIO_BITMAP_H	lib/axmap.h	/^#define FIO_BITMAP_H$/;"	d
FIO_BIT_BASED	ioengines.h	/^	FIO_BIT_BASED	= 1 << 10,	\/* engine uses a bit base (e.g. uses Kbit as opposed to KB) *\/$/;"	e	enum:fio_ioengine_flags
FIO_BLKTRACE_H	blktrace.h	/^#define FIO_BLKTRACE_H$/;"	d
FIO_BLKZONED_H	oslib/blkzoned.h	/^#define FIO_BLKZONED_H$/;"	d
FIO_BLOOM_H	lib/bloom.h	/^#define FIO_BLOOM_H$/;"	d
FIO_BSWAP_H	lib/bswap.h	/^#define FIO_BSWAP_H$/;"	d
FIO_CFLAGS	Makefile	/^FIO_CFLAGS= -std=gnu99 -Wwrite-strings -Wall -Wdeclaration-after-statement $(OPTFLAGS) $(EXTFLAG/;"	m
FIO_CGROUP_H	cgroup.h	/^#define FIO_CGROUP_H$/;"	d
FIO_CLAT	stat.h	/^	FIO_CLAT,$/;"	e	enum:fio_lat
FIO_CLIENT_DEF_ETA_MSEC	client.h	/^#define FIO_CLIENT_DEF_ETA_MSEC	/;"	d
FIO_CLIENT_FLAG	init.c	/^#define FIO_CLIENT_FLAG	/;"	d	file:
FIO_CLIENT_HASH_BITS	client.c	/^#define FIO_CLIENT_HASH_BITS	/;"	d	file:
FIO_CLIENT_HASH_MASK	client.c	/^#define FIO_CLIENT_HASH_MASK	/;"	d	file:
FIO_CLIENT_HASH_SZ	client.c	/^#define FIO_CLIENT_HASH_SZ	/;"	d	file:
FIO_CLIENT_TYPE_CLI	client.h	/^	FIO_CLIENT_TYPE_CLI		= 1,$/;"	e	enum:__anon4f09d8da2103
FIO_CLIENT_TYPE_GUI	client.h	/^	FIO_CLIENT_TYPE_GUI		= 2,$/;"	e	enum:__anon4f09d8da2103
FIO_CMDPRIO_H	engines/cmdprio.h	/^#define FIO_CMDPRIO_H$/;"	d
FIO_COMPILER_H	compiler/compiler.h	/^#define FIO_COMPILER_H$/;"	d
FIO_CPUS_SHARED	fio.h	/^	FIO_CPUS_SHARED		= 0,$/;"	e	enum:__anon0f7035d94603
FIO_CPUS_SPLIT	fio.h	/^	FIO_CPUS_SPLIT,$/;"	e	enum:__anon0f7035d94603
FIO_CPU_MASK_ROWS	os/os-windows-7.h	/^#define FIO_CPU_MASK_ROWS	/;"	d
FIO_CPU_MASK_STRIDE	os/os-windows-7.h	/^#define FIO_CPU_MASK_STRIDE	/;"	d
FIO_CPU_NOOP	engines/cpu.c	/^	FIO_CPU_NOOP = 0,$/;"	e	enum:stress_mode	file:
FIO_CPU_QSORT	engines/cpu.c	/^	FIO_CPU_QSORT = 1,$/;"	e	enum:stress_mode	file:
FIO_CRC_TEST_H	crc/test.h	/^#define FIO_CRC_TEST_H$/;"	d
FIO_DDIR_H	io_ddir.h	/^#define FIO_DDIR_H$/;"	d
FIO_DEBUG_H	debug.h	/^#define FIO_DEBUG_H$/;"	d
FIO_DEBUG_INC_H	t/debug.h	/^#define FIO_DEBUG_INC_H$/;"	d
FIO_DEDUPE_OFF	fio.h	/^	FIO_DEDUPE_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_DEF_CL_SIZE	os/os.h	/^#define FIO_DEF_CL_SIZE	/;"	d
FIO_DEF_PARETO	fio.h	/^#define FIO_DEF_PARETO	/;"	d
FIO_DEF_ZIPF	fio.h	/^#define FIO_DEF_ZIPF	/;"	d
FIO_DISKLESSIO	ioengines.h	/^	FIO_DISKLESSIO	= 1 << 2,	\/* no disk involved *\/$/;"	e	enum:fio_ioengine_flags
FIO_DISKUTIL_H	diskutil.h	/^#define FIO_DISKUTIL_H$/;"	d
FIO_DU_NAME_SZ	diskutil.h	/^#define FIO_DU_NAME_SZ	/;"	d
FIO_EMULATED_MKDIR_TWO	os/os-windows.h	/^#define FIO_EMULATED_MKDIR_TWO$/;"	d
FIO_ERR_H	err.h	/^#define FIO_ERR_H$/;"	d
FIO_ETA_ALWAYS	fio.h	/^	FIO_ETA_ALWAYS,$/;"	e	enum:__anon0f7035d90b03
FIO_ETA_AUTO	fio.h	/^	FIO_ETA_AUTO,$/;"	e	enum:__anon0f7035d90b03
FIO_ETA_NEVER	fio.h	/^	FIO_ETA_NEVER,$/;"	e	enum:__anon0f7035d90b03
FIO_EXT_ENG_DIR	os/os-linux.h	/^#define FIO_EXT_ENG_DIR	/;"	d
FIO_FAKEIO	ioengines.h	/^	FIO_FAKEIO	= 1 << 11,	\/* engine pretends to do IO *\/$/;"	e	enum:fio_ioengine_flags
FIO_FALLOCATE_KEEP_SIZE	file.h	/^	FIO_FALLOCATE_KEEP_SIZE	= 3,$/;"	e	enum:fio_fallocate_mode
FIO_FALLOCATE_NATIVE	file.h	/^	FIO_FALLOCATE_NATIVE	= 4,$/;"	e	enum:fio_fallocate_mode
FIO_FALLOCATE_NONE	file.h	/^	FIO_FALLOCATE_NONE	= 1,$/;"	e	enum:fio_fallocate_mode
FIO_FALLOCATE_POSIX	file.h	/^	FIO_FALLOCATE_POSIX	= 2,$/;"	e	enum:fio_fallocate_mode
FIO_FALLOCATE_TRUNCATE	file.h	/^	FIO_FALLOCATE_TRUNCATE	= 5,$/;"	e	enum:fio_fallocate_mode
FIO_FFZ_H	lib/ffz.h	/^#define FIO_FFZ_H$/;"	d
FIO_FIELD_SIZE	compiler/compiler.h	/^#define FIO_FIELD_SIZE(/;"	d
FIO_FIFO_H	fifo.h	/^#define FIO_FIFO_H$/;"	d
FIO_FILESTAT_LSTAT	engines/filestat.c	/^	FIO_FILESTAT_LSTAT	= 2,$/;"	e	enum:__anon0a8b58ea0103	file:
FIO_FILESTAT_STAT	engines/filestat.c	/^	FIO_FILESTAT_STAT	= 1,$/;"	e	enum:__anon0a8b58ea0103	file:
FIO_FILESTAT_STATX	engines/filestat.c	/^	FIO_FILESTAT_STATX	= 3,$/;"	e	enum:__anon0a8b58ea0103	file:
FIO_FILE_H	file.h	/^#define FIO_FILE_H$/;"	d
FIO_FILE_HASH_H	filehash.h	/^#define FIO_FILE_HASH_H$/;"	d
FIO_FILE_axmap	file.h	/^	FIO_FILE_axmap		= 1 << 7,	\/* uses axmap *\/$/;"	e	enum:fio_file_flags
FIO_FILE_closing	file.h	/^	FIO_FILE_closing	= 1 << 1,	\/* file being closed *\/$/;"	e	enum:fio_file_flags
FIO_FILE_done	file.h	/^	FIO_FILE_done		= 1 << 3,	\/* io completed to this file *\/$/;"	e	enum:fio_file_flags
FIO_FILE_extend	file.h	/^	FIO_FILE_extend		= 1 << 2,	\/* needs extend *\/$/;"	e	enum:fio_file_flags
FIO_FILE_hashed	file.h	/^	FIO_FILE_hashed		= 1 << 5,	\/* file is on hash *\/$/;"	e	enum:fio_file_flags
FIO_FILE_lfsr	file.h	/^	FIO_FILE_lfsr		= 1 << 8,	\/* lfsr is used *\/$/;"	e	enum:fio_file_flags
FIO_FILE_open	file.h	/^	FIO_FILE_open		= 1 << 0,	\/* file is open *\/$/;"	e	enum:fio_file_flags
FIO_FILE_partial_mmap	file.h	/^	FIO_FILE_partial_mmap	= 1 << 6,	\/* can't do full mmap *\/$/;"	e	enum:fio_file_flags
FIO_FILE_size_known	file.h	/^	FIO_FILE_size_known	= 1 << 4,	\/* size has been set *\/$/;"	e	enum:fio_file_flags
FIO_FILE_smalloc	file.h	/^	FIO_FILE_smalloc	= 1 << 9,	\/* smalloc file\/file_name *\/$/;"	e	enum:fio_file_flags
FIO_FLOW_H	flow.h	/^#define FIO_FLOW_H$/;"	d
FIO_FNV_H	crc/fnv.h	/^#define FIO_FNV_H$/;"	d
FIO_FSERVICE_GAUSS	file.h	/^	FIO_FSERVICE_GAUSS		= __FIO_FSERVICE_NONUNIFORM | 6,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_PARETO	file.h	/^	FIO_FSERVICE_PARETO		= __FIO_FSERVICE_NONUNIFORM | 5,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_RANDOM	file.h	/^	FIO_FSERVICE_RANDOM		= 1,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_RR	file.h	/^	FIO_FSERVICE_RR			= 2,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_SEQ	file.h	/^	FIO_FSERVICE_SEQ		= 3,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_SHIFT	file.h	/^	FIO_FSERVICE_SHIFT		= 10,$/;"	e	enum:__anonfd762ebb0103
FIO_FSERVICE_ZIPF	file.h	/^	FIO_FSERVICE_ZIPF		= __FIO_FSERVICE_NONUNIFORM | 4,$/;"	e	enum:__anonfd762ebb0103
FIO_GAUSS_H	lib/gauss.h	/^#define FIO_GAUSS_H$/;"	d
FIO_GENERATE_PLOTS	tools/fio_generate_plots.1	/^.TH FIO_GENERATE_PLOTS 1 "May 19, 2009"$/;"	t
FIO_GETOPT_IOENGINE	fio.h	/^#define FIO_GETOPT_IOENGINE	/;"	d
FIO_GETOPT_JOB	fio.h	/^#define FIO_GETOPT_JOB	/;"	d
FIO_GETRUSAGE_H	lib/getrusage.h	/^#define FIO_GETRUSAGE_H$/;"	d
FIO_GETTIME_H	gettime.h	/^#define FIO_GETTIME_H$/;"	d
FIO_H	fio.h	/^#define FIO_H$/;"	d
FIO_HAVE_BLKTRACE	os/os-android.h	/^#define FIO_HAVE_BLKTRACE$/;"	d
FIO_HAVE_BLKTRACE	os/os-linux.h	/^#define FIO_HAVE_BLKTRACE$/;"	d
FIO_HAVE_BYTEORDER_FUNCS	os/os-android.h	/^#define FIO_HAVE_BYTEORDER_FUNCS$/;"	d
FIO_HAVE_CGROUPS	os/os-android.h	/^#define FIO_HAVE_CGROUPS$/;"	d
FIO_HAVE_CGROUPS	os/os-linux.h	/^#define FIO_HAVE_CGROUPS$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-dragonfly.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-freebsd.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-hpux.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-mac.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-solaris.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CHARDEV_SIZE	os/os-windows.h	/^#define FIO_HAVE_CHARDEV_SIZE$/;"	d
FIO_HAVE_CL_SIZE	os/os-android.h	/^#define FIO_HAVE_CL_SIZE$/;"	d
FIO_HAVE_CL_SIZE	os/os-linux.h	/^#define FIO_HAVE_CL_SIZE$/;"	d
FIO_HAVE_CPU_AFFINITY	os/os-dragonfly.h	/^#define FIO_HAVE_CPU_AFFINITY$/;"	d
FIO_HAVE_CPU_AFFINITY	os/os-freebsd.h	/^#define FIO_HAVE_CPU_AFFINITY$/;"	d
FIO_HAVE_CPU_AFFINITY	os/os-linux.h	/^#define FIO_HAVE_CPU_AFFINITY$/;"	d
FIO_HAVE_CPU_AFFINITY	os/os-solaris.h	/^#define FIO_HAVE_CPU_AFFINITY$/;"	d
FIO_HAVE_CPU_AFFINITY	os/os-windows.h	/^#define FIO_HAVE_CPU_AFFINITY$/;"	d
FIO_HAVE_CPU_HAS	os/os-linux.h	/^#define FIO_HAVE_CPU_HAS$/;"	d
FIO_HAVE_CPU_ONLINE_SYSCONF	os/os-hpux.h	/^#define FIO_HAVE_CPU_ONLINE_SYSCONF$/;"	d
FIO_HAVE_CPU_ONLINE_SYSCONF	os/os-linux.h	/^#define FIO_HAVE_CPU_ONLINE_SYSCONF$/;"	d
FIO_HAVE_CPU_ONLINE_SYSCONF	os/os-windows.h	/^#define FIO_HAVE_CPU_ONLINE_SYSCONF$/;"	d
FIO_HAVE_DEFAULT_FALLOCATE	os/os.h	/^# define FIO_HAVE_DEFAULT_FALLOCATE$/;"	d
FIO_HAVE_DISK_UTIL	os/os-android.h	/^#define FIO_HAVE_DISK_UTIL$/;"	d
FIO_HAVE_DISK_UTIL	os/os-linux.h	/^#define FIO_HAVE_DISK_UTIL$/;"	d
FIO_HAVE_E4_ENG	os/os-android.h	/^#define FIO_HAVE_E4_ENG$/;"	d
FIO_HAVE_FS_STAT	os/os-android.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-dragonfly.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-freebsd.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-linux.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-netbsd.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-openbsd.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_FS_STAT	os/os-solaris.h	/^#define FIO_HAVE_FS_STAT$/;"	d
FIO_HAVE_GETTID	os/os-android.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-dragonfly.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-freebsd.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-linux.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-mac.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-netbsd.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-openbsd.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-solaris.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GETTID	os/os-windows.h	/^#define FIO_HAVE_GETTID$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-aix.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-android.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-dragonfly.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-freebsd.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-hpux.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-linux.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-mac.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-netbsd.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-openbsd.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_GET_THREAD_AFFINITY	os/os-solaris.h	/^#define FIO_HAVE_GET_THREAD_AFFINITY$/;"	d
FIO_HAVE_HUGETLB	os/os-android.h	/^#define FIO_HAVE_HUGETLB$/;"	d
FIO_HAVE_HUGETLB	os/os-linux.h	/^#define FIO_HAVE_HUGETLB$/;"	d
FIO_HAVE_IOPRIO	os/os-android.h	/^#define FIO_HAVE_IOPRIO$/;"	d
FIO_HAVE_IOPRIO	os/os-dragonfly.h	/^#define FIO_HAVE_IOPRIO$/;"	d
FIO_HAVE_IOPRIO	os/os-linux.h	/^#define FIO_HAVE_IOPRIO$/;"	d
FIO_HAVE_IOPRIO_CLASS	os/os-android.h	/^#define FIO_HAVE_IOPRIO_CLASS$/;"	d
FIO_HAVE_IOPRIO_CLASS	os/os-linux.h	/^#define FIO_HAVE_IOPRIO_CLASS$/;"	d
FIO_HAVE_IOSCHED_SWITCH	os/os-android.h	/^#define FIO_HAVE_IOSCHED_SWITCH$/;"	d
FIO_HAVE_IOSCHED_SWITCH	os/os-linux.h	/^#define FIO_HAVE_IOSCHED_SWITCH$/;"	d
FIO_HAVE_MMAP_HUGE	os/os-android.h	/^#define FIO_HAVE_MMAP_HUGE$/;"	d
FIO_HAVE_MMAP_HUGE	os/os-linux.h	/^#define FIO_HAVE_MMAP_HUGE$/;"	d
FIO_HAVE_NATIVE_FALLOCATE	os/os-linux.h	/^#define FIO_HAVE_NATIVE_FALLOCATE$/;"	d
FIO_HAVE_NATIVE_FALLOCATE	os/os-mac.h	/^#define FIO_HAVE_NATIVE_FALLOCATE$/;"	d
FIO_HAVE_ODIRECT	os/os-aix.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-android.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-dragonfly.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-freebsd.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-hpux.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-linux.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-netbsd.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_ODIRECT	os/os-windows.h	/^#define FIO_HAVE_ODIRECT$/;"	d
FIO_HAVE_PWRITEV2	os/os-linux.h	/^#define FIO_HAVE_PWRITEV2$/;"	d
FIO_HAVE_SGIO	os/os-linux.h	/^#define FIO_HAVE_SGIO$/;"	d
FIO_HAVE_SHM_ATTACH_REMOVED	os/os-dragonfly.h	/^#define FIO_HAVE_SHM_ATTACH_REMOVED$/;"	d
FIO_HAVE_SHM_ATTACH_REMOVED	os/os-freebsd.h	/^#define FIO_HAVE_SHM_ATTACH_REMOVED$/;"	d
FIO_HAVE_SHM_ATTACH_REMOVED	os/os-linux.h	/^#define FIO_HAVE_SHM_ATTACH_REMOVED$/;"	d
FIO_HAVE_SHM_ATTACH_REMOVED	os/os-openbsd.h	/^#define FIO_HAVE_SHM_ATTACH_REMOVED$/;"	d
FIO_HAVE_TRIM	os/os-android.h	/^#define FIO_HAVE_TRIM$/;"	d
FIO_HAVE_TRIM	os/os-dragonfly.h	/^#define FIO_HAVE_TRIM$/;"	d
FIO_HAVE_TRIM	os/os-freebsd.h	/^#define FIO_HAVE_TRIM$/;"	d
FIO_HAVE_TRIM	os/os-linux.h	/^#define FIO_HAVE_TRIM$/;"	d
FIO_HAVE_WRITE_HINT	os/os-linux.h	/^#define FIO_HAVE_WRITE_HINT$/;"	d
FIO_HDR_MAGIC	verify.h	/^#define FIO_HDR_MAGIC	/;"	d
FIO_HELPERS_H	helpers.h	/^#define FIO_HELPERS_H$/;"	d
FIO_HELPER_THREAD_H	helper_thread.h	/^#define FIO_HELPER_THREAD_H$/;"	d
FIO_HTTPS_INSECURE	engines/http.c	/^	FIO_HTTPS_INSECURE  = 2,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HTTPS_OFF	engines/http.c	/^	FIO_HTTPS_OFF	    = 0,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HTTPS_ON	engines/http.c	/^	FIO_HTTPS_ON	    = 1,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HTTP_S3	engines/http.c	/^	FIO_HTTP_S3	    = 1,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HTTP_SWIFT	engines/http.c	/^	FIO_HTTP_SWIFT	    = 2,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HTTP_WEBDAV	engines/http.c	/^	FIO_HTTP_WEBDAV	    = 0,$/;"	e	enum:__anondcb78a0e0103	file:
FIO_HUGE_PAGE	arch/arch-x86.h	/^#define	FIO_HUGE_PAGE	/;"	d
FIO_HUGE_PAGE	arch/arch-x86_64.h	/^#define	FIO_HUGE_PAGE	/;"	d
FIO_HUGE_PAGE	os/os.h	/^#define FIO_HUGE_PAGE	/;"	d
FIO_HWEIGHT_H	lib/hweight.h	/^#define FIO_HWEIGHT_H$/;"	d
FIO_IDLETIME_H	idletime.h	/^#define FIO_IDLETIME_H$/;"	d
FIO_IEEE754_H	lib/ieee754.h	/^#define FIO_IEEE754_H$/;"	d
FIO_IME_IN_PROGRESS	engines/ime.c	/^#define FIO_IME_IN_PROGRESS /;"	d	file:
FIO_IME_REQ_ERROR	engines/ime.c	/^#define FIO_IME_REQ_ERROR /;"	d	file:
FIO_INET_ATON_LIB_H	oslib/inet_aton.h	/^#define FIO_INET_ATON_LIB_H$/;"	d
FIO_IOENGINE_H	ioengines.h	/^#define FIO_IOENGINE_H$/;"	d
FIO_IOLOG_H	iolog.h	/^#define FIO_IOLOG_H$/;"	d
FIO_IOOPS_VERSION	ioengines.h	/^#define FIO_IOOPS_VERSION	/;"	d
FIO_IO_U	io_u.h	/^#define FIO_IO_U$/;"	d
FIO_IO_U_LAT_M_NR	stat.h	/^#define FIO_IO_U_LAT_M_NR /;"	d
FIO_IO_U_LAT_N_NR	stat.h	/^#define FIO_IO_U_LAT_N_NR /;"	d
FIO_IO_U_LAT_U_NR	stat.h	/^#define FIO_IO_U_LAT_U_NR /;"	d
FIO_IO_U_LIST_MAX_LEN	stat.h	/^#define FIO_IO_U_LIST_MAX_LEN /;"	d
FIO_IO_U_MAP_NR	stat.h	/^#define FIO_IO_U_MAP_NR	/;"	d
FIO_IO_U_PLAT_BITS	stat.h	/^#define FIO_IO_U_PLAT_BITS /;"	d
FIO_IO_U_PLAT_GROUP_NR	stat.h	/^#define FIO_IO_U_PLAT_GROUP_NR /;"	d
FIO_IO_U_PLAT_NR	stat.h	/^#define FIO_IO_U_PLAT_NR /;"	d
FIO_IO_U_PLAT_VAL	stat.h	/^#define FIO_IO_U_PLAT_VAL /;"	d
FIO_IO_U_QUEUE	io_u_queue.h	/^#define FIO_IO_U_QUEUE$/;"	d
FIO_JOBDESC_SIZE	stat.h	/^#define FIO_JOBDESC_SIZE	/;"	d
FIO_JOBNAME_SIZE	stat.h	/^#define FIO_JOBNAME_SIZE	/;"	d
FIO_LAT	stat.h	/^	FIO_LAT,$/;"	e	enum:fio_lat
FIO_LAT_CNT	stat.h	/^	FIO_LAT_CNT = 3,$/;"	e	enum:fio_lat
FIO_LFSR_H	lib/lfsr.h	/^#define FIO_LFSR_H$/;"	d
FIO_LINK_CLOSE	engines/net.c	/^	FIO_LINK_CLOSE = 0x89,$/;"	e	enum:__anon642bd1550103	file:
FIO_LINK_OPEN	engines/net.c	/^	FIO_LINK_OPEN = 0x98,$/;"	e	enum:__anon642bd1550103	file:
FIO_LINK_OPEN_CLOSE_MAGIC	engines/net.c	/^	FIO_LINK_OPEN_CLOSE_MAGIC = 0x6c696e6b,$/;"	e	enum:__anon642bd1550103	file:
FIO_LOCK_FILE_H	filelock.h	/^#define FIO_LOCK_FILE_H$/;"	d
FIO_LOG_ADD_FILE	iolog.h	/^	FIO_LOG_ADD_FILE,$/;"	e	enum:file_log_act
FIO_LOG_CLOSE_FILE	iolog.h	/^	FIO_LOG_CLOSE_FILE,$/;"	e	enum:file_log_act
FIO_LOG_DEBUG	log.h	/^	FIO_LOG_DEBUG	= 1,$/;"	e	enum:__anon0fdff11d0403
FIO_LOG_ERR	log.h	/^	FIO_LOG_ERR	= 3,$/;"	e	enum:__anon0fdff11d0403
FIO_LOG_H	log.h	/^#define FIO_LOG_H$/;"	d
FIO_LOG_INFO	log.h	/^	FIO_LOG_INFO	= 2,$/;"	e	enum:__anon0fdff11d0403
FIO_LOG_NR	log.h	/^	FIO_LOG_NR	= 4,$/;"	e	enum:__anon0fdff11d0403
FIO_LOG_OPEN_FILE	iolog.h	/^	FIO_LOG_OPEN_FILE,$/;"	e	enum:file_log_act
FIO_LOG_UNLINK_FILE	iolog.h	/^	FIO_LOG_UNLINK_FILE,$/;"	e	enum:file_log_act
FIO_MADV_FREE	os/os-android.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-dragonfly.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-freebsd.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-linux.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-netbsd.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-openbsd.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MADV_FREE	os/os-solaris.h	/^#define FIO_MADV_FREE	/;"	d
FIO_MAX_CPUS	os/os-dragonfly.h	/^#define FIO_MAX_CPUS	/;"	d
FIO_MAX_CPUS	os/os-freebsd.h	/^#define FIO_MAX_CPUS /;"	d
FIO_MAX_CPUS	os/os-linux.h	/^#define FIO_MAX_CPUS	/;"	d
FIO_MAX_CPUS	os/os-solaris.h	/^#define FIO_MAX_CPUS	/;"	d
FIO_MAX_CPUS	os/os-windows-7.h	/^#define FIO_MAX_CPUS	/;"	d
FIO_MAX_OPTS	options.h	/^#define FIO_MAX_OPTS	/;"	d
FIO_MAX_TAPS	lib/lfsr.h	/^#define FIO_MAX_TAPS	/;"	d
FIO_MEMALIGN	ioengines.h	/^	FIO_MEMALIGN	= 1 << 9,	\/* engine wants aligned memory *\/$/;"	e	enum:fio_ioengine_flags
FIO_MEMALIGN_H	lib/memalign.h	/^#define FIO_MEMALIGN_H$/;"	d
FIO_MEMCPY_H	lib/memcpy.h	/^#define FIO_MEMCPY_H$/;"	d
FIO_MIN_MAX_H	minmax.h	/^#define FIO_MIN_MAX_H$/;"	d
FIO_MOUNT_CHECK_H	lib/mountcheck.h	/^#define FIO_MOUNT_CHECK_H$/;"	d
FIO_MURMUR3_H	crc/murmur3.h	/^#define FIO_MURMUR3_H$/;"	d
FIO_NET_CLIENT_TIMEOUT	server.h	/^	FIO_NET_CLIENT_TIMEOUT		= 5000,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_ADD_JOB	server.h	/^	FIO_NET_CMD_ADD_JOB		= 15,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_CRC_SZ	server.h	/^	FIO_NET_CMD_CRC_SZ		= sizeof(struct fio_net_cmd) -$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_DU	server.h	/^	FIO_NET_CMD_DU			= 13,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_ETA	server.h	/^	FIO_NET_CMD_ETA			= 9,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_EXIT	server.h	/^	FIO_NET_CMD_EXIT		= 2,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_F_MORE	server.h	/^	FIO_NET_CMD_F_MORE		= 1UL << 0,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_GS	server.h	/^	FIO_NET_CMD_GS			= 7,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_IOLOG	server.h	/^	FIO_NET_CMD_IOLOG		= 17,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_JOB	server.h	/^	FIO_NET_CMD_JOB			= 3,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_JOBLINE	server.h	/^	FIO_NET_CMD_JOBLINE		= 4,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_JOB_OPT	server.h	/^	FIO_NET_CMD_JOB_OPT		= 22,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_LOAD_FILE	server.h	/^	FIO_NET_CMD_LOAD_FILE		= 19,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_NR	server.h	/^	FIO_NET_CMD_NR			= 23,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_PROBE	server.h	/^	FIO_NET_CMD_PROBE		= 10,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_QUIT	server.h	/^	FIO_NET_CMD_QUIT		= 1,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_RUN	server.h	/^	FIO_NET_CMD_RUN			= 16,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_SENDFILE	server.h	/^	FIO_NET_CMD_SENDFILE		= 21,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_SEND_ETA	server.h	/^	FIO_NET_CMD_SEND_ETA		= 8,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_SERVER_START	server.h	/^	FIO_NET_CMD_SERVER_START	= 14,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_START	server.h	/^	FIO_NET_CMD_START		= 11,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_STOP	server.h	/^	FIO_NET_CMD_STOP		= 12,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_TEXT	server.h	/^	FIO_NET_CMD_TEXT		= 5,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_TS	server.h	/^	FIO_NET_CMD_TS			= 6,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_UPDATE_JOB	server.h	/^	FIO_NET_CMD_UPDATE_JOB		= 18,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_CMD_VTRIGGER	server.h	/^	FIO_NET_CMD_VTRIGGER		= 20,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_NAME_MAX	server.h	/^	FIO_NET_NAME_MAX		= 256,$/;"	e	enum:__anon0e7c93f20103
FIO_NET_PORT	server.h	/^#define FIO_NET_PORT /;"	d
FIO_NODISKUTIL	ioengines.h	/^	FIO_NODISKUTIL  = 1 << 4,	\/* diskutil can't handle filename *\/$/;"	e	enum:fio_ioengine_flags
FIO_NOEXTEND	ioengines.h	/^	FIO_NOEXTEND	= 1 << 3,	\/* engine can't extend file *\/$/;"	e	enum:fio_ioengine_flags
FIO_NOFILEHASH	ioengines.h	/^	FIO_NOFILEHASH	= 1 << 13,	\/* doesn't hash the files for lookup later. *\/$/;"	e	enum:fio_ioengine_flags
FIO_NOIO	ioengines.h	/^	FIO_NOIO	= 1 << 6,	\/* thread does only pseudo IO *\/$/;"	e	enum:fio_ioengine_flags
FIO_NOSTATS	ioengines.h	/^	FIO_NOSTATS	= 1 << 12,	\/* don't do IO stats *\/$/;"	e	enum:fio_ioengine_flags
FIO_NO_HAVE_SHM_H	os/os-android.h	/^#define FIO_NO_HAVE_SHM_H$/;"	d
FIO_NO_OFFLOAD	ioengines.h	/^	FIO_NO_OFFLOAD	= 1 << 15,	\/* no async offload *\/$/;"	e	enum:fio_ioengine_flags
FIO_NR_OPTIONS	fio.h	/^#define FIO_NR_OPTIONS	/;"	d
FIO_NUM2STR_H	lib/num2str.h	/^#define FIO_NUM2STR_H$/;"	d
FIO_OBJS	Makefile	/^FIO_OBJS = $(OBJS) fio.o$/;"	m
FIO_OPTION_H	options.h	/^#define FIO_OPTION_H$/;"	d
FIO_OPT_BOOL	parse.h	/^	FIO_OPT_BOOL,$/;"	e	enum:fio_opt_type
FIO_OPT_C_ENGINE	optgroup.h	/^	FIO_OPT_C_ENGINE	= (1ULL << __FIO_OPT_C_ENGINE),$/;"	e	enum:opt_category
FIO_OPT_C_FILE	optgroup.h	/^	FIO_OPT_C_FILE		= (1ULL << __FIO_OPT_C_FILE),$/;"	e	enum:opt_category
FIO_OPT_C_GENERAL	optgroup.h	/^	FIO_OPT_C_GENERAL	= (1ULL << __FIO_OPT_C_GENERAL),$/;"	e	enum:opt_category
FIO_OPT_C_INVALID	optgroup.h	/^	FIO_OPT_C_INVALID	= (1ULL << __FIO_OPT_C_NR),$/;"	e	enum:opt_category
FIO_OPT_C_IO	optgroup.h	/^	FIO_OPT_C_IO		= (1ULL << __FIO_OPT_C_IO),$/;"	e	enum:opt_category
FIO_OPT_C_LOG	optgroup.h	/^	FIO_OPT_C_LOG		= (1ULL << __FIO_OPT_C_LOG),$/;"	e	enum:opt_category
FIO_OPT_C_PROFILE	optgroup.h	/^	FIO_OPT_C_PROFILE	= (1ULL << __FIO_OPT_C_PROFILE),$/;"	e	enum:opt_category
FIO_OPT_C_STAT	optgroup.h	/^	FIO_OPT_C_STAT		= (1ULL << __FIO_OPT_C_STAT),$/;"	e	enum:opt_category
FIO_OPT_DEPRECATED	parse.h	/^	FIO_OPT_DEPRECATED,$/;"	e	enum:fio_opt_type
FIO_OPT_FLOAT_LIST	parse.h	/^	FIO_OPT_FLOAT_LIST,$/;"	e	enum:fio_opt_type
FIO_OPT_GROUP_H	optgroup.h	/^#define FIO_OPT_GROUP_H$/;"	d
FIO_OPT_G_ACT	optgroup.h	/^	FIO_OPT_G_ACT		= (1ULL << __FIO_OPT_G_ACT),$/;"	e	enum:opt_category_group
FIO_OPT_G_CGROUP	optgroup.h	/^	FIO_OPT_G_CGROUP	= (1ULL << __FIO_OPT_G_CGROUP),$/;"	e	enum:opt_category_group
FIO_OPT_G_CLOCK	optgroup.h	/^	FIO_OPT_G_CLOCK		= (1ULL << __FIO_OPT_G_CLOCK),$/;"	e	enum:opt_category_group
FIO_OPT_G_CRED	optgroup.h	/^	FIO_OPT_G_CRED		= (1ULL << __FIO_OPT_G_CRED),$/;"	e	enum:opt_category_group
FIO_OPT_G_DESC	optgroup.h	/^	FIO_OPT_G_DESC		= (1ULL << __FIO_OPT_G_DESC),$/;"	e	enum:opt_category_group
FIO_OPT_G_DFS	optgroup.h	/^	FIO_OPT_G_DFS		= (1ULL << __FIO_OPT_G_DFS),$/;"	e	enum:opt_category_group
FIO_OPT_G_E4DEFRAG	optgroup.h	/^	FIO_OPT_G_E4DEFRAG	= (1ULL << __FIO_OPT_G_E4DEFRAG),$/;"	e	enum:opt_category_group
FIO_OPT_G_ERR	optgroup.h	/^	FIO_OPT_G_ERR		= (1ULL << __FIO_OPT_G_ERR),$/;"	e	enum:opt_category_group
FIO_OPT_G_FILENAME	optgroup.h	/^	FIO_OPT_G_FILENAME	= (1ULL << __FIO_OPT_G_FILENAME),$/;"	e	enum:opt_category_group
FIO_OPT_G_FILESTAT	optgroup.h	/^	FIO_OPT_G_FILESTAT	= (1ULL << __FIO_OPT_G_FILESTAT),$/;"	e	enum:opt_category_group
FIO_OPT_G_GFAPI	optgroup.h	/^	FIO_OPT_G_GFAPI		= (1ULL << __FIO_OPT_G_GFAPI),$/;"	e	enum:opt_category_group
FIO_OPT_G_HDFS	optgroup.h	/^	FIO_OPT_G_HDFS		= (1ULL << __FIO_OPT_G_HDFS),$/;"	e	enum:opt_category_group
FIO_OPT_G_HTTP	optgroup.h	/^	FIO_OPT_G_HTTP		= (1ULL << __FIO_OPT_G_HTTP),$/;"	e	enum:opt_category_group
FIO_OPT_G_INVALID	optgroup.h	/^	FIO_OPT_G_INVALID	= (1ULL << __FIO_OPT_G_NR),$/;"	e	enum:opt_category_group
FIO_OPT_G_IOLOG	optgroup.h	/^	FIO_OPT_G_IOLOG		= (1ULL << __FIO_OPT_G_IOLOG),$/;"	e	enum:opt_category_group
FIO_OPT_G_IOURING	optgroup.h	/^	FIO_OPT_G_IOURING	= (1ULL << __FIO_OPT_G_IOURING),$/;"	e	enum:opt_category_group
FIO_OPT_G_IO_BASIC	optgroup.h	/^	FIO_OPT_G_IO_BASIC	= (1ULL << __FIO_OPT_G_IO_BASIC),$/;"	e	enum:opt_category_group
FIO_OPT_G_IO_BUF	optgroup.h	/^	FIO_OPT_G_IO_BUF	= (1ULL << __FIO_OPT_G_IO_BUF),$/;"	e	enum:opt_category_group
FIO_OPT_G_IO_DEPTH	optgroup.h	/^	FIO_OPT_G_IO_DEPTH	= (1ULL << __FIO_OPT_G_IO_DEPTH),$/;"	e	enum:opt_category_group
FIO_OPT_G_IO_FLOW	optgroup.h	/^	FIO_OPT_G_IO_FLOW	= (1ULL << __FIO_OPT_G_IO_FLOW),$/;"	e	enum:opt_category_group
FIO_OPT_G_IO_TYPE	optgroup.h	/^	FIO_OPT_G_IO_TYPE	= (1ULL << __FIO_OPT_G_IO_TYPE),$/;"	e	enum:opt_category_group
FIO_OPT_G_ISCSI	optgroup.h	/^	FIO_OPT_G_ISCSI         = (1ULL << __FIO_OPT_G_ISCSI),$/;"	e	enum:opt_category_group
FIO_OPT_G_LATPROF	optgroup.h	/^	FIO_OPT_G_LATPROF	= (1ULL << __FIO_OPT_G_LATPROF),$/;"	e	enum:opt_category_group
FIO_OPT_G_LIBAIO	optgroup.h	/^	FIO_OPT_G_LIBAIO	= (1ULL << __FIO_OPT_G_LIBAIO),$/;"	e	enum:opt_category_group
FIO_OPT_G_LIBCUFILE	optgroup.h	/^	FIO_OPT_G_LIBCUFILE	= (1ULL << __FIO_OPT_G_LIBCUFILE),$/;"	e	enum:opt_category_group
FIO_OPT_G_LIBRPMA	optgroup.h	/^	FIO_OPT_G_LIBRPMA	= (1ULL << __FIO_OPT_G_LIBRPMA),$/;"	e	enum:opt_category_group
FIO_OPT_G_MMAP	optgroup.h	/^	FIO_OPT_G_MMAP		= (1ULL << __FIO_OPT_G_MMAP),$/;"	e	enum:opt_category_group
FIO_OPT_G_MTD	optgroup.h	/^	FIO_OPT_G_MTD		= (1ULL << __FIO_OPT_G_MTD),$/;"	e	enum:opt_category_group
FIO_OPT_G_NBD	optgroup.h	/^	FIO_OPT_G_NBD		= (1ULL << __FIO_OPT_G_NBD),$/;"	e	enum:opt_category_group
FIO_OPT_G_NETIO	optgroup.h	/^	FIO_OPT_G_NETIO		= (1ULL << __FIO_OPT_G_NETIO),$/;"	e	enum:opt_category_group
FIO_OPT_G_NFS	optgroup.h	/^	FIO_OPT_G_NFS		= (1ULL << __FIO_OPT_G_NFS),$/;"	e	enum:opt_category_group
FIO_OPT_G_PROCESS	optgroup.h	/^	FIO_OPT_G_PROCESS	= (1ULL << __FIO_OPT_G_PROCESS),$/;"	e	enum:opt_category_group
FIO_OPT_G_RANDOM	optgroup.h	/^	FIO_OPT_G_RANDOM	= (1ULL << __FIO_OPT_G_RANDOM),$/;"	e	enum:opt_category_group
FIO_OPT_G_RATE	optgroup.h	/^	FIO_OPT_G_RATE		= (1ULL << __FIO_OPT_G_RATE),$/;"	e	enum:opt_category_group
FIO_OPT_G_RBD	optgroup.h	/^	FIO_OPT_G_RBD		= (1ULL << __FIO_OPT_G_RBD),$/;"	e	enum:opt_category_group
FIO_OPT_G_RDMA	optgroup.h	/^	FIO_OPT_G_RDMA		= (1ULL << __FIO_OPT_G_RDMA),$/;"	e	enum:opt_category_group
FIO_OPT_G_RUNTIME	optgroup.h	/^	FIO_OPT_G_RUNTIME	= (1ULL << __FIO_OPT_G_RUNTIME),$/;"	e	enum:opt_category_group
FIO_OPT_G_RWMIX	optgroup.h	/^	FIO_OPT_G_RWMIX		= (1ULL << __FIO_OPT_G_RWMIX),$/;"	e	enum:opt_category_group
FIO_OPT_G_SG	optgroup.h	/^	FIO_OPT_G_SG		= (1ULL << __FIO_OPT_G_SG),$/;"	e	enum:opt_category_group
FIO_OPT_G_THINKTIME	optgroup.h	/^	FIO_OPT_G_THINKTIME	= (1ULL << __FIO_OPT_G_THINKTIME),$/;"	e	enum:opt_category_group
FIO_OPT_G_TIOBENCH	optgroup.h	/^	FIO_OPT_G_TIOBENCH	= (1ULL << __FIO_OPT_G_TIOBENCH),$/;"	e	enum:opt_category_group
FIO_OPT_G_TRIM	optgroup.h	/^	FIO_OPT_G_TRIM		= (1ULL << __FIO_OPT_G_TRIM),$/;"	e	enum:opt_category_group
FIO_OPT_G_VERIFY	optgroup.h	/^	FIO_OPT_G_VERIFY	= (1ULL << __FIO_OPT_G_VERIFY),$/;"	e	enum:opt_category_group
FIO_OPT_G_WINDOWSAIO	optgroup.h	/^	FIO_OPT_G_WINDOWSAIO	= (1ULL << __FIO_OPT_G_WINDOWSAIO),$/;"	e	enum:opt_category_group
FIO_OPT_G_XNVME	optgroup.h	/^	FIO_OPT_G_XNVME         = (1ULL << __FIO_OPT_G_XNVME),$/;"	e	enum:opt_category_group
FIO_OPT_G_ZONE	optgroup.h	/^	FIO_OPT_G_ZONE		= (1ULL << __FIO_OPT_G_ZONE),$/;"	e	enum:opt_category_group
FIO_OPT_INT	parse.h	/^	FIO_OPT_INT,$/;"	e	enum:fio_opt_type
FIO_OPT_INVALID	parse.h	/^	FIO_OPT_INVALID = 0,$/;"	e	enum:fio_opt_type
FIO_OPT_RANGE	parse.h	/^	FIO_OPT_RANGE,$/;"	e	enum:fio_opt_type
FIO_OPT_SOFT_DEPRECATED	parse.h	/^	FIO_OPT_SOFT_DEPRECATED,$/;"	e	enum:fio_opt_type
FIO_OPT_STR	parse.h	/^	FIO_OPT_STR,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_MULTI	parse.h	/^	FIO_OPT_STR_MULTI,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_SET	parse.h	/^	FIO_OPT_STR_SET,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_STORE	parse.h	/^	FIO_OPT_STR_STORE,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_ULL	parse.h	/^	FIO_OPT_STR_ULL,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_VAL	parse.h	/^	FIO_OPT_STR_VAL,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_VAL_TIME	parse.h	/^	FIO_OPT_STR_VAL_TIME,$/;"	e	enum:fio_opt_type
FIO_OPT_STR_VAL_ZONE	parse.h	/^	FIO_OPT_STR_VAL_ZONE,$/;"	e	enum:fio_opt_type
FIO_OPT_ULL	parse.h	/^	FIO_OPT_ULL,$/;"	e	enum:fio_opt_type
FIO_OPT_UNSUPPORTED	parse.h	/^	FIO_OPT_UNSUPPORTED,	\/* keep this last *\/$/;"	e	enum:fio_opt_type
FIO_OS	os/os-aix.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-android.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-dragonfly.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-freebsd.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-hpux.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-linux.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-mac.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-netbsd.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-openbsd.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-solaris.h	/^#define	FIO_OS	/;"	d
FIO_OS	os/os-windows.h	/^#define FIO_OS	/;"	d
FIO_OS_AIX_H	os/os-aix.h	/^#define FIO_OS_AIX_H$/;"	d
FIO_OS_ANDROID_H	os/os-android.h	/^#define FIO_OS_ANDROID_H$/;"	d
FIO_OS_APPLE_H	os/os-mac.h	/^#define FIO_OS_APPLE_H$/;"	d
FIO_OS_DIRECTIO	os/os-mac.h	/^#define FIO_OS_DIRECTIO$/;"	d
FIO_OS_DIRECTIO	os/os-solaris.h	/^#define FIO_OS_DIRECTIO$/;"	d
FIO_OS_DRAGONFLY_H	os/os-dragonfly.h	/^#define FIO_OS_DRAGONFLY_H$/;"	d
FIO_OS_FREEBSD_H	os/os-freebsd.h	/^#define FIO_OS_FREEBSD_H$/;"	d
FIO_OS_H	os/os.h	/^#define FIO_OS_H$/;"	d
FIO_OS_HAS_CTIME_R	os/os-solaris.h	/^#define FIO_OS_HAS_CTIME_R$/;"	d
FIO_OS_HAVE_AIOCB_TYPEDEF	os/os-hpux.h	/^#define FIO_OS_HAVE_AIOCB_TYPEDEF$/;"	d
FIO_OS_HPUX_H	os/os-hpux.h	/^#define FIO_OS_HPUX_H$/;"	d
FIO_OS_LINUX_H	os/os-linux.h	/^#define FIO_OS_LINUX_H$/;"	d
FIO_OS_LINUX_SYSCALL_H	os/os-linux-syscall.h	/^#define FIO_OS_LINUX_SYSCALL_H$/;"	d
FIO_OS_NETBSD_H	os/os-netbsd.h	/^#define FIO_OS_NETBSD_H$/;"	d
FIO_OS_OPENBSD_H	os/os-openbsd.h	/^#define FIO_OS_OPENBSD_H$/;"	d
FIO_OS_PATH_SEPARATOR	os/os-windows.h	/^#define FIO_OS_PATH_SEPARATOR	/;"	d
FIO_OS_PATH_SEPARATOR	os/os.h	/^#define FIO_OS_PATH_SEPARATOR	/;"	d
FIO_OS_SOLARIS_H	os/os-solaris.h	/^#define FIO_OS_SOLARIS_H$/;"	d
FIO_OS_WINDOWS_H	os/os-windows.h	/^#define FIO_OS_WINDOWS_H$/;"	d
FIO_OUTPUT_BUFFER_H	lib/output_buffer.h	/^#define FIO_OUTPUT_BUFFER_H$/;"	d
FIO_OUTPUT_JSON	fio.h	/^	FIO_OUTPUT_JSON		= 1U << __FIO_OUTPUT_JSON,$/;"	e	enum:__anon0f7035d94303
FIO_OUTPUT_JSON_PLUS	fio.h	/^	FIO_OUTPUT_JSON_PLUS    = 1U << __FIO_OUTPUT_JSON_PLUS,$/;"	e	enum:__anon0f7035d94303
FIO_OUTPUT_NORMAL	fio.h	/^	FIO_OUTPUT_NORMAL	= 1U << __FIO_OUTPUT_NORMAL,$/;"	e	enum:__anon0f7035d94303
FIO_OUTPUT_NR	fio.h	/^	FIO_OUTPUT_NR		= 4,$/;"	e	enum:__anon0f7035d94303
FIO_OUTPUT_TERSE	fio.h	/^	FIO_OUTPUT_TERSE	= 1U << __FIO_OUTPUT_TERSE,$/;"	e	enum:__anon0f7035d94303
FIO_O_ATOMIC	os/os.h	/^#define FIO_O_ATOMIC	/;"	d
FIO_O_NOATIME	os/os-android.h	/^#define FIO_O_NOATIME	/;"	d
FIO_O_NOATIME	os/os-linux.h	/^#define FIO_O_NOATIME	/;"	d
FIO_O_NOATIME	os/os.h	/^#define FIO_O_NOATIME	/;"	d
FIO_PARSE_H	parse.h	/^#define FIO_PARSE_H$/;"	d
FIO_PARSE_PATTERN_H	lib/pattern.h	/^#define FIO_PARSE_PATTERN_H$/;"	d
FIO_PDB	os/windows/dobuild.cmd	/^  set FIO_PDB=false$/;"	v
FIO_PDB	os/windows/dobuild.cmd	/^  set FIO_PDB=true$/;"	v
FIO_PIPEIO	ioengines.h	/^	FIO_PIPEIO	= 1 << 7,	\/* input\/output no seekable *\/$/;"	e	enum:fio_ioengine_flags
FIO_POW2_H	lib/pow2.h	/^#define FIO_POW2_H$/;"	d
FIO_PREFERRED_CLOCK_SOURCE	os/os-windows.h	/^#define FIO_PREFERRED_CLOCK_SOURCE	/;"	d
FIO_PREFERRED_CLOCK_SOURCE	os/os.h	/^#define FIO_PREFERRED_CLOCK_SOURCE	/;"	d
FIO_PREFERRED_ENGINE	os/os-windows.h	/^#define FIO_PREFERRED_ENGINE	/;"	d
FIO_PREFERRED_ENGINE	os/os.h	/^#define FIO_PREFERRED_ENGINE	/;"	d
FIO_PROBE_FLAG_ZLIB	server.h	/^	FIO_PROBE_FLAG_ZLIB		= 1UL << 0,$/;"	e	enum:__anon0e7c93f20103
FIO_PROFILE_H	profile.h	/^#define FIO_PROFILE_H$/;"	d
FIO_PSHARED_H	pshared.h	/^#define FIO_PSHARED_H$/;"	d
FIO_Q_BUSY	ioengines.h	/^	FIO_Q_BUSY	= 2,		\/* no more room, call ->commit() *\/$/;"	e	enum:fio_q_status
FIO_Q_COMPLETED	ioengines.h	/^	FIO_Q_COMPLETED	= 0,		\/* completed sync *\/$/;"	e	enum:fio_q_status
FIO_Q_QUEUED	ioengines.h	/^	FIO_Q_QUEUED	= 1,		\/* queued, will complete async *\/$/;"	e	enum:fio_q_status
FIO_RANDSEED	init.c	/^#define FIO_RANDSEED	/;"	d	file:
FIO_RAND_BLOCK_OFF	fio.h	/^	FIO_RAND_BLOCK_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_BS1_OFF	fio.h	/^	FIO_RAND_BS1_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_BS2_OFF	fio.h	/^	FIO_RAND_BS2_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_BS_OFF	fio.h	/^	FIO_RAND_BS_OFF		= 0,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_BUF_OFF	fio.h	/^	FIO_RAND_BUF_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_DEDUPE_WORKING_SET_IX	fio.h	/^	FIO_RAND_DEDUPE_WORKING_SET_IX,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_DIST_GAUSS	fio.h	/^	FIO_RAND_DIST_GAUSS,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_DIST_PARETO	fio.h	/^	FIO_RAND_DIST_PARETO,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_DIST_RANDOM	fio.h	/^	FIO_RAND_DIST_RANDOM	= 0,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_DIST_ZIPF	fio.h	/^	FIO_RAND_DIST_ZIPF,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_DIST_ZONED	fio.h	/^	FIO_RAND_DIST_ZONED,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_DIST_ZONED_ABS	fio.h	/^	FIO_RAND_DIST_ZONED_ABS,$/;"	e	enum:__anon0f7035d94403
FIO_RAND_FILE_OFF	fio.h	/^	FIO_RAND_FILE_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_FILE_SIZE_OFF	fio.h	/^	FIO_RAND_FILE_SIZE_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_GEN_LFSR	fio.h	/^	FIO_RAND_GEN_LFSR,$/;"	e	enum:__anon0f7035d94503
FIO_RAND_GEN_TAUSWORTHE	fio.h	/^	FIO_RAND_GEN_TAUSWORTHE = 0,$/;"	e	enum:__anon0f7035d94503
FIO_RAND_GEN_TAUSWORTHE64	fio.h	/^	FIO_RAND_GEN_TAUSWORTHE64,$/;"	e	enum:__anon0f7035d94503
FIO_RAND_H	lib/rand.h	/^#define FIO_RAND_H$/;"	d
FIO_RAND_MIX_OFF	fio.h	/^	FIO_RAND_MIX_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_NR_OFFS	fio.h	/^	FIO_RAND_NR_OFFS,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_POISSON2_OFF	fio.h	/^	FIO_RAND_POISSON2_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_POISSON3_OFF	fio.h	/^	FIO_RAND_POISSON3_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_POISSON_OFF	fio.h	/^	FIO_RAND_POISSON_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_PRIO_CMDS	fio.h	/^	FIO_RAND_PRIO_CMDS,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_SEQ_RAND_READ_OFF	fio.h	/^	FIO_RAND_SEQ_RAND_READ_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_SEQ_RAND_TRIM_OFF	fio.h	/^	FIO_RAND_SEQ_RAND_TRIM_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_SEQ_RAND_WRITE_OFF	fio.h	/^	FIO_RAND_SEQ_RAND_WRITE_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_START_DELAY	fio.h	/^	FIO_RAND_START_DELAY,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_TRIM_OFF	fio.h	/^	FIO_RAND_TRIM_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_VER_OFF	fio.h	/^	FIO_RAND_VER_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RAND_ZONE_OFF	fio.h	/^	FIO_RAND_ZONE_OFF,$/;"	e	enum:__anon0f7035d90403
FIO_RATE_H	workqueue.h	/^#define FIO_RATE_H$/;"	d
FIO_RATE_SUBMIT	rate-submit.h	/^#define FIO_RATE_SUBMIT$/;"	d
FIO_RAWIO	ioengines.h	/^	FIO_RAWIO	= 1 << 1,	\/* some sort of direct\/raw io *\/$/;"	e	enum:fio_ioengine_flags
FIO_RDMA_CHA_RECV	engines/rdma.c	/^	FIO_RDMA_CHA_RECV$/;"	e	enum:rdma_io_mode	file:
FIO_RDMA_CHA_SEND	engines/rdma.c	/^	FIO_RDMA_CHA_SEND,$/;"	e	enum:rdma_io_mode	file:
FIO_RDMA_MAX_IO_DEPTH	engines/rdma.c	/^#define FIO_RDMA_MAX_IO_DEPTH /;"	d	file:
FIO_RDMA_MEM_READ	engines/rdma.c	/^	FIO_RDMA_MEM_READ,$/;"	e	enum:rdma_io_mode	file:
FIO_RDMA_MEM_WRITE	engines/rdma.c	/^	FIO_RDMA_MEM_WRITE,$/;"	e	enum:rdma_io_mode	file:
FIO_RDMA_UNKNOWN	engines/rdma.c	/^	FIO_RDMA_UNKNOWN = 0,$/;"	e	enum:rdma_io_mode	file:
FIO_REAP_TIMEOUT	fio.h	/^#define FIO_REAP_TIMEOUT	/;"	d
FIO_ROUNDUP_H	lib/roundup.h	/^#define FIO_ROUNDUP_H$/;"	d
FIO_RWLOCK_H	rwlock.h	/^#define FIO_RWLOCK_H$/;"	d
FIO_RWLOCK_MAGIC	rwlock.h	/^#define FIO_RWLOCK_MAGIC	/;"	d
FIO_SEM_H	fio_sem.h	/^#define FIO_SEM_H$/;"	d
FIO_SEM_LOCKED	fio_sem.h	/^	FIO_SEM_LOCKED	= 0,$/;"	e	enum:__anon892686fd0103
FIO_SEM_MAGIC	fio_sem.h	/^#define FIO_SEM_MAGIC	/;"	d
FIO_SEM_UNLOCKED	fio_sem.h	/^	FIO_SEM_UNLOCKED	= 1,$/;"	e	enum:__anon892686fd0103
FIO_SEQLOCK_H	lib/seqlock.h	/^#define FIO_SEQLOCK_H$/;"	d
FIO_SERVER_H	server.h	/^#define FIO_SERVER_H$/;"	d
FIO_SERVER_MAX_CMD_MB	server.h	/^	FIO_SERVER_MAX_CMD_MB		= 2048,$/;"	e	enum:__anon0e7c93f20103
FIO_SERVER_MAX_FRAGMENT_PDU	server.h	/^	FIO_SERVER_MAX_FRAGMENT_PDU	= 1024,$/;"	e	enum:__anon0e7c93f20103
FIO_SERVER_VER	server.h	/^	FIO_SERVER_VER			= 97,$/;"	e	enum:__anon0e7c93f20103
FIO_SG_VERIFY_BYTCHK_00	engines/sg.c	/^	FIO_SG_VERIFY_BYTCHK_00,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_VERIFY_BYTCHK_01	engines/sg.c	/^	FIO_SG_VERIFY_BYTCHK_01,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_VERIFY_BYTCHK_11	engines/sg.c	/^	FIO_SG_VERIFY_BYTCHK_11,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_WRITE	engines/sg.c	/^	FIO_SG_WRITE		= 1,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_WRITE_SAME	engines/sg.c	/^	FIO_SG_WRITE_SAME,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_WRITE_SAME_NDOB	engines/sg.c	/^	FIO_SG_WRITE_SAME_NDOB,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_WRITE_STREAM	engines/sg.c	/^	FIO_SG_WRITE_STREAM,$/;"	e	enum:__anon509f38480103	file:
FIO_SG_WRITE_VERIFY	engines/sg.c	/^	FIO_SG_WRITE_VERIFY,$/;"	e	enum:__anon509f38480103	file:
FIO_SHA1	crc/sha1.h	/^#define FIO_SHA1$/;"	d
FIO_SHA256_H	crc/sha256.h	/^#define FIO_SHA256_H$/;"	d
FIO_SHA512_H	crc/sha512.h	/^#define FIO_SHA512_H$/;"	d
FIO_SLAT	stat.h	/^	FIO_SLAT = 0,$/;"	e	enum:fio_lat
FIO_SMALLOC_H	smalloc.h	/^#define FIO_SMALLOC_H$/;"	d
FIO_SS_ATTAINED	steadystate.h	/^	FIO_SS_ATTAINED		= 1 << __FIO_SS_ATTAINED,$/;"	e	enum:__anon3e5d79660603
FIO_SS_BUFFER_FULL	steadystate.h	/^	FIO_SS_BUFFER_FULL	= 1 << __FIO_SS_BUFFER_FULL,$/;"	e	enum:__anon3e5d79660603
FIO_SS_BW	steadystate.h	/^	FIO_SS_BW		= 1 << __FIO_SS_BW,$/;"	e	enum:__anon3e5d79660603
FIO_SS_BW_SLOPE	steadystate.h	/^	FIO_SS_BW_SLOPE		= FIO_SS_BW | FIO_SS_SLOPE,$/;"	e	enum:__anon3e5d79660603
FIO_SS_DATA	steadystate.h	/^	FIO_SS_DATA		= 1 << __FIO_SS_DATA,$/;"	e	enum:__anon3e5d79660603
FIO_SS_IOPS	steadystate.h	/^	FIO_SS_IOPS		= 1 << __FIO_SS_IOPS,$/;"	e	enum:__anon3e5d79660603
FIO_SS_IOPS_SLOPE	steadystate.h	/^	FIO_SS_IOPS_SLOPE	= FIO_SS_IOPS | FIO_SS_SLOPE,$/;"	e	enum:__anon3e5d79660603
FIO_SS_PCT	steadystate.h	/^	FIO_SS_PCT		= 1 << __FIO_SS_PCT,$/;"	e	enum:__anon3e5d79660603
FIO_SS_RAMP_OVER	steadystate.h	/^	FIO_SS_RAMP_OVER	= 1 << __FIO_SS_RAMP_OVER,$/;"	e	enum:__anon3e5d79660603
FIO_SS_SLOPE	steadystate.h	/^	FIO_SS_SLOPE		= 1 << __FIO_SS_SLOPE,$/;"	e	enum:__anon3e5d79660603
FIO_STATIC	ioengines.h	/^#define FIO_STATIC	/;"	d
FIO_STATIC	ioengines.h	/^#define FIO_STATIC$/;"	d
FIO_STATUS_FILE	stat.c	/^#define FIO_STATUS_FILE	/;"	d	file:
FIO_STAT_H	stat.h	/^#define FIO_STAT_H$/;"	d
FIO_STEADYSTATE_H	steadystate.h	/^#define FIO_STEADYSTATE_H$/;"	d
FIO_STRCASESTR_H	oslib/strcasestr.h	/^#define FIO_STRCASESTR_H$/;"	d
FIO_STRLCAT_H	oslib/strlcat.h	/^#define FIO_STRLCAT_H$/;"	d
FIO_STRNDUP_LIB_H	oslib/strndup.h	/^#define FIO_STRNDUP_LIB_H$/;"	d
FIO_STRNTOL_H	lib/strntol.h	/^#define FIO_STRNTOL_H$/;"	d
FIO_STRSEP_LIB_H	oslib/strsep.h	/^#define FIO_STRSEP_LIB_H$/;"	d
FIO_SYNCIO	ioengines.h	/^	FIO_SYNCIO	= 1 << 0,	\/* io engine has synchronous ->queue *\/$/;"	e	enum:fio_ioengine_flags
FIO_TD_ERROR_H	td_error.h	/^#define FIO_TD_ERROR_H$/;"	d
FIO_THREAD_OPTIONS_H	thread_options.h	/^#define FIO_THREAD_OPTIONS_H$/;"	d
FIO_TIME_H	fio_time.h	/^#define FIO_TIME_H$/;"	d
FIO_TOP_STR_MAX	thread_options.h	/^#define FIO_TOP_STR_MAX	/;"	d
FIO_TRIM_H	trim.h	/^#define FIO_TRIM_H$/;"	d
FIO_TYPES_H	lib/types.h	/^#define FIO_TYPES_H$/;"	d
FIO_TYPE_BLOCK	file.h	/^	FIO_TYPE_BLOCK,			\/* block device *\/$/;"	e	enum:fio_filetype
FIO_TYPE_CHAR	file.h	/^	FIO_TYPE_CHAR,			\/* character device *\/$/;"	e	enum:fio_filetype
FIO_TYPE_FILE	file.h	/^	FIO_TYPE_FILE = 1,		\/* plain file *\/$/;"	e	enum:fio_filetype
FIO_TYPE_PIPE	file.h	/^	FIO_TYPE_PIPE,			\/* pipe *\/$/;"	e	enum:fio_filetype
FIO_TYPE_TCP	engines/net.c	/^	FIO_TYPE_TCP	= 1,$/;"	e	enum:__anon642bd1550103	file:
FIO_TYPE_TCP_V6	engines/net.c	/^	FIO_TYPE_TCP_V6	= 4,$/;"	e	enum:__anon642bd1550103	file:
FIO_TYPE_UDP	engines/net.c	/^	FIO_TYPE_UDP	= 2,$/;"	e	enum:__anon642bd1550103	file:
FIO_TYPE_UDP_V6	engines/net.c	/^	FIO_TYPE_UDP_V6	= 5,$/;"	e	enum:__anon642bd1550103	file:
FIO_TYPE_UNIX	engines/net.c	/^	FIO_TYPE_UNIX	= 3,$/;"	e	enum:__anon642bd1550103	file:
FIO_UDP_SEQ_MAGIC	engines/net.c	/^	FIO_UDP_SEQ_MAGIC = 0x657375716e556563ULL,$/;"	e	enum:__anon642bd1550103	file:
FIO_UNIDIR	ioengines.h	/^	FIO_UNIDIR	= 1 << 5,	\/* engine is uni-directional *\/$/;"	e	enum:fio_ioengine_flags
FIO_UNITTEST_H	unittests/unittest.h	/^#define FIO_UNITTEST_H$/;"	d
FIO_USE_GENERIC_BDEV_SIZE	os/os-solaris.h	/^#define FIO_USE_GENERIC_BDEV_SIZE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-aix.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-android.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-dragonfly.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-freebsd.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-hpux.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-linux.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-mac.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-netbsd.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-openbsd.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_INIT_RANDOM_STATE	os/os-solaris.h	/^#define FIO_USE_GENERIC_INIT_RANDOM_STATE$/;"	d
FIO_USE_GENERIC_SWAP	os/os-aix.h	/^#define FIO_USE_GENERIC_SWAP$/;"	d
FIO_USE_GENERIC_SWAP	os/os-hpux.h	/^#define FIO_USE_GENERIC_SWAP$/;"	d
FIO_VERIFY_H	verify.h	/^#define FIO_VERIFY_H$/;"	d
FIO_VERIFY_STATE_H	verify-state.h	/^#define FIO_VERIFY_STATE_H$/;"	d
FIO_VERROR_SIZE	stat.h	/^#define FIO_VERROR_SIZE	/;"	d
FIO_VERSION	os/windows/dobuild.cmd	/^ if "!counter!"=="1" set FIO_VERSION=%%i$/;"	v
FIO_VERSION_NUMBERS	os/windows/dobuild.cmd	/^ set FIO_VERSION_NUMBERS=%%i$/;"	v
FIO_WARN_BTRACE_ZERO	debug.h	/^	FIO_WARN_BTRACE_ZERO	= 32,$/;"	e	enum:__anon0847a6820203
FIO_WARN_FADVISE	debug.h	/^	FIO_WARN_FADVISE	= 16,$/;"	e	enum:__anon0847a6820203
FIO_WARN_IOLOG_DROP	debug.h	/^	FIO_WARN_IOLOG_DROP	= 8,$/;"	e	enum:__anon0847a6820203
FIO_WARN_ROOT_FLUSH	debug.h	/^	FIO_WARN_ROOT_FLUSH	= 1,$/;"	e	enum:__anon0847a6820203
FIO_WARN_VERIFY_BUF	debug.h	/^	FIO_WARN_VERIFY_BUF	= 2,$/;"	e	enum:__anon0847a6820203
FIO_WARN_ZONED_BUG	debug.h	/^	FIO_WARN_ZONED_BUG	= 4,$/;"	e	enum:__anon0847a6820203
FIO_WINDOWS_POSIX_H	os/windows/posix.h	/^#define FIO_WINDOWS_POSIX_H$/;"	d
FIO_ZBD_H	zbd.h	/^#define FIO_ZBD_H$/;"	d
FIO_ZBD_TYPES_H	zbd_types.h	/^#define FIO_ZBD_TYPES_H$/;"	d
FIO_ZIPF_H	lib/zipf.h	/^#define FIO_ZIPF_H$/;"	d
FIO_ZONE_DIST_H	zone-dist.h	/^#define FIO_ZONE_DIST_H$/;"	d
FLEXINT_H	lex.yy.c	/^#define FLEXINT_H$/;"	d	file:
FLEX_BETA	lex.yy.c	/^#define FLEX_BETA$/;"	d	file:
FLEX_SCANNER	lex.yy.c	/^#define FLEX_SCANNER$/;"	d	file:
FLIST_HEAD	client.c	/^static FLIST_HEAD(arg_list);$/;"	p	file:
FLIST_HEAD	client.c	/^static FLIST_HEAD(client_list);$/;"	p	file:
FLIST_HEAD	client.c	/^static FLIST_HEAD(eta_list);$/;"	p	file:
FLIST_HEAD	engines/glusterfs.c	/^static FLIST_HEAD(glfs_list_head);$/;"	p	file:
FLIST_HEAD	filesetup.c	/^static FLIST_HEAD(filename_list);$/;"	p	file:
FLIST_HEAD	flist.h	/^#define FLIST_HEAD(/;"	d
FLIST_HEAD	ioengines.c	/^static FLIST_HEAD(engine_list);$/;"	p	file:
FLIST_HEAD	libfio.c	/^FLIST_HEAD(disk_list);$/;"	p	file:
FLIST_HEAD	profile.c	/^static FLIST_HEAD(profile_list);$/;"	p	file:
FLIST_HEAD	t/btrace2fio.c	/^static FLIST_HEAD(pid_list);$/;"	p	file:
FLIST_HEAD	t/stest.c	/^static FLIST_HEAD(list);$/;"	p	file:
FLIST_HEAD_INIT	flist.h	/^#define FLIST_HEAD_INIT(/;"	d
FLOW_MAX_WEIGHT	flow.h	/^#define FLOW_MAX_WEIGHT /;"	d
FMAJOR	blktrace.c	/^#define FMAJOR(/;"	d	file:
FMAJOR	t/btrace2fio.c	/^#define FMAJOR(/;"	d	file:
FMINOR	blktrace.c	/^#define FMINOR(/;"	d	file:
FMINOR	t/btrace2fio.c	/^#define FMINOR(/;"	d	file:
FMINORBITS	blktrace.c	/^#define FMINORBITS	/;"	d	file:
FMINORBITS	t/btrace2fio.c	/^#define FMINORBITS	/;"	d	file:
FMINORMASK	blktrace.c	/^#define FMINORMASK	/;"	d	file:
FMINORMASK	t/btrace2fio.c	/^#define FMINORMASK	/;"	d	file:
FNV_PRIME	crc/fnv.c	/^#define FNV_PRIME	/;"	d	file:
FPRE_CLIENTUID	init.c	/^	FPRE_CLIENTUID$/;"	e	enum:__anon04cebdca0103	file:
FPRE_FILENUM	init.c	/^	FPRE_FILENUM,$/;"	e	enum:__anon04cebdca0103	file:
FPRE_JOBNAME	init.c	/^	FPRE_JOBNAME,$/;"	e	enum:__anon04cebdca0103	file:
FPRE_JOBNUM	init.c	/^	FPRE_JOBNUM,$/;"	e	enum:__anon04cebdca0103	file:
FPRE_NONE	init.c	/^	FPRE_NONE = 0,$/;"	e	enum:__anon04cebdca0103	file:
FRAND32_MAX	lib/rand.h	/^#define FRAND32_MAX	/;"	d
FRAND32_MAX_PLUS_ONE	lib/rand.h	/^#define FRAND32_MAX_PLUS_ONE	/;"	d
FRAND64_MAX	lib/rand.h	/^#define FRAND64_MAX	/;"	d
FRAND64_MAX_PLUS_ONE	lib/rand.h	/^#define FRAND64_MAX_PLUS_ONE	/;"	d
F_ADV_NONE	fio.h	/^	F_ADV_NONE = 0,$/;"	e	enum:__anon0f7035d90603
F_ADV_RANDOM	fio.h	/^	F_ADV_RANDOM,$/;"	e	enum:__anon0f7035d90603
F_ADV_SEQUENTIAL	fio.h	/^	F_ADV_SEQUENTIAL,$/;"	e	enum:__anon0f7035d90603
F_ADV_TYPE	fio.h	/^	F_ADV_TYPE,$/;"	e	enum:__anon0f7035d90603
F_GETFL	os/os-windows.h	/^#define F_GETFL	/;"	d
F_GET_FILE_RW_HINT	os/os-linux.h	/^#define F_GET_FILE_RW_HINT	/;"	d
F_GET_RW_HINT	os/os-linux.h	/^#define F_GET_RW_HINT	/;"	d
F_LINUX_SPECIFIC_BASE	os/os-linux.h	/^#define F_LINUX_SPECIFIC_BASE	/;"	d
F_SETFL	os/os-windows.h	/^#define F_SETFL	/;"	d
F_SET_FILE_RW_HINT	os/os-linux.h	/^#define F_SET_FILE_RW_HINT	/;"	d
F_SET_RW_HINT	os/os-linux.h	/^#define F_SET_RW_HINT	/;"	d
Fio Manpage	doc/fio_man.rst	/^Fio Manpage$/;"	H
FioExeTest	t/run-fio-tests.py	/^class FioExeTest(FioTest):$/;"	c
FioHistoLogExc	tools/hist/fio-histo-log-pctiles.py	/^class FioHistoLogExc(Exception):$/;"	c
FioJobTest	t/run-fio-tests.py	/^class FioJobTest(FioExeTest):$/;"	c
FioJobTest_iops_rate	t/run-fio-tests.py	/^class FioJobTest_iops_rate(FioJobTest):$/;"	c
FioJobTest_t0005	t/run-fio-tests.py	/^class FioJobTest_t0005(FioJobTest):$/;"	c
FioJobTest_t0006	t/run-fio-tests.py	/^class FioJobTest_t0006(FioJobTest):$/;"	c
FioJobTest_t0007	t/run-fio-tests.py	/^class FioJobTest_t0007(FioJobTest):$/;"	c
FioJobTest_t0008	t/run-fio-tests.py	/^class FioJobTest_t0008(FioJobTest):$/;"	c
FioJobTest_t0009	t/run-fio-tests.py	/^class FioJobTest_t0009(FioJobTest):$/;"	c
FioJobTest_t0012	t/run-fio-tests.py	/^class FioJobTest_t0012(FioJobTest):$/;"	c
FioJobTest_t0014	t/run-fio-tests.py	/^class FioJobTest_t0014(FioJobTest):$/;"	c
FioLatTest	t/latency_percentiles.py	/^class FioLatTest():$/;"	c
FioTest	t/run-fio-tests.py	/^class FioTest(object):$/;"	c
Fio_client_ipv4	client.h	/^	Fio_client_ipv4 = 1,$/;"	e	enum:__anon4f09d8da0403
Fio_client_ipv6	client.h	/^	Fio_client_ipv6,$/;"	e	enum:__anon4f09d8da0403
Fio_client_socket	client.h	/^	Fio_client_socket,$/;"	e	enum:__anon4f09d8da0403
Fixed rate submission	doc/fio_examples.rst	/^Fixed rate submission$/;"	c
Flush_req_last	engines/librpma_gpspm.c	/^static const GPSPMFlushRequest Flush_req_last = GPSPM_FLUSH_REQUEST__LAST;$/;"	v	typeref:typename:const GPSPMFlushRequest	file:
GAUSS_ITERS	lib/gauss.c	/^#define GAUSS_ITERS	/;"	d	file:
GCC_VERSION	crc/xxhash.c	/^#define GCC_VERSION /;"	d	file:
GE_STATE_CONNECTED	gfio.h	/^	GE_STATE_CONNECTED,$/;"	e	enum:__anonff9393400103
GE_STATE_JOB_DONE	gfio.h	/^	GE_STATE_JOB_DONE,$/;"	e	enum:__anonff9393400103
GE_STATE_JOB_RUNNING	gfio.h	/^	GE_STATE_JOB_RUNNING,$/;"	e	enum:__anonff9393400103
GE_STATE_JOB_SENT	gfio.h	/^	GE_STATE_JOB_SENT,$/;"	e	enum:__anonff9393400103
GE_STATE_JOB_STARTED	gfio.h	/^	GE_STATE_JOB_STARTED,$/;"	e	enum:__anonff9393400103
GE_STATE_NEW	gfio.h	/^	GE_STATE_NEW = 1,$/;"	e	enum:__anonff9393400103
GFIO TODO	doc/fio_doc.rst	/^GFIO TODO$/;"	s	chapter:TODO
GFIO_BUTTON_CONNECT	gfio.h	/^	GFIO_BUTTON_CONNECT = 0,$/;"	e	enum:__anonff9393400203
GFIO_BUTTON_NR	gfio.h	/^	GFIO_BUTTON_NR,$/;"	e	enum:__anonff9393400203
GFIO_BUTTON_SEND	gfio.h	/^	GFIO_BUTTON_SEND,$/;"	e	enum:__anonff9393400203
GFIO_BUTTON_START	gfio.h	/^	GFIO_BUTTON_START,$/;"	e	enum:__anonff9393400203
GFIO_CLAT	gclient.c	/^#define GFIO_CLAT	/;"	d	file:
GFIO_CLIENT_H	gclient.h	/^#define GFIO_CLIENT_H$/;"	d
GFIO_DRAW_EVENT	gcompat.h	/^#define GFIO_DRAW_EVENT	/;"	d
GFIO_ERROR_H	gerror.h	/^#define GFIO_ERROR_H$/;"	d
GFIO_GTK_COMPAT	gcompat.h	/^#define GFIO_GTK_COMPAT$/;"	d
GFIO_H	gfio.h	/^#define GFIO_H$/;"	d
GFIO_HELPERS_H	ghelpers.h	/^#define GFIO_HELPERS_H$/;"	d
GFIO_LAT	gclient.c	/^#define GFIO_LAT	/;"	d	file:
GFIO_MIME	gfio.h	/^#define GFIO_MIME	/;"	d
GFIO_OBJS	Makefile	/^GFIO_OBJS = $(OBJS) gfio.o graph.o tickmarks.o ghelpers.o goptions.o gerror.o \\$/;"	m
GFIO_OPTIONS_H	goptions.h	/^#define GFIO_OPTIONS_H$/;"	d
GFIO_READ_B	gclient.h	/^#define GFIO_READ_B	/;"	d
GFIO_READ_G	gclient.h	/^#define GFIO_READ_G	/;"	d
GFIO_READ_R	gclient.h	/^#define GFIO_READ_R	/;"	d
GFIO_SLAT	gclient.c	/^#define GFIO_SLAT	/;"	d	file:
GFIO_TRIM_B	gclient.h	/^#define GFIO_TRIM_B	/;"	d
GFIO_TRIM_G	gclient.h	/^#define GFIO_TRIM_G	/;"	d
GFIO_TRIM_R	gclient.h	/^#define GFIO_TRIM_R	/;"	d
GFIO_WRITE_B	gclient.h	/^#define GFIO_WRITE_B	/;"	d
GFIO_WRITE_G	gclient.h	/^#define GFIO_WRITE_G	/;"	d
GFIO_WRITE_R	gclient.h	/^#define GFIO_WRITE_R	/;"	d
GOLDEN_RATIO_32	hash.h	/^#define GOLDEN_RATIO_32 /;"	d
GOLDEN_RATIO_64	hash.h	/^#define GOLDEN_RATIO_64 /;"	d
GOLDEN_RATIO_PRIME	hash.h	/^#define GOLDEN_RATIO_PRIME /;"	d
GOPT_BOOL	goptions.c	/^	GOPT_BOOL,$/;"	e	enum:__anon931878090103	file:
GOPT_COMBO_INT	goptions.c	/^	GOPT_COMBO_INT = 1,$/;"	e	enum:__anon931878090103	file:
GOPT_COMBO_STR	goptions.c	/^	GOPT_COMBO_STR,$/;"	e	enum:__anon931878090103	file:
GOPT_INT	goptions.c	/^	GOPT_INT,$/;"	e	enum:__anon931878090103	file:
GOPT_RANGE	goptions.c	/^	GOPT_RANGE,$/;"	e	enum:__anon931878090103	file:
GOPT_RANGE_SPIN	goptions.c	/^#define GOPT_RANGE_SPIN	/;"	d	file:
GOPT_STR	goptions.c	/^	GOPT_STR,$/;"	e	enum:__anon931878090103	file:
GOPT_STR_MULTI	goptions.c	/^	GOPT_STR_MULTI,$/;"	e	enum:__anon931878090103	file:
GOPT_STR_VAL	goptions.c	/^	GOPT_STR_VAL,$/;"	e	enum:__anon931878090103	file:
GPSPMFlushRequest	engines/librpma_gpspm_flush.pb-c.h	/^typedef struct _GPSPMFlushRequest GPSPMFlushRequest;$/;"	t	typeref:struct:_GPSPMFlushRequest
GPSPMFlushRequest_Closure	engines/librpma_gpspm_flush.pb-c.h	/^typedef void (*GPSPMFlushRequest_Closure)$/;"	t	typeref:typename:void (*)(const GPSPMFlushRequest * message,void * closure_data)
GPSPMFlushResponse	engines/librpma_gpspm_flush.pb-c.h	/^typedef struct _GPSPMFlushResponse GPSPMFlushResponse;$/;"	t	typeref:struct:_GPSPMFlushResponse
GPSPMFlushResponse_Closure	engines/librpma_gpspm_flush.pb-c.h	/^typedef void (*GPSPMFlushResponse_Closure)$/;"	t	typeref:typename:void (*)(const GPSPMFlushResponse * message,void * closure_data)
GPSPM_FLUSH_REQUEST__INIT	engines/librpma_gpspm_flush.pb-c.h	/^#define GPSPM_FLUSH_REQUEST__INIT /;"	d
GPSPM_FLUSH_REQUEST__LAST	engines/librpma_gpspm.c	/^#define GPSPM_FLUSH_REQUEST__LAST /;"	d	file:
GPSPM_FLUSH_RESPONSE__INIT	engines/librpma_gpspm_flush.pb-c.h	/^#define GPSPM_FLUSH_RESPONSE__INIT /;"	d
GPSPM_flush_request	engines/librpma_gpspm_flush.proto	/^message GPSPM_flush_request {$/;"	m
GPSPM_flush_response	engines/librpma_gpspm_flush.proto	/^message GPSPM_flush_response {$/;"	m
GPU_ID_SEP	engines/libcufile.c	/^#define GPU_ID_SEP /;"	d	file:
GRAPH_DEFAULT_FONT	graph.h	/^#define GRAPH_DEFAULT_FONT	/;"	d
GRAPH_H	graph.h	/^#define GRAPH_H$/;"	d
GTK_COMBO_BOX_TEXT	gcompat.h	/^#define GTK_COMBO_BOX_TEXT	/;"	d
GV_F_ON_PRIO	graph.c	/^	GV_F_ON_PRIO	= 1,$/;"	e	enum:__anon0d749ac80103	file:
GV_F_PRIO_SKIP	graph.c	/^	GV_F_PRIO_SKIP	= 2,$/;"	e	enum:__anon0d749ac80103	file:
GZ_CHUNK	iolog.c	/^#define GZ_CHUNK	/;"	d	file:
General questions	.github/SUPPORT.md	/^## General questions$/;"	s	chapter:Getting support for fio
GetNumLogicalProcessors	os/windows/posix.c	/^int GetNumLogicalProcessors(void)$/;"	f	typeref:typename:int
Getting support for fio	.github/SUPPORT.md	/^# Getting support for fio$/;"	c
GitHub issues specific information	.github/SUPPORT.md	/^### GitHub issues specific information$/;"	S	section:Getting support for fio""Reporting bugs
GtkComboBoxText	gcompat.h	/^typedef GtkComboBox GtkComboBoxText;$/;"	t	typeref:typename:GtkComboBox
H	crc/sha1.h	/^	uint32_t *H;$/;"	m	struct:fio_sha1_ctx	typeref:typename:uint32_t *
H0	crc/sha256.c	/^#define H0 /;"	d	file:
H0	crc/sha512.c	/^#define H0 /;"	d	file:
H1	crc/sha256.c	/^#define H1 /;"	d	file:
H1	crc/sha512.c	/^#define H1 /;"	d	file:
H2	crc/sha256.c	/^#define H2 /;"	d	file:
H2	crc/sha512.c	/^#define H2 /;"	d	file:
H3	crc/sha256.c	/^#define H3 /;"	d	file:
H3	crc/sha512.c	/^#define H3 /;"	d	file:
H4	crc/sha256.c	/^#define H4 /;"	d	file:
H4	crc/sha512.c	/^#define H4 /;"	d	file:
H5	crc/sha256.c	/^#define H5 /;"	d	file:
H5	crc/sha512.c	/^#define H5 /;"	d	file:
H6	crc/sha256.c	/^#define H6 /;"	d	file:
H6	crc/sha512.c	/^#define H6 /;"	d	file:
H7	crc/sha256.c	/^#define H7 /;"	d	file:
H7	crc/sha512.c	/^#define H7 /;"	d	file:
HASH_BITS	gettime.c	/^#define HASH_BITS	/;"	d	file:
HASH_BUCKETS	filehash.c	/^#define HASH_BUCKETS	/;"	d	file:
HASH_MASK	filehash.c	/^#define HASH_MASK	/;"	d	file:
HASH_SIZE	gettime.c	/^#define HASH_SIZE	/;"	d	file:
HDFSFLAGS	Makefile	/^  HDFSFLAGS= -I $(JAVA_HOME)\/include -I $(JAVA_HOME)\/include\/linux -I $(FIO_LIBHDFS_INCLUDE)$/;"	m
HDFSLIB	Makefile	/^  HDFSLIB= -Wl,-rpath $(JAVA_HOME)\/lib\/$(FIO_HDFS_CPU)\/server -L$(JAVA_HOME)\/lib\/$(FIO_HDFS/;"	m
HP0	crc/sha512.c	/^#define HP0 /;"	d	file:
HP1	crc/sha512.c	/^#define HP1 /;"	d	file:
HP2	crc/sha512.c	/^#define HP2 /;"	d	file:
HP3	crc/sha512.c	/^#define HP3 /;"	d	file:
HP4	crc/sha512.c	/^#define HP4 /;"	d	file:
HP5	crc/sha512.c	/^#define HP5 /;"	d	file:
HP6	crc/sha512.c	/^#define HP6 /;"	d	file:
HP7	crc/sha512.c	/^#define HP7 /;"	d	file:
HWCAP_CRC32	os/os-linux.h	/^#define HWCAP_CRC32 /;"	d
HWCAP_PMULL	os/os-linux.h	/^#define HWCAP_PMULL /;"	d
HistFileRdr	tools/hist/fiologparser_hist.py	/^class HistFileRdr():$/;"	c
How fio works	HOWTO.rst	/^How fio works$/;"	c
I	crc/sha256.c	/^static inline void BLEND_OP(int I, uint32_t *W)$/;"	z	function:BLEND_OP	typeref:typename:int	file:
I	crc/sha256.c	/^static inline void LOAD_OP(int I, uint32_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:int	file:
I	crc/sha512.c	/^static inline void BLEND_OP(int I, uint64_t *W)$/;"	z	function:BLEND_OP	typeref:typename:int	file:
I	crc/sha512.c	/^static inline void LOAD_OP(int I, uint64_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:int	file:
I/O REPLAY \\- MERGING TRACES	fio.1	/^.SH I\/O REPLAY \\- MERGING TRACES$/;"	s	title:fio
I/O Replay - Merging Traces	HOWTO.rst	/^I\/O Replay - Merging Traces$/;"	c
I/O depth	HOWTO.rst	/^I\/O depth$/;"	s	chapter:Job file parameters
I/O depth	fio.1	/^.SS "I\/O depth"$/;"	S	section:fio""JOB PARAMETERS
I/O engine	HOWTO.rst	/^I\/O engine$/;"	s	chapter:Job file parameters
I/O engine	fio.1	/^.SS "I\/O engine"$/;"	S	section:fio""JOB PARAMETERS
I/O engine specific parameters	HOWTO.rst	/^I\/O engine specific parameters$/;"	s	chapter:Job file parameters
I/O engine specific parameters	fio.1	/^.SS "I\/O engine specific parameters"$/;"	S	section:fio""JOB PARAMETERS
I/O latency	HOWTO.rst	/^I\/O latency$/;"	s	chapter:Job file parameters
I/O latency	fio.1	/^.SS "I\/O latency"$/;"	S	section:fio""JOB PARAMETERS
I/O rate	HOWTO.rst	/^I\/O rate$/;"	s	chapter:Job file parameters
I/O rate	fio.1	/^.SS "I\/O rate"$/;"	S	section:fio""JOB PARAMETERS
I/O replay	HOWTO.rst	/^I\/O replay$/;"	s	chapter:Job file parameters
I/O replay	fio.1	/^.SS "I\/O replay"$/;"	S	section:fio""JOB PARAMETERS
I/O size	HOWTO.rst	/^I\/O size$/;"	s	chapter:Job file parameters
I/O size	fio.1	/^.SS "I\/O size"$/;"	S	section:fio""JOB PARAMETERS
I/O type	HOWTO.rst	/^I\/O type$/;"	s	chapter:Job file parameters
I/O type	fio.1	/^.SS "I\/O type"$/;"	S	section:fio""JOB PARAMETERS
I18NSPHINXOPTS	doc/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
I18NSPHINXOPTS	doc/make.bat	/^	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%$/;"	v
I18NSPHINXOPTS	doc/make.bat	/^set I18NSPHINXOPTS=%SPHINXOPTS% .$/;"	v
IDLE_PROF_OPT_CALI	idletime.h	/^	IDLE_PROF_OPT_CALI,                \/* calibration only *\/$/;"	e	enum:__anon7f5f40680103
IDLE_PROF_OPT_NONE	idletime.h	/^	IDLE_PROF_OPT_NONE,$/;"	e	enum:__anon7f5f40680103
IDLE_PROF_OPT_PERCPU	idletime.h	/^	IDLE_PROF_OPT_PERCPU$/;"	e	enum:__anon7f5f40680103
IDLE_PROF_OPT_SYSTEM	idletime.h	/^	IDLE_PROF_OPT_SYSTEM,$/;"	e	enum:__anon7f5f40680103
IDLE_PROF_STATUS_ABORT	idletime.h	/^	 IDLE_PROF_STATUS_ABORT$/;"	e	enum:__anon7f5f40680203
IDLE_PROF_STATUS_CALI_STOP	idletime.h	/^	 IDLE_PROF_STATUS_CALI_STOP,$/;"	e	enum:__anon7f5f40680203
IDLE_PROF_STATUS_OK	idletime.h	/^	 IDLE_PROF_STATUS_OK,$/;"	e	enum:__anon7f5f40680203
IDLE_PROF_STATUS_PROF_STOP	idletime.h	/^	 IDLE_PROF_STATUS_PROF_STOP,$/;"	e	enum:__anon7f5f40680203
INFLIGHT_HASH_BITS	t/btrace2fio.c	/^#define INFLIGHT_HASH_BITS	/;"	d	file:
INFLIGHT_HASH_SIZE	t/btrace2fio.c	/^#define INFLIGHT_HASH_SIZE	/;"	d	file:
INITIAL	lex.yy.c	/^#define INITIAL /;"	d	file:
INITIAL_POOLS	smalloc.c	/^#define INITIAL_POOLS	/;"	d	file:
INITIAL_SIZE	smalloc.c	/^#define INITIAL_SIZE	/;"	d	file:
INIT_FLIST_HEAD	flist.h	/^#define INIT_FLIST_HEAD(/;"	d
INIT_PRIO_TREE_ITER	lib/prio_tree.h	/^#define INIT_PRIO_TREE_ITER(/;"	d
INIT_PRIO_TREE_NODE	lib/prio_tree.h	/^#define INIT_PRIO_TREE_NODE(/;"	d
INIT_PRIO_TREE_ROOT	lib/prio_tree.h	/^#define INIT_PRIO_TREE_ROOT(/;"	d
INSTALL	Makefile	/^	INSTALL = ginstall$/;"	m
INSTALL	Makefile	/^	INSTALL = install$/;"	m
INSTALL_PREFIX	config-host.mak	/^INSTALL_PREFIX=\/usr\/local$/;"	m
INT16_MAX	lex.yy.c	/^#define INT16_MAX /;"	d	file:
INT16_MIN	lex.yy.c	/^#define INT16_MIN /;"	d	file:
INT32_MAX	lex.yy.c	/^#define INT32_MAX /;"	d	file:
INT32_MIN	lex.yy.c	/^#define INT32_MIN /;"	d	file:
INT8_MAX	lex.yy.c	/^#define INT8_MAX /;"	d	file:
INT8_MIN	lex.yy.c	/^#define INT8_MIN /;"	d	file:
INVISIBLE	ghelpers.h	/^#define INVISIBLE /;"	d
INVISIBLE_COLOR	graph.h	/^#define INVISIBLE_COLOR /;"	d
IOCB_FLAG_IOPRIO	engines/libaio.c	/^#define IOCB_FLAG_IOPRIO /;"	d	file:
IOCTL_H	os/windows/posix/include/sys/ioctl.h	/^#define IOCTL_H$/;"	d
IOLOG_MAX_DEFER	iolog.h	/^#define IOLOG_MAX_DEFER	/;"	d
IOPRIO_BITS	os/os-android.h	/^#define IOPRIO_BITS	/;"	d
IOPRIO_BITS	os/os-linux.h	/^#define IOPRIO_BITS	/;"	d
IOPRIO_CLASS_BE	os/os-android.h	/^	IOPRIO_CLASS_BE,$/;"	e	enum:__anon38a0d7bc0103
IOPRIO_CLASS_BE	os/os-linux.h	/^	IOPRIO_CLASS_BE,$/;"	e	enum:__anon631ec9eb0103
IOPRIO_CLASS_IDLE	os/os-android.h	/^	IOPRIO_CLASS_IDLE,$/;"	e	enum:__anon38a0d7bc0103
IOPRIO_CLASS_IDLE	os/os-linux.h	/^	IOPRIO_CLASS_IDLE,$/;"	e	enum:__anon631ec9eb0103
IOPRIO_CLASS_NONE	os/os-android.h	/^	IOPRIO_CLASS_NONE,$/;"	e	enum:__anon38a0d7bc0103
IOPRIO_CLASS_NONE	os/os-linux.h	/^	IOPRIO_CLASS_NONE,$/;"	e	enum:__anon631ec9eb0103
IOPRIO_CLASS_RT	os/os-android.h	/^	IOPRIO_CLASS_RT,$/;"	e	enum:__anon38a0d7bc0103
IOPRIO_CLASS_RT	os/os-linux.h	/^	IOPRIO_CLASS_RT,$/;"	e	enum:__anon631ec9eb0103
IOPRIO_CLASS_SHIFT	os/os-android.h	/^#define IOPRIO_CLASS_SHIFT	/;"	d
IOPRIO_CLASS_SHIFT	os/os-linux.h	/^#define IOPRIO_CLASS_SHIFT	/;"	d
IOPRIO_MAX_PRIO	os/os-android.h	/^#define IOPRIO_MAX_PRIO	/;"	d
IOPRIO_MAX_PRIO	os/os-dragonfly.h	/^#define IOPRIO_MAX_PRIO	/;"	d
IOPRIO_MAX_PRIO	os/os-linux.h	/^#define IOPRIO_MAX_PRIO	/;"	d
IOPRIO_MAX_PRIO	os/os.h	/^#define IOPRIO_MAX_PRIO	/;"	d
IOPRIO_MAX_PRIO_CLASS	os/os-android.h	/^#define IOPRIO_MAX_PRIO_CLASS	/;"	d
IOPRIO_MAX_PRIO_CLASS	os/os-linux.h	/^#define IOPRIO_MAX_PRIO_CLASS	/;"	d
IOPRIO_MAX_PRIO_CLASS	os/os.h	/^#define IOPRIO_MAX_PRIO_CLASS	/;"	d
IOPRIO_MIN_PRIO	os/os-android.h	/^#define IOPRIO_MIN_PRIO	/;"	d
IOPRIO_MIN_PRIO	os/os-dragonfly.h	/^#define IOPRIO_MIN_PRIO	/;"	d
IOPRIO_MIN_PRIO	os/os-linux.h	/^#define IOPRIO_MIN_PRIO	/;"	d
IOPRIO_MIN_PRIO	os/os.h	/^#define IOPRIO_MIN_PRIO	/;"	d
IOPRIO_MIN_PRIO_CLASS	os/os-android.h	/^#define IOPRIO_MIN_PRIO_CLASS	/;"	d
IOPRIO_MIN_PRIO_CLASS	os/os-linux.h	/^#define IOPRIO_MIN_PRIO_CLASS	/;"	d
IOPRIO_MIN_PRIO_CLASS	os/os.h	/^#define IOPRIO_MIN_PRIO_CLASS	/;"	d
IOPRIO_WHO_PGRP	os/os-android.h	/^	IOPRIO_WHO_PGRP,$/;"	e	enum:__anon38a0d7bc0203
IOPRIO_WHO_PGRP	os/os-dragonfly.h	/^#define IOPRIO_WHO_PGRP	/;"	d
IOPRIO_WHO_PGRP	os/os-linux.h	/^	IOPRIO_WHO_PGRP,$/;"	e	enum:__anon631ec9eb0203
IOPRIO_WHO_PROCESS	os/os-android.h	/^	IOPRIO_WHO_PROCESS = 1,$/;"	e	enum:__anon38a0d7bc0203
IOPRIO_WHO_PROCESS	os/os-dragonfly.h	/^#define IOPRIO_WHO_PROCESS	/;"	d
IOPRIO_WHO_PROCESS	os/os-linux.h	/^	IOPRIO_WHO_PROCESS = 1,$/;"	e	enum:__anon631ec9eb0203
IOPRIO_WHO_USER	os/os-android.h	/^	IOPRIO_WHO_USER,$/;"	e	enum:__anon38a0d7bc0203
IOPRIO_WHO_USER	os/os-dragonfly.h	/^#define IOPRIO_WHO_USER	/;"	d
IOPRIO_WHO_USER	os/os-linux.h	/^	IOPRIO_WHO_USER,$/;"	e	enum:__anon631ec9eb0203
IOPS_LOG_MASK	iolog.c	/^	IOPS_LOG_MASK	= 16,$/;"	e	enum:__anona13017500103	file:
IORING_CQE_BUFFER_SHIFT	os/linux/io_uring.h	/^	IORING_CQE_BUFFER_SHIFT		= 16,$/;"	e	enum:__anon2bbba9270803
IORING_CQE_F_BUFFER	os/linux/io_uring.h	/^#define IORING_CQE_F_BUFFER	/;"	d
IORING_CQE_F_MORE	os/linux/io_uring.h	/^#define IORING_CQE_F_MORE	/;"	d
IORING_CQ_EVENTFD_DISABLED	os/linux/io_uring.h	/^#define IORING_CQ_EVENTFD_DISABLED	/;"	d
IORING_ENTER_EXT_ARG	os/linux/io_uring.h	/^#define IORING_ENTER_EXT_ARG	/;"	d
IORING_ENTER_GETEVENTS	os/linux/io_uring.h	/^#define IORING_ENTER_GETEVENTS	/;"	d
IORING_ENTER_REGISTERED_RING	os/linux/io_uring.h	/^#define IORING_ENTER_REGISTERED_RING	/;"	d
IORING_ENTER_SQ_WAIT	os/linux/io_uring.h	/^#define IORING_ENTER_SQ_WAIT	/;"	d
IORING_ENTER_SQ_WAKEUP	os/linux/io_uring.h	/^#define IORING_ENTER_SQ_WAKEUP	/;"	d
IORING_FEAT_CQE_SKIP	os/linux/io_uring.h	/^#define IORING_FEAT_CQE_SKIP	/;"	d
IORING_FEAT_CUR_PERSONALITY	os/linux/io_uring.h	/^#define IORING_FEAT_CUR_PERSONALITY	/;"	d
IORING_FEAT_EXT_ARG	os/linux/io_uring.h	/^#define IORING_FEAT_EXT_ARG	/;"	d
IORING_FEAT_FAST_POLL	os/linux/io_uring.h	/^#define IORING_FEAT_FAST_POLL	/;"	d
IORING_FEAT_NATIVE_WORKERS	os/linux/io_uring.h	/^#define IORING_FEAT_NATIVE_WORKERS	/;"	d
IORING_FEAT_NODROP	os/linux/io_uring.h	/^#define IORING_FEAT_NODROP	/;"	d
IORING_FEAT_POLL_32BITS	os/linux/io_uring.h	/^#define IORING_FEAT_POLL_32BITS /;"	d
IORING_FEAT_RSRC_TAGS	os/linux/io_uring.h	/^#define IORING_FEAT_RSRC_TAGS	/;"	d
IORING_FEAT_RW_CUR_POS	os/linux/io_uring.h	/^#define IORING_FEAT_RW_CUR_POS	/;"	d
IORING_FEAT_SINGLE_MMAP	os/linux/io_uring.h	/^#define IORING_FEAT_SINGLE_MMAP	/;"	d
IORING_FEAT_SQPOLL_NONFIXED	os/linux/io_uring.h	/^#define IORING_FEAT_SQPOLL_NONFIXED	/;"	d
IORING_FEAT_SUBMIT_STABLE	os/linux/io_uring.h	/^#define IORING_FEAT_SUBMIT_STABLE	/;"	d
IORING_FSYNC_DATASYNC	os/linux/io_uring.h	/^#define IORING_FSYNC_DATASYNC	/;"	d
IORING_LINK_TIMEOUT_UPDATE	os/linux/io_uring.h	/^#define IORING_LINK_TIMEOUT_UPDATE	/;"	d
IORING_OFF_CQ_RING	os/linux/io_uring.h	/^#define IORING_OFF_CQ_RING	/;"	d
IORING_OFF_SQES	os/linux/io_uring.h	/^#define IORING_OFF_SQES	/;"	d
IORING_OFF_SQ_RING	os/linux/io_uring.h	/^#define IORING_OFF_SQ_RING	/;"	d
IORING_OP_ACCEPT	os/linux/io_uring.h	/^	IORING_OP_ACCEPT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_ASYNC_CANCEL	os/linux/io_uring.h	/^	IORING_OP_ASYNC_CANCEL,$/;"	e	enum:__anon2bbba9270703
IORING_OP_CLOSE	os/linux/io_uring.h	/^	IORING_OP_CLOSE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_CONNECT	os/linux/io_uring.h	/^	IORING_OP_CONNECT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_EPOLL_CTL	os/linux/io_uring.h	/^	IORING_OP_EPOLL_CTL,$/;"	e	enum:__anon2bbba9270703
IORING_OP_FADVISE	os/linux/io_uring.h	/^	IORING_OP_FADVISE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_FALLOCATE	os/linux/io_uring.h	/^	IORING_OP_FALLOCATE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_FILES_UPDATE	os/linux/io_uring.h	/^	IORING_OP_FILES_UPDATE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_FSYNC	os/linux/io_uring.h	/^	IORING_OP_FSYNC,$/;"	e	enum:__anon2bbba9270703
IORING_OP_LAST	os/linux/io_uring.h	/^	IORING_OP_LAST,$/;"	e	enum:__anon2bbba9270703
IORING_OP_LINKAT	os/linux/io_uring.h	/^	IORING_OP_LINKAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_LINK_TIMEOUT	os/linux/io_uring.h	/^	IORING_OP_LINK_TIMEOUT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_MADVISE	os/linux/io_uring.h	/^	IORING_OP_MADVISE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_MKDIRAT	os/linux/io_uring.h	/^	IORING_OP_MKDIRAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_NOP	os/linux/io_uring.h	/^	IORING_OP_NOP,$/;"	e	enum:__anon2bbba9270703
IORING_OP_OPENAT	os/linux/io_uring.h	/^	IORING_OP_OPENAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_OPENAT2	os/linux/io_uring.h	/^	IORING_OP_OPENAT2,$/;"	e	enum:__anon2bbba9270703
IORING_OP_POLL_ADD	os/linux/io_uring.h	/^	IORING_OP_POLL_ADD,$/;"	e	enum:__anon2bbba9270703
IORING_OP_POLL_REMOVE	os/linux/io_uring.h	/^	IORING_OP_POLL_REMOVE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_PROVIDE_BUFFERS	os/linux/io_uring.h	/^	IORING_OP_PROVIDE_BUFFERS,$/;"	e	enum:__anon2bbba9270703
IORING_OP_READ	os/linux/io_uring.h	/^	IORING_OP_READ,$/;"	e	enum:__anon2bbba9270703
IORING_OP_READV	os/linux/io_uring.h	/^	IORING_OP_READV,$/;"	e	enum:__anon2bbba9270703
IORING_OP_READ_FIXED	os/linux/io_uring.h	/^	IORING_OP_READ_FIXED,$/;"	e	enum:__anon2bbba9270703
IORING_OP_RECV	os/linux/io_uring.h	/^	IORING_OP_RECV,$/;"	e	enum:__anon2bbba9270703
IORING_OP_RECVMSG	os/linux/io_uring.h	/^	IORING_OP_RECVMSG,$/;"	e	enum:__anon2bbba9270703
IORING_OP_REMOVE_BUFFERS	os/linux/io_uring.h	/^	IORING_OP_REMOVE_BUFFERS,$/;"	e	enum:__anon2bbba9270703
IORING_OP_RENAMEAT	os/linux/io_uring.h	/^	IORING_OP_RENAMEAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SEND	os/linux/io_uring.h	/^	IORING_OP_SEND,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SENDMSG	os/linux/io_uring.h	/^	IORING_OP_SENDMSG,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SHUTDOWN	os/linux/io_uring.h	/^	IORING_OP_SHUTDOWN,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SPLICE	os/linux/io_uring.h	/^	IORING_OP_SPLICE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_STATX	os/linux/io_uring.h	/^	IORING_OP_STATX,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SYMLINKAT	os/linux/io_uring.h	/^	IORING_OP_SYMLINKAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_SYNC_FILE_RANGE	os/linux/io_uring.h	/^	IORING_OP_SYNC_FILE_RANGE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_TEE	os/linux/io_uring.h	/^	IORING_OP_TEE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_TIMEOUT	os/linux/io_uring.h	/^	IORING_OP_TIMEOUT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_TIMEOUT_REMOVE	os/linux/io_uring.h	/^	IORING_OP_TIMEOUT_REMOVE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_UNLINKAT	os/linux/io_uring.h	/^	IORING_OP_UNLINKAT,$/;"	e	enum:__anon2bbba9270703
IORING_OP_WRITE	os/linux/io_uring.h	/^	IORING_OP_WRITE,$/;"	e	enum:__anon2bbba9270703
IORING_OP_WRITEV	os/linux/io_uring.h	/^	IORING_OP_WRITEV,$/;"	e	enum:__anon2bbba9270703
IORING_OP_WRITE_FIXED	os/linux/io_uring.h	/^	IORING_OP_WRITE_FIXED,$/;"	e	enum:__anon2bbba9270703
IORING_POLL_ADD_MULTI	os/linux/io_uring.h	/^#define IORING_POLL_ADD_MULTI	/;"	d
IORING_POLL_UPDATE_EVENTS	os/linux/io_uring.h	/^#define IORING_POLL_UPDATE_EVENTS	/;"	d
IORING_POLL_UPDATE_USER_DATA	os/linux/io_uring.h	/^#define IORING_POLL_UPDATE_USER_DATA	/;"	d
IORING_REGISTER_BUFFERS	os/linux/io_uring.h	/^	IORING_REGISTER_BUFFERS			= 0,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_BUFFERS2	os/linux/io_uring.h	/^	IORING_REGISTER_BUFFERS2		= 15,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_BUFFERS_UPDATE	os/linux/io_uring.h	/^	IORING_REGISTER_BUFFERS_UPDATE		= 16,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_ENABLE_RINGS	os/linux/io_uring.h	/^	IORING_REGISTER_ENABLE_RINGS		= 12,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_EVENTFD	os/linux/io_uring.h	/^	IORING_REGISTER_EVENTFD			= 4,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_EVENTFD_ASYNC	os/linux/io_uring.h	/^	IORING_REGISTER_EVENTFD_ASYNC		= 7,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_FILES	os/linux/io_uring.h	/^	IORING_REGISTER_FILES			= 2,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_FILES2	os/linux/io_uring.h	/^	IORING_REGISTER_FILES2			= 13,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_FILES_SKIP	os/linux/io_uring.h	/^#define IORING_REGISTER_FILES_SKIP	/;"	d
IORING_REGISTER_FILES_UPDATE	os/linux/io_uring.h	/^	IORING_REGISTER_FILES_UPDATE		= 6,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_FILES_UPDATE2	os/linux/io_uring.h	/^	IORING_REGISTER_FILES_UPDATE2		= 14,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_IOWQ_AFF	os/linux/io_uring.h	/^	IORING_REGISTER_IOWQ_AFF		= 17,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_IOWQ_MAX_WORKERS	os/linux/io_uring.h	/^	IORING_REGISTER_IOWQ_MAX_WORKERS	= 19,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_LAST	os/linux/io_uring.h	/^	IORING_REGISTER_LAST$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_MAP_BUFFERS	t/io_uring.c	/^#define IORING_REGISTER_MAP_BUFFERS	/;"	d	file:
IORING_REGISTER_PERSONALITY	os/linux/io_uring.h	/^	IORING_REGISTER_PERSONALITY		= 9,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_PROBE	os/linux/io_uring.h	/^	IORING_REGISTER_PROBE			= 8,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_RESTRICTIONS	os/linux/io_uring.h	/^	IORING_REGISTER_RESTRICTIONS		= 11,$/;"	e	enum:__anon2bbba9270903
IORING_REGISTER_RING_FDS	os/linux/io_uring.h	/^	IORING_REGISTER_RING_FDS		= 20,$/;"	e	enum:__anon2bbba9270903
IORING_RESTRICTION_LAST	os/linux/io_uring.h	/^	IORING_RESTRICTION_LAST$/;"	e	enum:__anon2bbba9270c03
IORING_RESTRICTION_REGISTER_OP	os/linux/io_uring.h	/^	IORING_RESTRICTION_REGISTER_OP		= 0,$/;"	e	enum:__anon2bbba9270c03
IORING_RESTRICTION_SQE_FLAGS_ALLOWED	os/linux/io_uring.h	/^	IORING_RESTRICTION_SQE_FLAGS_ALLOWED	= 2,$/;"	e	enum:__anon2bbba9270c03
IORING_RESTRICTION_SQE_FLAGS_REQUIRED	os/linux/io_uring.h	/^	IORING_RESTRICTION_SQE_FLAGS_REQUIRED	= 3,$/;"	e	enum:__anon2bbba9270c03
IORING_RESTRICTION_SQE_OP	os/linux/io_uring.h	/^	IORING_RESTRICTION_SQE_OP		= 1,$/;"	e	enum:__anon2bbba9270c03
IORING_SETUP_ATTACH_WQ	os/linux/io_uring.h	/^#define IORING_SETUP_ATTACH_WQ	/;"	d
IORING_SETUP_CLAMP	os/linux/io_uring.h	/^#define IORING_SETUP_CLAMP	/;"	d
IORING_SETUP_CQSIZE	os/linux/io_uring.h	/^#define IORING_SETUP_CQSIZE	/;"	d
IORING_SETUP_IOPOLL	os/linux/io_uring.h	/^#define IORING_SETUP_IOPOLL	/;"	d
IORING_SETUP_R_DISABLED	os/linux/io_uring.h	/^#define IORING_SETUP_R_DISABLED	/;"	d
IORING_SETUP_SQPOLL	os/linux/io_uring.h	/^#define IORING_SETUP_SQPOLL	/;"	d
IORING_SETUP_SQ_AFF	os/linux/io_uring.h	/^#define IORING_SETUP_SQ_AFF	/;"	d
IORING_SQ_CQ_OVERFLOW	os/linux/io_uring.h	/^#define IORING_SQ_CQ_OVERFLOW	/;"	d
IORING_SQ_NEED_WAKEUP	os/linux/io_uring.h	/^#define IORING_SQ_NEED_WAKEUP	/;"	d
IORING_TIMEOUT_ABS	os/linux/io_uring.h	/^#define IORING_TIMEOUT_ABS	/;"	d
IORING_TIMEOUT_BOOTTIME	os/linux/io_uring.h	/^#define IORING_TIMEOUT_BOOTTIME	/;"	d
IORING_TIMEOUT_CLOCK_MASK	os/linux/io_uring.h	/^#define IORING_TIMEOUT_CLOCK_MASK	/;"	d
IORING_TIMEOUT_ETIME_SUCCESS	os/linux/io_uring.h	/^#define IORING_TIMEOUT_ETIME_SUCCESS	/;"	d
IORING_TIMEOUT_REALTIME	os/linux/io_uring.h	/^#define IORING_TIMEOUT_REALTIME	/;"	d
IORING_TIMEOUT_UPDATE	os/linux/io_uring.h	/^#define IORING_TIMEOUT_UPDATE	/;"	d
IORING_TIMEOUT_UPDATE_MASK	os/linux/io_uring.h	/^#define IORING_TIMEOUT_UPDATE_MASK	/;"	d
IORING_UNREGISTER_BUFFERS	os/linux/io_uring.h	/^	IORING_UNREGISTER_BUFFERS		= 1,$/;"	e	enum:__anon2bbba9270903
IORING_UNREGISTER_EVENTFD	os/linux/io_uring.h	/^	IORING_UNREGISTER_EVENTFD		= 5,$/;"	e	enum:__anon2bbba9270903
IORING_UNREGISTER_FILES	os/linux/io_uring.h	/^	IORING_UNREGISTER_FILES			= 3,$/;"	e	enum:__anon2bbba9270903
IORING_UNREGISTER_IOWQ_AFF	os/linux/io_uring.h	/^	IORING_UNREGISTER_IOWQ_AFF		= 18,$/;"	e	enum:__anon2bbba9270903
IORING_UNREGISTER_PERSONALITY	os/linux/io_uring.h	/^	IORING_UNREGISTER_PERSONALITY		= 10,$/;"	e	enum:__anon2bbba9270903
IORING_UNREGISTER_RING_FDS	os/linux/io_uring.h	/^	IORING_UNREGISTER_RING_FDS		= 21,$/;"	e	enum:__anon2bbba9270903
IOSQE_ASYNC	os/linux/io_uring.h	/^#define IOSQE_ASYNC	/;"	d
IOSQE_ASYNC_BIT	os/linux/io_uring.h	/^	IOSQE_ASYNC_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_BUFFER_SELECT	os/linux/io_uring.h	/^#define IOSQE_BUFFER_SELECT	/;"	d
IOSQE_BUFFER_SELECT_BIT	os/linux/io_uring.h	/^	IOSQE_BUFFER_SELECT_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_CQE_SKIP_SUCCESS	os/linux/io_uring.h	/^#define IOSQE_CQE_SKIP_SUCCESS	/;"	d
IOSQE_CQE_SKIP_SUCCESS_BIT	os/linux/io_uring.h	/^	IOSQE_CQE_SKIP_SUCCESS_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_FIXED_FILE	os/linux/io_uring.h	/^#define IOSQE_FIXED_FILE	/;"	d
IOSQE_FIXED_FILE_BIT	os/linux/io_uring.h	/^	IOSQE_FIXED_FILE_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_IO_DRAIN	os/linux/io_uring.h	/^#define IOSQE_IO_DRAIN	/;"	d
IOSQE_IO_DRAIN_BIT	os/linux/io_uring.h	/^	IOSQE_IO_DRAIN_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_IO_HARDLINK	os/linux/io_uring.h	/^#define IOSQE_IO_HARDLINK	/;"	d
IOSQE_IO_HARDLINK_BIT	os/linux/io_uring.h	/^	IOSQE_IO_HARDLINK_BIT,$/;"	e	enum:__anon2bbba9270603
IOSQE_IO_LINK	os/linux/io_uring.h	/^#define IOSQE_IO_LINK	/;"	d
IOSQE_IO_LINK_BIT	os/linux/io_uring.h	/^	IOSQE_IO_LINK_BIT,$/;"	e	enum:__anon2bbba9270603
IO_CUFILE	engines/libcufile.c	/^	IO_CUFILE    = 1,$/;"	e	enum:__anon909c271d0103	file:
IO_LIST_ALL	verify-state.h	/^#define IO_LIST_ALL	/;"	d
IO_LOG_TYPE_BW	iolog.h	/^	IO_LOG_TYPE_BW,$/;"	e	enum:__anona13017550103
IO_LOG_TYPE_CLAT	iolog.h	/^	IO_LOG_TYPE_CLAT,$/;"	e	enum:__anona13017550103
IO_LOG_TYPE_HIST	iolog.h	/^	IO_LOG_TYPE_HIST,$/;"	e	enum:__anona13017550103
IO_LOG_TYPE_IOPS	iolog.h	/^	IO_LOG_TYPE_IOPS,$/;"	e	enum:__anona13017550103
IO_LOG_TYPE_LAT	iolog.h	/^	IO_LOG_TYPE_LAT = 1,$/;"	e	enum:__anona13017550103
IO_LOG_TYPE_SLAT	iolog.h	/^	IO_LOG_TYPE_SLAT,$/;"	e	enum:__anona13017550103
IO_MODE_INLINE	fio.h	/^	IO_MODE_INLINE = 0,$/;"	e	enum:__anon0f7035d90503
IO_MODE_OFFLOAD	fio.h	/^	IO_MODE_OFFLOAD = 1,$/;"	e	enum:__anon0f7035d90503
IO_POSIX	engines/libcufile.c	/^	IO_POSIX     = 2$/;"	e	enum:__anon909c271d0103	file:
IO_URING_OP_SUPPORTED	os/linux/io_uring.h	/^#define IO_URING_OP_SUPPORTED	/;"	d
IO_U_BUFF_OFF_SERVER	engines/librpma_gpspm.c	/^#define IO_U_BUFF_OFF_SERVER(/;"	d	file:
IO_U_BUF_LEN	engines/librpma_gpspm.c	/^#define IO_U_BUF_LEN /;"	d	file:
IO_U_F_BARRIER	io_u.h	/^	IO_U_F_BARRIER		= 1 << 6,$/;"	e	enum:__anon04db5ec70103
IO_U_F_BUSY_OK	io_u.h	/^	IO_U_F_BUSY_OK		= 1 << 4,$/;"	e	enum:__anon04db5ec70103
IO_U_F_FLIGHT	io_u.h	/^	IO_U_F_FLIGHT		= 1 << 1,$/;"	e	enum:__anon04db5ec70103
IO_U_F_FREE	io_u.h	/^	IO_U_F_FREE		= 1 << 0,$/;"	e	enum:__anon04db5ec70103
IO_U_F_IN_CUR_DEPTH	io_u.h	/^	IO_U_F_IN_CUR_DEPTH	= 1 << 3,$/;"	e	enum:__anon04db5ec70103
IO_U_F_NO_FILE_PUT	io_u.h	/^	IO_U_F_NO_FILE_PUT	= 1 << 2,$/;"	e	enum:__anon04db5ec70103
IO_U_F_TRIMMED	io_u.h	/^	IO_U_F_TRIMMED		= 1 << 5,$/;"	e	enum:__anon04db5ec70103
IO_U_F_VER_LIST	io_u.h	/^	IO_U_F_VER_LIST		= 1 << 7,$/;"	e	enum:__anon04db5ec70103
IO_U_NEXT_BUF_OFF_CLIENT	engines/librpma_gpspm.c	/^#define IO_U_NEXT_BUF_OFF_CLIENT(/;"	d	file:
IO_WQ_BOUND	os/linux/io_uring.h	/^	IO_WQ_BOUND,$/;"	e	enum:__anon2bbba9270a03
IO_WQ_UNBOUND	os/linux/io_uring.h	/^	IO_WQ_UNBOUND,$/;"	e	enum:__anon2bbba9270a03
IPC_CREAT	os/windows/posix/include/sys/shm.h	/^#define IPC_CREAT	/;"	d
IPC_PRIVATE	os/windows/posix/include/sys/shm.h	/^#define IPC_PRIVATE	/;"	d
IPC_RMID	os/windows/posix/include/sys/shm.h	/^#define IPC_RMID	/;"	d
IP_F_IN_FLIGHT	iolog.h	/^	IP_F_IN_FLIGHT	= 8,$/;"	e	enum:__anona13017550503
IP_F_ONLIST	iolog.h	/^	IP_F_ONLIST	= 2,$/;"	e	enum:__anona13017550503
IP_F_ONRB	iolog.h	/^	IP_F_ONRB	= 1,$/;"	e	enum:__anona13017550503
IP_F_TRIMMED	iolog.h	/^	IP_F_TRIMMED	= 4,$/;"	e	enum:__anona13017550503
IS_ERR	err.h	/^static inline uintptr_t IS_ERR(const void *ptr)$/;"	f	typeref:typename:uintptr_t
IS_ERR_OR_NULL	err.h	/^static inline uintptr_t IS_ERR_OR_NULL(const void *ptr)$/;"	f	typeref:typename:uintptr_t
IS_ERR_VALUE	err.h	/^#define IS_ERR_VALUE(/;"	d
IS_NOT_THE_LAST_MESSAGE	engines/librpma_gpspm.c	/^#define IS_NOT_THE_LAST_MESSAGE(/;"	d	file:
Indices and tables	doc/index.rst	/^Indices and tables$/;"	c
Install	tools/fio.service	/^[Install]$/;"	s
Interpreting the output	HOWTO.rst	/^Interpreting the output$/;"	c
IoCompletionRoutine	engines/windowsaio.c	/^static DWORD WINAPI IoCompletionRoutine(LPVOID lpParameter)$/;"	f	typeref:typename:DWORD WINAPI	file:
IoCompletionRoutine	engines/windowsaio.c	/^static DWORD WINAPI IoCompletionRoutine(LPVOID lpParameter);$/;"	p	typeref:typename:DWORD WINAPI	file:
JHASH_INITVAL	hash.h	/^#define JHASH_INITVAL	/;"	d
JOB FILE FORMAT	fio.1	/^.SH "JOB FILE FORMAT"$/;"	s	title:fio
JOB FILE PARAMETERS	fio.1	/^.SH "JOB FILE PARAMETERS"$/;"	s	title:fio
JOB PARAMETERS	fio.1	/^.SH "JOB PARAMETERS"$/;"	s	title:fio
JOBS_ETA	stat.h	/^#define JOBS_ETA /;"	d
JOBS_ETA	stat.h	/^struct jobs_eta JOBS_ETA;$/;"	v	typeref:struct:jobs_eta
JOBS_ETA	stat.h	/^struct jobs_eta_packed JOBS_ETA __attribute__((packed));$/;"	v	typeref:struct:jobs_eta_packed
JOBS_PER_SEG	fio.h	/^#define JOBS_PER_SEG	/;"	d
JOB_START_TIMEOUT	backend.c	/^#define JOB_START_TIMEOUT	/;"	d	file:
JSON OUTPUT	fio.1	/^.SH JSON OUTPUT$/;"	s	title:fio
JSON output	HOWTO.rst	/^JSON output$/;"	c
JSON+ OUTPUT	fio.1	/^.SH JSON+ OUTPUT$/;"	s	title:fio
JSON+ output	HOWTO.rst	/^JSON+ output$/;"	c
JSON_PARENT_TYPE_ARRAY	json.h	/^#define JSON_PARENT_TYPE_ARRAY /;"	d
JSON_PARENT_TYPE_PAIR	json.h	/^#define JSON_PARENT_TYPE_PAIR /;"	d
JSON_TYPE_ARRAY	json.h	/^#define JSON_TYPE_ARRAY /;"	d
JSON_TYPE_FLOAT	json.h	/^#define JSON_TYPE_FLOAT /;"	d
JSON_TYPE_INTEGER	json.h	/^#define JSON_TYPE_INTEGER /;"	d
JSON_TYPE_OBJECT	json.h	/^#define JSON_TYPE_OBJECT /;"	d
JSON_TYPE_STRING	json.h	/^#define JSON_TYPE_STRING /;"	d
Job description	HOWTO.rst	/^Job description$/;"	s	chapter:Job file parameters
Job description	fio.1	/^.SS "Job description"$/;"	S	section:fio""JOB PARAMETERS
Job file format	HOWTO.rst	/^Job file format$/;"	c
Job file parameters	HOWTO.rst	/^Job file parameters$/;"	c
KECCAK_ROUNDS	crc/sha3.c	/^#define KECCAK_ROUNDS /;"	d	file:
LARGESMALLOC	t/stest.c	/^#define LARGESMALLOC	/;"	d	file:
LAST_POS	engines/glusterfs_sync.c	/^#define LAST_POS(/;"	d	file:
LAST_POS	engines/sync.c	/^#define LAST_POS(/;"	d	file:
LAT_LIST	tools/fio_jsonplus_clat2csv	/^LAT_LIST = ['slat_ns', 'clat_ns', 'lat_ns']$/;"	v
LAT_LOG_MASK	iolog.c	/^	LAT_LOG_MASK	= 2,$/;"	e	enum:__anona13017500103	file:
LCG	lib/rand.c	/^#define LCG(/;"	d	file:
LCG64	lib/rand.c	/^#define LCG64(/;"	d	file:
LEFT_JUSTIFIED	cairo_text_helpers.c	/^#define LEFT_JUSTIFIED /;"	d	file:
LEN	t/time-test.c	/^#define LEN /;"	d	file:
LEX_YY_CFLAGS	Makefile	/^LEX_YY_CFLAGS := -Wno-implicit-fallthrough$/;"	m
LIBGEN_H	os/windows/posix/include/libgen.h	/^#define LIBGEN_H$/;"	d
LIBRPMA_FIO_CEIL	engines/librpma_fio.h	/^#define LIBRPMA_FIO_CEIL(/;"	d
LIBRPMA_FIO_DESCRIPTOR_MAX_SIZE	engines/librpma_fio.h	/^#define LIBRPMA_FIO_DESCRIPTOR_MAX_SIZE /;"	d
LIBRPMA_FIO_H	engines/librpma_fio.h	/^#define LIBRPMA_FIO_H /;"	d
LIBRPMA_FIO_PORT_STR_LEN_MAX	engines/librpma_fio.h	/^#define LIBRPMA_FIO_PORT_STR_LEN_MAX /;"	d
LIBRPMA_FIO_RETRY_DELAY_S	engines/librpma_fio.c	/^#define LIBRPMA_FIO_RETRY_DELAY_S	/;"	d	file:
LIBRPMA_FIO_RETRY_MAX_NO	engines/librpma_fio.c	/^#define LIBRPMA_FIO_RETRY_MAX_NO	/;"	d	file:
LINE_LENGTH	stat.c	/^#define LINE_LENGTH	/;"	d	file:
LINK_PDBFILE	Makefile	/^  LINK_PDBFILE ?= -Wl,-pdb,$(dir $@)\/$(basename $(@F)).pdb$/;"	m
LINUX_DEV_LOOKUP	oslib/linux-dev-lookup.h	/^#define LINUX_DEV_LOOKUP$/;"	d
LINUX_IO_URING_H	os/linux/io_uring.h	/^#define LINUX_IO_URING_H$/;"	d
LLVMFuzzerTestOneInput	t/fuzz/fuzz_parseini.c	/^int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	t/fuzz/onefile.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size);$/;"	p	typeref:typename:int	file:
LOAD_OP	crc/sha256.c	/^static inline void LOAD_OP(int I, uint32_t *W, const uint8_t *input)$/;"	f	typeref:typename:void	file:
LOAD_OP	crc/sha512.c	/^static inline void LOAD_OP(int I, uint64_t *W, const uint8_t *input)$/;"	f	typeref:typename:void	file:
LOG FILE FORMATS	fio.1	/^.SH LOG FILE FORMATS$/;"	s	title:fio
LOGGED_BUFLEN_NOT_ALIGNED	engines/libcufile.c	/^#define LOGGED_BUFLEN_NOT_ALIGNED /;"	d	file:
LOGGED_GPU_OFFSET_NOT_ALIGNED	engines/libcufile.c	/^#define LOGGED_GPU_OFFSET_NOT_ALIGNED /;"	d	file:
LOG_ERROR	os/windows/posix/include/syslog.h	/^#define LOG_ERROR	/;"	d
LOG_INFO	os/windows/posix/include/syslog.h	/^#define LOG_INFO	/;"	d
LOG_MSEC_SLACK	stat.c	/^#define LOG_MSEC_SLACK	/;"	d	file:
LOG_NDELAY	os/windows/posix/include/syslog.h	/^#define LOG_NDELAY	/;"	d
LOG_NOWAIT	os/windows/posix/include/syslog.h	/^#define LOG_NOWAIT	/;"	d
LOG_OFFSET_SAMPLE_BIT	iolog.h	/^#define LOG_OFFSET_SAMPLE_BIT	/;"	d
LOG_PID	os/windows/posix/include/syslog.h	/^#define LOG_PID	/;"	d
LOG_PRIO_SAMPLE_BIT	iolog.h	/^#define LOG_PRIO_SAMPLE_BIT	/;"	d
LOG_SAMPLE_BITS	iolog.h	/^#define LOG_SAMPLE_BITS	/;"	d
LOG_USER	os/windows/posix/include/syslog.h	/^#define LOG_USER	/;"	d
LOG_WARN	os/windows/posix/include/syslog.h	/^#define LOG_WARN	/;"	d
LOOPS	t/stest.c	/^#define LOOPS	/;"	d	file:
Latency profile	doc/fio_examples.rst	/^Latency profile$/;"	c
License	doc/fio_doc.rst	/^License$/;"	c
Loading verify state	HOWTO.rst	/^Loading verify state$/;"	s	chapter:Verification and triggers
Log File Formats	HOWTO.rst	/^Log File Formats$/;"	c
MAGIC1	t/stest.c	/^#define MAGIC1	/;"	d	file:
MAGIC2	t/stest.c	/^#define MAGIC2	/;"	d	file:
MAP_ANON	os/windows/posix/include/sys/mman.h	/^#define MAP_ANON	/;"	d
MAP_ANONYMOUS	os/windows/posix/include/sys/mman.h	/^#define MAP_ANONYMOUS	/;"	d
MAP_FAILED	os/windows/posix/include/sys/mman.h	/^#define MAP_FAILED	/;"	d
MAP_FIXED	os/windows/posix/include/sys/mman.h	/^#define MAP_FIXED	/;"	d
MAP_HASSEMAPHORE	os/windows/posix/include/sys/mman.h	/^#define MAP_HASSEMAPHORE	/;"	d
MAP_HUGETLB	os/os-android.h	/^#define MAP_HUGETLB /;"	d
MAP_HUGETLB	os/os.h	/^#define MAP_HUGETLB	/;"	d
MAP_INHERIT	os/windows/posix/include/sys/mman.h	/^#define MAP_INHERIT	/;"	d
MAP_NOCORE	os/windows/posix/include/sys/mman.h	/^#define MAP_NOCORE	/;"	d
MAP_NOSYNC	os/windows/posix/include/sys/mman.h	/^#define MAP_NOSYNC	/;"	d
MAP_PREFAULT_READ	os/windows/posix/include/sys/mman.h	/^#define MAP_PREFAULT_READ	/;"	d
MAP_PRIVATE	os/windows/posix/include/sys/mman.h	/^#define MAP_PRIVATE	/;"	d
MAP_SHARED	os/windows/posix/include/sys/mman.h	/^#define MAP_SHARED	/;"	d
MAP_STACK	os/windows/posix/include/sys/mman.h	/^#define MAP_STACK	/;"	d
MAX	oslib/libmtd_common.h	/^#define MAX(/;"	d
MAX	tickmarks.c	/^#define MAX(/;"	d	file:
MAXERRDETAIL	engines/sg.c	/^#define MAXERRDETAIL /;"	d	file:
MAXMSGCHUNK	engines/sg.c	/^#define MAXMSGCHUNK /;"	d	file:
MAXSMALLOC	t/stest.c	/^#define MAXSMALLOC	/;"	d	file:
MAX_10B_LBA	engines/sg.c	/^#define MAX_10B_LBA /;"	d	file:
MAX_CLOCK_SEC	gettime.c	/^#define MAX_CLOCK_SEC /;"	d	file:
MAX_CLOCK_SEC	t/time-test.c	/^#define MAX_CLOCK_SEC /;"	d	file:
MAX_CLOCK_SEC_2STAGE	t/time-test.c	/^#define MAX_CLOCK_SEC_2STAGE /;"	d	file:
MAX_CPU_STR_LEN	idletime.h	/^#define MAX_CPU_STR_LEN /;"	d
MAX_ERRNO	err.h	/^#define MAX_ERRNO	/;"	d
MAX_FDS	t/io_uring.c	/^#define MAX_FDS	/;"	d	file:
MAX_FILELOCKS	filelock.c	/^#define MAX_FILELOCKS	/;"	d	file:
MAX_LIST_LENGTH_BITS	lib/flist_sort.c	/^#define MAX_LIST_LENGTH_BITS /;"	d	file:
MAX_LOG_ENTRIES	iolog.h	/^#define MAX_LOG_ENTRIES	/;"	d
MAX_MSG_SIZE	engines/librpma_gpspm.c	/^#define MAX_MSG_SIZE /;"	d	file:
MAX_NR_BLOCK_INFOS	stat.h	/^#define MAX_NR_BLOCK_INFOS	/;"	d
MAX_PATTERN_SIZE	stat.h	/^#define MAX_PATTERN_SIZE	/;"	d
MAX_POOLS	smalloc.c	/^#define MAX_POOLS	/;"	d	file:
MAX_SB	engines/sg.c	/^#define MAX_SB /;"	d	file:
MD5STEP	crc/md5.h	/^#define MD5STEP(/;"	d
MD5_BLOCK_WORDS	crc/md5.h	/^#define MD5_BLOCK_WORDS	/;"	d
MD5_DIGEST_SIZE	crc/md5.h	/^#define MD5_DIGEST_SIZE	/;"	d
MD5_H	crc/md5.h	/^#define MD5_H$/;"	d
MD5_HASH_WORDS	crc/md5.h	/^#define MD5_HASH_WORDS	/;"	d
MD5_HMAC_BLOCK_SIZE	crc/md5.h	/^#define MD5_HMAC_BLOCK_SIZE	/;"	d
MEM_CUDA_MALLOC	thread_options.h	/^	MEM_CUDA_MALLOC,\/* use GPU memory *\/$/;"	e	enum:fio_memtype
MEM_MALLOC	thread_options.h	/^	MEM_MALLOC = 0,	\/* ordinary malloc *\/$/;"	e	enum:fio_memtype
MEM_MMAP	thread_options.h	/^	MEM_MMAP,	\/* use anonynomous mmap *\/$/;"	e	enum:fio_memtype
MEM_MMAPHUGE	thread_options.h	/^	MEM_MMAPHUGE,	\/* memory mapped huge file *\/$/;"	e	enum:fio_memtype
MEM_MMAPSHARED	thread_options.h	/^	MEM_MMAPSHARED, \/* use mmap with shared flag *\/$/;"	e	enum:fio_memtype
MEM_SHM	thread_options.h	/^	MEM_SHM,	\/* use shared memory segments *\/$/;"	e	enum:fio_memtype
MEM_SHMHUGE	thread_options.h	/^	MEM_SHMHUGE,	\/* use shared memory segments with huge pages *\/$/;"	e	enum:fio_memtype
MIN	oslib/libmtd_common.h	/^#define MIN(/;"	d
MIN_TICKS	t/time-test.c	/^#define MIN_TICKS /;"	d	file:
MMAP_TOTAL_SZ	engines/dev-dax.c	/^#define MMAP_TOTAL_SZ	/;"	d	file:
MMAP_TOTAL_SZ	engines/mmap.c	/^#define MMAP_TOTAL_SZ	/;"	d	file:
MPOL_LOCAL	fio.h	/^#define MPOL_LOCAL /;"	d
MSG_WAITALL	os/os-hpux.h	/^#define MSG_WAITALL	/;"	d
MS_ASYNC	os/windows/posix/include/sys/mman.h	/^#define MS_ASYNC	/;"	d
MS_INVALIDATE	os/windows/posix/include/sys/mman.h	/^#define MS_INVALIDATE	/;"	d
MS_SYNC	os/windows/posix/include/sys/mman.h	/^#define MS_SYNC	/;"	d
MTAB	lib/mountcheck.c	/^#define MTAB	/;"	d	file:
MTD_DEV	oslib/libmtd_int.h	/^#define MTD_DEV /;"	d
MTD_DEV_MAJOR	oslib/libmtd_legacy.c	/^#define MTD_DEV_MAJOR /;"	d	file:
MTD_DEV_PATT	oslib/libmtd_legacy.c	/^#define MTD_DEV_PATT /;"	d	file:
MTD_EB_SIZE	oslib/libmtd_int.h	/^#define MTD_EB_SIZE /;"	d
MTD_FLAGS	oslib/libmtd_int.h	/^#define MTD_FLAGS /;"	d
MTD_MIN_IO_SIZE	oslib/libmtd_int.h	/^#define MTD_MIN_IO_SIZE /;"	d
MTD_NAME	oslib/libmtd_int.h	/^#define MTD_NAME /;"	d
MTD_NAME_MAX	oslib/libmtd.h	/^#define MTD_NAME_MAX /;"	d
MTD_NAME_PATT	oslib/libmtd_int.h	/^#define MTD_NAME_PATT /;"	d
MTD_OOB_SIZE	oslib/libmtd_int.h	/^#define MTD_OOB_SIZE /;"	d
MTD_PROC_FILE	oslib/libmtd_legacy.c	/^#define MTD_PROC_FILE /;"	d	file:
MTD_REGION_CNT	oslib/libmtd_int.h	/^#define MTD_REGION_CNT /;"	d
MTD_SIZE	oslib/libmtd_int.h	/^#define MTD_SIZE /;"	d
MTD_SUBPAGE_SIZE	oslib/libmtd_int.h	/^#define MTD_SUBPAGE_SIZE /;"	d
MTD_TYPE	oslib/libmtd_int.h	/^#define MTD_TYPE /;"	d
MTD_TYPE_MAX	oslib/libmtd.h	/^#define MTD_TYPE_MAX /;"	d
Mailing list	README.rst	/^Mailing list$/;"	c
Maj	crc/sha256.c	/^static inline uint32_t Maj(uint32_t x, uint32_t y, uint32_t z)$/;"	f	typeref:typename:uint32_t	file:
Maj	crc/sha512.c	/^static inline uint64_t Maj(uint64_t x, uint64_t y, uint64_t z)$/;"	f	typeref:typename:uint64_t	file:
Measurements and reporting	HOWTO.rst	/^Measurements and reporting$/;"	s	chapter:Job file parameters
Measurements and reporting	fio.1	/^.SS "Measurements and reporting"$/;"	S	section:fio""JOB PARAMETERS
Moral License	doc/fio_doc.rst	/^Moral License$/;"	c
N2S_BIT	lib/num2str.h	/^	N2S_BIT		= 3,$/;"	e	enum:n2s_unit
N2S_BITPERSEC	lib/num2str.h	/^	N2S_BITPERSEC	= 5,$/;"	e	enum:n2s_unit
N2S_BYTE	lib/num2str.h	/^	N2S_BYTE	= 2,$/;"	e	enum:n2s_unit
N2S_BYTEPERSEC	lib/num2str.h	/^	N2S_BYTEPERSEC	= 4,$/;"	e	enum:n2s_unit
N2S_NONE	lib/num2str.h	/^	N2S_NONE	= 0,$/;"	e	enum:n2s_unit
N2S_PERSEC	lib/num2str.h	/^	N2S_PERSEC	= 1,$/;"	e	enum:n2s_unit
NAME	fio.1	/^.SH NAME$/;"	s	title:fio
NAME	tools/fio_generate_plots.1	/^.SH NAME$/;"	s	title:FIO_GENERATE_PLOTS
NAME	tools/hist/fiologparser_hist.py.1	/^.SH NAME$/;"	s	title:fiologparser_hist.py
NAME	tools/plot/fio2gnuplot.1	/^.SH NAME$/;"	s	title:fio2gnuplot
NBD_MAX_REQUEST_SIZE	engines/nbd.c	/^#define NBD_MAX_REQUEST_SIZE /;"	d	file:
NETDB_H	os/windows/posix/include/netdb.h	/^#define NETDB_H$/;"	d
NETINET_IN_H	os/windows/posix/include/netinet/in.h	/^#define NETINET_IN_H$/;"	d
NETINET_TCP_H	os/windows/posix/include/netinet/tcp.h	/^#define NETINET_TCP_H$/;"	d
NFS_READ_WRITE	engines/nfs.c	/^	NFS_READ_WRITE = 0,$/;"	e	enum:nfs_op_type	file:
NFS_STAT_MKDIR_RMDIR	engines/nfs.c	/^	NFS_STAT_MKDIR_RMDIR,$/;"	e	enum:nfs_op_type	file:
NFS_STAT_TOUCH_RM	engines/nfs.c	/^	NFS_STAT_TOUCH_RM,$/;"	e	enum:nfs_op_type	file:
NOTES	tools/hist/fiologparser_hist.py.1	/^.SH NOTES$/;"	s	title:fiologparser_hist.py
NOT_YET	engines/glusterfs_async.c	/^#define NOT_YET /;"	d	file:
NR_CHUNKS	crc/test.c	/^#define NR_CHUNKS	/;"	d	file:
NR_ITERS	lib/memcpy.c	/^#define NR_ITERS	/;"	d	file:
NR_OPTS_SZ	thread_options.h	/^#define NR_OPTS_SZ	/;"	d
NR_TIME_ITERS	gettime.c	/^#define NR_TIME_ITERS	/;"	d	file:
NSEC_ONE_SEC	t/time-test.c	/^#define NSEC_ONE_SEC /;"	d	file:
NUMBER	exp/expression-parser.y	/^%token <v> NUMBER$/;"	t	typeref:typename:v
NUMBER	y.tab.c	/^    NUMBER = 258,$/;"	e	enum:yytokentype	file:
NUMBER	y.tab.c	/^#define NUMBER /;"	d	file:
NUMBER	y.tab.h	/^    NUMBER = 258,$/;"	e	enum:yytokentype
NUMBER	y.tab.h	/^#define NUMBER /;"	d
N_HASHES	lib/bloom.c	/^#define N_HASHES	/;"	d	file:
NullData	engines/null.c	/^	NullData(struct thread_data *td)$/;"	f	struct:NullData	file:
NullData	engines/null.c	/^struct NullData {$/;"	s	file:
OBJS	Makefile	/^OBJS := $(SOURCE:.c=.o)$/;"	m
OFFS64_IOCTLS_NOT_SUPPORTED	oslib/libmtd_int.h	/^#define OFFS64_IOCTLS_NOT_SUPPORTED /;"	d
OFFS64_IOCTLS_SUPPORTED	oslib/libmtd_int.h	/^#define OFFS64_IOCTLS_SUPPORTED /;"	d
OFFS64_IOCTLS_UNKNOWN	oslib/libmtd_int.h	/^#define OFFS64_IOCTLS_UNKNOWN /;"	d
OPTFLAGS	Makefile	/^OPTFLAGS= -g -ffast-math$/;"	m
OPTIONS	fio.1	/^.SH OPTIONS$/;"	s	title:fio
OPTIONS	tools/fio_generate_plots.1	/^.SH OPTIONS$/;"	s	title:FIO_GENERATE_PLOTS
OPTIONS	tools/hist/fiologparser_hist.py.1	/^.SH OPTIONS$/;"	s	title:fiologparser_hist.py
OPTIONS	tools/plot/fio2gnuplot.1	/^.SH OPTIONS$/;"	s	title:fio2gnuplot
OPT_LEN_MAX	parse.h	/^#define OPT_LEN_MAX /;"	d
OPT_MAGIC	thread_options.h	/^#define OPT_MAGIC	/;"	d
OS_MAP_ANON	os/os-aix.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-android.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-dragonfly.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-freebsd.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-hpux.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-linux.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-mac.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-netbsd.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-openbsd.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-solaris.h	/^#define OS_MAP_ANON	/;"	d
OS_MAP_ANON	os/os-windows.h	/^#define OS_MAP_ANON	/;"	d
OS_MSG_DONTWAIT	os/os-aix.h	/^#define OS_MSG_DONTWAIT	/;"	d
OS_MSG_DONTWAIT	os/os-hpux.h	/^#define OS_MSG_DONTWAIT	/;"	d
OS_MSG_DONTWAIT	os/os-windows.h	/^#define OS_MSG_DONTWAIT	/;"	d
OS_MSG_DONTWAIT	os/os.h	/^#define OS_MSG_DONTWAIT	/;"	d
OS_O_ATOMIC	os/os-linux.h	/^#define OS_O_ATOMIC	/;"	d
OS_O_DIRECT	os/os.h	/^#define OS_O_DIRECT	/;"	d
OS_RAND_MAX	os/os-solaris.h	/^#define OS_RAND_MAX	/;"	d
OS_RAND_MAX	os/os.h	/^#define OS_RAND_MAX	/;"	d
OUTPUT	fio.1	/^.SH OUTPUT$/;"	s	title:fio
OUTPUT_CSV	t/genzipf.c	/^	OUTPUT_CSV,$/;"	e	enum:__anon632da9cc0203	file:
OUTPUT_NORMAL	t/genzipf.c	/^	OUTPUT_NORMAL,$/;"	e	enum:__anon632da9cc0203	file:
O_CLOEXEC	oslib/libmtd_common.h	/^#define O_CLOEXEC /;"	d
O_DIRECT	os/os-windows.h	/^#define O_DIRECT	/;"	d
O_NONBLOCK	os/os-windows.h	/^#define O_NONBLOCK	/;"	d
O_SYNC	os/os-windows.h	/^#define O_SYNC	/;"	d
Overview and history	README.rst	/^Overview and history$/;"	c
PAPER	doc/Makefile	/^PAPER         =$/;"	m
PAPER	doc/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPEROPT_a4	doc/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	doc/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PARAMETER TYPES	fio.1	/^.SH "PARAMETER TYPES"$/;"	s	title:fio
PARSER_VALUE_TYPE	y.tab.c	/^} PARSER_VALUE_TYPE;$/;"	t	typeref:union:valtype	file:
PARSE_MAX_VP	parse.h	/^#define PARSE_MAX_VP	/;"	d
PID_HASH_BITS	t/btrace2fio.c	/^#define PID_HASH_BITS	/;"	d	file:
PID_HASH_SIZE	t/btrace2fio.c	/^#define PID_HASH_SIZE	/;"	d	file:
PLAT_BITS	t/io_uring.c	/^#define PLAT_BITS	/;"	d	file:
PLAT_BITS	t/read-to-pipe-async.c	/^#define PLAT_BITS	/;"	d	file:
PLAT_GROUP_NR	t/io_uring.c	/^#define PLAT_GROUP_NR	/;"	d	file:
PLAT_GROUP_NR	t/read-to-pipe-async.c	/^#define PLAT_GROUP_NR	/;"	d	file:
PLAT_LIST_MAX	t/read-to-pipe-async.c	/^#define PLAT_LIST_MAX	/;"	d	file:
PLAT_NR	t/io_uring.c	/^#define PLAT_NR	/;"	d	file:
PLAT_NR	t/read-to-pipe-async.c	/^#define PLAT_NR	/;"	d	file:
PLAT_VAL	t/io_uring.c	/^#define PLAT_VAL	/;"	d	file:
PLAT_VAL	t/read-to-pipe-async.c	/^#define PLAT_VAL	/;"	d	file:
PMB_CREATE	engines/pmemblk.c	/^#define PMB_CREATE /;"	d	file:
POLL_H	os/windows/posix/include/poll.h	/^#define POLL_H$/;"	d
POSIX_FADV_DONTNEED	os/os.h	/^#define POSIX_FADV_DONTNEED	/;"	d
POSIX_FADV_NORMAL	os/os.h	/^#define POSIX_FADV_NORMAL	/;"	d
POSIX_FADV_RANDOM	os/os.h	/^#define POSIX_FADV_RANDOM	/;"	d
POSIX_FADV_SEQUENTIAL	os/os.h	/^#define POSIX_FADV_SEQUENTIAL	/;"	d
POSIX_MADV_DONTNEED	os/os-android.h	/^#define POSIX_MADV_DONTNEED /;"	d
POSIX_MADV_DONTNEED	os/os-hpux.h	/^#define POSIX_MADV_DONTNEED	/;"	d
POSIX_MADV_DONTNEED	os/os-solaris.h	/^#define POSIX_MADV_DONTNEED	/;"	d
POSIX_MADV_DONTNEED	os/os-windows.h	/^#define POSIX_MADV_DONTNEED	/;"	d
POSIX_MADV_RANDOM	os/os-android.h	/^#define POSIX_MADV_RANDOM	/;"	d
POSIX_MADV_RANDOM	os/os-hpux.h	/^#define POSIX_MADV_RANDOM	/;"	d
POSIX_MADV_RANDOM	os/os-solaris.h	/^#define POSIX_MADV_RANDOM	/;"	d
POSIX_MADV_RANDOM	os/os-windows.h	/^#define POSIX_MADV_RANDOM	/;"	d
POSIX_MADV_SEQUENTIAL	os/os-android.h	/^#define POSIX_MADV_SEQUENTIAL	/;"	d
POSIX_MADV_SEQUENTIAL	os/os-hpux.h	/^#define POSIX_MADV_SEQUENTIAL	/;"	d
POSIX_MADV_SEQUENTIAL	os/os-solaris.h	/^#define POSIX_MADV_SEQUENTIAL	/;"	d
POSIX_MADV_SEQUENTIAL	os/os-windows.h	/^#define POSIX_MADV_SEQUENTIAL	/;"	d
PPC_CNTLZL	arch/arch-ppc.h	/^#define PPC_CNTLZL /;"	d
PRIME32_1	crc/xxhash.c	/^#define PRIME32_1 /;"	d	file:
PRIME32_2	crc/xxhash.c	/^#define PRIME32_2 /;"	d	file:
PRIME32_3	crc/xxhash.c	/^#define PRIME32_3 /;"	d	file:
PRIME32_4	crc/xxhash.c	/^#define PRIME32_4 /;"	d	file:
PRIME32_5	crc/xxhash.c	/^#define PRIME32_5 /;"	d	file:
PRINTING_H	printing.h	/^#define PRINTING_H$/;"	d
PRIdoff_t	oslib/libmtd_common.h	/^#define PRIdoff_t /;"	d
PRIxoff_t	oslib/libmtd_common.h	/^#define PRIxoff_t /;"	d
PROC_MTD_FIRST	oslib/libmtd_legacy.c	/^#define PROC_MTD_FIRST /;"	d	file:
PROC_MTD_FIRST_LEN	oslib/libmtd_legacy.c	/^#define PROC_MTD_FIRST_LEN /;"	d	file:
PROC_MTD_MAX_LEN	oslib/libmtd_legacy.c	/^#define PROC_MTD_MAX_LEN /;"	d	file:
PROC_MTD_PATT	oslib/libmtd_legacy.c	/^#define PROC_MTD_PATT /;"	d	file:
PROGRAM_NAME	oslib/libmtd_int.h	/^#define PROGRAM_NAME /;"	d
PROGS	Makefile	/^PROGS	= fio$/;"	m
PROTOBUF_C_GPSPM_5fflush_2eproto__INCLUDED	engines/librpma_gpspm_flush.pb-c.h	/^#define PROTOBUF_C_GPSPM_5fflush_2eproto__INCLUDED$/;"	d
PROTOBUF_C__NO_DEPRECATED	engines/librpma_gpspm_flush.pb-c.c	/^#define PROTOBUF_C__NO_DEPRECATED$/;"	d	file:
PROT_NONE	os/windows/posix/include/sys/mman.h	/^#define PROT_NONE	/;"	d
PROT_READ	os/windows/posix/include/sys/mman.h	/^#define PROT_READ	/;"	d
PROT_WRITE	os/windows/posix/include/sys/mman.h	/^#define PROT_WRITE	/;"	d
PTHREAD_STACK_MIN	os/os-dragonfly.h	/^#define PTHREAD_STACK_MIN /;"	d
PTHREAD_STACK_MIN	os/os-netbsd.h	/^#define PTHREAD_STACK_MIN /;"	d
PTHREAD_STACK_MIN	os/os-openbsd.h	/^#define PTHREAD_STACK_MIN /;"	d
PTHREAD_STACK_MIN	os/os-windows.h	/^#define PTHREAD_STACK_MIN /;"	d
PTR_ALIGN	fio.h	/^#define PTR_ALIGN(/;"	d
PTR_ALIGN	lib/memalign.c	/^#define PTR_ALIGN(/;"	d	file:
PTR_ERR	err.h	/^static inline uintptr_t PTR_ERR(const void *ptr)$/;"	f	typeref:typename:uintptr_t
PTR_ERR_OR_ZERO	err.h	/^static inline int PTR_ERR_OR_ZERO(const void *ptr)$/;"	f	typeref:typename:int
Parameter types	HOWTO.rst	/^Parameter types$/;"	s	chapter:Job file parameters
Platforms	README.rst	/^Platforms$/;"	c
Poisson request flow	doc/fio_examples.rst	/^Poisson request flow$/;"	c
QUIET_CC	Makefile	/^	QUIET_CC	= @echo '   ' CC $@;$/;"	m
QUIET_DEP	Makefile	/^	QUIET_DEP	= @echo '  ' DEP $@;$/;"	m
QUIET_LEX	Makefile	/^	QUIET_LEX	= @echo '  ' LEX $@;$/;"	m
QUIET_LINK	Makefile	/^	QUIET_LINK	= @echo ' ' LINK $@;$/;"	m
QUIET_YACC	Makefile	/^	QUIET_YACC	= @echo ' ' YACC $@;$/;"	m
RATE_PROCESS_LINEAR	fio.h	/^	RATE_PROCESS_LINEAR = 0,$/;"	e	enum:__anon0f7035d90503
RATE_PROCESS_POISSON	fio.h	/^	RATE_PROCESS_POISSON = 1,$/;"	e	enum:__anon0f7035d90503
RB_BLACK	lib/rbtree.h	/^#define	RB_BLACK	/;"	d
RB_CLEAR_NODE	lib/rbtree.h	/^#define RB_CLEAR_NODE(/;"	d
RB_EMPTY_NODE	lib/rbtree.h	/^#define RB_EMPTY_NODE(/;"	d
RB_EMPTY_ROOT	lib/rbtree.h	/^#define RB_EMPTY_ROOT(/;"	d
RB_RED	lib/rbtree.h	/^#define	RB_RED	/;"	d
RB_ROOT	lib/rbtree.h	/^#define RB_ROOT	/;"	d
RDRAND_LONG	arch/arch-x86_64.h	/^#define RDRAND_LONG	/;"	d
RDRAND_RETRY	arch/arch-x86_64.h	/^#define RDRAND_RETRY	/;"	d
RDSEED_LONG	arch/arch-x86_64.h	/^#define RDSEED_LONG	/;"	d
REAL_MAX_JOBS	fio.h	/^#define REAL_MAX_JOBS	/;"	d
REAL_MAX_SEG	fio.h	/^#define REAL_MAX_SEG	/;"	d
RECV_OFFSET	engines/librpma_gpspm.c	/^#define RECV_OFFSET /;"	d	file:
REJECT	lex.yy.c	/^#define REJECT /;"	d	file:
REPORTING BUGS	fio.1	/^.SH "REPORTING BUGS"$/;"	s	title:fio
REPORTING BUGS	tools/hist/fiologparser_hist.py.1	/^.SH "REPORTING BUGS"$/;"	s	title:fiologparser_hist.py
REX_PRE	crc/crc32c-intel.c	/^#define REX_PRE /;"	d	file:
REX_PRE	crc/crc32c-intel.c	/^#define REX_PRE$/;"	d	file:
RIGHT_JUSTIFIED	cairo_text_helpers.c	/^#define RIGHT_JUSTIFIED /;"	d	file:
RORuint64_t	crc/sha512.c	/^static inline uint64_t RORuint64_t(uint64_t x, uint64_t y)$/;"	f	typeref:typename:uint64_t	file:
ROTL64	crc/sha3.c	/^#define ROTL64(/;"	d	file:
RTLD_LAZY	os/windows/posix/include/dlfcn.h	/^#define RTLD_LAZY /;"	d
RUNNING_ON_VALGRIND	fio_sem.c	/^#define RUNNING_ON_VALGRIND /;"	d	file:
RUSAGE_SELF	os/windows/posix/include/sys/resource.h	/^#define RUSAGE_SELF	/;"	d
RUSAGE_THREAD	os/windows/posix/include/sys/resource.h	/^#define RUSAGE_THREAD	/;"	d
RWF_DSYNC	os/os-linux.h	/^#define RWF_DSYNC	/;"	d
RWF_HIPRI	os/os-linux.h	/^#define RWF_HIPRI	/;"	d
RWF_NOWAIT	os/os-linux.h	/^#define RWF_NOWAIT	/;"	d
RWF_SYNC	os/os-linux.h	/^#define RWF_SYNC	/;"	d
RWF_UNCACHED	os/os-android.h	/^#define RWF_UNCACHED	/;"	d
RWF_UNCACHED	os/os-linux.h	/^#define RWF_UNCACHED	/;"	d
RWF_WRITE_LIFE_EXTREME	os/os-linux.h	/^#define RWF_WRITE_LIFE_EXTREME	/;"	d
RWF_WRITE_LIFE_LONG	os/os-linux.h	/^#define RWF_WRITE_LIFE_LONG	/;"	d
RWF_WRITE_LIFE_MEDIUM	os/os-linux.h	/^#define RWF_WRITE_LIFE_MEDIUM	/;"	d
RWF_WRITE_LIFE_SHIFT	os/os-linux.h	/^#define RWF_WRITE_LIFE_SHIFT	/;"	d
RWF_WRITE_LIFE_SHORT	os/os-linux.h	/^#define RWF_WRITE_LIFE_SHORT	/;"	d
RWH_WRITE_LIFE_EXTREME	os/os-linux.h	/^#define RWH_WRITE_LIFE_EXTREME	/;"	d
RWH_WRITE_LIFE_LONG	os/os-linux.h	/^#define RWH_WRITE_LIFE_LONG	/;"	d
RWH_WRITE_LIFE_MEDIUM	os/os-linux.h	/^#define RWH_WRITE_LIFE_MEDIUM	/;"	d
RWH_WRITE_LIFE_NONE	os/os-linux.h	/^#define RWH_WRITE_LIFE_NONE	/;"	d
RWH_WRITE_LIFE_NOT_SET	os/os-linux.h	/^#define RWH_WRITE_LIFE_NOT_SET	/;"	d
RWH_WRITE_LIFE_SHORT	os/os-linux.h	/^#define RWH_WRITE_LIFE_SHORT	/;"	d
RW_SEQ_IDENT	fio.h	/^	RW_SEQ_IDENT,$/;"	e	enum:__anon0f7035d90103
RW_SEQ_SEQ	fio.h	/^	RW_SEQ_SEQ	= 0,$/;"	e	enum:__anon0f7035d90103
R_LOAD	profiles/act.c	/^#define R_LOAD	/;"	d	file:
Read 4 files with aio at different depths	doc/fio_examples.rst	/^Read 4 files with aio at different depths$/;"	c
Read backwards in a file	doc/fio_examples.rst	/^Read backwards in a file$/;"	c
Reporting bugs	.github/SUPPORT.md	/^## Reporting bugs$/;"	s	chapter:Getting support for fio
Requirements	t/run-fio-tests.py	/^class Requirements(object):$/;"	c
Reserved keywords	HOWTO.rst	/^Reserved keywords$/;"	s	chapter:Job file format
Running fio	README.rst	/^Running fio$/;"	c
Running predefined workloads	HOWTO.rst	/^Running predefined workloads$/;"	c
Running predefined workloads	fio.1	/^.SS "Running predefined workloads"$/;"	S	section:fio""JOB PARAMETERS
S	iolog.h	/^	fio_fp64_t S;$/;"	m	struct:io_stat	typeref:typename:fio_fp64_t
SAMPLE_SEC	profiles/act.c	/^#define SAMPLE_SEC	/;"	d	file:
SA_RESTART	os/os-windows.h	/^#define SA_RESTART	/;"	d
SCALE_F	crc/crc32c-intel.c	/^#define SCALE_F /;"	d	file:
SCRIPTS	Makefile	/^SCRIPTS = $(addprefix $(SRCDIR)\/,tools\/fio_generate_plots tools\/plot\/fio2gnuplot tools\/genf/;"	m
SCSI_TIMEOUT_MS	engines/sg.c	/^#define SCSI_TIMEOUT_MS /;"	d	file:
SEE ALSO	fio.1	/^.SH "SEE ALSO"$/;"	s	title:fio
SEMAPHORE_H	os/windows/posix/include/semaphore.h	/^#define SEMAPHORE_H$/;"	d
SEND_OFFSET	engines/librpma_gpspm.c	/^#define SEND_OFFSET /;"	d	file:
SET_SWD	zbd.c	/^	SET_SWD,$/;"	e	enum:swd_action	file:
SGV4_FLAG_HIPRI	engines/sg.c	/^#define SGV4_FLAG_HIPRI /;"	d	file:
SHA256_BLOCK_SIZE	crc/sha256.h	/^#define SHA256_BLOCK_SIZE	/;"	d
SHA256_DIGEST_SIZE	crc/sha256.c	/^#define SHA256_DIGEST_SIZE	/;"	d	file:
SHA256_DIGEST_SIZE	crc/sha256.h	/^#define SHA256_DIGEST_SIZE	/;"	d
SHA256_HMAC_BLOCK_SIZE	crc/sha256.c	/^#define SHA256_HMAC_BLOCK_SIZE	/;"	d	file:
SHA384_DIGEST_SIZE	crc/sha512.c	/^#define SHA384_DIGEST_SIZE /;"	d	file:
SHA384_HMAC_BLOCK_SIZE	crc/sha512.c	/^#define SHA384_HMAC_BLOCK_SIZE /;"	d	file:
SHA3_224_BLOCK_SIZE	crc/sha3.h	/^#define SHA3_224_BLOCK_SIZE	/;"	d
SHA3_224_DIGEST_SIZE	crc/sha3.h	/^#define SHA3_224_DIGEST_SIZE	/;"	d
SHA3_256_BLOCK_SIZE	crc/sha3.h	/^#define SHA3_256_BLOCK_SIZE	/;"	d
SHA3_256_DIGEST_SIZE	crc/sha3.h	/^#define SHA3_256_DIGEST_SIZE	/;"	d
SHA3_384_BLOCK_SIZE	crc/sha3.h	/^#define SHA3_384_BLOCK_SIZE	/;"	d
SHA3_384_DIGEST_SIZE	crc/sha3.h	/^#define SHA3_384_DIGEST_SIZE	/;"	d
SHA3_512_BLOCK_SIZE	crc/sha3.h	/^#define SHA3_512_BLOCK_SIZE	/;"	d
SHA3_512_DIGEST_SIZE	crc/sha3.h	/^#define SHA3_512_DIGEST_SIZE	/;"	d
SHA512_DIGEST_SIZE	crc/sha512.c	/^#define SHA512_DIGEST_SIZE /;"	d	file:
SHA512_HMAC_BLOCK_SIZE	crc/sha512.c	/^#define SHA512_HMAC_BLOCK_SIZE /;"	d	file:
SHA_ASM	crc/sha1.c	/^#define SHA_ASM(/;"	d	file:
SHA_MIX	crc/sha1.c	/^#define SHA_MIX(/;"	d	file:
SHA_ROL	crc/sha1.c	/^#define SHA_ROL(/;"	d	file:
SHA_ROR	crc/sha1.c	/^#define SHA_ROR(/;"	d	file:
SHA_ROT	crc/sha1.c	/^#define SHA_ROT(/;"	d	file:
SHA_ROUND	crc/sha1.c	/^#define SHA_ROUND(/;"	d	file:
SHA_SRC	crc/sha1.c	/^#define SHA_SRC(/;"	d	file:
SHM_HUGETLB	os/os-android.h	/^#define SHM_HUGETLB /;"	d
SHM_HUGETLB	os/os.h	/^#define SHM_HUGETLB	/;"	d
SHOULD_WAIT	engines/nfs.c	/^	#define SHOULD_WAIT(/;"	d	file:
SIGCONT	os/os-windows.h	/^#define SIGCONT	/;"	d
SIGKILL	os/os-windows.h	/^#define SIGKILL /;"	d
SIGPIPE	os/os-windows.h	/^#define SIGPIPE	/;"	d
SIGUSR1	os/os-windows.h	/^#define SIGUSR1	/;"	d
SIGUSR2	os/os-windows.h	/^#define SIGUSR2 /;"	d
SIZE_MAX	lex.yy.c	/^#define SIZE_MAX /;"	d	file:
SK_F_COPY	server.c	/^	SK_F_COPY	= 2,$/;"	e	enum:__anon0e7c93ed0103	file:
SK_F_FREE	server.c	/^	SK_F_FREE	= 1,$/;"	e	enum:__anon0e7c93ed0103	file:
SK_F_INLINE	server.c	/^	SK_F_INLINE	= 16,$/;"	e	enum:__anon0e7c93ed0103	file:
SK_F_SIMPLE	server.c	/^	SK_F_SIMPLE	= 4,$/;"	e	enum:__anon0e7c93ed0103	file:
SK_F_VEC	server.c	/^	SK_F_VEC	= 8,$/;"	e	enum:__anon0e7c93ed0103	file:
SLAT_LOG_MASK	iolog.c	/^	SLAT_LOG_MASK	= 4,$/;"	e	enum:__anona13017500103	file:
SMALLOC_BPB	smalloc.c	/^#define SMALLOC_BPB	/;"	d	file:
SMALLOC_BPI	smalloc.c	/^#define SMALLOC_BPI	/;"	d	file:
SMALLOC_BPL	smalloc.c	/^#define SMALLOC_BPL	/;"	d	file:
SMALLOC_POST_RED	smalloc.c	/^#define SMALLOC_POST_RED	/;"	d	file:
SMALLOC_PRE_RED	smalloc.c	/^#define SMALLOC_PRE_RED	/;"	d	file:
SMALLOC_REDZONE	smalloc.c	/^#define SMALLOC_REDZONE	/;"	d	file:
SOURCE	Makefile	/^SOURCE :=	$(sort $(patsubst $(SRCDIR)\/%,%,$(wildcard $(SRCDIR)\/crc\/*.c)) \\$/;"	m
SPHINXBUILD	doc/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	doc/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXBUILD	doc/make.bat	/^set SPHINXBUILD=python -m sphinx.__init__$/;"	v
SPHINXOPTS	doc/Makefile	/^SPHINXOPTS    = -W --keep-going$/;"	m
SPLICE_DEF_SIZE	os/os-android.h	/^#define SPLICE_DEF_SIZE	/;"	d
SPLICE_DEF_SIZE	os/os-linux.h	/^#define SPLICE_DEF_SIZE	/;"	d
SPLICE_F_FD_IN_FIXED	os/linux/io_uring.h	/^#define SPLICE_F_FD_IN_FIXED	/;"	d
SPRN_ATBL	arch/arch-ppc.h	/^#define SPRN_ATBL /;"	d
SPRN_ATBU	arch/arch-ppc.h	/^#define SPRN_ATBU /;"	d
SPRN_TBRL	arch/arch-ppc.h	/^#define SPRN_TBRL /;"	d
SPRN_TBRU	arch/arch-ppc.h	/^#define SPRN_TBRU /;"	d
SRCDIR	Makefile	/^SRCDIR := .$/;"	m
STATX_ALL	oslib/statx.h	/^#define STATX_ALL /;"	d
STEADYSTATE_MSEC	steadystate.h	/^#define STEADYSTATE_MSEC	/;"	d
STORE_COMPRESSED	server.h	/^	STORE_COMPRESSED	= 2U,$/;"	e	enum:__anon0e7c93f20203
SUCCESS_DEFAULT	t/run-fio-tests.py	/^SUCCESS_DEFAULT = {$/;"	v
SUCCESS_NONZERO	t/run-fio-tests.py	/^SUCCESS_NONZERO = {$/;"	v
SUCCESS_STDERR	t/run-fio-tests.py	/^SUCCESS_STDERR = {$/;"	v
SUFFIX	exp/expression-parser.y	/^%token <v> SUFFIX $/;"	t	typeref:typename:v
SUFFIX	y.tab.c	/^    SUFFIX = 260,$/;"	e	enum:yytokentype	file:
SUFFIX	y.tab.c	/^#define SUFFIX /;"	d	file:
SUFFIX	y.tab.h	/^    SUFFIX = 260,$/;"	e	enum:yytokentype
SUFFIX	y.tab.h	/^#define SUFFIX /;"	d
SUSPEND_ENTRIES	engines/posixaio.c	/^#define SUSPEND_ENTRIES	/;"	d	file:
SW_F_ACCOUNTED	workqueue.c	/^	SW_F_ACCOUNTED	= 1 << 3,$/;"	e	enum:__anon5bcb2cde0103	file:
SW_F_ERROR	workqueue.c	/^	SW_F_ERROR	= 1 << 4,$/;"	e	enum:__anon5bcb2cde0103	file:
SW_F_EXIT	workqueue.c	/^	SW_F_EXIT	= 1 << 2,$/;"	e	enum:__anon5bcb2cde0103	file:
SW_F_IDLE	workqueue.c	/^	SW_F_IDLE	= 1 << 0,$/;"	e	enum:__anon5bcb2cde0103	file:
SW_F_RUNNING	workqueue.c	/^	SW_F_RUNNING	= 1 << 1,$/;"	e	enum:__anon5bcb2cde0103	file:
SYNOPSIS	fio.1	/^.SH SYNOPSIS$/;"	s	title:fio
SYNOPSIS	tools/fio_generate_plots.1	/^.SH SYNOPSIS$/;"	s	title:FIO_GENERATE_PLOTS
SYNOPSIS	tools/hist/fiologparser_hist.py.1	/^.SH SYNOPSIS$/;"	s	title:fiologparser_hist.py
SYNOPSIS	tools/plot/fio2gnuplot.1	/^.SH SYNOPSIS$/;"	s	title:fio2gnuplot
SYSFS_MTD	oslib/libmtd_int.h	/^#define SYSFS_MTD /;"	d
SYSLOG_H	os/windows/posix/include/syslog.h	/^#define SYSLOG_H$/;"	d
SYS_IPC_H	os/windows/posix/include/sys/ipc.h	/^#define SYS_IPC_H$/;"	d
SYS_MMAN_H	os/windows/posix/include/sys/mman.h	/^#define SYS_MMAN_H$/;"	d
SYS_RESOURCE_H	os/windows/posix/include/sys/resource.h	/^#define SYS_RESOURCE_H$/;"	d
SYS_SHM_H	os/windows/posix/include/sys/shm.h	/^#define SYS_SHM_H$/;"	d
SYS_SOCKET_H	os/windows/posix/include/sys/socket.h	/^#define SYS_SOCKET_H$/;"	d
SYS_UIO_H	os/windows/posix/include/sys/uio.h	/^#define SYS_UIO_H$/;"	d
SYS_UN_H	os/windows/posix/include/sys/un.h	/^#define SYS_UN_H$/;"	d
SYS_WAIT_H	os/windows/posix/include/sys/wait.h	/^#define SYS_WAIT_H$/;"	d
S_ISSOCK	os/os-windows.h	/^#define S_ISSOCK(/;"	d
Sample	tools/fiologparser.py	/^class Sample(object):$/;"	c
Server TODO	doc/fio_doc.rst	/^Server TODO$/;"	s	chapter:TODO
Service	tools/fio.service	/^[Service]$/;"	s
Size	t/fuzz/onefile.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size);$/;"	z	prototype:LLVMFuzzerTestOneInput	typeref:typename:size_t	file:
Source	README.rst	/^Source$/;"	c
Sphinx	README.rst	/^.. _Sphinx: http:\/\/www.sphinx-doc.org$/;"	T	section:Documentation
Steady State TODO	doc/fio_doc.rst	/^Steady State TODO$/;"	s	chapter:TODO
Steady state	HOWTO.rst	/^Steady state$/;"	s	chapter:Job file parameters
Steady state	fio.1	/^.SS "Steady state"$/;"	S	section:fio""JOB PARAMETERS
TAUSWORTHE	lib/rand.h	/^#define TAUSWORTHE(/;"	d
TD_CREATED	fio.h	/^	TD_CREATED,$/;"	e	enum:__anon0f7035d92e03
TD_DDIR_RAND	io_ddir.h	/^	TD_DDIR_RAND		= 1 << 2,$/;"	e	enum:td_ddir
TD_DDIR_RANDREAD	io_ddir.h	/^	TD_DDIR_RANDREAD	= TD_DDIR_READ | TD_DDIR_RAND,$/;"	e	enum:td_ddir
TD_DDIR_RANDRW	io_ddir.h	/^	TD_DDIR_RANDRW		= TD_DDIR_RW | TD_DDIR_RAND,$/;"	e	enum:td_ddir
TD_DDIR_RANDTRIM	io_ddir.h	/^	TD_DDIR_RANDTRIM	= TD_DDIR_TRIM | TD_DDIR_RAND,$/;"	e	enum:td_ddir
TD_DDIR_RANDWRITE	io_ddir.h	/^	TD_DDIR_RANDWRITE	= TD_DDIR_WRITE | TD_DDIR_RAND,$/;"	e	enum:td_ddir
TD_DDIR_READ	io_ddir.h	/^	TD_DDIR_READ		= 1 << 0,$/;"	e	enum:td_ddir
TD_DDIR_RW	io_ddir.h	/^	TD_DDIR_RW		= TD_DDIR_READ | TD_DDIR_WRITE,$/;"	e	enum:td_ddir
TD_DDIR_TRIM	io_ddir.h	/^	TD_DDIR_TRIM		= 1 << 3,$/;"	e	enum:td_ddir
TD_DDIR_TRIMWRITE	io_ddir.h	/^	TD_DDIR_TRIMWRITE	= TD_DDIR_TRIM | TD_DDIR_WRITE,$/;"	e	enum:td_ddir
TD_DDIR_WRITE	io_ddir.h	/^	TD_DDIR_WRITE		= 1 << 1,$/;"	e	enum:td_ddir
TD_ENG_FLAG_MASK	fio.h	/^#define TD_ENG_FLAG_MASK	/;"	d
TD_ENG_FLAG_SHIFT	fio.h	/^#define TD_ENG_FLAG_SHIFT	/;"	d
TD_EXITED	fio.h	/^	TD_EXITED,$/;"	e	enum:__anon0f7035d92e03
TD_FINISHING	fio.h	/^	TD_FINISHING,$/;"	e	enum:__anon0f7035d92e03
TD_FSYNCING	fio.h	/^	TD_FSYNCING,$/;"	e	enum:__anon0f7035d92e03
TD_F_CHECK_RATE	fio.h	/^	TD_F_CHECK_RATE		= 1U << __TD_F_CHECK_RATE,$/;"	e	enum:__anon0f7035d90303
TD_F_CHILD	fio.h	/^	TD_F_CHILD		= 1U << __TD_F_CHILD,$/;"	e	enum:__anon0f7035d90303
TD_F_COMPRESS	fio.h	/^	TD_F_COMPRESS		= 1U << __TD_F_COMPRESS,$/;"	e	enum:__anon0f7035d90303
TD_F_COMPRESS_LOG	fio.h	/^	TD_F_COMPRESS_LOG	= 1U << __TD_F_COMPRESS_LOG,$/;"	e	enum:__anon0f7035d90303
TD_F_DIRS_CREATED	fio.h	/^	TD_F_DIRS_CREATED	= 1U << __TD_F_DIRS_CREATED,$/;"	e	enum:__anon0f7035d90303
TD_F_DO_VERIFY	fio.h	/^	TD_F_DO_VERIFY		= 1U << __TD_F_DO_VERIFY,$/;"	e	enum:__anon0f7035d90303
TD_F_MMAP_KEEP	fio.h	/^	TD_F_MMAP_KEEP		= 1U << __TD_F_MMAP_KEEP,$/;"	e	enum:__anon0f7035d90303
TD_F_NEED_LOCK	fio.h	/^	TD_F_NEED_LOCK		= 1U << __TD_F_NEED_LOCK,$/;"	e	enum:__anon0f7035d90303
TD_F_NO_PROGRESS	fio.h	/^	TD_F_NO_PROGRESS        = 1U << __TD_F_NO_PROGRESS,$/;"	e	enum:__anon0f7035d90303
TD_F_PROFILE_OPS	fio.h	/^	TD_F_PROFILE_OPS	= 1U << __TD_F_PROFILE_OPS,$/;"	e	enum:__anon0f7035d90303
TD_F_READ_IOLOG	fio.h	/^	TD_F_READ_IOLOG		= 1U << __TD_F_READ_IOLOG,$/;"	e	enum:__anon0f7035d90303
TD_F_REFILL_BUFFERS	fio.h	/^	TD_F_REFILL_BUFFERS	= 1U << __TD_F_REFILL_BUFFERS,$/;"	e	enum:__anon0f7035d90303
TD_F_REGROW_LOGS	fio.h	/^	TD_F_REGROW_LOGS	= 1U << __TD_F_REGROW_LOGS,$/;"	e	enum:__anon0f7035d90303
TD_F_SCRAMBLE_BUFFERS	fio.h	/^	TD_F_SCRAMBLE_BUFFERS	= 1U << __TD_F_SCRAMBLE_BUFFERS,$/;"	e	enum:__anon0f7035d90303
TD_F_SYNCS	fio.h	/^	TD_F_SYNCS		= 1U << __TD_F_SYNCS,$/;"	e	enum:__anon0f7035d90303
TD_F_TRIM_BACKLOG	fio.h	/^	TD_F_TRIM_BACKLOG	= 1U << __TD_F_TRIM_BACKLOG,$/;"	e	enum:__anon0f7035d90303
TD_F_VER_BACKLOG	fio.h	/^	TD_F_VER_BACKLOG	= 1U << __TD_F_VER_BACKLOG,$/;"	e	enum:__anon0f7035d90303
TD_F_VSTATE_SAVED	fio.h	/^	TD_F_VSTATE_SAVED	= 1U << __TD_F_VSTATE_SAVED,$/;"	e	enum:__anon0f7035d90303
TD_INITIALIZED	fio.h	/^	TD_INITIALIZED,$/;"	e	enum:__anon0f7035d92e03
TD_LAST	fio.h	/^	TD_LAST,$/;"	e	enum:__anon0f7035d92e03
TD_NOT_CREATED	fio.h	/^	TD_NOT_CREATED = 0,$/;"	e	enum:__anon0f7035d92e03
TD_NR	fio.h	/^	TD_NR,$/;"	e	enum:__anon0f7035d92e03
TD_PRE_READING	fio.h	/^	TD_PRE_READING,$/;"	e	enum:__anon0f7035d92e03
TD_RAMP	fio.h	/^	TD_RAMP,$/;"	e	enum:__anon0f7035d92e03
TD_REAPED	fio.h	/^	TD_REAPED,$/;"	e	enum:__anon0f7035d92e03
TD_RUNNING	fio.h	/^	TD_RUNNING,$/;"	e	enum:__anon0f7035d92e03
TD_SETTING_UP	fio.h	/^	TD_SETTING_UP,$/;"	e	enum:__anon0f7035d92e03
TD_VERIFYING	fio.h	/^	TD_VERIFYING,$/;"	e	enum:__anon0f7035d92e03
TERMINATE_ALL	fio.h	/^	TERMINATE_ALL = -1,$/;"	e	enum:__anon0f7035d93503
TERMINATE_GROUP	fio.h	/^	TERMINATE_GROUP = 1,$/;"	e	enum:__anon0f7035d93503
TERMINATE_NONE	fio.h	/^	TERMINATE_NONE = 0,$/;"	e	enum:__anon0f7035d93503
TERMINATE_STONEWALL	fio.h	/^	TERMINATE_STONEWALL = 2,$/;"	e	enum:__anon0f7035d93503
TERSE OUTPUT	fio.1	/^.SH TERSE OUTPUT$/;"	s	title:fio
TESTLEN	t/time-test.c	/^#define TESTLEN /;"	d	file:
TEST_LIST	t/run-fio-tests.py	/^TEST_LIST = [$/;"	v
THINKTIME_BLOCKS_TYPE_COMPLETE	fio.h	/^	THINKTIME_BLOCKS_TYPE_COMPLETE = 0,$/;"	e	enum:__anon0f7035d90503
THINKTIME_BLOCKS_TYPE_ISSUE	fio.h	/^	THINKTIME_BLOCKS_TYPE_ISSUE = 1,$/;"	e	enum:__anon0f7035d90503
THREAD_RUNSTR_SZ	stat.h	/^#define THREAD_RUNSTR_SZ	/;"	d
TICKMARKS_H	tickmarks.h	/^#define TICKMARKS_H$/;"	d
TODO	doc/fio_doc.rst	/^TODO$/;"	c
TOOLTIP_DELTA	graph.c	/^#define TOOLTIP_DELTA	/;"	d	file:
TRACE FILE FORMAT	fio.1	/^.SH TRACE FILE FORMAT$/;"	s	title:fio
TRACE_FIFO_SIZE	t/btrace2fio.c	/^#define TRACE_FIFO_SIZE	/;"	d	file:
TSC_RATE_FILE	t/io_uring.c	/^#define TSC_RATE_FILE	/;"	d	file:
TYPE_NONE	t/genzipf.c	/^	TYPE_NONE = 0,$/;"	e	enum:__anon632da9cc0103	file:
TYPE_NORMAL	t/genzipf.c	/^	TYPE_NORMAL,$/;"	e	enum:__anon632da9cc0103	file:
TYPE_PARETO	t/genzipf.c	/^	TYPE_PARETO,$/;"	e	enum:__anon632da9cc0103	file:
TYPE_ZIPF	t/genzipf.c	/^	TYPE_ZIPF,$/;"	e	enum:__anon632da9cc0103	file:
T_0_15	crc/sha1.c	/^#define T_0_15(/;"	d	file:
T_16_19	crc/sha1.c	/^#define T_16_19(/;"	d	file:
T_20_39	crc/sha1.c	/^#define T_20_39(/;"	d	file:
T_40_59	crc/sha1.c	/^#define T_40_59(/;"	d	file:
T_60_79	crc/sha1.c	/^#define T_60_79(/;"	d	file:
T_AXMAP_OBJS	Makefile	/^T_AXMAP_OBJS = t\/axmap.o$/;"	m
T_AXMAP_PROGS	Makefile	/^T_AXMAP_PROGS = t\/axmap$/;"	m
T_BTRACE_FIO_OBJS	Makefile	/^T_BTRACE_FIO_OBJS = t\/btrace2fio.o$/;"	m
T_BTRACE_FIO_PROGS	Makefile	/^T_BTRACE_FIO_PROGS = t\/fio-btrace2fio$/;"	m
T_CRC16	crc/test.c	/^	T_CRC16		= 1U << 4,$/;"	e	enum:__anon3a8fe31d0103	file:
T_CRC32	crc/test.c	/^	T_CRC32		= 1U << 2,$/;"	e	enum:__anon3a8fe31d0103	file:
T_CRC32C	crc/test.c	/^	T_CRC32C	= 1U << 3,$/;"	e	enum:__anon3a8fe31d0103	file:
T_CRC64	crc/test.c	/^	T_CRC64		= 1U << 1,$/;"	e	enum:__anon3a8fe31d0103	file:
T_CRC7	crc/test.c	/^	T_CRC7		= 1U << 5,$/;"	e	enum:__anon3a8fe31d0103	file:
T_DEDUPE_OBJS	Makefile	/^T_DEDUPE_OBJS = t\/dedupe.o$/;"	m
T_DEDUPE_PROGS	Makefile	/^T_DEDUPE_PROGS = t\/fio-dedupe$/;"	m
T_FNV	crc/test.c	/^	T_FNV		= 1U << 12,$/;"	e	enum:__anon3a8fe31d0103	file:
T_FUZZ_OBJS	Makefile	/^T_FUZZ_OBJS = t\/fuzz\/fuzz_parseini.o$/;"	m
T_FUZZ_OBJS	Makefile	/^T_FUZZ_OBJS =$/;"	m
T_FUZZ_PROGS	Makefile	/^T_FUZZ_PROGS = t\/fuzz\/fuzz_parseini$/;"	m
T_FUZZ_PROGS	Makefile	/^T_FUZZ_PROGS =$/;"	m
T_GEN_RAND_OBJS	Makefile	/^T_GEN_RAND_OBJS = t\/gen-rand.o$/;"	m
T_GEN_RAND_PROGS	Makefile	/^T_GEN_RAND_PROGS = t\/gen-rand$/;"	m
T_HYBRID	lib/memcpy.c	/^	T_HYBRID	= 1U << 3,$/;"	e	enum:__anon9d7ba4c70103	file:
T_IEEE_OBJS	Makefile	/^T_IEEE_OBJS = t\/ieee754.o$/;"	m
T_IEEE_PROGS	Makefile	/^T_IEEE_PROGS = t\/ieee754$/;"	m
T_IOU_RING_OBJS	Makefile	/^T_IOU_RING_OBJS = t\/io_uring.o lib\/rand.o lib\/pattern.o lib\/strntol.o$/;"	m
T_IOU_RING_PROGS	Makefile	/^T_IOU_RING_PROGS = t\/io_uring$/;"	m
T_JHASH	crc/test.c	/^	T_JHASH		= 1U << 11,$/;"	e	enum:__anon3a8fe31d0103	file:
T_LFSR_TEST_OBJS	Makefile	/^T_LFSR_TEST_OBJS = t\/lfsr-test.o$/;"	m
T_LFSR_TEST_PROGS	Makefile	/^T_LFSR_TEST_PROGS = t\/lfsr-test$/;"	m
T_MD5	crc/test.c	/^	T_MD5		= 1U << 0,$/;"	e	enum:__anon3a8fe31d0103	file:
T_MEMCPY	lib/memcpy.c	/^	T_MEMCPY	= 1U << 0,$/;"	e	enum:__anon9d7ba4c70103	file:
T_MEMLOCK_OBJS	Makefile	/^T_MEMLOCK_OBJS = t\/memlock.o$/;"	m
T_MEMLOCK_PROGS	Makefile	/^T_MEMLOCK_PROGS = t\/memlock$/;"	m
T_MEMMOVE	lib/memcpy.c	/^	T_MEMMOVE	= 1U << 1,$/;"	e	enum:__anon9d7ba4c70103	file:
T_MURMUR3	crc/test.c	/^	T_MURMUR3	= 1U << 10,$/;"	e	enum:__anon3a8fe31d0103	file:
T_OBJS	Makefile	/^T_OBJS = $(T_SMALLOC_OBJS)$/;"	m
T_PIPE_ASYNC_OBJS	Makefile	/^T_PIPE_ASYNC_OBJS = t\/read-to-pipe-async.o$/;"	m
T_PIPE_ASYNC_PROGS	Makefile	/^T_PIPE_ASYNC_PROGS = t\/read-to-pipe-async$/;"	m
T_SHA1	crc/test.c	/^	T_SHA1		= 1U << 6,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA256	crc/test.c	/^	T_SHA256	= 1U << 7,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA3_224	crc/test.c	/^	T_SHA3_224	= 1U << 13,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA3_256	crc/test.c	/^	T_SHA3_256	= 1U << 14,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA3_384	crc/test.c	/^	T_SHA3_384	= 1U << 15,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA3_512	crc/test.c	/^	T_SHA3_512	= 1U << 16,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SHA512	crc/test.c	/^	T_SHA512	= 1U << 8,$/;"	e	enum:__anon3a8fe31d0103	file:
T_SIMPLE	lib/memcpy.c	/^	T_SIMPLE	= 1U << 2,$/;"	e	enum:__anon9d7ba4c70103	file:
T_SMALLOC_OBJS	Makefile	/^T_SMALLOC_OBJS = t\/stest.o$/;"	m
T_SMALLOC_PROGS	Makefile	/^T_SMALLOC_PROGS = t\/stest$/;"	m
T_TEST_PROGS	Makefile	/^T_TEST_PROGS = $(T_SMALLOC_PROGS)$/;"	m
T_TT_OBJS	Makefile	/^T_TT_OBJS = t\/time-test.o$/;"	m
T_TT_PROGS	Makefile	/^T_TT_PROGS = t\/time-test$/;"	m
T_VS_OBJS	Makefile	/^T_VS_OBJS = t\/verify-state.o t\/log.o crc\/crc32c.o crc\/crc32c-intel.o crc\/crc32c-arm64.o t\//;"	m
T_VS_PROGS	Makefile	/^T_VS_PROGS = t\/fio-verify-state$/;"	m
T_XXHASH	crc/test.c	/^	T_XXHASH	= 1U << 9,$/;"	e	enum:__anon3a8fe31d0103	file:
T_ZIPF_OBS	Makefile	/^T_ZIPF_OBS = t\/genzipf.o$/;"	m
T_ZIPF_PROGS	Makefile	/^T_ZIPF_PROGS = t\/fio-genzipf$/;"	m
Target file/device	HOWTO.rst	/^Target file\/device$/;"	s	chapter:Job file parameters
Target file/device	fio.1	/^.SS "Target file\/device"$/;"	S	section:fio""JOB PARAMETERS
Terse output	HOWTO.rst	/^Terse output$/;"	c
Test	tools/hist/fio-histo-log-pctiles.py	/^  class Test(unittest2.TestCase):$/;"	c
Test001	t/latency_percentiles.py	/^class Test001(FioLatTest):$/;"	c
Test002	t/latency_percentiles.py	/^class Test002(FioLatTest):$/;"	c
Test003	t/latency_percentiles.py	/^class Test003(FioLatTest):$/;"	c
Test004	t/latency_percentiles.py	/^class Test004(FioLatTest):$/;"	c
Test005	t/latency_percentiles.py	/^class Test005(FioLatTest):$/;"	c
Test006	t/latency_percentiles.py	/^class Test006(FioLatTest):$/;"	c
Test007	t/latency_percentiles.py	/^class Test007(FioLatTest):$/;"	c
Test008	t/latency_percentiles.py	/^class Test008(FioLatTest):$/;"	c
Test009	t/latency_percentiles.py	/^class Test009(FioLatTest):$/;"	c
Test010	t/latency_percentiles.py	/^class Test010(FioLatTest):$/;"	c
Test011	t/latency_percentiles.py	/^class Test011(FioLatTest):$/;"	c
Test015	t/latency_percentiles.py	/^class Test015(FioLatTest):$/;"	c
Test016	t/latency_percentiles.py	/^class Test016(FioLatTest):$/;"	c
Test017	t/latency_percentiles.py	/^class Test017(FioLatTest):$/;"	c
Test018	t/latency_percentiles.py	/^class Test018(FioLatTest):$/;"	c
Test019	t/latency_percentiles.py	/^class Test019(FioLatTest):$/;"	c
Test021	t/latency_percentiles.py	/^class Test021(FioLatTest):$/;"	c
Threads, processes and job synchronization	HOWTO.rst	/^Threads, processes and job synchronization$/;"	s	chapter:Job file parameters
Threads, processes and job synchronization	fio.1	/^.SS "Threads, processes and job synchronization"$/;"	S	section:fio""JOB PARAMETERS
Time related parameters	HOWTO.rst	/^Time related parameters$/;"	s	chapter:Job file parameters
Time related parameters	fio.1	/^.SS "Time related parameters"$/;"	S	section:fio""JOB PARAMETERS
TimeSeries	tools/fiologparser.py	/^class TimeSeries(object):$/;"	c
Time_tToSystemTime	os/windows/posix.c	/^void Time_tToSystemTime(time_t dosTime, SYSTEMTIME *systemTime)$/;"	f	typeref:typename:void
Tiobench profile options	HOWTO.rst	/^Tiobench profile options$/;"	s	chapter:Running predefined workloads
Tiobench profile options	fio.1	/^.SS "Tiobench profile options"$/;"	S	section:fio""JOB PARAMETERS
Trace file format	HOWTO.rst	/^Trace file format$/;"	c
Trace file format v1	HOWTO.rst	/^Trace file format v1$/;"	s	chapter:Trace file format
Trace file format v2	HOWTO.rst	/^Trace file format v2$/;"	s	chapter:Trace file format
Trace file format v3	HOWTO.rst	/^Trace file format v3$/;"	s	chapter:Trace file format
Type	tools/fio.service	/^Type=simple$/;"	k	section:Service
UINT16_MAX	lex.yy.c	/^#define UINT16_MAX /;"	d	file:
UINT32_MAX	lex.yy.c	/^#define UINT32_MAX /;"	d	file:
UINT8_MAX	lex.yy.c	/^#define UINT8_MAX /;"	d	file:
UMINUS	y.tab.c	/^    UMINUS = 261$/;"	e	enum:yytokentype	file:
UMINUS	y.tab.c	/^#define UMINUS /;"	d	file:
UMINUS	y.tab.h	/^    UMINUS = 261$/;"	e	enum:yytokentype
UMINUS	y.tab.h	/^#define UMINUS /;"	d
UNIFIED_BOTH	stat.h	/^#define UNIFIED_BOTH	/;"	d
UNIFIED_MIXED	stat.h	/^#define UNIFIED_MIXED	/;"	d
UNIFIED_SPLIT	stat.h	/^#define UNIFIED_SPLIT	/;"	d
UNIT_SHIFT	lib/axmap.c	/^#define UNIT_SHIFT	/;"	d	file:
UNSORTABLE	ghelpers.h	/^#define UNSORTABLE /;"	d
USCHED_GET_CPUMASK	os/os-dragonfly.h	/^#define USCHED_GET_CPUMASK	/;"	d
UT_OBJS	Makefile	/^UT_OBJS = unittests\/unittest.o$/;"	m
UT_OBJS	Makefile	/^UT_OBJS =$/;"	m
UT_PROGS	Makefile	/^UT_PROGS = unittests\/unittest$/;"	m
UT_PROGS	Makefile	/^UT_PROGS =$/;"	m
UT_TARGET_OBJS	Makefile	/^UT_TARGET_OBJS = lib\/memalign.o$/;"	m
UT_TARGET_OBJS	Makefile	/^UT_TARGET_OBJS =$/;"	m
Unit	tools/fio.service	/^[Unit]$/;"	s
Units	HOWTO.rst	/^Units$/;"	s	chapter:Job file parameters
Units	fio.1	/^.SS "Units"$/;"	S	section:fio""JOB PARAMETERS
VERIFICATION AND TRIGGERS	fio.1	/^.SH VERIFICATION AND TRIGGERS$/;"	s	title:fio
VERIFY_CRC16	verify.h	/^	VERIFY_CRC16,			\/* crc16 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_CRC32	verify.h	/^	VERIFY_CRC32,			\/* crc32 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_CRC32C	verify.h	/^	VERIFY_CRC32C,			\/* crc32c sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_CRC32C_INTEL	verify.h	/^	VERIFY_CRC32C_INTEL,		\/* crc32c sum data blocks with hw *\/$/;"	e	enum:__anond2577e300103
VERIFY_CRC64	verify.h	/^	VERIFY_CRC64,			\/* crc64 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_CRC7	verify.h	/^	VERIFY_CRC7,			\/* crc7 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_HDR_ONLY	verify.h	/^	VERIFY_HDR_ONLY,		\/* verify header only, kept for sake of$/;"	e	enum:__anond2577e300103
VERIFY_MD5	verify.h	/^	VERIFY_MD5,			\/* md5 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_NONE	verify.h	/^	VERIFY_NONE = 0,		\/* no verification *\/$/;"	e	enum:__anond2577e300103
VERIFY_NULL	verify.h	/^	VERIFY_NULL,			\/* pretend to verify *\/$/;"	e	enum:__anond2577e300103
VERIFY_PATTERN	verify.h	/^	VERIFY_PATTERN,			\/* verify specific patterns *\/$/;"	e	enum:__anond2577e300103
VERIFY_PATTERN_NO_HDR	verify.h	/^	VERIFY_PATTERN_NO_HDR,		\/* verify specific patterns, no hdr *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA1	verify.h	/^	VERIFY_SHA1,			\/* sha1 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA256	verify.h	/^	VERIFY_SHA256,			\/* sha256 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA3_224	verify.h	/^	VERIFY_SHA3_224,		\/* sha3-224 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA3_256	verify.h	/^	VERIFY_SHA3_256,		\/* sha3-256 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA3_384	verify.h	/^	VERIFY_SHA3_384,		\/* sha3-384 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA3_512	verify.h	/^	VERIFY_SHA3_512,		\/* sha3-512 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_SHA512	verify.h	/^	VERIFY_SHA512,			\/* sha512 sum data blocks *\/$/;"	e	enum:__anond2577e300103
VERIFY_XXHASH	verify.h	/^	VERIFY_XXHASH,			\/* xxhash sum data blocks *\/$/;"	e	enum:__anond2577e300103
VPATH	Makefile	/^VPATH := $(SRCDIR)$/;"	m
VSTATE_HDR_VERSION	verify-state.h	/^#define VSTATE_HDR_VERSION	/;"	d
Verification	HOWTO.rst	/^Verification$/;"	s	chapter:Job file parameters
Verification	fio.1	/^.SS "Verification"$/;"	S	section:fio""JOB PARAMETERS
Verification and triggers	HOWTO.rst	/^Verification and triggers$/;"	c
Verification trigger example	HOWTO.rst	/^Verification trigger example$/;"	s	chapter:Verification and triggers
W	crc/sha1.c	/^#define W(/;"	d	file:
W	crc/sha1.h	/^	unsigned int W[16];$/;"	m	struct:fio_sha1_ctx	typeref:typename:unsigned int[16]
W	crc/sha256.c	/^static inline void BLEND_OP(int I, uint32_t *W)$/;"	z	function:BLEND_OP	typeref:typename:uint32_t *	file:
W	crc/sha256.c	/^static inline void LOAD_OP(int I, uint32_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:uint32_t *	file:
W	crc/sha512.c	/^static inline void BLEND_OP(int I, uint64_t *W)$/;"	z	function:BLEND_OP	typeref:typename:uint64_t *	file:
W	crc/sha512.c	/^static inline void LOAD_OP(int I, uint64_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:uint64_t *	file:
W	crc/sha512.c	/^static void sha512_transform(uint64_t *state, uint64_t *W, const uint8_t *input)$/;"	z	function:sha512_transform	typeref:typename:uint64_t *	file:
W	crc/sha512.h	/^	uint64_t W[80];$/;"	m	struct:fio_sha512_ctx	typeref:typename:uint64_t[80]
WEXITSTATUS	os/windows/posix/include/sys/wait.h	/^#define WEXITSTATUS(/;"	d
WIFEXITED	os/windows/posix/include/sys/wait.h	/^#define WIFEXITED(/;"	d
WIFSIGNALED	os/windows/posix/include/sys/wait.h	/^#define WIFSIGNALED(/;"	d
WINDOWS_OBJS	Makefile	/^  WINDOWS_OBJS = os\/windows\/cpu-affinity.o os\/windows\/posix.o os\/windows\/dlls.o lib\/hweig/;"	m
WNOHANG	os/windows/posix/include/sys/wait.h	/^#define WNOHANG	/;"	d
WTERMSIG	os/windows/posix/include/sys/wait.h	/^#define WTERMSIG(/;"	d
W_LOAD	profiles/act.c	/^#define W_LOAD	/;"	d	file:
WantedBy	tools/fio.service	/^WantedBy=multi-user.target$/;"	k	section:Install
Welcome to FIO's documentation!	doc/index.rst	/^Welcome to FIO's documentation!$/;"	c
Windows	README.rst	/^Windows$/;"	s	chapter:Building
XMIT_COMPRESSED	server.h	/^	XMIT_COMPRESSED		= 1U,$/;"	e	enum:__anon0e7c93f20203
XXH32	crc/xxhash.c	/^uint32_t XXH32(const void* input, uint32_t len, uint32_t seed)$/;"	f	typeref:typename:uint32_t
XXH32	crc/xxhash.h	/^uint32_t XXH32 (const void* input, uint32_t len, uint32_t seed);$/;"	p	typeref:typename:uint32_t
XXH32_SIZEOFSTATE	crc/xxhash.h	/^#define       XXH32_SIZEOFSTATE /;"	d
XXH32_digest	crc/xxhash.c	/^uint32_t XXH32_digest (void* state_in)$/;"	f	typeref:typename:uint32_t
XXH32_digest	crc/xxhash.h	/^uint32_t XXH32_digest (void* state);$/;"	p	typeref:typename:uint32_t
XXH32_endian_align	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	f	typeref:typename:uint32_t	file:
XXH32_feed	crc/xxhash.h	/^#define XXH32_feed /;"	d
XXH32_getIntermediateResult	crc/xxhash.h	/^#define XXH32_getIntermediateResult /;"	d
XXH32_init	crc/xxhash.c	/^void* XXH32_init (uint32_t seed)$/;"	f	typeref:typename:void *
XXH32_init	crc/xxhash.h	/^void*         XXH32_init   (uint32_t seed);$/;"	p	typeref:typename:void *
XXH32_intermediateDigest	crc/xxhash.c	/^uint32_t XXH32_intermediateDigest (void* state_in)$/;"	f	typeref:typename:uint32_t
XXH32_intermediateDigest	crc/xxhash.h	/^uint32_t XXH32_intermediateDigest (void* state);$/;"	p	typeref:typename:uint32_t
XXH32_intermediateDigest_endian	crc/xxhash.c	/^static uint32_t XXH32_intermediateDigest_endian (void* state_in, XXH_endianess endian)$/;"	f	typeref:typename:uint32_t	file:
XXH32_resetState	crc/xxhash.c	/^XXH_errorcode XXH32_resetState(void* state_in, uint32_t seed)$/;"	f	typeref:typename:XXH_errorcode
XXH32_resetState	crc/xxhash.h	/^XXH_errorcode XXH32_resetState(void* state, uint32_t seed);$/;"	p	typeref:typename:XXH_errorcode
XXH32_result	crc/xxhash.h	/^#define XXH32_result /;"	d
XXH32_sizeofState	crc/xxhash.c	/^int XXH32_sizeofState(void)$/;"	f	typeref:typename:int
XXH32_sizeofState	crc/xxhash.h	/^int           XXH32_sizeofState(void);$/;"	p	typeref:typename:int
XXH32_stateSpace_t	crc/xxhash.h	/^typedef struct { long long ll[(XXH32_SIZEOFSTATE+(sizeof(long long)-1))\/sizeof(long long)]; } X/;"	t	typeref:struct:__anon6ad455760208
XXH32_update	crc/xxhash.c	/^XXH_errorcode XXH32_update (void* state_in, const void* input, int len)$/;"	f	typeref:typename:XXH_errorcode
XXH32_update	crc/xxhash.h	/^XXH_errorcode XXH32_update (void* state, const void* input, int len);$/;"	p	typeref:typename:XXH_errorcode
XXH32_update_endian	crc/xxhash.c	/^static XXH_errorcode XXH32_update_endian (void* state_in, const void* input, int len, XXH_endian/;"	f	typeref:typename:XXH_errorcode	file:
XXH_CPU_LITTLE_ENDIAN	crc/xxhash.c	/^#   define XXH_CPU_LITTLE_ENDIAN /;"	d	file:
XXH_ERROR	crc/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	enum:__anon6ad455760103
XXH_FORCE_NATIVE_FORMAT	crc/xxhash.c	/^#define XXH_FORCE_NATIVE_FORMAT /;"	d	file:
XXH_OK	crc/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	enum:__anon6ad455760103
XXH_STATIC_ASSERT	crc/xxhash.c	/^#define XXH_STATIC_ASSERT(/;"	d	file:
XXH_USE_UNALIGNED_ACCESS	crc/xxhash.c	/^#  define XXH_USE_UNALIGNED_ACCESS /;"	d	file:
XXH_aligned	crc/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	enum:__anon6ad455710203	file:
XXH_alignment	crc/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	t	typeref:enum:__anon6ad455710203	file:
XXH_bigEndian	crc/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon6ad455710103	file:
XXH_endianess	crc/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	t	typeref:enum:__anon6ad455710103	file:
XXH_errorcode	crc/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	t	typeref:enum:__anon6ad455760103
XXH_littleEndian	crc/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon6ad455710103	file:
XXH_readLE32	crc/xxhash.c	/^static uint32_t XXH_readLE32(const uint32_t* ptr, XXH_endianess endian) { return XXH_readLE32_al/;"	f	typeref:typename:uint32_t	file:
XXH_readLE32_align	crc/xxhash.c	/^static uint32_t XXH_readLE32_align(const uint32_t* ptr, XXH_endianess endian, XXH_alignment alig/;"	f	typeref:typename:uint32_t	file:
XXH_rotl32	crc/xxhash.c	/^#  define XXH_rotl32(/;"	d	file:
XXH_state32_t	crc/xxhash.h	/^struct XXH_state32_t$/;"	s
XXH_swap32	crc/xxhash.c	/^#  define XXH_swap32 /;"	d	file:
XXH_swap32	crc/xxhash.c	/^static inline uint32_t XXH_swap32 (uint32_t x)$/;"	f	typeref:typename:uint32_t	file:
XXH_unaligned	crc/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	enum:__anon6ad455710203	file:
YACC	config-host.mak	/^YACC=bison -y$/;"	m
YYABORT	y.tab.c	/^#define YYABORT /;"	d	file:
YYACCEPT	y.tab.c	/^#define YYACCEPT /;"	d	file:
YYBACKUP	y.tab.c	/^#define YYBACKUP(/;"	d	file:
YYBISON	y.tab.c	/^#define YYBISON /;"	d	file:
YYBISON_VERSION	y.tab.c	/^#define YYBISON_VERSION /;"	d	file:
YYCASE_	y.tab.c	/^# define YYCASE_(/;"	d	file:
YYCOPY	y.tab.c	/^#   define YYCOPY(/;"	d	file:
YYCOPY_NEEDED	y.tab.c	/^# define YYCOPY_NEEDED /;"	d	file:
YYDEBUG	y.tab.c	/^# define YYDEBUG /;"	d	file:
YYDEBUG	y.tab.h	/^# define YYDEBUG /;"	d
YYDPRINTF	y.tab.c	/^# define YYDPRINTF(/;"	d	file:
YYEMPTY	y.tab.c	/^#define YYEMPTY /;"	d	file:
YYEOF	y.tab.c	/^#define YYEOF /;"	d	file:
YYERRCODE	y.tab.c	/^#define YYERRCODE /;"	d	file:
YYERROR	y.tab.c	/^#define YYERROR /;"	d	file:
YYERROR_VERBOSE	y.tab.c	/^# define YYERROR_VERBOSE /;"	d	file:
YYERROR_VERBOSE_ARGS_MAXIMUM	y.tab.c	/^  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };$/;"	e	enum:yysyntax_error::__anond9bd93f40303	file:
YYFINAL	y.tab.c	/^#define YYFINAL /;"	d	file:
YYFPRINTF	y.tab.c	/^#  define YYFPRINTF /;"	d	file:
YYFREE	y.tab.c	/^#   define YYFREE /;"	d	file:
YYINITDEPTH	y.tab.c	/^# define YYINITDEPTH /;"	d	file:
YYLAST	y.tab.c	/^#define YYLAST /;"	d	file:
YYMALLOC	y.tab.c	/^#   define YYMALLOC /;"	d	file:
YYMAXDEPTH	y.tab.c	/^# define YYMAXDEPTH /;"	d	file:
YYMAXUTOK	y.tab.c	/^#define YYMAXUTOK /;"	d	file:
YYNNTS	y.tab.c	/^#define YYNNTS /;"	d	file:
YYNRULES	y.tab.c	/^#define YYNRULES /;"	d	file:
YYNSTATES	y.tab.c	/^#define YYNSTATES /;"	d	file:
YYNTOKENS	y.tab.c	/^#define YYNTOKENS /;"	d	file:
YYPACT_NINF	y.tab.c	/^#define YYPACT_NINF /;"	d	file:
YYPOPSTACK	y.tab.c	/^#define YYPOPSTACK(/;"	d	file:
YYPTRDIFF_MAXIMUM	y.tab.c	/^#  define YYPTRDIFF_MAXIMUM /;"	d	file:
YYPTRDIFF_T	y.tab.c	/^#  define YYPTRDIFF_T /;"	d	file:
YYPULL	y.tab.c	/^#define YYPULL /;"	d	file:
YYPURE	y.tab.c	/^#define YYPURE /;"	d	file:
YYPUSH	y.tab.c	/^#define YYPUSH /;"	d	file:
YYRECOVERING	y.tab.c	/^#define YYRECOVERING(/;"	d	file:
YYSIZEOF	y.tab.c	/^#define YYSIZEOF(/;"	d	file:
YYSIZE_MAXIMUM	y.tab.c	/^#define YYSIZE_MAXIMUM /;"	d	file:
YYSIZE_T	y.tab.c	/^#  define YYSIZE_T /;"	d	file:
YYSKELETON_NAME	y.tab.c	/^#define YYSKELETON_NAME /;"	d	file:
YYSTACK_ALLOC	y.tab.c	/^#    define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC	y.tab.c	/^#  define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC_MAXIMUM	y.tab.c	/^#   define YYSTACK_ALLOC_MAXIMUM /;"	d	file:
YYSTACK_BYTES	y.tab.c	/^# define YYSTACK_BYTES(/;"	d	file:
YYSTACK_FREE	y.tab.c	/^#  define YYSTACK_FREE /;"	d	file:
YYSTACK_FREE	y.tab.c	/^#  define YYSTACK_FREE(/;"	d	file:
YYSTACK_GAP_MAXIMUM	y.tab.c	/^# define YYSTACK_GAP_MAXIMUM /;"	d	file:
YYSTACK_RELOCATE	y.tab.c	/^# define YYSTACK_RELOCATE(/;"	d	file:
YYSTATE	lex.yy.c	/^#define YYSTATE /;"	d	file:
YYSTYPE	lex.yy.c	/^#define YYSTYPE /;"	d	file:
YYSTYPE	y.tab.c	/^#define YYSTYPE /;"	d	file:
YYSTYPE	y.tab.c	/^typedef union valtype YYSTYPE;$/;"	t	typeref:union:valtype	file:
YYSTYPE	y.tab.h	/^typedef union valtype YYSTYPE;$/;"	t	typeref:union:valtype
YYSTYPE_IS_DECLARED	y.tab.c	/^# define YYSTYPE_IS_DECLARED /;"	d	file:
YYSTYPE_IS_DECLARED	y.tab.h	/^# define YYSTYPE_IS_DECLARED /;"	d
YYSTYPE_IS_TRIVIAL	y.tab.c	/^# define YYSTYPE_IS_TRIVIAL /;"	d	file:
YYSTYPE_IS_TRIVIAL	y.tab.h	/^# define YYSTYPE_IS_TRIVIAL /;"	d
YYSYNTAX_ERROR	y.tab.c	/^# define YYSYNTAX_ERROR /;"	d	file:
YYTABLES_NAME	lex.yy.c	/^#define YYTABLES_NAME /;"	d	file:
YYTABLE_NINF	y.tab.c	/^#define YYTABLE_NINF /;"	d	file:
YYTERROR	y.tab.c	/^#define YYTERROR /;"	d	file:
YYTOKENTYPE	y.tab.c	/^# define YYTOKENTYPE$/;"	d	file:
YYTOKENTYPE	y.tab.h	/^# define YYTOKENTYPE$/;"	d
YYTRANSLATE	y.tab.c	/^#define YYTRANSLATE(/;"	d	file:
YYUNDEFTOK	y.tab.c	/^#define YYUNDEFTOK /;"	d	file:
YYUSE	y.tab.c	/^# define YYUSE(/;"	d	file:
YY_	y.tab.c	/^#   define YY_(/;"	d	file:
YY_	y.tab.c	/^#  define YY_(/;"	d	file:
YY_ASSERT	y.tab.c	/^#define YY_ASSERT(/;"	d	file:
YY_ATTRIBUTE_PURE	y.tab.c	/^#  define YY_ATTRIBUTE_PURE /;"	d	file:
YY_ATTRIBUTE_PURE	y.tab.c	/^#  define YY_ATTRIBUTE_PURE$/;"	d	file:
YY_ATTRIBUTE_UNUSED	y.tab.c	/^#  define YY_ATTRIBUTE_UNUSED /;"	d	file:
YY_ATTRIBUTE_UNUSED	y.tab.c	/^#  define YY_ATTRIBUTE_UNUSED$/;"	d	file:
YY_AT_BOL	lex.yy.c	/^#define YY_AT_BOL(/;"	d	file:
YY_BREAK	lex.yy.c	/^#define YY_BREAK /;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	/^#define YY_BUFFER_EOF_PENDING /;"	d	file:
YY_BUFFER_NEW	lex.yy.c	/^#define YY_BUFFER_NEW /;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	/^#define YY_BUFFER_NORMAL /;"	d	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state *	file:
YY_BUF_SIZE	lex.yy.c	/^#define YY_BUF_SIZE /;"	d	file:
YY_CAST	y.tab.c	/^#   define YY_CAST(/;"	d	file:
YY_CHAR	lex.yy.c	/^typedef flex_uint8_t YY_CHAR;$/;"	t	typeref:typename:flex_uint8_t	file:
YY_CURRENT_BUFFER	lex.yy.c	/^#define YY_CURRENT_BUFFER /;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	/^#define YY_CURRENT_BUFFER_LVALUE /;"	d	file:
YY_DECL	lex.yy.c	/^#define YY_DECL /;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	/^#define YY_DECL_IS_OURS /;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	/^#define YY_DO_BEFORE_ACTION /;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	/^#define YY_END_OF_BUFFER /;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	/^#define YY_END_OF_BUFFER_CHAR /;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	/^#define YY_EXIT_FAILURE /;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	/^#define YY_EXTRA_TYPE /;"	d	file:
YY_FATAL_ERROR	lex.yy.c	/^#define YY_FATAL_ERROR(/;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	/^#define YY_FLEX_MAJOR_VERSION /;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	/^#define YY_FLEX_MINOR_VERSION /;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	/^#define YY_FLEX_SUBMINOR_VERSION /;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	/^#define YY_FLUSH_BUFFER /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	y.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	y.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN$/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	y.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	y.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END$/;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	y.tab.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN /;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	y.tab.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN$/;"	d	file:
YY_IGNORE_USELESS_CAST_END	y.tab.c	/^# define YY_IGNORE_USELESS_CAST_END /;"	d	file:
YY_IGNORE_USELESS_CAST_END	y.tab.c	/^# define YY_IGNORE_USELESS_CAST_END$/;"	d	file:
YY_INITIAL_VALUE	y.tab.c	/^# define YY_INITIAL_VALUE(/;"	d	file:
YY_INPUT	lex.yy.c	/^#define YY_INPUT(/;"	d	file:
YY_INT_ALIGNED	lex.yy.c	/^#define  YY_INT_ALIGNED /;"	d	file:
YY_LESS_LINENO	lex.yy.c	/^    #define YY_LESS_LINENO(/;"	d	file:
YY_LINENO_REWIND_TO	lex.yy.c	/^    #define YY_LINENO_REWIND_TO(/;"	d	file:
YY_LOCATION_PRINT	y.tab.c	/^# define YY_LOCATION_PRINT(/;"	d	file:
YY_MORE_ADJ	lex.yy.c	/^#define YY_MORE_ADJ /;"	d	file:
YY_NEW_FILE	lex.yy.c	/^#define YY_NEW_FILE /;"	d	file:
YY_NULL	lex.yy.c	/^#define YY_NULL /;"	d	file:
YY_NULLPTR	y.tab.c	/^#    define YY_NULLPTR /;"	d	file:
YY_NULLPTR	y.tab.c	/^#   define YY_NULLPTR /;"	d	file:
YY_NUM_RULES	lex.yy.c	/^#define YY_NUM_RULES /;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	/^#define YY_READ_BUF_SIZE /;"	d	file:
YY_REDUCE_PRINT	y.tab.c	/^# define YY_REDUCE_PRINT(/;"	d	file:
YY_REINTERPRET_CAST	y.tab.c	/^#   define YY_REINTERPRET_CAST(/;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	/^#define YY_RESTORE_YY_MORE_OFFSET$/;"	d	file:
YY_RULE_SETUP	lex.yy.c	/^#define YY_RULE_SETUP /;"	d	file:
YY_SC_TO_UI	lex.yy.c	/^#define YY_SC_TO_UI(/;"	d	file:
YY_STACK_PRINT	y.tab.c	/^# define YY_STACK_PRINT(/;"	d	file:
YY_START	lex.yy.c	/^#define YY_START /;"	d	file:
YY_START_STACK_INCR	lex.yy.c	/^#define YY_START_STACK_INCR /;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	/^#define YY_STATE_BUF_SIZE /;"	d	file:
YY_STATE_EOF	lex.yy.c	/^#define YY_STATE_EOF(/;"	d	file:
YY_STDINT_H	y.tab.c	/^#  define YY_STDINT_H$/;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	/^#define YY_STRUCT_YY_BUFFER_STATE$/;"	d	file:
YY_SYMBOL_PRINT	y.tab.c	/^# define YY_SYMBOL_PRINT(/;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	/^#define YY_TYPEDEF_YY_BUFFER_STATE$/;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	/^#define YY_TYPEDEF_YY_SIZE_T$/;"	d	file:
YY_USER_ACTION	lex.yy.c	/^#define YY_USER_ACTION$/;"	d	file:
YY_YY_Y_TAB_H_INCLUDED	y.tab.c	/^# define YY_YY_Y_TAB_H_INCLUDED$/;"	d	file:
YY_YY_Y_TAB_H_INCLUDED	y.tab.h	/^# define YY_YY_Y_TAB_H_INCLUDED$/;"	d
ZBD_HOST_AWARE	zbd_types.h	/^	ZBD_HOST_AWARE		= 0x2,	\/* Host-aware zoned block device *\/$/;"	e	enum:zbd_zoned_model
ZBD_HOST_MANAGED	zbd_types.h	/^	ZBD_HOST_MANAGED	= 0x3,	\/* Host-managed zoned block device *\/$/;"	e	enum:zbd_zoned_model
ZBD_MAX_OPEN_ZONES	zbd_types.h	/^#define ZBD_MAX_OPEN_ZONES	/;"	d
ZBD_NONE	zbd_types.h	/^	ZBD_NONE		= 0x1,	\/* No zone support. Emulate zones. *\/$/;"	e	enum:zbd_zoned_model
ZBD_REPORT_MAX_ZONES	zbd.c	/^#define ZBD_REPORT_MAX_ZONES	/;"	d	file:
ZBD_ZONE_COND_CLOSED	zbd_types.h	/^        ZBD_ZONE_COND_CLOSED    = 0x4,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_EMPTY	zbd_types.h	/^        ZBD_ZONE_COND_EMPTY     = 0x1,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_EXP_OPEN	zbd_types.h	/^        ZBD_ZONE_COND_EXP_OPEN  = 0x3,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_FULL	zbd_types.h	/^        ZBD_ZONE_COND_FULL      = 0xE,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_IMP_OPEN	zbd_types.h	/^        ZBD_ZONE_COND_IMP_OPEN  = 0x2,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_NOT_WP	zbd_types.h	/^        ZBD_ZONE_COND_NOT_WP    = 0x0,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_OFFLINE	zbd_types.h	/^        ZBD_ZONE_COND_OFFLINE   = 0xF,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_COND_READONLY	zbd_types.h	/^        ZBD_ZONE_COND_READONLY  = 0xD,$/;"	e	enum:zbd_zone_cond
ZBD_ZONE_TYPE_CNV	zbd_types.h	/^	ZBD_ZONE_TYPE_CNV	= 0x1,	\/* Conventional *\/$/;"	e	enum:zbd_zone_type
ZBD_ZONE_TYPE_SWP	zbd_types.h	/^	ZBD_ZONE_TYPE_SWP	= 0x3,	\/* Sequential write preferred *\/$/;"	e	enum:zbd_zone_type
ZBD_ZONE_TYPE_SWR	zbd_types.h	/^	ZBD_ZONE_TYPE_SWR	= 0x2,	\/* Sequential write required *\/$/;"	e	enum:zbd_zone_type
ZIPF_MAX_GEN	lib/zipf.c	/^#define ZIPF_MAX_GEN	/;"	d	file:
ZONESPLIT_MAX	thread_options.h	/^#define ZONESPLIT_MAX	/;"	d
ZONE_BASE_VAL	parse.h	/^#define ZONE_BASE_VAL /;"	d
ZONE_MODE_NONE	thread_options.h	/^	ZONE_MODE_NONE		= 1,$/;"	e	enum:fio_zone_mode
ZONE_MODE_NOT_SPECIFIED	thread_options.h	/^	ZONE_MODE_NOT_SPECIFIED	= 0,$/;"	e	enum:fio_zone_mode
ZONE_MODE_STRIDED	thread_options.h	/^	ZONE_MODE_STRIDED	= 2, \/* perform I\/O in one zone at a time *\/$/;"	e	enum:fio_zone_mode
ZONE_MODE_ZBD	thread_options.h	/^	ZONE_MODE_ZBD		= 3,$/;"	e	enum:fio_zone_mode
_ASM_GENERIC_BITOPS_FLS_H_	lib/fls.h	/^#define _ASM_GENERIC_BITOPS_FLS_H_$/;"	d
_GETOPT_H	oslib/getopt.h	/^#define _GETOPT_H$/;"	d
_GPSPMFlushRequest	engines/librpma_gpspm_flush.pb-c.h	/^struct  _GPSPMFlushRequest$/;"	s
_GPSPMFlushResponse	engines/librpma_gpspm_flush.pb-c.h	/^struct  _GPSPMFlushResponse$/;"	s
_KCOMPAT_H_	os/kcompat.h	/^#define _KCOMPAT_H_$/;"	d
_LINUX_FLIST_H	flist.h	/^#define _LINUX_FLIST_H$/;"	d
_LINUX_HASH_H	hash.h	/^#define _LINUX_HASH_H$/;"	d
_LINUX_PRIO_TREE_H	lib/prio_tree.h	/^#define _LINUX_PRIO_TREE_H$/;"	d
_LINUX_RBTREE_H	lib/rbtree.h	/^#define	_LINUX_RBTREE_H$/;"	d
_NOWARN_SNPRINTF_H_	lib/nowarn_snprintf.h	/^#define _NOWARN_SNPRINTF_H_$/;"	d
_PACKED	crc/xxhash.c	/^#  define _PACKED /;"	d	file:
_PACKED	crc/xxhash.c	/^#  define _PACKED$/;"	d	file:
_SC_NPROCESSORS_ONLN	os/os-windows.h	/^#define _SC_NPROCESSORS_ONLN	/;"	d
_SC_PAGESIZE	os/os-windows.h	/^#define _SC_PAGESIZE	/;"	d
_SC_PHYS_PAGES	os/os-windows.h	/^#define _SC_PHYS_PAGES	/;"	d
__ALIGN_MASK	oslib/libmtd_common.h	/^#define __ALIGN_MASK(/;"	d
__BLK_TA_ABORT	blktrace_api.h	/^	__BLK_TA_ABORT,			\/* request aborted *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_BACKMERGE	blktrace_api.h	/^	__BLK_TA_BACKMERGE,		\/* back merged to existing rq *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_BOUNCE	blktrace_api.h	/^	__BLK_TA_BOUNCE,		\/* bio was bounced *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_COMPLETE	blktrace_api.h	/^	__BLK_TA_COMPLETE,		\/* completed by driver *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_DRV_DATA	blktrace_api.h	/^	__BLK_TA_DRV_DATA,		\/* driver-specific binary data *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_FRONTMERGE	blktrace_api.h	/^	__BLK_TA_FRONTMERGE,		\/* front merge to existing rq *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_GETRQ	blktrace_api.h	/^	__BLK_TA_GETRQ,			\/* allocated new request *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_INSERT	blktrace_api.h	/^	__BLK_TA_INSERT,		\/* insert request *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_ISSUE	blktrace_api.h	/^	__BLK_TA_ISSUE,			\/* sent to driver *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_PLUG	blktrace_api.h	/^	__BLK_TA_PLUG,			\/* queue was plugged *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_QUEUE	blktrace_api.h	/^	__BLK_TA_QUEUE = 1,		\/* queued *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_REMAP	blktrace_api.h	/^	__BLK_TA_REMAP,			\/* bio was remapped *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_REQUEUE	blktrace_api.h	/^	__BLK_TA_REQUEUE,		\/* request requeued *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_SLEEPRQ	blktrace_api.h	/^	__BLK_TA_SLEEPRQ,		\/* sleeping on rq allocation *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_SPLIT	blktrace_api.h	/^	__BLK_TA_SPLIT,			\/* bio was split *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_UNPLUG_IO	blktrace_api.h	/^	__BLK_TA_UNPLUG_IO,		\/* queue was unplugged by io *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TA_UNPLUG_TIMER	blktrace_api.h	/^	__BLK_TA_UNPLUG_TIMER,		\/* queue was unplugged by timer *\/$/;"	e	enum:__anonab8d7e1c0203
__BLK_TN_MESSAGE	blktrace_api.h	/^	__BLK_TN_MESSAGE,		\/* Character string message *\/$/;"	e	enum:blktrace_notify
__BLK_TN_PROCESS	blktrace_api.h	/^	__BLK_TN_PROCESS = 0,		\/* establish pid\/name mapping *\/$/;"	e	enum:blktrace_notify
__BLK_TN_TIMESTAMP	blktrace_api.h	/^	__BLK_TN_TIMESTAMP,		\/* include system clock *\/$/;"	e	enum:blktrace_notify
__CLOCK128_BIT	t/time-test.c	/^	__CLOCK128_BIT		= 1 << 1,$/;"	e	enum:__anone3fe4fb50103	file:
__CLOCK64_BIT	t/time-test.c	/^	__CLOCK64_BIT		= 1 << 0,$/;"	e	enum:__anone3fe4fb50103	file:
__CLOCK_2STAGE	t/time-test.c	/^	__CLOCK_2STAGE		= 1 << 4,$/;"	e	enum:__anone3fe4fb50103	file:
__CLOCK_EMULATE_128	t/time-test.c	/^	__CLOCK_EMULATE_128	= 1 << 3,$/;"	e	enum:__anone3fe4fb50103	file:
__CLOCK_LOCK	t/time-test.c	/^	__CLOCK_LOCK		= 1 << 5,$/;"	e	enum:__anone3fe4fb50103	file:
__CLOCK_MULT_SHIFT	t/time-test.c	/^	__CLOCK_MULT_SHIFT	= 1 << 2,$/;"	e	enum:__anone3fe4fb50103	file:
__CRC16_H	crc/crc16.h	/^#define __CRC16_H$/;"	d
__CRYPTO_SHA3_H__	crc/sha3.h	/^#define __CRYPTO_SHA3_H__$/;"	d
__FIO_FSERVICE_NONUNIFORM	file.h	/^	__FIO_FSERVICE_NONUNIFORM	= 0x100,$/;"	e	enum:__anonfd762ebb0103
__FIO_OPT_C_ENGINE	optgroup.h	/^	__FIO_OPT_C_ENGINE,$/;"	e	enum:opt_category
__FIO_OPT_C_FILE	optgroup.h	/^	__FIO_OPT_C_FILE,$/;"	e	enum:opt_category
__FIO_OPT_C_GENERAL	optgroup.h	/^	__FIO_OPT_C_GENERAL	= 0,$/;"	e	enum:opt_category
__FIO_OPT_C_IO	optgroup.h	/^	__FIO_OPT_C_IO,$/;"	e	enum:opt_category
__FIO_OPT_C_LOG	optgroup.h	/^	__FIO_OPT_C_LOG,$/;"	e	enum:opt_category
__FIO_OPT_C_NR	optgroup.h	/^	__FIO_OPT_C_NR,$/;"	e	enum:opt_category
__FIO_OPT_C_PROFILE	optgroup.h	/^	__FIO_OPT_C_PROFILE,$/;"	e	enum:opt_category
__FIO_OPT_C_STAT	optgroup.h	/^	__FIO_OPT_C_STAT,$/;"	e	enum:opt_category
__FIO_OPT_G_ACT	optgroup.h	/^	__FIO_OPT_G_ACT,$/;"	e	enum:opt_category_group
__FIO_OPT_G_CGROUP	optgroup.h	/^	__FIO_OPT_G_CGROUP,$/;"	e	enum:opt_category_group
__FIO_OPT_G_CLOCK	optgroup.h	/^	__FIO_OPT_G_CLOCK,$/;"	e	enum:opt_category_group
__FIO_OPT_G_CRED	optgroup.h	/^	__FIO_OPT_G_CRED,$/;"	e	enum:opt_category_group
__FIO_OPT_G_DESC	optgroup.h	/^	__FIO_OPT_G_DESC,$/;"	e	enum:opt_category_group
__FIO_OPT_G_DFS	optgroup.h	/^	__FIO_OPT_G_DFS,$/;"	e	enum:opt_category_group
__FIO_OPT_G_E4DEFRAG	optgroup.h	/^	__FIO_OPT_G_E4DEFRAG,$/;"	e	enum:opt_category_group
__FIO_OPT_G_ERR	optgroup.h	/^	__FIO_OPT_G_ERR,$/;"	e	enum:opt_category_group
__FIO_OPT_G_FILENAME	optgroup.h	/^	__FIO_OPT_G_FILENAME,$/;"	e	enum:opt_category_group
__FIO_OPT_G_FILESTAT	optgroup.h	/^	__FIO_OPT_G_FILESTAT,$/;"	e	enum:opt_category_group
__FIO_OPT_G_GFAPI	optgroup.h	/^	__FIO_OPT_G_GFAPI,$/;"	e	enum:opt_category_group
__FIO_OPT_G_HDFS	optgroup.h	/^	__FIO_OPT_G_HDFS,$/;"	e	enum:opt_category_group
__FIO_OPT_G_HTTP	optgroup.h	/^	__FIO_OPT_G_HTTP,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IOLOG	optgroup.h	/^	__FIO_OPT_G_IOLOG,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IOURING	optgroup.h	/^	__FIO_OPT_G_IOURING,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IO_BASIC	optgroup.h	/^	__FIO_OPT_G_IO_BASIC,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IO_BUF	optgroup.h	/^	__FIO_OPT_G_IO_BUF,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IO_DEPTH	optgroup.h	/^	__FIO_OPT_G_IO_DEPTH,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IO_FLOW	optgroup.h	/^	__FIO_OPT_G_IO_FLOW,$/;"	e	enum:opt_category_group
__FIO_OPT_G_IO_TYPE	optgroup.h	/^	__FIO_OPT_G_IO_TYPE,$/;"	e	enum:opt_category_group
__FIO_OPT_G_ISCSI	optgroup.h	/^	__FIO_OPT_G_ISCSI,$/;"	e	enum:opt_category_group
__FIO_OPT_G_LATPROF	optgroup.h	/^	__FIO_OPT_G_LATPROF,$/;"	e	enum:opt_category_group
__FIO_OPT_G_LIBAIO	optgroup.h	/^	__FIO_OPT_G_LIBAIO,$/;"	e	enum:opt_category_group
__FIO_OPT_G_LIBCUFILE	optgroup.h	/^	__FIO_OPT_G_LIBCUFILE,$/;"	e	enum:opt_category_group
__FIO_OPT_G_LIBRPMA	optgroup.h	/^	__FIO_OPT_G_LIBRPMA,$/;"	e	enum:opt_category_group
__FIO_OPT_G_MMAP	optgroup.h	/^	__FIO_OPT_G_MMAP,$/;"	e	enum:opt_category_group
__FIO_OPT_G_MTD	optgroup.h	/^	__FIO_OPT_G_MTD,$/;"	e	enum:opt_category_group
__FIO_OPT_G_NBD	optgroup.h	/^	__FIO_OPT_G_NBD,$/;"	e	enum:opt_category_group
__FIO_OPT_G_NETIO	optgroup.h	/^	__FIO_OPT_G_NETIO,$/;"	e	enum:opt_category_group
__FIO_OPT_G_NFS	optgroup.h	/^	__FIO_OPT_G_NFS,$/;"	e	enum:opt_category_group
__FIO_OPT_G_NR	optgroup.h	/^	__FIO_OPT_G_NR,$/;"	e	enum:opt_category_group
__FIO_OPT_G_PROCESS	optgroup.h	/^	__FIO_OPT_G_PROCESS,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RANDOM	optgroup.h	/^	__FIO_OPT_G_RANDOM,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RATE	optgroup.h	/^	__FIO_OPT_G_RATE	= 0,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RBD	optgroup.h	/^	__FIO_OPT_G_RBD,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RDMA	optgroup.h	/^	__FIO_OPT_G_RDMA,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RUNTIME	optgroup.h	/^	__FIO_OPT_G_RUNTIME,$/;"	e	enum:opt_category_group
__FIO_OPT_G_RWMIX	optgroup.h	/^	__FIO_OPT_G_RWMIX,$/;"	e	enum:opt_category_group
__FIO_OPT_G_SG	optgroup.h	/^	__FIO_OPT_G_SG,$/;"	e	enum:opt_category_group
__FIO_OPT_G_THINKTIME	optgroup.h	/^	__FIO_OPT_G_THINKTIME,$/;"	e	enum:opt_category_group
__FIO_OPT_G_TIOBENCH	optgroup.h	/^	__FIO_OPT_G_TIOBENCH,$/;"	e	enum:opt_category_group
__FIO_OPT_G_TRIM	optgroup.h	/^	__FIO_OPT_G_TRIM,$/;"	e	enum:opt_category_group
__FIO_OPT_G_VERIFY	optgroup.h	/^	__FIO_OPT_G_VERIFY,$/;"	e	enum:opt_category_group
__FIO_OPT_G_WINDOWSAIO	optgroup.h	/^	__FIO_OPT_G_WINDOWSAIO,$/;"	e	enum:opt_category_group
__FIO_OPT_G_XNVME	optgroup.h	/^	__FIO_OPT_G_XNVME,$/;"	e	enum:opt_category_group
__FIO_OPT_G_ZONE	optgroup.h	/^	__FIO_OPT_G_ZONE,$/;"	e	enum:opt_category_group
__FIO_OUTPUT_JSON	fio.h	/^	__FIO_OUTPUT_JSON	= 1,$/;"	e	enum:__anon0f7035d94303
__FIO_OUTPUT_JSON_PLUS	fio.h	/^        __FIO_OUTPUT_JSON_PLUS  = 3,$/;"	e	enum:__anon0f7035d94303
__FIO_OUTPUT_NORMAL	fio.h	/^	__FIO_OUTPUT_NORMAL	= 2,$/;"	e	enum:__anon0f7035d94303
__FIO_OUTPUT_TERSE	fio.h	/^	__FIO_OUTPUT_TERSE	= 0,$/;"	e	enum:__anon0f7035d94303
__FIO_SS_ATTAINED	steadystate.h	/^	__FIO_SS_ATTAINED,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_BUFFER_FULL	steadystate.h	/^	__FIO_SS_BUFFER_FULL,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_BW	steadystate.h	/^	__FIO_SS_BW,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_DATA	steadystate.h	/^	__FIO_SS_DATA,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_IOPS	steadystate.h	/^	__FIO_SS_IOPS = 0,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_PCT	steadystate.h	/^	__FIO_SS_PCT,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_RAMP_OVER	steadystate.h	/^	__FIO_SS_RAMP_OVER,$/;"	e	enum:__anon3e5d79660503
__FIO_SS_SLOPE	steadystate.h	/^	__FIO_SS_SLOPE,$/;"	e	enum:__anon3e5d79660503
__GCC4_has_attribute___fallthrough__	compiler/compiler.h	/^#define __GCC4_has_attribute___fallthrough__	/;"	d
__HIST_COLUMNS	tools/hist/fiologparser_hist.py	/^__HIST_COLUMNS = 1216$/;"	v
__JSON__H	json.h	/^#define __JSON__H$/;"	d
__LFSR_NEXT	lib/lfsr.c	/^#define __LFSR_NEXT(/;"	d	file:
__LIBMTD_H__	oslib/libmtd.h	/^#define __LIBMTD_H__$/;"	d
__LIBMTD_INT_H__	oslib/libmtd_int.h	/^#define __LIBMTD_INT_H__$/;"	d
__MTD_UTILS_COMMON_H__	oslib/libmtd_common.h	/^#define __MTD_UTILS_COMMON_H__$/;"	d
__MTD_UTILS_XALLOC_H__	oslib/libmtd_xalloc.h	/^#define __MTD_UTILS_XALLOC_H__$/;"	d
__NON_FATAL_ERR	td_error.c	/^static int __NON_FATAL_ERR[] = { EIO, EILSEQ };$/;"	v	typeref:typename:int[]	file:
__NON_HIST_COLUMNS	tools/hist/fiologparser_hist.py	/^__NON_HIST_COLUMNS = 3$/;"	v
__NR_fadvise64	os/os-linux-syscall.h	/^#define __NR_fadvise64	/;"	d
__NR_io_uring_enter	arch/arch.h	/^#  define __NR_io_uring_enter	/;"	d
__NR_io_uring_register	arch/arch.h	/^#  define __NR_io_uring_register	/;"	d
__NR_io_uring_setup	arch/arch.h	/^#  define __NR_io_uring_setup	/;"	d
__NR_ioprio_get	os/os-linux-syscall.h	/^#define __NR_ioprio_get	/;"	d
__NR_ioprio_set	os/os-linux-syscall.h	/^#define __NR_ioprio_set	/;"	d
__NR_preadv2	os/os-linux-syscall.h	/^#define __NR_preadv2	/;"	d
__NR_pwritev2	os/os-linux-syscall.h	/^#define __NR_pwritev2	/;"	d
__NR_shmat	os/os-linux-syscall.h	/^#define __NR_shmat	/;"	d
__NR_shmctl	os/os-linux-syscall.h	/^#define __NR_shmctl	/;"	d
__NR_shmdt	os/os-linux-syscall.h	/^#define __NR_shmdt	/;"	d
__NR_shmget	os/os-linux-syscall.h	/^#define __NR_shmget	/;"	d
__NR_sys_splice	os/os-linux-syscall.h	/^#define __NR_sys_splice	/;"	d
__NR_sys_tee	os/os-linux-syscall.h	/^#define __NR_sys_tee	/;"	d
__NR_sys_vmsplice	os/os-linux-syscall.h	/^#define __NR_sys_vmsplice	/;"	d
__STDC_LIMIT_MACROS	lex.yy.c	/^#define __STDC_LIMIT_MACROS /;"	d	file:
__TD_F_CHECK_RATE	fio.h	/^	__TD_F_CHECK_RATE,$/;"	e	enum:__anon0f7035d90203
__TD_F_CHILD	fio.h	/^	__TD_F_CHILD,$/;"	e	enum:__anon0f7035d90203
__TD_F_COMPRESS	fio.h	/^	__TD_F_COMPRESS,$/;"	e	enum:__anon0f7035d90203
__TD_F_COMPRESS_LOG	fio.h	/^	__TD_F_COMPRESS_LOG,$/;"	e	enum:__anon0f7035d90203
__TD_F_DIRS_CREATED	fio.h	/^	__TD_F_DIRS_CREATED,$/;"	e	enum:__anon0f7035d90203
__TD_F_DO_VERIFY	fio.h	/^	__TD_F_DO_VERIFY,$/;"	e	enum:__anon0f7035d90203
__TD_F_LAST	fio.h	/^	__TD_F_LAST,		\/* not a real bit, keep last *\/$/;"	e	enum:__anon0f7035d90203
__TD_F_MMAP_KEEP	fio.h	/^	__TD_F_MMAP_KEEP,$/;"	e	enum:__anon0f7035d90203
__TD_F_NEED_LOCK	fio.h	/^	__TD_F_NEED_LOCK,$/;"	e	enum:__anon0f7035d90203
__TD_F_NO_PROGRESS	fio.h	/^	__TD_F_NO_PROGRESS,$/;"	e	enum:__anon0f7035d90203
__TD_F_PROFILE_OPS	fio.h	/^	__TD_F_PROFILE_OPS,$/;"	e	enum:__anon0f7035d90203
__TD_F_READ_IOLOG	fio.h	/^	__TD_F_READ_IOLOG,$/;"	e	enum:__anon0f7035d90203
__TD_F_REFILL_BUFFERS	fio.h	/^	__TD_F_REFILL_BUFFERS,$/;"	e	enum:__anon0f7035d90203
__TD_F_REGROW_LOGS	fio.h	/^	__TD_F_REGROW_LOGS,$/;"	e	enum:__anon0f7035d90203
__TD_F_SCRAMBLE_BUFFERS	fio.h	/^	__TD_F_SCRAMBLE_BUFFERS,$/;"	e	enum:__anon0f7035d90203
__TD_F_SYNCS	fio.h	/^	__TD_F_SYNCS,$/;"	e	enum:__anon0f7035d90203
__TD_F_TRIM_BACKLOG	fio.h	/^	__TD_F_TRIM_BACKLOG,$/;"	e	enum:__anon0f7035d90203
__TD_F_VER_BACKLOG	fio.h	/^	__TD_F_VER_BACKLOG	= 0,$/;"	e	enum:__anon0f7035d90203
__TD_F_VSTATE_SAVED	fio.h	/^	__TD_F_VSTATE_SAVED,$/;"	e	enum:__anon0f7035d90203
__THREAD_RUNSTR_SZ	stat.h	/^#define __THREAD_RUNSTR_SZ(/;"	d
__TOTAL_COLUMNS	tools/hist/fiologparser_hist.py	/^__TOTAL_COLUMNS = __HIST_COLUMNS + __NON_HIST_COLUMNS$/;"	v
__add_bs	t/btrace2fio.c	/^static void __add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	f	typeref:typename:void	file:
__add_log_sample	stat.c	/^static void __add_log_sample(struct io_log *iolog, union io_sample_data data,$/;"	f	typeref:typename:void	file:
__add_samples	stat.c	/^static int __add_samples(struct thread_data *td, struct timespec *parent_tv,$/;"	f	typeref:typename:int	file:
__add_stat_to_log	stat.c	/^static void __add_stat_to_log(struct io_log *iolog, enum fio_ddir ddir,$/;"	f	typeref:typename:void	file:
__anon04cebdca0103	init.c	/^enum {$/;"	g	file:
__anon04cebdca020d	init.c	/^extern int fio_check_options(struct thread_options *);$/;"	z	prototype:fio_check_options	typeref:struct:thread_options *	file:
__anon04db5ec70103	io_u.h	/^enum {$/;"	g
__anon04db5ec7020a	io_u.h	/^	union {$/;"	u	struct:io_u
__anon04db5ec7030a	io_u.h	/^	union {$/;"	u	struct:io_u
__anon04db5ec7040a	io_u.h	/^	union {$/;"	u	struct:io_u
__anon04db5ec7050d	io_u.h	/^extern struct io_u *__get_io_u(struct thread_data *);$/;"	z	prototype:__get_io_u	typeref:struct:thread_data *	file:
__anon04db5ec7060d	io_u.h	/^extern struct io_u *get_io_u(struct thread_data *);$/;"	z	prototype:get_io_u	typeref:struct:thread_data *	file:
__anon04db5ec7070d	io_u.h	/^extern void put_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:put_io_u	typeref:struct:thread_data *	file:
__anon04db5ec7080d	io_u.h	/^extern void put_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:put_io_u	typeref:struct:io_u *	file:
__anon04db5ec7090d	io_u.h	/^extern void clear_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:clear_io_u	typeref:struct:thread_data *	file:
__anon04db5ec70a0d	io_u.h	/^extern void clear_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:clear_io_u	typeref:struct:io_u *	file:
__anon04db5ec70b0d	io_u.h	/^extern void requeue_io_u(struct thread_data *, struct io_u **);$/;"	z	prototype:requeue_io_u	typeref:struct:thread_data *	file:
__anon04db5ec70c0d	io_u.h	/^extern void requeue_io_u(struct thread_data *, struct io_u **);$/;"	z	prototype:requeue_io_u	typeref:struct:io_u **	file:
__anon04db5ec70d0d	io_u.h	/^extern int __must_check io_u_sync_complete(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_sync_complete	typeref:struct:thread_data *	file:
__anon04db5ec70e0d	io_u.h	/^extern int __must_check io_u_sync_complete(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_sync_complete	typeref:struct:io_u *	file:
__anon04db5ec70f0d	io_u.h	/^extern int __must_check io_u_queued_complete(struct thread_data *, int);$/;"	z	prototype:io_u_queued_complete	typeref:struct:thread_data *	file:
__anon04db5ec7100d	io_u.h	/^extern int __must_check io_u_queued_complete(struct thread_data *, int);$/;"	z	prototype:io_u_queued_complete	typeref:typename:int	file:
__anon04db5ec7110d	io_u.h	/^extern void io_u_queued(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_queued	typeref:struct:thread_data *	file:
__anon04db5ec7120d	io_u.h	/^extern void io_u_queued(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_queued	typeref:struct:io_u *	file:
__anon04db5ec7130d	io_u.h	/^extern int io_u_quiesce(struct thread_data *);$/;"	z	prototype:io_u_quiesce	typeref:struct:thread_data *	file:
__anon04db5ec7140d	io_u.h	/^extern void io_u_log_error(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_log_error	typeref:struct:thread_data *	file:
__anon04db5ec7150d	io_u.h	/^extern void io_u_log_error(struct thread_data *, struct io_u *);$/;"	z	prototype:io_u_log_error	typeref:struct:io_u *	file:
__anon04db5ec7160d	io_u.h	/^extern void io_u_mark_depth(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_depth	typeref:struct:thread_data *	file:
__anon04db5ec7170d	io_u.h	/^extern void io_u_mark_depth(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_depth	typeref:typename:unsigned int	file:
__anon04db5ec7180d	io_u.h	/^extern void fill_io_buffer(struct thread_data *, void *, unsigned long long, unsigned long long)/;"	z	prototype:fill_io_buffer	typeref:struct:thread_data *	file:
__anon04db5ec7190d	io_u.h	/^extern void fill_io_buffer(struct thread_data *, void *, unsigned long long, unsigned long long)/;"	z	prototype:fill_io_buffer	typeref:typename:void *	file:
__anon04db5ec71a0d	io_u.h	/^extern void fill_io_buffer(struct thread_data *, void *, unsigned long long, unsigned long long)/;"	z	prototype:fill_io_buffer	typeref:typename:unsigned long long	file:
__anon04db5ec71b0d	io_u.h	/^extern void fill_io_buffer(struct thread_data *, void *, unsigned long long, unsigned long long)/;"	z	prototype:fill_io_buffer	typeref:typename:unsigned long long	file:
__anon04db5ec71c0d	io_u.h	/^extern void io_u_fill_buffer(struct thread_data *td, struct io_u *, unsigned long long, unsigned/;"	z	prototype:io_u_fill_buffer	typeref:struct:io_u *	file:
__anon04db5ec71d0d	io_u.h	/^extern void io_u_fill_buffer(struct thread_data *td, struct io_u *, unsigned long long, unsigned/;"	z	prototype:io_u_fill_buffer	typeref:typename:unsigned long long	file:
__anon04db5ec71e0d	io_u.h	/^extern void io_u_fill_buffer(struct thread_data *td, struct io_u *, unsigned long long, unsigned/;"	z	prototype:io_u_fill_buffer	typeref:typename:unsigned long long	file:
__anon04db5ec71f0d	io_u.h	/^void io_u_mark_complete(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_complete	typeref:struct:thread_data *	file:
__anon04db5ec7200d	io_u.h	/^void io_u_mark_complete(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_complete	typeref:typename:unsigned int	file:
__anon04db5ec7210d	io_u.h	/^void io_u_mark_submit(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_submit	typeref:struct:thread_data *	file:
__anon04db5ec7220d	io_u.h	/^void io_u_mark_submit(struct thread_data *, unsigned int);$/;"	z	prototype:io_u_mark_submit	typeref:typename:unsigned int	file:
__anon04db5ec7230d	io_u.h	/^bool queue_full(const struct thread_data *);$/;"	z	prototype:queue_full	typeref:typename:const struct thread_data *	file:
__anon04db5ec7240d	io_u.h	/^int do_io_u_sync(const struct thread_data *, struct io_u *);$/;"	z	prototype:do_io_u_sync	typeref:typename:const struct thread_data *	file:
__anon04db5ec7250d	io_u.h	/^int do_io_u_sync(const struct thread_data *, struct io_u *);$/;"	z	prototype:do_io_u_sync	typeref:struct:io_u *	file:
__anon04db5ec7260d	io_u.h	/^int do_io_u_trim(const struct thread_data *, struct io_u *);$/;"	z	prototype:do_io_u_trim	typeref:typename:const struct thread_data *	file:
__anon04db5ec7270d	io_u.h	/^int do_io_u_trim(const struct thread_data *, struct io_u *);$/;"	z	prototype:do_io_u_trim	typeref:struct:io_u *	file:
__anon078191b0010d	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *);$/;"	z	prototype:json_print_pair	typeref:struct:buf_output *	file:
__anon078191b0020d	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *);$/;"	z	prototype:json_print_value	typeref:struct:buf_output *	file:
__anon078191b5010a	json.h	/^	union {$/;"	u	struct:json_value
__anon078191b5020a	json.h	/^	union {$/;"	u	struct:json_value
__anon078191b5030a	json.h	/^	union {$/;"	u	function:json_object_add_value_string
__anon0847a6820103	debug.h	/^enum {$/;"	g
__anon0847a6820203	debug.h	/^enum {$/;"	g
__anon089b2b5e010a	verify-state.h	/^	union {$/;"	u	struct:thread_rand_state
__anon089b2b5e020d	verify-state.h	/^extern struct all_io_list *get_all_io_list(int, size_t *);$/;"	z	prototype:get_all_io_list	typeref:typename:int	file:
__anon089b2b5e030d	verify-state.h	/^extern struct all_io_list *get_all_io_list(int, size_t *);$/;"	z	prototype:get_all_io_list	typeref:typename:size_t *	file:
__anon089b2b5e040d	verify-state.h	/^extern void __verify_save_state(struct all_io_list *, const char *);$/;"	z	prototype:__verify_save_state	typeref:struct:all_io_list *	file:
__anon089b2b5e050d	verify-state.h	/^extern void __verify_save_state(struct all_io_list *, const char *);$/;"	z	prototype:__verify_save_state	typeref:typename:const char *	file:
__anon089b2b5e060d	verify-state.h	/^extern int verify_load_state(struct thread_data *, const char *);$/;"	z	prototype:verify_load_state	typeref:struct:thread_data *	file:
__anon089b2b5e070d	verify-state.h	/^extern int verify_load_state(struct thread_data *, const char *);$/;"	z	prototype:verify_load_state	typeref:typename:const char *	file:
__anon089b2b5e080d	verify-state.h	/^extern void verify_free_state(struct thread_data *);$/;"	z	prototype:verify_free_state	typeref:struct:thread_data *	file:
__anon089b2b5e090d	verify-state.h	/^extern int verify_state_should_stop(struct thread_data *, struct io_u *);$/;"	z	prototype:verify_state_should_stop	typeref:struct:thread_data *	file:
__anon089b2b5e0a0d	verify-state.h	/^extern int verify_state_should_stop(struct thread_data *, struct io_u *);$/;"	z	prototype:verify_state_should_stop	typeref:struct:io_u *	file:
__anon089b2b5e0b0d	verify-state.h	/^extern void verify_assign_state(struct thread_data *, void *);$/;"	z	prototype:verify_assign_state	typeref:struct:thread_data *	file:
__anon089b2b5e0c0d	verify-state.h	/^extern void verify_assign_state(struct thread_data *, void *);$/;"	z	prototype:verify_assign_state	typeref:typename:void *	file:
__anon089b2b5e0d0d	verify-state.h	/^extern int verify_state_hdr(struct verify_state_hdr *, struct thread_io_list *);$/;"	z	prototype:verify_state_hdr	typeref:struct:verify_state_hdr *	file:
__anon089b2b5e0e0d	verify-state.h	/^extern int verify_state_hdr(struct verify_state_hdr *, struct thread_io_list *);$/;"	z	prototype:verify_state_hdr	typeref:struct:thread_io_list *	file:
__anon08f18c4a0108	os/os-windows-7.h	/^typedef struct {$/;"	s
__anon0a8b58ea0103	engines/filestat.c	/^enum {$/;"	g	file:
__anon0ca9fae6010d	smalloc.h	/^extern void *smalloc(size_t);$/;"	z	prototype:smalloc	typeref:typename:size_t	file:
__anon0ca9fae6020d	smalloc.h	/^extern void *scalloc(size_t, size_t);$/;"	z	prototype:scalloc	typeref:typename:size_t	file:
__anon0ca9fae6030d	smalloc.h	/^extern void *scalloc(size_t, size_t);$/;"	z	prototype:scalloc	typeref:typename:size_t	file:
__anon0ca9fae6040d	smalloc.h	/^extern void sfree(void *);$/;"	z	prototype:sfree	typeref:typename:void *	file:
__anon0ca9fae6050d	smalloc.h	/^extern char *smalloc_strdup(const char *);$/;"	z	prototype:smalloc_strdup	typeref:typename:const char *	file:
__anon0ca9fae6060d	smalloc.h	/^extern void smalloc_debug(size_t);$/;"	z	prototype:smalloc_debug	typeref:typename:size_t	file:
__anon0d749ac80103	graph.c	/^enum {$/;"	g	file:
__anon0e0b1c68010d	rate-submit.h	/^int rate_submit_init(struct thread_data *, struct sk_out *);$/;"	z	prototype:rate_submit_init	typeref:struct:thread_data *	file:
__anon0e0b1c68020d	rate-submit.h	/^int rate_submit_init(struct thread_data *, struct sk_out *);$/;"	z	prototype:rate_submit_init	typeref:struct:sk_out *	file:
__anon0e0b1c68030d	rate-submit.h	/^void rate_submit_exit(struct thread_data *);$/;"	z	prototype:rate_submit_exit	typeref:struct:thread_data *	file:
__anon0e7c93ed0103	server.c	/^enum {$/;"	g	file:
__anon0e7c93ed020a	server.c	/^	union {$/;"	u	struct:ffi_element	file:
__anon0e7c93f20103	server.h	/^enum {$/;"	g
__anon0e7c93f20203	server.h	/^enum {$/;"	g
__anon0e7c93f2030d	server.h	/^extern int fio_start_server(char *);$/;"	z	prototype:fio_start_server	typeref:typename:char *	file:
__anon0e7c93f2040d	server.h	/^extern int fio_server_text_output(int, const char *, size_t);$/;"	z	prototype:fio_server_text_output	typeref:typename:int	file:
__anon0e7c93f2050d	server.h	/^extern int fio_server_text_output(int, const char *, size_t);$/;"	z	prototype:fio_server_text_output	typeref:typename:const char *	file:
__anon0e7c93f2060d	server.h	/^extern int fio_server_text_output(int, const char *, size_t);$/;"	z	prototype:fio_server_text_output	typeref:typename:size_t	file:
__anon0e7c93f2070d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:typename:int	file:
__anon0e7c93f2080d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:typename:uint16_t	file:
__anon0e7c93f2090d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:typename:const void *	file:
__anon0e7c93f20a0d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:typename:off_t	file:
__anon0e7c93f20b0d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:typename:uint64_t *	file:
__anon0e7c93f20c0d	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	z	prototype:fio_net_send_cmd	typeref:struct:flist_head *	file:
__anon0e7c93f20d0d	server.h	/^extern int fio_net_send_simple_cmd(int, uint16_t, uint64_t, struct flist_head *);$/;"	z	prototype:fio_net_send_simple_cmd	typeref:typename:int	file:
__anon0e7c93f20e0d	server.h	/^extern int fio_net_send_simple_cmd(int, uint16_t, uint64_t, struct flist_head *);$/;"	z	prototype:fio_net_send_simple_cmd	typeref:typename:uint16_t	file:
__anon0e7c93f20f0d	server.h	/^extern int fio_net_send_simple_cmd(int, uint16_t, uint64_t, struct flist_head *);$/;"	z	prototype:fio_net_send_simple_cmd	typeref:typename:uint64_t	file:
__anon0e7c93f2100d	server.h	/^extern int fio_net_send_simple_cmd(int, uint16_t, uint64_t, struct flist_head *);$/;"	z	prototype:fio_net_send_simple_cmd	typeref:struct:flist_head *	file:
__anon0e7c93f2110d	server.h	/^extern void fio_server_set_arg(const char *);$/;"	z	prototype:fio_server_set_arg	typeref:typename:const char *	file:
__anon0e7c93f2120d	server.h	/^extern void fio_server_internal_set(const char *);$/;"	z	prototype:fio_server_internal_set	typeref:typename:const char *	file:
__anon0e7c93f2130d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:typename:const char *	file:
__anon0e7c93f2140d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:typename:char **	file:
__anon0e7c93f2150d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:typename:bool *	file:
__anon0e7c93f2160d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:typename:int *	file:
__anon0e7c93f2170d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:struct:in_addr *	file:
__anon0e7c93f2180d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:struct:in6_addr *	file:
__anon0e7c93f2190d	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	z	prototype:fio_server_parse_string	typeref:typename:int *	file:
__anon0e7c93f21a0d	server.h	/^extern int fio_server_parse_host(const char *, int, struct in_addr *, struct in6_addr *);$/;"	z	prototype:fio_server_parse_host	typeref:typename:const char *	file:
__anon0e7c93f21b0d	server.h	/^extern int fio_server_parse_host(const char *, int, struct in_addr *, struct in6_addr *);$/;"	z	prototype:fio_server_parse_host	typeref:typename:int	file:
__anon0e7c93f21c0d	server.h	/^extern int fio_server_parse_host(const char *, int, struct in_addr *, struct in6_addr *);$/;"	z	prototype:fio_server_parse_host	typeref:struct:in_addr *	file:
__anon0e7c93f21d0d	server.h	/^extern int fio_server_parse_host(const char *, int, struct in_addr *, struct in6_addr *);$/;"	z	prototype:fio_server_parse_host	typeref:struct:in6_addr *	file:
__anon0e7c93f21e0d	server.h	/^extern const char *fio_server_op(unsigned int);$/;"	z	prototype:fio_server_op	typeref:typename:unsigned int	file:
__anon0e7c93f21f0d	server.h	/^extern void fio_server_got_signal(int);$/;"	z	prototype:fio_server_got_signal	typeref:typename:int	file:
__anon0e7c93f2200d	server.h	/^extern void fio_server_send_ts(struct thread_stat *, struct group_run_stats *);$/;"	z	prototype:fio_server_send_ts	typeref:struct:thread_stat *	file:
__anon0e7c93f2210d	server.h	/^extern void fio_server_send_ts(struct thread_stat *, struct group_run_stats *);$/;"	z	prototype:fio_server_send_ts	typeref:struct:group_run_stats *	file:
__anon0e7c93f2220d	server.h	/^extern void fio_server_send_gs(struct group_run_stats *);$/;"	z	prototype:fio_server_send_gs	typeref:struct:group_run_stats *	file:
__anon0e7c93f2230d	server.h	/^extern void fio_server_send_job_options(struct flist_head *, unsigned int);$/;"	z	prototype:fio_server_send_job_options	typeref:struct:flist_head *	file:
__anon0e7c93f2240d	server.h	/^extern void fio_server_send_job_options(struct flist_head *, unsigned int);$/;"	z	prototype:fio_server_send_job_options	typeref:typename:unsigned int	file:
__anon0e7c93f2250d	server.h	/^extern int fio_server_get_verify_state(const char *, int, void **);$/;"	z	prototype:fio_server_get_verify_state	typeref:typename:const char *	file:
__anon0e7c93f2260d	server.h	/^extern int fio_server_get_verify_state(const char *, int, void **);$/;"	z	prototype:fio_server_get_verify_state	typeref:typename:int	file:
__anon0e7c93f2270d	server.h	/^extern int fio_server_get_verify_state(const char *, int, void **);$/;"	z	prototype:fio_server_get_verify_state	typeref:typename:void **	file:
__anon0e7c93f2280d	server.h	/^extern int fio_send_iolog(struct thread_data *, struct io_log *, const char *);$/;"	z	prototype:fio_send_iolog	typeref:struct:thread_data *	file:
__anon0e7c93f2290d	server.h	/^extern int fio_send_iolog(struct thread_data *, struct io_log *, const char *);$/;"	z	prototype:fio_send_iolog	typeref:struct:io_log *	file:
__anon0e7c93f22a0d	server.h	/^extern int fio_send_iolog(struct thread_data *, struct io_log *, const char *);$/;"	z	prototype:fio_send_iolog	typeref:typename:const char *	file:
__anon0e7c93f22b0d	server.h	/^extern void fio_server_send_add_job(struct thread_data *);$/;"	z	prototype:fio_server_send_add_job	typeref:struct:thread_data *	file:
__anon0e7c93f22c0d	server.h	/^extern void fio_server_send_start(struct thread_data *);$/;"	z	prototype:fio_server_send_start	typeref:struct:thread_data *	file:
__anon0f7035d90103	fio.h	/^enum {$/;"	g
__anon0f7035d90203	fio.h	/^enum {$/;"	g
__anon0f7035d90303	fio.h	/^enum {$/;"	g
__anon0f7035d90403	fio.h	/^enum {$/;"	g
__anon0f7035d90503	fio.h	/^enum {$/;"	g
__anon0f7035d90603	fio.h	/^enum {$/;"	g
__anon0f7035d9070d	fio.h	/^void sk_out_assign(struct sk_out *);$/;"	z	prototype:sk_out_assign	typeref:struct:sk_out *	file:
__anon0f7035d9080a	fio.h	/^	union {$/;"	u	struct:thread_data
__anon0f7035d9090a	fio.h	/^	union {$/;"	u	struct:thread_data
__anon0f7035d90a0a	fio.h	/^	union {$/;"	u	struct:thread_data
__anon0f7035d90b03	fio.h	/^enum {$/;"	g
__anon0f7035d90c0d	fio.h	/^extern int __must_check parse_options(int, char **);$/;"	z	prototype:parse_options	typeref:typename:int	file:
__anon0f7035d90d0d	fio.h	/^extern int __must_check parse_options(int, char **);$/;"	z	prototype:parse_options	typeref:typename:char **	file:
__anon0f7035d90e0d	fio.h	/^extern int parse_jobs_ini(char *, int, int, int);$/;"	z	prototype:parse_jobs_ini	typeref:typename:char *	file:
__anon0f7035d90f0d	fio.h	/^extern int parse_jobs_ini(char *, int, int, int);$/;"	z	prototype:parse_jobs_ini	typeref:typename:int	file:
__anon0f7035d9100d	fio.h	/^extern int parse_jobs_ini(char *, int, int, int);$/;"	z	prototype:parse_jobs_ini	typeref:typename:int	file:
__anon0f7035d9110d	fio.h	/^extern int parse_jobs_ini(char *, int, int, int);$/;"	z	prototype:parse_jobs_ini	typeref:typename:int	file:
__anon0f7035d9120d	fio.h	/^extern int parse_cmd_line(int, char **, int);$/;"	z	prototype:parse_cmd_line	typeref:typename:int	file:
__anon0f7035d9130d	fio.h	/^extern int parse_cmd_line(int, char **, int);$/;"	z	prototype:parse_cmd_line	typeref:typename:char **	file:
__anon0f7035d9140d	fio.h	/^extern int parse_cmd_line(int, char **, int);$/;"	z	prototype:parse_cmd_line	typeref:typename:int	file:
__anon0f7035d9150d	fio.h	/^extern int fio_backend(struct sk_out *);$/;"	z	prototype:fio_backend	typeref:struct:sk_out *	file:
__anon0f7035d9160d	fio.h	/^extern void clear_io_state(struct thread_data *, int);$/;"	z	prototype:clear_io_state	typeref:struct:thread_data *	file:
__anon0f7035d9170d	fio.h	/^extern void clear_io_state(struct thread_data *, int);$/;"	z	prototype:clear_io_state	typeref:typename:int	file:
__anon0f7035d9180d	fio.h	/^extern int fio_options_parse(struct thread_data *, char **, int);$/;"	z	prototype:fio_options_parse	typeref:struct:thread_data *	file:
__anon0f7035d9190d	fio.h	/^extern int fio_options_parse(struct thread_data *, char **, int);$/;"	z	prototype:fio_options_parse	typeref:typename:char **	file:
__anon0f7035d91a0d	fio.h	/^extern int fio_options_parse(struct thread_data *, char **, int);$/;"	z	prototype:fio_options_parse	typeref:typename:int	file:
__anon0f7035d91b0d	fio.h	/^extern int fio_cmd_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_option_parse	typeref:struct:thread_data *	file:
__anon0f7035d91c0d	fio.h	/^extern int fio_cmd_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_option_parse	typeref:typename:const char *	file:
__anon0f7035d91d0d	fio.h	/^extern int fio_cmd_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_option_parse	typeref:typename:char *	file:
__anon0f7035d91e0d	fio.h	/^extern int fio_cmd_ioengine_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_ioengine_option_parse	typeref:struct:thread_data *	file:
__anon0f7035d91f0d	fio.h	/^extern int fio_cmd_ioengine_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_ioengine_option_parse	typeref:typename:const char *	file:
__anon0f7035d9200d	fio.h	/^extern int fio_cmd_ioengine_option_parse(struct thread_data *, const char *, char *);$/;"	z	prototype:fio_cmd_ioengine_option_parse	typeref:typename:char *	file:
__anon0f7035d9210d	fio.h	/^extern void fio_fill_default_options(struct thread_data *);$/;"	z	prototype:fio_fill_default_options	typeref:struct:thread_data *	file:
__anon0f7035d9220d	fio.h	/^extern int fio_show_option_help(const char *);$/;"	z	prototype:fio_show_option_help	typeref:typename:const char *	file:
__anon0f7035d9230d	fio.h	/^extern void fio_options_dup_and_init(struct option *);$/;"	z	prototype:fio_options_dup_and_init	typeref:struct:option *	file:
__anon0f7035d9240d	fio.h	/^extern char *fio_option_dup_subs(const char *);$/;"	z	prototype:fio_option_dup_subs	typeref:typename:const char *	file:
__anon0f7035d9250d	fio.h	/^extern void fio_options_mem_dupe(struct thread_data *);$/;"	z	prototype:fio_options_mem_dupe	typeref:struct:thread_data *	file:
__anon0f7035d9260d	fio.h	/^extern void td_fill_rand_seeds(struct thread_data *);$/;"	z	prototype:td_fill_rand_seeds	typeref:struct:thread_data *	file:
__anon0f7035d9270d	fio.h	/^extern void td_fill_verify_state_seed(struct thread_data *);$/;"	z	prototype:td_fill_verify_state_seed	typeref:struct:thread_data *	file:
__anon0f7035d9280d	fio.h	/^extern void add_job_opts(const char **, int);$/;"	z	prototype:add_job_opts	typeref:typename:const char **	file:
__anon0f7035d9290d	fio.h	/^extern void add_job_opts(const char **, int);$/;"	z	prototype:add_job_opts	typeref:typename:int	file:
__anon0f7035d92a0d	fio.h	/^extern int ioengine_load(struct thread_data *);$/;"	z	prototype:ioengine_load	typeref:struct:thread_data *	file:
__anon0f7035d92b0d	fio.h	/^extern int fio_set_fd_nonblocking(int, const char *);$/;"	z	prototype:fio_set_fd_nonblocking	typeref:typename:int	file:
__anon0f7035d92c0d	fio.h	/^extern int fio_set_fd_nonblocking(int, const char *);$/;"	z	prototype:fio_set_fd_nonblocking	typeref:typename:const char *	file:
__anon0f7035d92d0d	fio.h	/^extern void print_status_init(int);$/;"	z	prototype:print_status_init	typeref:typename:int	file:
__anon0f7035d92e03	fio.h	/^enum {$/;"	g
__anon0f7035d92f0d	fio.h	/^extern void td_set_runstate(struct thread_data *, int);$/;"	z	prototype:td_set_runstate	typeref:struct:thread_data *	file:
__anon0f7035d9300d	fio.h	/^extern void td_set_runstate(struct thread_data *, int);$/;"	z	prototype:td_set_runstate	typeref:typename:int	file:
__anon0f7035d9310d	fio.h	/^extern int td_bump_runstate(struct thread_data *, int);$/;"	z	prototype:td_bump_runstate	typeref:struct:thread_data *	file:
__anon0f7035d9320d	fio.h	/^extern int td_bump_runstate(struct thread_data *, int);$/;"	z	prototype:td_bump_runstate	typeref:typename:int	file:
__anon0f7035d9330d	fio.h	/^extern void td_restore_runstate(struct thread_data *, int);$/;"	z	prototype:td_restore_runstate	typeref:struct:thread_data *	file:
__anon0f7035d9340d	fio.h	/^extern void td_restore_runstate(struct thread_data *, int);$/;"	z	prototype:td_restore_runstate	typeref:typename:int	file:
__anon0f7035d93503	fio.h	/^enum {$/;"	g
__anon0f7035d9360d	fio.h	/^extern void fio_terminate_threads(unsigned int, unsigned int);$/;"	z	prototype:fio_terminate_threads	typeref:typename:unsigned int	file:
__anon0f7035d9370d	fio.h	/^extern void fio_terminate_threads(unsigned int, unsigned int);$/;"	z	prototype:fio_terminate_threads	typeref:typename:unsigned int	file:
__anon0f7035d9380d	fio.h	/^extern void fio_mark_td_terminate(struct thread_data *);$/;"	z	prototype:fio_mark_td_terminate	typeref:struct:thread_data *	file:
__anon0f7035d9390d	fio.h	/^extern int __must_check fio_pin_memory(struct thread_data *);$/;"	z	prototype:fio_pin_memory	typeref:struct:thread_data *	file:
__anon0f7035d93a0d	fio.h	/^extern void fio_unpin_memory(struct thread_data *);$/;"	z	prototype:fio_unpin_memory	typeref:struct:thread_data *	file:
__anon0f7035d93b0d	fio.h	/^extern int __must_check allocate_io_mem(struct thread_data *);$/;"	z	prototype:allocate_io_mem	typeref:struct:thread_data *	file:
__anon0f7035d93c0d	fio.h	/^extern void free_io_mem(struct thread_data *);$/;"	z	prototype:free_io_mem	typeref:struct:thread_data *	file:
__anon0f7035d93d0d	fio.h	/^extern void reset_all_stats(struct thread_data *);$/;"	z	prototype:reset_all_stats	typeref:struct:thread_data *	file:
__anon0f7035d93e0d	fio.h	/^extern void lat_target_check(struct thread_data *);$/;"	z	prototype:lat_target_check	typeref:struct:thread_data *	file:
__anon0f7035d93f0d	fio.h	/^extern void lat_target_init(struct thread_data *);$/;"	z	prototype:lat_target_init	typeref:struct:thread_data *	file:
__anon0f7035d9400d	fio.h	/^extern void lat_target_reset(struct thread_data *);$/;"	z	prototype:lat_target_reset	typeref:struct:thread_data *	file:
__anon0f7035d9410d	fio.h	/^extern const char *fio_get_arch_string(int);$/;"	z	prototype:fio_get_arch_string	typeref:typename:int	file:
__anon0f7035d9420d	fio.h	/^extern const char *fio_get_os_string(int);$/;"	z	prototype:fio_get_os_string	typeref:typename:int	file:
__anon0f7035d94303	fio.h	/^enum {$/;"	g
__anon0f7035d94403	fio.h	/^enum {$/;"	g
__anon0f7035d94503	fio.h	/^enum {$/;"	g
__anon0f7035d94603	fio.h	/^enum {$/;"	g
__anon0f7035d9470d	fio.h	/^extern void exec_trigger(const char *);$/;"	z	prototype:exec_trigger	typeref:typename:const char *	file:
__anon0fdff11d010d	log.h	/^extern size_t __log_buf(struct buf_output *, const char *format, ...) __attribute__ ((__format__/;"	z	prototype:__log_buf	typeref:struct:buf_output *	file:
__anon0fdff11d020d	log.h	/^extern size_t log_valist(const char *str, va_list);$/;"	z	prototype:log_valist	typeref:typename:va_list	file:
__anon0fdff11d030d	log.h	/^extern void log_prevalist(int type, const char *str, va_list);$/;"	z	prototype:log_prevalist	typeref:typename:va_list	file:
__anon0fdff11d0403	log.h	/^enum {$/;"	g
__anon1371dc5c010d	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	z	prototype:num2str	typeref:typename:uint64_t	file:
__anon1371dc5c020d	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	z	prototype:num2str	typeref:typename:int	file:
__anon1371dc5c030d	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	z	prototype:num2str	typeref:typename:int	file:
__anon1371dc5c040d	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	z	prototype:num2str	typeref:typename:int	file:
__anon13aa3979010a	lib/ieee754.h	/^	union {$/;"	u	struct:fio_fp64
__anon1c8a8417010a	stat.h	/^	union {$/;"	u	struct:thread_stat
__anon1c8a8417020a	stat.h	/^	union {$/;"	u	struct:thread_stat
__anon1c8a8417030a	stat.h	/^	union {$/;"	u	struct:thread_stat
__anon1c8a8417040a	stat.h	/^	union {$/;"	u	struct:thread_stat
__anon1c8a8417050d	stat.h	/^extern struct json_object * show_thread_status(struct thread_stat *ts, struct group_run_stats *r/;"	z	prototype:show_thread_status	typeref:struct:flist_head *	file:
__anon1c8a8417060d	stat.h	/^extern struct json_object * show_thread_status(struct thread_stat *ts, struct group_run_stats *r/;"	z	prototype:show_thread_status	typeref:struct:buf_output *	file:
__anon1c8a8417070d	stat.h	/^extern void show_group_stats(struct group_run_stats *rs, struct buf_output *);$/;"	z	prototype:show_group_stats	typeref:struct:buf_output *	file:
__anon1c8a8417080d	stat.h	/^extern void reset_io_stats(struct thread_data *);$/;"	z	prototype:reset_io_stats	typeref:struct:thread_data *	file:
__anon1c8a8417090d	stat.h	/^extern void update_rusage_stat(struct thread_data *);$/;"	z	prototype:update_rusage_stat	typeref:struct:thread_data *	file:
__anon1c8a84170a0d	stat.h	/^extern void clear_rusage_stat(struct thread_data *);$/;"	z	prototype:clear_rusage_stat	typeref:struct:thread_data *	file:
__anon1c8a84170b0d	stat.h	/^extern void add_lat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_lat_sample	typeref:struct:thread_data *	file:
__anon1c8a84170c0d	stat.h	/^extern void add_lat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_lat_sample	typeref:typename:unsigned long long	file:
__anon1c8a84170d0d	stat.h	/^			   unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_lat_sample	typeref:typename:unsigned long long	file:
__anon1c8a84170e0d	stat.h	/^			   unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_lat_sample	typeref:typename:uint64_t	file:
__anon1c8a84170f0d	stat.h	/^			   unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_lat_sample	typeref:typename:unsigned int	file:
__anon1c8a8417100d	stat.h	/^			   unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_lat_sample	typeref:typename:unsigned short	file:
__anon1c8a8417110d	stat.h	/^extern void add_clat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_clat_sample	typeref:struct:thread_data *	file:
__anon1c8a8417120d	stat.h	/^extern void add_clat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_clat_sample	typeref:typename:unsigned long long	file:
__anon1c8a8417130d	stat.h	/^			    unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_clat_sample	typeref:typename:unsigned long long	file:
__anon1c8a8417140d	stat.h	/^			    unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_clat_sample	typeref:typename:uint64_t	file:
__anon1c8a8417150d	stat.h	/^			    unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_clat_sample	typeref:typename:unsigned int	file:
__anon1c8a8417160d	stat.h	/^			    unsigned long long, uint64_t, unsigned int, unsigned short);$/;"	z	prototype:add_clat_sample	typeref:typename:unsigned short	file:
__anon1c8a8417170d	stat.h	/^extern void add_slat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_slat_sample	typeref:struct:thread_data *	file:
__anon1c8a8417180d	stat.h	/^extern void add_slat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_slat_sample	typeref:typename:unsigned long long	file:
__anon1c8a8417190d	stat.h	/^				unsigned long long, uint64_t, unsigned int);$/;"	z	prototype:add_slat_sample	typeref:typename:unsigned long long	file:
__anon1c8a84171a0d	stat.h	/^				unsigned long long, uint64_t, unsigned int);$/;"	z	prototype:add_slat_sample	typeref:typename:uint64_t	file:
__anon1c8a84171b0d	stat.h	/^				unsigned long long, uint64_t, unsigned int);$/;"	z	prototype:add_slat_sample	typeref:typename:unsigned int	file:
__anon1c8a84171c0d	stat.h	/^extern void add_agg_sample(union io_sample_data, enum fio_ddir, unsigned long long);$/;"	z	prototype:add_agg_sample	typeref:typename:unsigned long long	file:
__anon1c8a84171d0d	stat.h	/^extern void add_iops_sample(struct thread_data *, struct io_u *,$/;"	z	prototype:add_iops_sample	typeref:struct:thread_data *	file:
__anon1c8a84171e0d	stat.h	/^extern void add_iops_sample(struct thread_data *, struct io_u *,$/;"	z	prototype:add_iops_sample	typeref:struct:io_u *	file:
__anon1c8a84171f0d	stat.h	/^				unsigned int);$/;"	z	prototype:add_iops_sample	typeref:typename:unsigned int	file:
__anon1c8a8417200d	stat.h	/^extern void add_bw_sample(struct thread_data *, struct io_u *,$/;"	z	prototype:add_bw_sample	typeref:struct:thread_data *	file:
__anon1c8a8417210d	stat.h	/^extern void add_bw_sample(struct thread_data *, struct io_u *,$/;"	z	prototype:add_bw_sample	typeref:struct:io_u *	file:
__anon1c8a8417220d	stat.h	/^				unsigned int, unsigned long long);$/;"	z	prototype:add_bw_sample	typeref:typename:unsigned int	file:
__anon1c8a8417230d	stat.h	/^				unsigned int, unsigned long long);$/;"	z	prototype:add_bw_sample	typeref:typename:unsigned long long	file:
__anon1c8a8417240d	stat.h	/^extern void free_clat_prio_stats(struct thread_stat *);$/;"	z	prototype:free_clat_prio_stats	typeref:struct:thread_stat *	file:
__anon1c8a8417250d	stat.h	/^extern int alloc_clat_prio_stat_ddir(struct thread_stat *, enum fio_ddir, int);$/;"	z	prototype:alloc_clat_prio_stat_ddir	typeref:struct:thread_stat *	file:
__anon1c8a8417260d	stat.h	/^extern int alloc_clat_prio_stat_ddir(struct thread_stat *, enum fio_ddir, int);$/;"	z	prototype:alloc_clat_prio_stat_ddir	typeref:typename:int	file:
__anon1c8a8417270d	stat.h	/^extern void print_disk_util(struct disk_util_stat *, struct disk_util_agg *, int terse, struct b/;"	z	prototype:print_disk_util	typeref:struct:disk_util_stat *	file:
__anon1c8a8417280d	stat.h	/^extern void print_disk_util(struct disk_util_stat *, struct disk_util_agg *, int terse, struct b/;"	z	prototype:print_disk_util	typeref:struct:disk_util_agg *	file:
__anon1c8a8417290d	stat.h	/^extern void print_disk_util(struct disk_util_stat *, struct disk_util_agg *, int terse, struct b/;"	z	prototype:print_disk_util	typeref:struct:buf_output *	file:
__anon1c9669cd010d	engines/glusterfs.c	/^static FLIST_HEAD(glfs_list_head);$/;"	z	prototype:FLIST_HEAD	typeref:typename:glfs_list_head	file:
__anon2306211e010d	os/windows/posix/include/sys/wait.h	/^pid_t waitpid(pid_t, int *stat_loc, int options);$/;"	z	prototype:waitpid	typeref:typename:pid_t	file:
__anon2bbba927010a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_sqe
__anon2bbba927020a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_sqe
__anon2bbba927030a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_sqe
__anon2bbba927040a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_sqe
__anon2bbba927050a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_sqe
__anon2bbba9270603	os/linux/io_uring.h	/^enum {$/;"	g
__anon2bbba9270703	os/linux/io_uring.h	/^enum {$/;"	g
__anon2bbba9270803	os/linux/io_uring.h	/^enum {$/;"	g
__anon2bbba9270903	os/linux/io_uring.h	/^enum {$/;"	g
__anon2bbba9270a03	os/linux/io_uring.h	/^enum {$/;"	g
__anon2bbba9270b0a	os/linux/io_uring.h	/^	union {$/;"	u	struct:io_uring_restriction
__anon2bbba9270c03	os/linux/io_uring.h	/^enum {$/;"	g
__anon2c828642010d	crc/crc32c.h	/^extern uint32_t crc32c_sw(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_sw	typeref:typename:unsigned char const *	file:
__anon2c828642020d	crc/crc32c.h	/^extern uint32_t crc32c_sw(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_sw	typeref:typename:unsigned long	file:
__anon2c828642030d	crc/crc32c.h	/^extern uint32_t crc32c_arm64(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_arm64	typeref:typename:unsigned char const *	file:
__anon2c828642040d	crc/crc32c.h	/^extern uint32_t crc32c_arm64(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_arm64	typeref:typename:unsigned long	file:
__anon2c828642050d	crc/crc32c.h	/^extern uint32_t crc32c_intel(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_intel	typeref:typename:unsigned char const *	file:
__anon2c828642060d	crc/crc32c.h	/^extern uint32_t crc32c_intel(unsigned char const *, unsigned long);$/;"	z	prototype:crc32c_intel	typeref:typename:unsigned long	file:
__anon2f80e7de010d	thread_options.h	/^extern void convert_thread_options_to_net(struct thread_options_pack *top, struct thread_options/;"	z	prototype:convert_thread_options_to_net	typeref:struct:thread_options *	file:
__anon2f80e7de020d	thread_options.h	/^extern int fio_test_cconv(struct thread_options *);$/;"	z	prototype:fio_test_cconv	typeref:struct:thread_options *	file:
__anon316b4bb60103	oslib/getopt.h	/^enum {$/;"	g
__anon316b4bb6020d	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	z	prototype:getopt_long_only	typeref:typename:int	file:
__anon316b4bb6030d	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	z	prototype:getopt_long_only	typeref:typename:char * const *	file:
__anon316b4bb6040d	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	z	prototype:getopt_long_only	typeref:typename:const char *	file:
__anon316b4bb6050d	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	z	prototype:getopt_long_only	typeref:typename:const struct option *	file:
__anon316b4bb6060d	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	z	prototype:getopt_long_only	typeref:typename:int *	file:
__anon3866082f010d	crc/sha1.h	/^void fio_sha1_init(struct fio_sha1_ctx *);$/;"	z	prototype:fio_sha1_init	typeref:struct:fio_sha1_ctx *	file:
__anon3866082f020d	crc/sha1.h	/^void fio_sha1_update(struct fio_sha1_ctx *, const void *dataIn, unsigned long len);$/;"	z	prototype:fio_sha1_update	typeref:struct:fio_sha1_ctx *	file:
__anon3866082f030d	crc/sha1.h	/^void fio_sha1_final(struct fio_sha1_ctx *);$/;"	z	prototype:fio_sha1_final	typeref:struct:fio_sha1_ctx *	file:
__anon38a0d7bc0103	os/os-android.h	/^enum {$/;"	g
__anon38a0d7bc0203	os/os-android.h	/^enum {$/;"	g
__anon3a55ab02010d	pshared.h	/^extern int mutex_init_pshared_with_type(pthread_mutex_t *, int);$/;"	z	prototype:mutex_init_pshared_with_type	typeref:typename:pthread_mutex_t *	file:
__anon3a55ab02020d	pshared.h	/^extern int mutex_init_pshared_with_type(pthread_mutex_t *, int);$/;"	z	prototype:mutex_init_pshared_with_type	typeref:typename:int	file:
__anon3a55ab02030d	pshared.h	/^extern int mutex_init_pshared(pthread_mutex_t *);$/;"	z	prototype:mutex_init_pshared	typeref:typename:pthread_mutex_t *	file:
__anon3a55ab02040d	pshared.h	/^extern int cond_init_pshared(pthread_cond_t *);$/;"	z	prototype:cond_init_pshared	typeref:typename:pthread_cond_t *	file:
__anon3a55ab02050d	pshared.h	/^extern int mutex_cond_init_pshared(pthread_mutex_t *, pthread_cond_t *);$/;"	z	prototype:mutex_cond_init_pshared	typeref:typename:pthread_mutex_t *	file:
__anon3a55ab02060d	pshared.h	/^extern int mutex_cond_init_pshared(pthread_mutex_t *, pthread_cond_t *);$/;"	z	prototype:mutex_cond_init_pshared	typeref:typename:pthread_cond_t *	file:
__anon3a8fe31d0103	crc/test.c	/^enum {$/;"	g	file:
__anon3e4b3c52010d	helper_thread.h	/^extern int helper_thread_create(struct fio_sem *, struct sk_out *);$/;"	z	prototype:helper_thread_create	typeref:struct:fio_sem *	file:
__anon3e4b3c52020d	helper_thread.h	/^extern int helper_thread_create(struct fio_sem *, struct sk_out *);$/;"	z	prototype:helper_thread_create	typeref:struct:sk_out *	file:
__anon3e5d7966010d	steadystate.h	/^extern void steadystate_free(struct thread_data *);$/;"	z	prototype:steadystate_free	typeref:struct:thread_data *	file:
__anon3e5d7966020d	steadystate.h	/^extern int td_steadystate_init(struct thread_data *);$/;"	z	prototype:td_steadystate_init	typeref:struct:thread_data *	file:
__anon3e5d7966030d	steadystate.h	/^extern uint64_t steadystate_bw_mean(struct thread_stat *);$/;"	z	prototype:steadystate_bw_mean	typeref:struct:thread_stat *	file:
__anon3e5d7966040d	steadystate.h	/^extern uint64_t steadystate_iops_mean(struct thread_stat *);$/;"	z	prototype:steadystate_iops_mean	typeref:struct:thread_stat *	file:
__anon3e5d79660503	steadystate.h	/^enum {$/;"	g
__anon3e5d79660603	steadystate.h	/^enum {$/;"	g
__anon4a64d75a010d	lib/bloom.h	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len, bool);$/;"	z	prototype:bloom_string	typeref:typename:bool	file:
__anon4f09d8d5010d	client.c	/^static FLIST_HEAD(client_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:client_list	file:
__anon4f09d8d5020d	client.c	/^static FLIST_HEAD(eta_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:eta_list	file:
__anon4f09d8d5030d	client.c	/^static FLIST_HEAD(arg_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:arg_list	file:
__anon4f09d8d5040d	client.c	/^static struct cmd_iolog_pdu *convert_iolog(struct fio_net_cmd *, bool *);$/;"	z	prototype:convert_iolog	typeref:struct:fio_net_cmd *	file:
__anon4f09d8d5050d	client.c	/^static struct cmd_iolog_pdu *convert_iolog(struct fio_net_cmd *, bool *);$/;"	z	prototype:convert_iolog	typeref:typename:bool *	file:
__anon4f09d8da0103	client.h	/^enum {$/;"	g
__anon4f09d8da020a	client.h	/^	union {$/;"	u	struct:fio_client
__anon4f09d8da030d	client.h	/^extern int fio_handle_client(struct fio_client *);$/;"	z	prototype:fio_handle_client	typeref:struct:fio_client *	file:
__anon4f09d8da0403	client.h	/^enum {$/;"	g
__anon4f09d8da050d	client.h	/^extern int fio_client_connect(struct fio_client *);$/;"	z	prototype:fio_client_connect	typeref:struct:fio_client *	file:
__anon4f09d8da060d	client.h	/^extern int fio_start_client(struct fio_client *);$/;"	z	prototype:fio_start_client	typeref:struct:fio_client *	file:
__anon4f09d8da070d	client.h	/^extern int fio_clients_send_ini(const char *);$/;"	z	prototype:fio_clients_send_ini	typeref:typename:const char *	file:
__anon4f09d8da080d	client.h	/^extern int fio_client_send_ini(struct fio_client *, const char *, bool);$/;"	z	prototype:fio_client_send_ini	typeref:struct:fio_client *	file:
__anon4f09d8da090d	client.h	/^extern int fio_client_send_ini(struct fio_client *, const char *, bool);$/;"	z	prototype:fio_client_send_ini	typeref:typename:const char *	file:
__anon4f09d8da0a0d	client.h	/^extern int fio_client_send_ini(struct fio_client *, const char *, bool);$/;"	z	prototype:fio_client_send_ini	typeref:typename:bool	file:
__anon4f09d8da0b0d	client.h	/^extern int fio_handle_clients(struct client_ops *);$/;"	z	prototype:fio_handle_clients	typeref:struct:client_ops *	file:
__anon4f09d8da0c0d	client.h	/^extern int fio_client_add(struct client_ops *, const char *, void **);$/;"	z	prototype:fio_client_add	typeref:struct:client_ops *	file:
__anon4f09d8da0d0d	client.h	/^extern int fio_client_add(struct client_ops *, const char *, void **);$/;"	z	prototype:fio_client_add	typeref:typename:const char *	file:
__anon4f09d8da0e0d	client.h	/^extern int fio_client_add(struct client_ops *, const char *, void **);$/;"	z	prototype:fio_client_add	typeref:typename:void **	file:
__anon4f09d8da0f0d	client.h	/^extern struct fio_client *fio_client_add_explicit(struct client_ops *, const char *, int, int);$/;"	z	prototype:fio_client_add_explicit	typeref:struct:client_ops *	file:
__anon4f09d8da100d	client.h	/^extern struct fio_client *fio_client_add_explicit(struct client_ops *, const char *, int, int);$/;"	z	prototype:fio_client_add_explicit	typeref:typename:const char *	file:
__anon4f09d8da110d	client.h	/^extern struct fio_client *fio_client_add_explicit(struct client_ops *, const char *, int, int);$/;"	z	prototype:fio_client_add_explicit	typeref:typename:int	file:
__anon4f09d8da120d	client.h	/^extern struct fio_client *fio_client_add_explicit(struct client_ops *, const char *, int, int);$/;"	z	prototype:fio_client_add_explicit	typeref:typename:int	file:
__anon4f09d8da130d	client.h	/^extern void fio_client_add_cmd_option(void *, const char *);$/;"	z	prototype:fio_client_add_cmd_option	typeref:typename:void *	file:
__anon4f09d8da140d	client.h	/^extern void fio_client_add_cmd_option(void *, const char *);$/;"	z	prototype:fio_client_add_cmd_option	typeref:typename:const char *	file:
__anon4f09d8da150d	client.h	/^extern int fio_client_add_ini_file(void *, const char *, bool);$/;"	z	prototype:fio_client_add_ini_file	typeref:typename:void *	file:
__anon4f09d8da160d	client.h	/^extern int fio_client_add_ini_file(void *, const char *, bool);$/;"	z	prototype:fio_client_add_ini_file	typeref:typename:const char *	file:
__anon4f09d8da170d	client.h	/^extern int fio_client_add_ini_file(void *, const char *, bool);$/;"	z	prototype:fio_client_add_ini_file	typeref:typename:bool	file:
__anon4f09d8da180d	client.h	/^extern int fio_client_terminate(struct fio_client *);$/;"	z	prototype:fio_client_terminate	typeref:struct:fio_client *	file:
__anon4f09d8da190d	client.h	/^extern struct fio_client *fio_get_client(struct fio_client *);$/;"	z	prototype:fio_get_client	typeref:struct:fio_client *	file:
__anon4f09d8da1a0d	client.h	/^extern void fio_put_client(struct fio_client *);$/;"	z	prototype:fio_put_client	typeref:struct:fio_client *	file:
__anon4f09d8da1b0d	client.h	/^extern int fio_client_update_options(struct fio_client *, struct thread_options *, uint64_t *);$/;"	z	prototype:fio_client_update_options	typeref:struct:fio_client *	file:
__anon4f09d8da1c0d	client.h	/^extern int fio_client_update_options(struct fio_client *, struct thread_options *, uint64_t *);$/;"	z	prototype:fio_client_update_options	typeref:struct:thread_options *	file:
__anon4f09d8da1d0d	client.h	/^extern int fio_client_update_options(struct fio_client *, struct thread_options *, uint64_t *);$/;"	z	prototype:fio_client_update_options	typeref:typename:uint64_t *	file:
__anon4f09d8da1e0d	client.h	/^extern int fio_client_wait_for_reply(struct fio_client *, uint64_t);$/;"	z	prototype:fio_client_wait_for_reply	typeref:struct:fio_client *	file:
__anon4f09d8da1f0d	client.h	/^extern int fio_client_wait_for_reply(struct fio_client *, uint64_t);$/;"	z	prototype:fio_client_wait_for_reply	typeref:typename:uint64_t	file:
__anon4f09d8da200d	client.h	/^extern int fio_clients_send_trigger(const char *);$/;"	z	prototype:fio_clients_send_trigger	typeref:typename:const char *	file:
__anon4f09d8da2103	client.h	/^enum {$/;"	g
__anon509f38480103	engines/sg.c	/^enum {$/;"	g	file:
__anon5399c5260103	arch/arch.h	/^enum {$/;"	g
__anon5399c5260203	arch/arch.h	/^enum {$/;"	g
__anon55577a26010a	lib/rand.h	/^	union {$/;"	u	struct:frand_state
__anon55577a26020d	lib/rand.h	/^extern void init_rand(struct frand_state *, bool);$/;"	z	prototype:init_rand	typeref:struct:frand_state *	file:
__anon55577a26030d	lib/rand.h	/^extern void init_rand(struct frand_state *, bool);$/;"	z	prototype:init_rand	typeref:typename:bool	file:
__anon55577a26040d	lib/rand.h	/^extern void init_rand_seed(struct frand_state *, uint64_t seed, bool);$/;"	z	prototype:init_rand_seed	typeref:struct:frand_state *	file:
__anon55577a26050d	lib/rand.h	/^extern void init_rand_seed(struct frand_state *, uint64_t seed, bool);$/;"	z	prototype:init_rand_seed	typeref:typename:bool	file:
__anon55577a26060d	lib/rand.h	/^extern uint64_t fill_random_buf(struct frand_state *, void *buf, unsigned int len);$/;"	z	prototype:fill_random_buf	typeref:struct:frand_state *	file:
__anon55577a26070d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:uint64_t	file:
__anon55577a26080d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:void *	file:
__anon55577a26090d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a260a0d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a260b0d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a260c0d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:char *	file:
__anon55577a260d0d	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	z	prototype:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a260e0d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:struct:frand_state *	file:
__anon55577a260f0d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:void *	file:
__anon55577a26100d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a26110d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a26120d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon55577a26130d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:char *	file:
__anon55577a26140d	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	z	prototype:fill_random_buf_percentage	typeref:typename:unsigned int	file:
__anon5bcb2cde0103	workqueue.c	/^enum {$/;"	g	file:
__anon5e318574010d	os/windows/posix.c	/^extern unsigned long mtime_since_now(struct timespec *);$/;"	z	prototype:mtime_since_now	typeref:struct:timespec *	file:
__anon5e318574020d	os/windows/posix.c	/^extern void fio_gettime(struct timespec *, void *);$/;"	z	prototype:fio_gettime	typeref:struct:timespec *	file:
__anon5e318574030d	os/windows/posix.c	/^extern void fio_gettime(struct timespec *, void *);$/;"	z	prototype:fio_gettime	typeref:typename:void *	file:
__anon5e318579010d	os/windows/posix.h	/^extern int inet_aton(const char *, struct in_addr *);$/;"	z	prototype:inet_aton	typeref:typename:const char *	file:
__anon5e318579020d	os/windows/posix.h	/^extern int inet_aton(const char *, struct in_addr *);$/;"	z	prototype:inet_aton	typeref:struct:in_addr *	file:
__anon631ec9eb0103	os/os-linux.h	/^enum {$/;"	g
__anon631ec9eb0203	os/os-linux.h	/^enum {$/;"	g
__anon632da9cc0103	t/genzipf.c	/^enum {$/;"	g	file:
__anon632da9cc0203	t/genzipf.c	/^enum {$/;"	g	file:
__anon63d57a09010a	engines/ime.c	/^	union {$/;"	u	struct:ime_data	file:
__anon642bd1550103	engines/net.c	/^enum {$/;"	g	file:
__anon653345a5010d	lib/rbtree.h	/^extern void rb_insert_color(struct fio_rb_node *, struct rb_root *);$/;"	z	prototype:rb_insert_color	typeref:struct:fio_rb_node *	file:
__anon653345a5020d	lib/rbtree.h	/^extern void rb_insert_color(struct fio_rb_node *, struct rb_root *);$/;"	z	prototype:rb_insert_color	typeref:struct:rb_root *	file:
__anon653345a5030d	lib/rbtree.h	/^extern void rb_erase(struct fio_rb_node *, struct rb_root *);$/;"	z	prototype:rb_erase	typeref:struct:fio_rb_node *	file:
__anon653345a5040d	lib/rbtree.h	/^extern void rb_erase(struct fio_rb_node *, struct rb_root *);$/;"	z	prototype:rb_erase	typeref:struct:rb_root *	file:
__anon653345a5050d	lib/rbtree.h	/^extern struct fio_rb_node *rb_first(struct rb_root *);$/;"	z	prototype:rb_first	typeref:struct:rb_root *	file:
__anon653345a5060d	lib/rbtree.h	/^extern struct fio_rb_node *rb_next(const struct fio_rb_node *);$/;"	z	prototype:rb_next	typeref:typename:const struct fio_rb_node *	file:
__anon6ad455710103	crc/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	g	file:
__anon6ad455710203	crc/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	g	file:
__anon6ad455760103	crc/xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	g
__anon6ad455760208	crc/xxhash.h	/^typedef struct { long long ll[(XXH32_SIZEOFSTATE+(sizeof(long long)-1))\/sizeof(long long)]; } X/;"	s
__anon6d690fcc010d	crc/fnv.h	/^uint64_t fnv(const void *, uint32_t, uint64_t);$/;"	z	prototype:fnv	typeref:typename:const void *	file:
__anon6d690fcc020d	crc/fnv.h	/^uint64_t fnv(const void *, uint32_t, uint64_t);$/;"	z	prototype:fnv	typeref:typename:uint32_t	file:
__anon6d690fcc030d	crc/fnv.h	/^uint64_t fnv(const void *, uint32_t, uint64_t);$/;"	z	prototype:fnv	typeref:typename:uint64_t	file:
__anon6de12b08010d	crc/md5.h	/^extern void fio_md5_update(struct fio_md5_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_md5_update	typeref:struct:fio_md5_ctx *	file:
__anon6de12b08020d	crc/md5.h	/^extern void fio_md5_update(struct fio_md5_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_md5_update	typeref:typename:const uint8_t *	file:
__anon6de12b08030d	crc/md5.h	/^extern void fio_md5_update(struct fio_md5_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_md5_update	typeref:typename:unsigned int	file:
__anon6de12b08040d	crc/md5.h	/^extern void fio_md5_final(struct fio_md5_ctx *);$/;"	z	prototype:fio_md5_final	typeref:struct:fio_md5_ctx *	file:
__anon6de12b08050d	crc/md5.h	/^extern void fio_md5_init(struct fio_md5_ctx *);$/;"	z	prototype:fio_md5_init	typeref:struct:fio_md5_ctx *	file:
__anon73f648e7010d	profile.c	/^static FLIST_HEAD(profile_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:profile_list	file:
__anon73f648ec010d	profile.h	/^int register_profile(struct profile_ops *);$/;"	z	prototype:register_profile	typeref:struct:profile_ops *	file:
__anon73f648ec020d	profile.h	/^void unregister_profile(struct profile_ops *);$/;"	z	prototype:unregister_profile	typeref:struct:profile_ops *	file:
__anon73f648ec030d	profile.h	/^int load_profile(const char *);$/;"	z	prototype:load_profile	typeref:typename:const char *	file:
__anon73f648ec040d	profile.h	/^struct profile_ops *find_profile(const char *);$/;"	z	prototype:find_profile	typeref:typename:const char *	file:
__anon73f648ec050d	profile.h	/^void profile_add_hooks(struct thread_data *);$/;"	z	prototype:profile_add_hooks	typeref:struct:thread_data *	file:
__anon73f648ec060d	profile.h	/^int profile_td_init(struct thread_data *);$/;"	z	prototype:profile_td_init	typeref:struct:thread_data *	file:
__anon73f648ec070d	profile.h	/^void profile_td_exit(struct thread_data *);$/;"	z	prototype:profile_td_exit	typeref:struct:thread_data *	file:
__anon741282ae0103	os/os.h	/^enum {$/;"	g
__anon741282ae0203	os/os.h	/^typedef enum {$/;"	g
__anon79ffcf210103	engines/cmdprio.h	/^enum {$/;"	g
__anon7b38c052010d	lib/mountcheck.h	/^extern int device_is_mounted(const char *);$/;"	z	prototype:device_is_mounted	typeref:typename:const char *	file:
__anon7d542ecd010d	rwlock.h	/^extern void fio_rwlock_read(struct fio_rwlock *);$/;"	z	prototype:fio_rwlock_read	typeref:struct:fio_rwlock *	file:
__anon7d542ecd020d	rwlock.h	/^extern void fio_rwlock_write(struct fio_rwlock *);$/;"	z	prototype:fio_rwlock_write	typeref:struct:fio_rwlock *	file:
__anon7d542ecd030d	rwlock.h	/^extern void fio_rwlock_unlock(struct fio_rwlock *);$/;"	z	prototype:fio_rwlock_unlock	typeref:struct:fio_rwlock *	file:
__anon7d542ecd040d	rwlock.h	/^extern void fio_rwlock_remove(struct fio_rwlock *);$/;"	z	prototype:fio_rwlock_remove	typeref:struct:fio_rwlock *	file:
__anon7f5f40680103	idletime.h	/^enum {$/;"	g
__anon7f5f40680203	idletime.h	/^enum {$/;"	g
__anon7f5f4068030d	idletime.h	/^extern int fio_idle_prof_parse_opt(const char *);$/;"	z	prototype:fio_idle_prof_parse_opt	typeref:typename:const char *	file:
__anon7f5f4068040d	idletime.h	/^extern void show_idle_prof_stats(int, struct json_object *, struct buf_output *);$/;"	z	prototype:show_idle_prof_stats	typeref:typename:int	file:
__anon7f5f4068050d	idletime.h	/^extern void show_idle_prof_stats(int, struct json_object *, struct buf_output *);$/;"	z	prototype:show_idle_prof_stats	typeref:struct:json_object *	file:
__anon7f5f4068060d	idletime.h	/^extern void show_idle_prof_stats(int, struct json_object *, struct buf_output *);$/;"	z	prototype:show_idle_prof_stats	typeref:struct:buf_output *	file:
__anon892686fd0103	fio_sem.h	/^enum {$/;"	g
__anon892686fd020d	fio_sem.h	/^extern int __fio_sem_init(struct fio_sem *, int);$/;"	z	prototype:__fio_sem_init	typeref:struct:fio_sem *	file:
__anon892686fd030d	fio_sem.h	/^extern int __fio_sem_init(struct fio_sem *, int);$/;"	z	prototype:__fio_sem_init	typeref:typename:int	file:
__anon892686fd040d	fio_sem.h	/^extern struct fio_sem *fio_sem_init(int);$/;"	z	prototype:fio_sem_init	typeref:typename:int	file:
__anon892686fd050d	fio_sem.h	/^extern void __fio_sem_remove(struct fio_sem *);$/;"	z	prototype:__fio_sem_remove	typeref:struct:fio_sem *	file:
__anon892686fd060d	fio_sem.h	/^extern void fio_sem_remove(struct fio_sem *);$/;"	z	prototype:fio_sem_remove	typeref:struct:fio_sem *	file:
__anon892686fd070d	fio_sem.h	/^extern void fio_sem_up(struct fio_sem *);$/;"	z	prototype:fio_sem_up	typeref:struct:fio_sem *	file:
__anon892686fd080d	fio_sem.h	/^extern void fio_sem_down(struct fio_sem *);$/;"	z	prototype:fio_sem_down	typeref:struct:fio_sem *	file:
__anon892686fd090d	fio_sem.h	/^extern bool fio_sem_down_trylock(struct fio_sem *);$/;"	z	prototype:fio_sem_down_trylock	typeref:struct:fio_sem *	file:
__anon892686fd0a0d	fio_sem.h	/^extern int fio_sem_down_timeout(struct fio_sem *, unsigned int);$/;"	z	prototype:fio_sem_down_timeout	typeref:struct:fio_sem *	file:
__anon892686fd0b0d	fio_sem.h	/^extern int fio_sem_down_timeout(struct fio_sem *, unsigned int);$/;"	z	prototype:fio_sem_down_timeout	typeref:typename:unsigned int	file:
__anon8cfc2bff010d	crc/crc32.h	/^extern uint32_t fio_crc32(const void * const, unsigned long);$/;"	z	prototype:fio_crc32	typeref:typename:const void * const	file:
__anon8cfc2bff020d	crc/crc32.h	/^extern uint32_t fio_crc32(const void * const, unsigned long);$/;"	z	prototype:fio_crc32	typeref:typename:unsigned long	file:
__anon8cfdd9a4010d	crc/crc64.h	/^unsigned long long fio_crc64(const unsigned char *, unsigned long);$/;"	z	prototype:fio_crc64	typeref:typename:const unsigned char *	file:
__anon8cfdd9a4020d	crc/crc64.h	/^unsigned long long fio_crc64(const unsigned char *, unsigned long);$/;"	z	prototype:fio_crc64	typeref:typename:unsigned long	file:
__anon909c271d0103	engines/libcufile.c	/^enum {$/;"	g	file:
__anon931878090103	goptions.c	/^enum {$/;"	g	file:
__anon96035b58010d	os/os-solaris.h	/^extern int directio(int, int);$/;"	z	prototype:directio	typeref:typename:int	file:
__anon96035b58020d	os/os-solaris.h	/^extern int directio(int, int);$/;"	z	prototype:directio	typeref:typename:int	file:
__anon981ff9e3010d	blktrace.h	/^bool is_blktrace(const char *, int *);$/;"	z	prototype:is_blktrace	typeref:typename:const char *	file:
__anon981ff9e3020d	blktrace.h	/^bool is_blktrace(const char *, int *);$/;"	z	prototype:is_blktrace	typeref:typename:int *	file:
__anon981ff9e3030d	blktrace.h	/^bool init_blktrace_read(struct thread_data *, const char *, int);$/;"	z	prototype:init_blktrace_read	typeref:struct:thread_data *	file:
__anon981ff9e3040d	blktrace.h	/^bool init_blktrace_read(struct thread_data *, const char *, int);$/;"	z	prototype:init_blktrace_read	typeref:typename:const char *	file:
__anon981ff9e3050d	blktrace.h	/^bool init_blktrace_read(struct thread_data *, const char *, int);$/;"	z	prototype:init_blktrace_read	typeref:typename:int	file:
__anon999fa747010d	filesetup.c	/^static FLIST_HEAD(filename_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:filename_list	file:
__anon9bce43d6010d	parse.h	/^extern int parse_option(char *, const char *, const struct fio_option *,$/;"	z	prototype:parse_option	typeref:typename:char *	file:
__anon9bce43d6020d	parse.h	/^extern int parse_option(char *, const char *, const struct fio_option *,$/;"	z	prototype:parse_option	typeref:typename:const char *	file:
__anon9bce43d6030d	parse.h	/^extern int parse_option(char *, const char *, const struct fio_option *,$/;"	z	prototype:parse_option	typeref:typename:const struct fio_option *	file:
__anon9bce43d6040d	parse.h	/^			const struct fio_option **, void *,$/;"	z	prototype:parse_option	typeref:typename:const struct fio_option **	file:
__anon9bce43d6050d	parse.h	/^			const struct fio_option **, void *,$/;"	z	prototype:parse_option	typeref:typename:void *	file:
__anon9bce43d6060d	parse.h	/^			struct flist_head *);$/;"	z	prototype:parse_option	typeref:struct:flist_head *	file:
__anon9bce43d6070d	parse.h	/^extern void sort_options(char **, const struct fio_option *, int);$/;"	z	prototype:sort_options	typeref:typename:char **	file:
__anon9bce43d6080d	parse.h	/^extern void sort_options(char **, const struct fio_option *, int);$/;"	z	prototype:sort_options	typeref:typename:const struct fio_option *	file:
__anon9bce43d6090d	parse.h	/^extern void sort_options(char **, const struct fio_option *, int);$/;"	z	prototype:sort_options	typeref:typename:int	file:
__anon9bce43d60a0d	parse.h	/^			    const struct fio_option *, void *,$/;"	z	prototype:parse_cmd_option	typeref:typename:const struct fio_option *	file:
__anon9bce43d60b0d	parse.h	/^			    const struct fio_option *, void *,$/;"	z	prototype:parse_cmd_option	typeref:typename:void *	file:
__anon9bce43d60c0d	parse.h	/^			    struct flist_head *);$/;"	z	prototype:parse_cmd_option	typeref:struct:flist_head *	file:
__anon9bce43d60d0d	parse.h	/^extern int show_cmd_help(const struct fio_option *, const char *);$/;"	z	prototype:show_cmd_help	typeref:typename:const struct fio_option *	file:
__anon9bce43d60e0d	parse.h	/^extern int show_cmd_help(const struct fio_option *, const char *);$/;"	z	prototype:show_cmd_help	typeref:typename:const char *	file:
__anon9bce43d60f0d	parse.h	/^extern void fill_default_options(void *, const struct fio_option *);$/;"	z	prototype:fill_default_options	typeref:typename:void *	file:
__anon9bce43d6100d	parse.h	/^extern void fill_default_options(void *, const struct fio_option *);$/;"	z	prototype:fill_default_options	typeref:typename:const struct fio_option *	file:
__anon9bce43d6110d	parse.h	/^extern void options_init(struct fio_option *);$/;"	z	prototype:options_init	typeref:struct:fio_option *	file:
__anon9bce43d6120d	parse.h	/^extern void options_mem_dupe(const struct fio_option *, void *);$/;"	z	prototype:options_mem_dupe	typeref:typename:const struct fio_option *	file:
__anon9bce43d6130d	parse.h	/^extern void options_mem_dupe(const struct fio_option *, void *);$/;"	z	prototype:options_mem_dupe	typeref:typename:void *	file:
__anon9bce43d6140d	parse.h	/^extern void options_free(const struct fio_option *, void *);$/;"	z	prototype:options_free	typeref:typename:const struct fio_option *	file:
__anon9bce43d6150d	parse.h	/^extern void options_free(const struct fio_option *, void *);$/;"	z	prototype:options_free	typeref:typename:void *	file:
__anon9bce43d6160d	parse.h	/^extern void strip_blank_front(char **);$/;"	z	prototype:strip_blank_front	typeref:typename:char **	file:
__anon9bce43d6170d	parse.h	/^extern void strip_blank_end(char *);$/;"	z	prototype:strip_blank_end	typeref:typename:char *	file:
__anon9bce43d6180d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:const char *	file:
__anon9bce43d6190d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:long long *	file:
__anon9bce43d61a0d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:int	file:
__anon9bce43d61b0d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:void *	file:
__anon9bce43d61c0d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:int	file:
__anon9bce43d61d0d	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	z	prototype:str_to_decimal	typeref:typename:int	file:
__anon9bce43d61e0d	parse.h	/^extern int check_str_time(const char *p, long long *val, int);$/;"	z	prototype:check_str_time	typeref:typename:int	file:
__anon9d226d7f010d	filehash.h	/^extern struct fio_file *lookup_file_hash(const char *);$/;"	z	prototype:lookup_file_hash	typeref:typename:const char *	file:
__anon9d226d7f020d	filehash.h	/^extern struct fio_file *add_file_hash(struct fio_file *);$/;"	z	prototype:add_file_hash	typeref:struct:fio_file *	file:
__anon9d226d7f030d	filehash.h	/^extern void remove_file_hash(struct fio_file *);$/;"	z	prototype:remove_file_hash	typeref:struct:fio_file *	file:
__anon9d226d7f040d	filehash.h	/^extern bool file_bloom_exists(const char *, bool);$/;"	z	prototype:file_bloom_exists	typeref:typename:const char *	file:
__anon9d226d7f050d	filehash.h	/^extern bool file_bloom_exists(const char *, bool);$/;"	z	prototype:file_bloom_exists	typeref:typename:bool	file:
__anon9d7ba4c70103	lib/memcpy.c	/^enum {$/;"	g	file:
__anona13017500103	iolog.c	/^enum {$/;"	g	file:
__anona13017550103	iolog.h	/^enum {$/;"	g
__anona1301755020d	iolog.h	/^struct io_logs *iolog_cur_log(struct io_log *);$/;"	z	prototype:iolog_cur_log	typeref:struct:io_log *	file:
__anona1301755030d	iolog.h	/^uint64_t iolog_nr_samples(struct io_log *);$/;"	z	prototype:iolog_nr_samples	typeref:struct:io_log *	file:
__anona1301755040d	iolog.h	/^void regrow_logs(struct thread_data *);$/;"	z	prototype:regrow_logs	typeref:struct:thread_data *	file:
__anona13017550503	iolog.h	/^enum {$/;"	g
__anona1301755060a	iolog.h	/^	union {$/;"	u	struct:io_piece
__anona1301755070a	iolog.h	/^	union {$/;"	u	struct:io_piece
__anona1301755080d	iolog.h	/^extern int __must_check read_iolog_get(struct thread_data *, struct io_u *);$/;"	z	prototype:read_iolog_get	typeref:struct:thread_data *	file:
__anona1301755090d	iolog.h	/^extern int __must_check read_iolog_get(struct thread_data *, struct io_u *);$/;"	z	prototype:read_iolog_get	typeref:struct:io_u *	file:
__anona13017550a0d	iolog.h	/^extern void log_io_u(const struct thread_data *, const struct io_u *);$/;"	z	prototype:log_io_u	typeref:typename:const struct thread_data *	file:
__anona13017550b0d	iolog.h	/^extern void log_io_u(const struct thread_data *, const struct io_u *);$/;"	z	prototype:log_io_u	typeref:typename:const struct io_u *	file:
__anona13017550c0d	iolog.h	/^extern void log_file(struct thread_data *, struct fio_file *, enum file_log_act);$/;"	z	prototype:log_file	typeref:struct:thread_data *	file:
__anona13017550d0d	iolog.h	/^extern void log_file(struct thread_data *, struct fio_file *, enum file_log_act);$/;"	z	prototype:log_file	typeref:struct:fio_file *	file:
__anona13017550e0d	iolog.h	/^extern void log_io_piece(struct thread_data *, struct io_u *);$/;"	z	prototype:log_io_piece	typeref:struct:thread_data *	file:
__anona13017550f0d	iolog.h	/^extern void log_io_piece(struct thread_data *, struct io_u *);$/;"	z	prototype:log_io_piece	typeref:struct:io_u *	file:
__anona1301755100d	iolog.h	/^extern void unlog_io_piece(struct thread_data *, struct io_u *);$/;"	z	prototype:unlog_io_piece	typeref:struct:thread_data *	file:
__anona1301755110d	iolog.h	/^extern void unlog_io_piece(struct thread_data *, struct io_u *);$/;"	z	prototype:unlog_io_piece	typeref:struct:io_u *	file:
__anona1301755120d	iolog.h	/^extern void trim_io_piece(const struct io_u *);$/;"	z	prototype:trim_io_piece	typeref:typename:const struct io_u *	file:
__anona1301755130d	iolog.h	/^extern void queue_io_piece(struct thread_data *, struct io_piece *);$/;"	z	prototype:queue_io_piece	typeref:struct:thread_data *	file:
__anona1301755140d	iolog.h	/^extern void queue_io_piece(struct thread_data *, struct io_piece *);$/;"	z	prototype:queue_io_piece	typeref:struct:io_piece *	file:
__anona1301755150d	iolog.h	/^extern void prune_io_piece_log(struct thread_data *);$/;"	z	prototype:prune_io_piece_log	typeref:struct:thread_data *	file:
__anona1301755160d	iolog.h	/^extern void write_iolog_close(struct thread_data *);$/;"	z	prototype:write_iolog_close	typeref:struct:thread_data *	file:
__anona1301755170d	iolog.h	/^extern int iolog_compress_init(struct thread_data *, struct sk_out *);$/;"	z	prototype:iolog_compress_init	typeref:struct:thread_data *	file:
__anona1301755180d	iolog.h	/^extern int iolog_compress_init(struct thread_data *, struct sk_out *);$/;"	z	prototype:iolog_compress_init	typeref:struct:sk_out *	file:
__anona1301755190d	iolog.h	/^extern void iolog_compress_exit(struct thread_data *);$/;"	z	prototype:iolog_compress_exit	typeref:struct:thread_data *	file:
__anona13017551a0d	iolog.h	/^extern size_t log_chunk_sizes(struct io_log *);$/;"	z	prototype:log_chunk_sizes	typeref:struct:io_log *	file:
__anona13017551b0d	iolog.h	/^extern int init_io_u_buffers(struct thread_data *);$/;"	z	prototype:init_io_u_buffers	typeref:struct:thread_data *	file:
__anona13017551c0d	iolog.h	/^extern unsigned long long delay_since_ttime(const struct thread_data *,$/;"	z	prototype:delay_since_ttime	typeref:typename:const struct thread_data *	file:
__anona13017551d0d	iolog.h	/^					     unsigned long long);$/;"	z	prototype:delay_since_ttime	typeref:typename:unsigned long long	file:
__anona13017551e0d	iolog.h	/^extern int iolog_file_inflate(const char *);$/;"	z	prototype:iolog_file_inflate	typeref:typename:const char *	file:
__anona13017551f0d	iolog.h	/^extern void finalize_logs(struct thread_data *td, bool);$/;"	z	prototype:finalize_logs	typeref:typename:bool	file:
__anona1301755200d	iolog.h	/^extern void setup_log(struct io_log **, struct log_params *, const char *);$/;"	z	prototype:setup_log	typeref:struct:io_log **	file:
__anona1301755210d	iolog.h	/^extern void setup_log(struct io_log **, struct log_params *, const char *);$/;"	z	prototype:setup_log	typeref:struct:log_params *	file:
__anona1301755220d	iolog.h	/^extern void setup_log(struct io_log **, struct log_params *, const char *);$/;"	z	prototype:setup_log	typeref:typename:const char *	file:
__anona1301755230d	iolog.h	/^extern void flush_log(struct io_log *, bool);$/;"	z	prototype:flush_log	typeref:struct:io_log *	file:
__anona1301755240d	iolog.h	/^extern void flush_log(struct io_log *, bool);$/;"	z	prototype:flush_log	typeref:typename:bool	file:
__anona1301755250d	iolog.h	/^extern void flush_samples(FILE *, void *, uint64_t);$/;"	z	prototype:flush_samples	typeref:typename:FILE *	file:
__anona1301755260d	iolog.h	/^extern void flush_samples(FILE *, void *, uint64_t);$/;"	z	prototype:flush_samples	typeref:typename:void *	file:
__anona1301755270d	iolog.h	/^extern void flush_samples(FILE *, void *, uint64_t);$/;"	z	prototype:flush_samples	typeref:typename:uint64_t	file:
__anona1301755280d	iolog.h	/^extern uint64_t hist_sum(int, int, uint64_t *, uint64_t *);$/;"	z	prototype:hist_sum	typeref:typename:int	file:
__anona1301755290d	iolog.h	/^extern uint64_t hist_sum(int, int, uint64_t *, uint64_t *);$/;"	z	prototype:hist_sum	typeref:typename:int	file:
__anona13017552a0d	iolog.h	/^extern uint64_t hist_sum(int, int, uint64_t *, uint64_t *);$/;"	z	prototype:hist_sum	typeref:typename:uint64_t *	file:
__anona13017552b0d	iolog.h	/^extern uint64_t hist_sum(int, int, uint64_t *, uint64_t *);$/;"	z	prototype:hist_sum	typeref:typename:uint64_t *	file:
__anona13017552c0d	iolog.h	/^extern void free_log(struct io_log *);$/;"	z	prototype:free_log	typeref:struct:io_log *	file:
__anona13017552d0d	iolog.h	/^extern void fio_writeout_logs(bool);$/;"	z	prototype:fio_writeout_logs	typeref:typename:bool	file:
__anona13017552e0d	iolog.h	/^extern void td_writeout_logs(struct thread_data *, bool);$/;"	z	prototype:td_writeout_logs	typeref:struct:thread_data *	file:
__anona13017552f0d	iolog.h	/^extern void td_writeout_logs(struct thread_data *, bool);$/;"	z	prototype:td_writeout_logs	typeref:typename:bool	file:
__anona1301755300d	iolog.h	/^extern int iolog_cur_flush(struct io_log *, struct io_logs *);$/;"	z	prototype:iolog_cur_flush	typeref:struct:io_log *	file:
__anona1301755310d	iolog.h	/^extern int iolog_cur_flush(struct io_log *, struct io_logs *);$/;"	z	prototype:iolog_cur_flush	typeref:struct:io_logs *	file:
__anona1a2e69f010d	lex.yy.c	/^void *yyalloc ( yy_size_t  );$/;"	z	prototype:yyalloc	typeref:typename:yy_size_t	file:
__anona1a2e69f020d	lex.yy.c	/^void *yyrealloc ( void *, yy_size_t  );$/;"	z	prototype:yyrealloc	typeref:typename:void *	file:
__anona1a2e69f030d	lex.yy.c	/^void *yyrealloc ( void *, yy_size_t  );$/;"	z	prototype:yyrealloc	typeref:typename:yy_size_t	file:
__anona1a2e69f040d	lex.yy.c	/^void yyfree ( void *  );$/;"	z	prototype:yyfree	typeref:typename:void *	file:
__anona1a2e69f050d	lex.yy.c	/^static void yy_flex_strncpy ( char *, const char *, int );$/;"	z	prototype:yy_flex_strncpy	typeref:typename:char *	file:
__anona1a2e69f060d	lex.yy.c	/^static void yy_flex_strncpy ( char *, const char *, int );$/;"	z	prototype:yy_flex_strncpy	typeref:typename:const char *	file:
__anona1a2e69f070d	lex.yy.c	/^static void yy_flex_strncpy ( char *, const char *, int );$/;"	z	prototype:yy_flex_strncpy	typeref:typename:int	file:
__anona1a2e69f080d	lex.yy.c	/^static int yy_flex_strlen ( const char * );$/;"	z	prototype:yy_flex_strlen	typeref:typename:const char *	file:
__anona38490e1010d	gclient.h	/^extern void gfio_display_end_results(struct gfio_client *);$/;"	z	prototype:gfio_display_end_results	typeref:struct:gfio_client *	file:
__anona626c76b010d	libfio.c	/^FLIST_HEAD(disk_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:disk_list	file:
__anona626c76b0203	libfio.c	/^enum {$/;"	g	file:
__anona626c76b030a	libfio.c	/^	union {$/;"	u	function:endian_check	file:
__anona76badc4010d	filelock.h	/^extern void fio_lock_file(const char *);$/;"	z	prototype:fio_lock_file	typeref:typename:const char *	file:
__anona76badc4020d	filelock.h	/^extern bool fio_trylock_file(const char *);$/;"	z	prototype:fio_trylock_file	typeref:typename:const char *	file:
__anona76badc4030d	filelock.h	/^extern void fio_unlock_file(const char *);$/;"	z	prototype:fio_unlock_file	typeref:typename:const char *	file:
__anonab8d7e1c0103	blktrace_api.h	/^enum {$/;"	g
__anonab8d7e1c0203	blktrace_api.h	/^enum {$/;"	g
__anonaf46bf27010d	options.h	/^int add_option(const struct fio_option *);$/;"	z	prototype:add_option	typeref:typename:const struct fio_option *	file:
__anonaf46bf27020d	options.h	/^void invalidate_profile_options(const char *);$/;"	z	prototype:invalidate_profile_options	typeref:typename:const char *	file:
__anonaf46bf27030d	options.h	/^void add_opt_posval(const char *, const char *, const char *);$/;"	z	prototype:add_opt_posval	typeref:typename:const char *	file:
__anonaf46bf27040d	options.h	/^void add_opt_posval(const char *, const char *, const char *);$/;"	z	prototype:add_opt_posval	typeref:typename:const char *	file:
__anonaf46bf27050d	options.h	/^void add_opt_posval(const char *, const char *, const char *);$/;"	z	prototype:add_opt_posval	typeref:typename:const char *	file:
__anonaf46bf27060d	options.h	/^void del_opt_posval(const char *, const char *);$/;"	z	prototype:del_opt_posval	typeref:typename:const char *	file:
__anonaf46bf27070d	options.h	/^void del_opt_posval(const char *, const char *);$/;"	z	prototype:del_opt_posval	typeref:typename:const char *	file:
__anonaf46bf27080d	options.h	/^void fio_options_free(struct thread_data *);$/;"	z	prototype:fio_options_free	typeref:struct:thread_data *	file:
__anonaf46bf27090d	options.h	/^void fio_dump_options_free(struct thread_data *);$/;"	z	prototype:fio_dump_options_free	typeref:struct:thread_data *	file:
__anonaf46bf270a0d	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	z	prototype:set_name_idx	typeref:typename:char *	file:
__anonaf46bf270b0d	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	z	prototype:set_name_idx	typeref:typename:size_t	file:
__anonaf46bf270c0d	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	z	prototype:set_name_idx	typeref:typename:char *	file:
__anonaf46bf270d0d	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	z	prototype:set_name_idx	typeref:typename:int	file:
__anonaf46bf270e0d	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	z	prototype:set_name_idx	typeref:typename:bool	file:
__anonaf46bf270f0d	options.h	/^extern bool __fio_option_is_set(struct thread_options *, unsigned int off);$/;"	z	prototype:__fio_option_is_set	typeref:struct:thread_options *	file:
__anonaf46bf27100d	options.h	/^extern void fio_option_mark_set(struct thread_options *,$/;"	z	prototype:fio_option_mark_set	typeref:struct:thread_options *	file:
__anonaf46bf27110d	options.h	/^				const struct fio_option *);$/;"	z	prototype:fio_option_mark_set	typeref:typename:const struct fio_option *	file:
__anonaf46bf27120d	options.h	/^extern struct fio_option *find_option(struct fio_option *, const char *);$/;"	z	prototype:find_option	typeref:struct:fio_option *	file:
__anonaf46bf27130d	options.h	/^extern struct fio_option *find_option(struct fio_option *, const char *);$/;"	z	prototype:find_option	typeref:typename:const char *	file:
__anonaf46bf27140d	options.h	/^find_option_c(const struct fio_option *, const char *);$/;"	z	prototype:find_option_c	typeref:typename:const struct fio_option *	file:
__anonaf46bf27150d	options.h	/^find_option_c(const struct fio_option *, const char *);$/;"	z	prototype:find_option_c	typeref:typename:const char *	file:
__anonaf46bf27160d	options.h	/^extern struct fio_option *fio_option_find(const char *);$/;"	z	prototype:fio_option_find	typeref:typename:const char *	file:
__anonaf46bf27170d	options.h	/^extern unsigned int fio_get_kb_base(void *);$/;"	z	prototype:fio_get_kb_base	typeref:typename:void *	file:
__anonb095d427010d	fio_time.h	/^extern uint64_t ntime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:ntime_since	typeref:typename:const struct timespec *	file:
__anonb095d427020d	fio_time.h	/^extern uint64_t ntime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:ntime_since	typeref:typename:const struct timespec *	file:
__anonb095d427030d	fio_time.h	/^extern uint64_t ntime_since_now(const struct timespec *);$/;"	z	prototype:ntime_since_now	typeref:typename:const struct timespec *	file:
__anonb095d427040d	fio_time.h	/^extern uint64_t utime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:utime_since	typeref:typename:const struct timespec *	file:
__anonb095d427050d	fio_time.h	/^extern uint64_t utime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:utime_since	typeref:typename:const struct timespec *	file:
__anonb095d427060d	fio_time.h	/^extern uint64_t utime_since_now(const struct timespec *);$/;"	z	prototype:utime_since_now	typeref:typename:const struct timespec *	file:
__anonb095d427070d	fio_time.h	/^extern int64_t rel_time_since(const struct timespec *,$/;"	z	prototype:rel_time_since	typeref:typename:const struct timespec *	file:
__anonb095d427080d	fio_time.h	/^			      const struct timespec *);$/;"	z	prototype:rel_time_since	typeref:typename:const struct timespec *	file:
__anonb095d427090d	fio_time.h	/^extern uint64_t mtime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:mtime_since	typeref:typename:const struct timespec *	file:
__anonb095d4270a0d	fio_time.h	/^extern uint64_t mtime_since(const struct timespec *, const struct timespec *);$/;"	z	prototype:mtime_since	typeref:typename:const struct timespec *	file:
__anonb095d4270b0d	fio_time.h	/^extern uint64_t mtime_since_now(const struct timespec *);$/;"	z	prototype:mtime_since_now	typeref:typename:const struct timespec *	file:
__anonb095d4270c0d	fio_time.h	/^extern uint64_t mtime_since_tv(const struct timeval *, const struct timeval *);$/;"	z	prototype:mtime_since_tv	typeref:typename:const struct timeval *	file:
__anonb095d4270d0d	fio_time.h	/^extern uint64_t mtime_since_tv(const struct timeval *, const struct timeval *);$/;"	z	prototype:mtime_since_tv	typeref:typename:const struct timeval *	file:
__anonb095d4270e0d	fio_time.h	/^extern uint64_t time_since_now(const struct timespec *);$/;"	z	prototype:time_since_now	typeref:typename:const struct timespec *	file:
__anonb095d4270f0d	fio_time.h	/^extern uint64_t usec_spin(unsigned int);$/;"	z	prototype:usec_spin	typeref:typename:unsigned int	file:
__anonb095d427100d	fio_time.h	/^extern uint64_t usec_sleep(struct thread_data *, unsigned long);$/;"	z	prototype:usec_sleep	typeref:struct:thread_data *	file:
__anonb095d427110d	fio_time.h	/^extern uint64_t usec_sleep(struct thread_data *, unsigned long);$/;"	z	prototype:usec_sleep	typeref:typename:unsigned long	file:
__anonb095d427120d	fio_time.h	/^extern void fill_start_time(struct timespec *);$/;"	z	prototype:fill_start_time	typeref:struct:timespec *	file:
__anonb095d427130d	fio_time.h	/^extern bool ramp_time_over(struct thread_data *);$/;"	z	prototype:ramp_time_over	typeref:struct:thread_data *	file:
__anonb095d427140d	fio_time.h	/^extern bool in_ramp_time(struct thread_data *);$/;"	z	prototype:in_ramp_time	typeref:struct:thread_data *	file:
__anonb095d427150d	fio_time.h	/^extern void timespec_add_msec(struct timespec *, unsigned int);$/;"	z	prototype:timespec_add_msec	typeref:struct:timespec *	file:
__anonb095d427160d	fio_time.h	/^extern void timespec_add_msec(struct timespec *, unsigned int);$/;"	z	prototype:timespec_add_msec	typeref:typename:unsigned int	file:
__anonb095d427170d	fio_time.h	/^extern void set_epoch_time(struct thread_data *, int, clockid_t);$/;"	z	prototype:set_epoch_time	typeref:struct:thread_data *	file:
__anonb095d427180d	fio_time.h	/^extern void set_epoch_time(struct thread_data *, int, clockid_t);$/;"	z	prototype:set_epoch_time	typeref:typename:int	file:
__anonb095d427190d	fio_time.h	/^extern void set_epoch_time(struct thread_data *, int, clockid_t);$/;"	z	prototype:set_epoch_time	typeref:typename:clockid_t	file:
__anonc2c2cd24010d	oslib/strsep.h	/^char *strsep(char **, const char *);$/;"	z	prototype:strsep	typeref:typename:char **	file:
__anonc2c2cd24020d	oslib/strsep.h	/^char *strsep(char **, const char *);$/;"	z	prototype:strsep	typeref:typename:const char *	file:
__anonc4fa364c010d	t/stest.c	/^static FLIST_HEAD(list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:list	file:
__anoncb3c985a010d	t/btrace2fio.c	/^static FLIST_HEAD(pid_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:pid_list	file:
__anonce030fd7010d	ioengines.c	/^static FLIST_HEAD(engine_list);$/;"	z	prototype:FLIST_HEAD	typeref:typename:engine_list	file:
__anonce030fdc010d	ioengines.h	/^extern int __must_check td_io_init(struct thread_data *);$/;"	z	prototype:td_io_init	typeref:struct:thread_data *	file:
__anonce030fdc020d	ioengines.h	/^extern int __must_check td_io_prep(struct thread_data *, struct io_u *);$/;"	z	prototype:td_io_prep	typeref:struct:thread_data *	file:
__anonce030fdc030d	ioengines.h	/^extern int __must_check td_io_prep(struct thread_data *, struct io_u *);$/;"	z	prototype:td_io_prep	typeref:struct:io_u *	file:
__anonce030fdc040d	ioengines.h	/^extern enum fio_q_status __must_check td_io_queue(struct thread_data *, struct io_u *);$/;"	z	prototype:td_io_queue	typeref:struct:thread_data *	file:
__anonce030fdc050d	ioengines.h	/^extern enum fio_q_status __must_check td_io_queue(struct thread_data *, struct io_u *);$/;"	z	prototype:td_io_queue	typeref:struct:io_u *	file:
__anonce030fdc060d	ioengines.h	/^extern int __must_check td_io_getevents(struct thread_data *, unsigned int, unsigned int, const /;"	z	prototype:td_io_getevents	typeref:struct:thread_data *	file:
__anonce030fdc070d	ioengines.h	/^extern int __must_check td_io_getevents(struct thread_data *, unsigned int, unsigned int, const /;"	z	prototype:td_io_getevents	typeref:typename:unsigned int	file:
__anonce030fdc080d	ioengines.h	/^extern int __must_check td_io_getevents(struct thread_data *, unsigned int, unsigned int, const /;"	z	prototype:td_io_getevents	typeref:typename:unsigned int	file:
__anonce030fdc090d	ioengines.h	/^extern int __must_check td_io_getevents(struct thread_data *, unsigned int, unsigned int, const /;"	z	prototype:td_io_getevents	typeref:typename:const struct timespec *	file:
__anonce030fdc0a0d	ioengines.h	/^extern void td_io_commit(struct thread_data *);$/;"	z	prototype:td_io_commit	typeref:struct:thread_data *	file:
__anonce030fdc0b0d	ioengines.h	/^extern int __must_check td_io_open_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_open_file	typeref:struct:thread_data *	file:
__anonce030fdc0c0d	ioengines.h	/^extern int __must_check td_io_open_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_open_file	typeref:struct:fio_file *	file:
__anonce030fdc0d0d	ioengines.h	/^extern int td_io_close_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_close_file	typeref:struct:thread_data *	file:
__anonce030fdc0e0d	ioengines.h	/^extern int td_io_close_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_close_file	typeref:struct:fio_file *	file:
__anonce030fdc0f0d	ioengines.h	/^extern int td_io_unlink_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_unlink_file	typeref:struct:thread_data *	file:
__anonce030fdc100d	ioengines.h	/^extern int td_io_unlink_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_unlink_file	typeref:struct:fio_file *	file:
__anonce030fdc110d	ioengines.h	/^extern int __must_check td_io_get_file_size(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_get_file_size	typeref:struct:thread_data *	file:
__anonce030fdc120d	ioengines.h	/^extern int __must_check td_io_get_file_size(struct thread_data *, struct fio_file *);$/;"	z	prototype:td_io_get_file_size	typeref:struct:fio_file *	file:
__anonce030fdc130d	ioengines.h	/^extern struct ioengine_ops *load_ioengine(struct thread_data *);$/;"	z	prototype:load_ioengine	typeref:struct:thread_data *	file:
__anonce030fdc140d	ioengines.h	/^extern void register_ioengine(struct ioengine_ops *);$/;"	z	prototype:register_ioengine	typeref:struct:ioengine_ops *	file:
__anonce030fdc150d	ioengines.h	/^extern void unregister_ioengine(struct ioengine_ops *);$/;"	z	prototype:unregister_ioengine	typeref:struct:ioengine_ops *	file:
__anonce030fdc160d	ioengines.h	/^extern void free_ioengine(struct thread_data *);$/;"	z	prototype:free_ioengine	typeref:struct:thread_data *	file:
__anonce030fdc170d	ioengines.h	/^extern void close_ioengine(struct thread_data *);$/;"	z	prototype:close_ioengine	typeref:struct:thread_data *	file:
__anond2577e300103	verify.h	/^enum {$/;"	g
__anond2577e30020d	verify.h	/^extern void populate_verify_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:populate_verify_io_u	typeref:struct:thread_data *	file:
__anond2577e30030d	verify.h	/^extern void populate_verify_io_u(struct thread_data *, struct io_u *);$/;"	z	prototype:populate_verify_io_u	typeref:struct:io_u *	file:
__anond2577e30040d	verify.h	/^extern int __must_check get_next_verify(struct thread_data *td, struct io_u *);$/;"	z	prototype:get_next_verify	typeref:struct:io_u *	file:
__anond2577e30050d	verify.h	/^extern int __must_check verify_io_u(struct thread_data *, struct io_u **);$/;"	z	prototype:verify_io_u	typeref:struct:thread_data *	file:
__anond2577e30060d	verify.h	/^extern int __must_check verify_io_u(struct thread_data *, struct io_u **);$/;"	z	prototype:verify_io_u	typeref:struct:io_u **	file:
__anond2577e30070d	verify.h	/^extern int verify_io_u_async(struct thread_data *, struct io_u **);$/;"	z	prototype:verify_io_u_async	typeref:struct:thread_data *	file:
__anond2577e30080d	verify.h	/^extern int verify_io_u_async(struct thread_data *, struct io_u **);$/;"	z	prototype:verify_io_u_async	typeref:struct:io_u **	file:
__anond2577e30090d	verify.h	/^extern int verify_async_init(struct thread_data *);$/;"	z	prototype:verify_async_init	typeref:struct:thread_data *	file:
__anond2577e300a0d	verify.h	/^extern void verify_async_exit(struct thread_data *);$/;"	z	prototype:verify_async_exit	typeref:struct:thread_data *	file:
__anond9bd93f4010d	y.tab.c	/^void *malloc (YYSIZE_T); \/* INFRINGES ON USER NAME SPACE *\/$/;"	z	prototype:malloc	typeref:typename:YYSIZE_T	file:
__anond9bd93f4020d	y.tab.c	/^void free (void *); \/* INFRINGES ON USER NAME SPACE *\/$/;"	z	prototype:free	typeref:typename:void *	file:
__anond9bd93f40303	y.tab.c	/^  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };$/;"	g	function:yysyntax_error	file:
__anondcb78a0e0103	engines/http.c	/^enum {$/;"	g	file:
__anone3ddd16b010d	cgroup.h	/^int cgroup_setup(struct thread_data *, struct flist_head *, struct cgroup_mnt **);$/;"	z	prototype:cgroup_setup	typeref:struct:thread_data *	file:
__anone3ddd16b020d	cgroup.h	/^int cgroup_setup(struct thread_data *, struct flist_head *, struct cgroup_mnt **);$/;"	z	prototype:cgroup_setup	typeref:struct:flist_head *	file:
__anone3ddd16b030d	cgroup.h	/^int cgroup_setup(struct thread_data *, struct flist_head *, struct cgroup_mnt **);$/;"	z	prototype:cgroup_setup	typeref:struct:cgroup_mnt **	file:
__anone3ddd16b040d	cgroup.h	/^void cgroup_shutdown(struct thread_data *, struct cgroup_mnt *);$/;"	z	prototype:cgroup_shutdown	typeref:struct:thread_data *	file:
__anone3ddd16b050d	cgroup.h	/^void cgroup_shutdown(struct thread_data *, struct cgroup_mnt *);$/;"	z	prototype:cgroup_shutdown	typeref:struct:cgroup_mnt *	file:
__anone3fe4fb50103	t/time-test.c	/^enum {$/;"	g	file:
__anone98db79d010d	unittests/unittest.h	/^CU_ErrorCode fio_unittest_add_suite(const char*, CU_InitializeFunc,$/;"	z	prototype:fio_unittest_add_suite	typeref:typename:const char *	file:
__anone98db79d020d	unittests/unittest.h	/^CU_ErrorCode fio_unittest_add_suite(const char*, CU_InitializeFunc,$/;"	z	prototype:fio_unittest_add_suite	typeref:typename:CU_InitializeFunc	file:
__anone98db79d030d	unittests/unittest.h	/^	CU_CleanupFunc, struct fio_unittest_entry*);$/;"	z	prototype:fio_unittest_add_suite	typeref:typename:CU_CleanupFunc	file:
__anone98db79d040d	unittests/unittest.h	/^	CU_CleanupFunc, struct fio_unittest_entry*);$/;"	z	prototype:fio_unittest_add_suite	typeref:struct:fio_unittest_entry *	file:
__anonea1df0bb010d	crc/sha256.h	/^void fio_sha256_init(struct fio_sha256_ctx *);$/;"	z	prototype:fio_sha256_init	typeref:struct:fio_sha256_ctx *	file:
__anonea1df0bb020d	crc/sha256.h	/^void fio_sha256_update(struct fio_sha256_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha256_update	typeref:struct:fio_sha256_ctx *	file:
__anonea1df0bb030d	crc/sha256.h	/^void fio_sha256_update(struct fio_sha256_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha256_update	typeref:typename:const uint8_t *	file:
__anonea1df0bb040d	crc/sha256.h	/^void fio_sha256_update(struct fio_sha256_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha256_update	typeref:typename:unsigned int	file:
__anonea1df0bb050d	crc/sha256.h	/^void fio_sha256_final(struct fio_sha256_ctx *);$/;"	z	prototype:fio_sha256_final	typeref:struct:fio_sha256_ctx *	file:
__anonea51f7b6010d	crc/sha512.h	/^void fio_sha512_init(struct fio_sha512_ctx *);$/;"	z	prototype:fio_sha512_init	typeref:struct:fio_sha512_ctx *	file:
__anonea51f7b6020d	crc/sha512.h	/^void fio_sha512_update(struct fio_sha512_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha512_update	typeref:struct:fio_sha512_ctx *	file:
__anonea51f7b6030d	crc/sha512.h	/^void fio_sha512_update(struct fio_sha512_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha512_update	typeref:typename:const uint8_t *	file:
__anonea51f7b6040d	crc/sha512.h	/^void fio_sha512_update(struct fio_sha512_ctx *, const uint8_t *, unsigned int);$/;"	z	prototype:fio_sha512_update	typeref:typename:unsigned int	file:
__anoneac42249010d	engines/null.c	/^	io_u *fio_null_event(struct thread_data *, int event)$/;"	z	function:NullData::fio_null_event	typeref:struct:thread_data *	file:
__anoneac42249020d	engines/null.c	/^	int fio_null_getevents(struct thread_data *, unsigned int min_events,$/;"	z	function:NullData::fio_null_getevents	typeref:struct:thread_data *	file:
__anoneac42249030d	engines/null.c	/^	int fio_null_open(struct thread_data *, struct fio_file *f)$/;"	z	function:NullData::fio_null_open	typeref:struct:thread_data *	file:
__anonf85d00e4010d	diskutil.h	/^extern void init_disk_util(struct thread_data *);$/;"	z	prototype:init_disk_util	typeref:struct:thread_data *	file:
__anonfd730eff010d	fifo.h	/^struct fifo *fifo_alloc(unsigned int);$/;"	z	prototype:fifo_alloc	typeref:typename:unsigned int	file:
__anonfd730eff020d	fifo.h	/^unsigned int fifo_put(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_put	typeref:struct:fifo *	file:
__anonfd730eff030d	fifo.h	/^unsigned int fifo_put(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_put	typeref:typename:void *	file:
__anonfd730eff040d	fifo.h	/^unsigned int fifo_put(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_put	typeref:typename:unsigned int	file:
__anonfd730eff050d	fifo.h	/^unsigned int fifo_get(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_get	typeref:struct:fifo *	file:
__anonfd730eff060d	fifo.h	/^unsigned int fifo_get(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_get	typeref:typename:void *	file:
__anonfd730eff070d	fifo.h	/^unsigned int fifo_get(struct fifo *, void *, unsigned int);$/;"	z	prototype:fifo_get	typeref:typename:unsigned int	file:
__anonfd730eff080d	fifo.h	/^void fifo_free(struct fifo *);$/;"	z	prototype:fifo_free	typeref:struct:fifo *	file:
__anonfd762ebb0103	file.h	/^enum {$/;"	g
__anonfd762ebb020a	file.h	/^	union {$/;"	u	struct:fio_file
__anonfd762ebb030a	file.h	/^	union {$/;"	u	struct:fio_file
__anonfd762ebb040a	file.h	/^	union {$/;"	u	struct:fio_file
__anonfd762ebb050a	file.h	/^	union {$/;"	u	struct:fio_file
__anonfd762ebb060d	file.h	/^FILE_FLAG_FNS(open);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:open	file:
__anonfd762ebb070d	file.h	/^FILE_FLAG_FNS(closing);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:closing	file:
__anonfd762ebb080d	file.h	/^FILE_FLAG_FNS(extend);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:extend	file:
__anonfd762ebb090d	file.h	/^FILE_FLAG_FNS(done);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:done	file:
__anonfd762ebb0a0d	file.h	/^FILE_FLAG_FNS(size_known);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:size_known	file:
__anonfd762ebb0b0d	file.h	/^FILE_FLAG_FNS(hashed);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:hashed	file:
__anonfd762ebb0c0d	file.h	/^FILE_FLAG_FNS(partial_mmap);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:partial_mmap	file:
__anonfd762ebb0d0d	file.h	/^FILE_FLAG_FNS(axmap);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:axmap	file:
__anonfd762ebb0e0d	file.h	/^FILE_FLAG_FNS(lfsr);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:lfsr	file:
__anonfd762ebb0f0d	file.h	/^FILE_FLAG_FNS(smalloc);$/;"	z	prototype:FILE_FLAG_FNS	typeref:typename:smalloc	file:
__anonfd762ebb100d	file.h	/^extern void close_files(struct thread_data *);$/;"	z	prototype:close_files	typeref:struct:thread_data *	file:
__anonfd762ebb110d	file.h	/^extern void close_and_free_files(struct thread_data *);$/;"	z	prototype:close_and_free_files	typeref:struct:thread_data *	file:
__anonfd762ebb120d	file.h	/^extern uint64_t get_start_offset(struct thread_data *, struct fio_file *);$/;"	z	prototype:get_start_offset	typeref:struct:thread_data *	file:
__anonfd762ebb130d	file.h	/^extern uint64_t get_start_offset(struct thread_data *, struct fio_file *);$/;"	z	prototype:get_start_offset	typeref:struct:fio_file *	file:
__anonfd762ebb140d	file.h	/^extern int __must_check setup_files(struct thread_data *);$/;"	z	prototype:setup_files	typeref:struct:thread_data *	file:
__anonfd762ebb150d	file.h	/^extern int __must_check file_invalidate_cache(struct thread_data *, struct fio_file *);$/;"	z	prototype:file_invalidate_cache	typeref:struct:thread_data *	file:
__anonfd762ebb160d	file.h	/^extern int __must_check file_invalidate_cache(struct thread_data *, struct fio_file *);$/;"	z	prototype:file_invalidate_cache	typeref:struct:fio_file *	file:
__anonfd762ebb170d	file.h	/^extern int __must_check generic_open_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_open_file	typeref:struct:thread_data *	file:
__anonfd762ebb180d	file.h	/^extern int __must_check generic_open_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_open_file	typeref:struct:fio_file *	file:
__anonfd762ebb190d	file.h	/^extern int __must_check generic_close_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_close_file	typeref:struct:thread_data *	file:
__anonfd762ebb1a0d	file.h	/^extern int __must_check generic_close_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_close_file	typeref:struct:fio_file *	file:
__anonfd762ebb1b0d	file.h	/^extern int __must_check generic_get_file_size(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_get_file_size	typeref:struct:thread_data *	file:
__anonfd762ebb1c0d	file.h	/^extern int __must_check generic_get_file_size(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_get_file_size	typeref:struct:fio_file *	file:
__anonfd762ebb1d0d	file.h	/^extern int __must_check generic_prepopulate_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_prepopulate_file	typeref:struct:thread_data *	file:
__anonfd762ebb1e0d	file.h	/^extern int __must_check generic_prepopulate_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:generic_prepopulate_file	typeref:struct:fio_file *	file:
__anonfd762ebb1f0d	file.h	/^extern bool __must_check pre_read_files(struct thread_data *);$/;"	z	prototype:pre_read_files	typeref:struct:thread_data *	file:
__anonfd762ebb200d	file.h	/^extern int add_file(struct thread_data *, const char *, int, int);$/;"	z	prototype:add_file	typeref:struct:thread_data *	file:
__anonfd762ebb210d	file.h	/^extern int add_file(struct thread_data *, const char *, int, int);$/;"	z	prototype:add_file	typeref:typename:const char *	file:
__anonfd762ebb220d	file.h	/^extern int add_file(struct thread_data *, const char *, int, int);$/;"	z	prototype:add_file	typeref:typename:int	file:
__anonfd762ebb230d	file.h	/^extern int add_file(struct thread_data *, const char *, int, int);$/;"	z	prototype:add_file	typeref:typename:int	file:
__anonfd762ebb240d	file.h	/^extern int add_file_exclusive(struct thread_data *, const char *);$/;"	z	prototype:add_file_exclusive	typeref:struct:thread_data *	file:
__anonfd762ebb250d	file.h	/^extern int add_file_exclusive(struct thread_data *, const char *);$/;"	z	prototype:add_file_exclusive	typeref:typename:const char *	file:
__anonfd762ebb260d	file.h	/^extern void get_file(struct fio_file *);$/;"	z	prototype:get_file	typeref:struct:fio_file *	file:
__anonfd762ebb270d	file.h	/^extern int __must_check put_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:put_file	typeref:struct:thread_data *	file:
__anonfd762ebb280d	file.h	/^extern int __must_check put_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:put_file	typeref:struct:fio_file *	file:
__anonfd762ebb290d	file.h	/^extern void put_file_log(struct thread_data *, struct fio_file *);$/;"	z	prototype:put_file_log	typeref:struct:thread_data *	file:
__anonfd762ebb2a0d	file.h	/^extern void put_file_log(struct thread_data *, struct fio_file *);$/;"	z	prototype:put_file_log	typeref:struct:fio_file *	file:
__anonfd762ebb2b0d	file.h	/^extern void lock_file(struct thread_data *, struct fio_file *, enum fio_ddir);$/;"	z	prototype:lock_file	typeref:struct:thread_data *	file:
__anonfd762ebb2c0d	file.h	/^extern void lock_file(struct thread_data *, struct fio_file *, enum fio_ddir);$/;"	z	prototype:lock_file	typeref:struct:fio_file *	file:
__anonfd762ebb2d0d	file.h	/^extern void unlock_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:unlock_file	typeref:struct:thread_data *	file:
__anonfd762ebb2e0d	file.h	/^extern void unlock_file(struct thread_data *, struct fio_file *);$/;"	z	prototype:unlock_file	typeref:struct:fio_file *	file:
__anonfd762ebb2f0d	file.h	/^extern void unlock_file_all(struct thread_data *, struct fio_file *);$/;"	z	prototype:unlock_file_all	typeref:struct:thread_data *	file:
__anonfd762ebb300d	file.h	/^extern void unlock_file_all(struct thread_data *, struct fio_file *);$/;"	z	prototype:unlock_file_all	typeref:struct:fio_file *	file:
__anonfd762ebb310d	file.h	/^extern int add_dir_files(struct thread_data *, const char *);$/;"	z	prototype:add_dir_files	typeref:struct:thread_data *	file:
__anonfd762ebb320d	file.h	/^extern int add_dir_files(struct thread_data *, const char *);$/;"	z	prototype:add_dir_files	typeref:typename:const char *	file:
__anonfd762ebb330d	file.h	/^extern bool init_random_map(struct thread_data *);$/;"	z	prototype:init_random_map	typeref:struct:thread_data *	file:
__anonfd762ebb340d	file.h	/^extern void dup_files(struct thread_data *, struct thread_data *);$/;"	z	prototype:dup_files	typeref:struct:thread_data *	file:
__anonfd762ebb350d	file.h	/^extern void dup_files(struct thread_data *, struct thread_data *);$/;"	z	prototype:dup_files	typeref:struct:thread_data *	file:
__anonfd762ebb360d	file.h	/^extern int get_fileno(struct thread_data *, const char *);$/;"	z	prototype:get_fileno	typeref:struct:thread_data *	file:
__anonfd762ebb370d	file.h	/^extern int get_fileno(struct thread_data *, const char *);$/;"	z	prototype:get_fileno	typeref:typename:const char *	file:
__anonfd762ebb380d	file.h	/^extern void free_release_files(struct thread_data *);$/;"	z	prototype:free_release_files	typeref:struct:thread_data *	file:
__anonfd762ebb390d	file.h	/^extern void fio_file_reset(struct thread_data *, struct fio_file *);$/;"	z	prototype:fio_file_reset	typeref:struct:thread_data *	file:
__anonfd762ebb3a0d	file.h	/^extern void fio_file_reset(struct thread_data *, struct fio_file *);$/;"	z	prototype:fio_file_reset	typeref:struct:fio_file *	file:
__anonfd762ebb3b0d	file.h	/^extern bool fio_files_done(struct thread_data *);$/;"	z	prototype:fio_files_done	typeref:struct:thread_data *	file:
__anonfd762ebb3c0d	file.h	/^extern bool exists_and_not_regfile(const char *);$/;"	z	prototype:exists_and_not_regfile	typeref:typename:const char *	file:
__anonfd762ebb3d0d	file.h	/^extern int fio_set_directio(struct thread_data *, struct fio_file *);$/;"	z	prototype:fio_set_directio	typeref:struct:thread_data *	file:
__anonfd762ebb3e0d	file.h	/^extern int fio_set_directio(struct thread_data *, struct fio_file *);$/;"	z	prototype:fio_set_directio	typeref:struct:fio_file *	file:
__anonfd762ebb3f0d	file.h	/^extern void fio_file_free(struct fio_file *);$/;"	z	prototype:fio_file_free	typeref:struct:fio_file *	file:
__anonfdca756a010d	gettime.h	/^extern int fio_get_mono_time(struct timespec *);$/;"	z	prototype:fio_get_mono_time	typeref:struct:timespec *	file:
__anonfdca756a020d	gettime.h	/^extern void fio_gettime(struct timespec *, void *);$/;"	z	prototype:fio_gettime	typeref:struct:timespec *	file:
__anonfdca756a030d	gettime.h	/^extern void fio_gettime(struct timespec *, void *);$/;"	z	prototype:fio_gettime	typeref:typename:void *	file:
__anonff9393400103	gfio.h	/^enum {$/;"	g
__anonff9393400203	gfio.h	/^enum {$/;"	g
__axmap_set	lib/axmap.c	/^static void __axmap_set(struct axmap *axmap, uint64_t bit_nr,$/;"	f	typeref:typename:void	file:
__base	filesetup.c	/^	char __base[256];$/;"	m	struct:fio_mount	typeref:typename:char[256]	file:
__be16_to_cpu	os/os.h	/^#define __be16_to_cpu(/;"	d
__be32_to_cpu	lib/bswap.h	/^static inline uint32_t __be32_to_cpu(uint32_t val)$/;"	f	typeref:typename:uint32_t
__be32_to_cpu	os/os.h	/^#define __be32_to_cpu(/;"	d
__be64_to_cpu	lib/bswap.h	/^static inline uint64_t __be64_to_cpu(uint64_t val)$/;"	f	typeref:typename:uint64_t
__be64_to_cpu	os/os.h	/^#define __be64_to_cpu(/;"	d
__bloom_check	lib/bloom.c	/^static bool __bloom_check(struct bloom *b, const void *data, unsigned int len,$/;"	f	typeref:typename:bool	file:
__buf	os/os-android.h	/^static inline int shmctl(int __shmid, int __cmd, struct shmid_ds *__buf)$/;"	z	function:shmctl	typeref:struct:shmid_ds *	file:
__check_min_rate	backend.c	/^static bool __check_min_rate(struct thread_data *td, struct timespec *now,$/;"	f	typeref:typename:bool	file:
__check_trigger_file	backend.c	/^static bool __check_trigger_file(void)$/;"	f	typeref:typename:bool	file:
__cmd	os/os-android.h	/^static inline int shmctl(int __shmid, int __cmd, struct shmid_ds *__buf)$/;"	z	function:shmctl	typeref:typename:int	file:
__compiletime_assert	compiler/compiler.h	/^#define __compiletime_assert(/;"	d
__compiletime_error	compiler/compiler.h	/^#define __compiletime_error(/;"	d
__compiletime_error_fallback	compiler/compiler.h	/^#define __compiletime_error_fallback(/;"	d
__compiletime_warning	compiler/compiler.h	/^#define __compiletime_warning(/;"	d
__cpu_to_be16	os/os.h	/^#define __cpu_to_be16(/;"	d
__cpu_to_be32	os/os.h	/^#define __cpu_to_be32(/;"	d
__cpu_to_be64	os/os.h	/^#define __cpu_to_be64(/;"	d
__cpu_to_le16	os/os.h	/^#define __cpu_to_le16(/;"	d
__cpu_to_le32	os/os.h	/^#define __cpu_to_le32(/;"	d
__cpu_to_le64	os/os.h	/^#define __cpu_to_le64(/;"	d
__data	lib/axmap.c	/^			 unsigned int bit, void *__data)$/;"	z	function:axmap_set_fn	typeref:typename:void *	file:
__ddir	iolog.h	/^	uint32_t __ddir;$/;"	m	struct:io_sample	typeref:typename:uint32_t
__deflate_pdu_buffer	server.c	/^static int __deflate_pdu_buffer(void *next_in, unsigned int next_sz, void **out_pdu,$/;"	f	typeref:typename:int	file:
__do_syscall0	arch/arch-aarch64.h	/^#define __do_syscall0(/;"	d
__do_syscall0	arch/arch-x86_64.h	/^#define __do_syscall0(/;"	d
__do_syscall1	arch/arch-aarch64.h	/^#define __do_syscall1(/;"	d
__do_syscall1	arch/arch-x86_64.h	/^#define __do_syscall1(/;"	d
__do_syscall2	arch/arch-aarch64.h	/^#define __do_syscall2(/;"	d
__do_syscall2	arch/arch-x86_64.h	/^#define __do_syscall2(/;"	d
__do_syscall3	arch/arch-aarch64.h	/^#define __do_syscall3(/;"	d
__do_syscall3	arch/arch-x86_64.h	/^#define __do_syscall3(/;"	d
__do_syscall4	arch/arch-aarch64.h	/^#define __do_syscall4(/;"	d
__do_syscall4	arch/arch-x86_64.h	/^#define __do_syscall4(/;"	d
__do_syscall5	arch/arch-aarch64.h	/^#define __do_syscall5(/;"	d
__do_syscall5	arch/arch-x86_64.h	/^#define __do_syscall5(/;"	d
__do_syscall6	arch/arch-aarch64.h	/^#define __do_syscall6(/;"	d
__do_syscall6	arch/arch-x86_64.h	/^#define __do_syscall6(/;"	d
__do_syscallN	arch/arch-aarch64.h	/^#define __do_syscallN(/;"	d
__dprint	debug.c	/^void __dprint(int type, const char *str, ...)$/;"	f	typeref:typename:void
__dprint	debug.h	/^void __dprint(int type, const char *str, ...) __attribute__((format (printf, 2, 3)));$/;"	p	typeref:typename:void
__dprint	t/debug.c	/^void __dprint(int type, const char *str, ...)$/;"	f	typeref:typename:void
__dump_verify_buffers	verify.c	/^static void __dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:void	file:
__file_invalidate_cache	filesetup.c	/^static int __file_invalidate_cache(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
__fill_buffer	verify.c	/^static void __fill_buffer(struct thread_options *o, uint64_t seed, void *p,$/;"	f	typeref:typename:void	file:
__fill_file_completions	verify.c	/^static int __fill_file_completions(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__fill_hdr	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
__fill_hdr	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	p	typeref:typename:void	file:
__fill_random_buf	lib/rand.c	/^void __fill_random_buf(void *buf, unsigned int len, uint64_t seed)$/;"	f	typeref:typename:void
__fill_random_buf	lib/rand.h	/^extern void __fill_random_buf(void *buf, unsigned int len, uint64_t seed);$/;"	p	typeref:typename:void
__fill_random_buf_percentage	lib/rand.c	/^void __fill_random_buf_percentage(uint64_t seed, void *buf,$/;"	f	typeref:typename:void
__fill_random_buf_percentage	lib/rand.h	/^extern void __fill_random_buf_percentage(uint64_t, void *, unsigned int, unsigned int, unsigned /;"	p	typeref:typename:void
__fio_append_iolog_gz	server.c	/^static int __fio_append_iolog_gz(struct sk_entry *first, struct io_log *log,$/;"	f	typeref:typename:int	file:
__fio_append_iolog_gz_hist	server.c	/^static int __fio_append_iolog_gz_hist(struct sk_entry *first, struct io_log *log,$/;"	f	typeref:typename:int	file:
__fio_client_add_cmd_option	client.c	/^static void __fio_client_add_cmd_option(struct fio_client *client,$/;"	f	typeref:typename:void	file:
__fio_client_send_local_ini	client.c	/^static int __fio_client_send_local_ini(struct fio_client *client,$/;"	f	typeref:typename:int	file:
__fio_client_send_remote_ini	client.c	/^static int __fio_client_send_remote_ini(struct fio_client *client,$/;"	f	typeref:typename:int	file:
__fio_gettime	gettime.c	/^static void __fio_gettime(struct timespec *tp)$/;"	f	typeref:typename:void	file:
__fio_init_net_cmd	server.c	/^static void __fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	f	typeref:typename:void	file:
__fio_lock_file	filelock.c	/^static bool __fio_lock_file(const char *fname, int trylock)$/;"	f	typeref:typename:bool	file:
__fio_memalign	lib/memalign.c	/^void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn)$/;"	f	typeref:typename:void *
__fio_memalign	lib/memalign.h	/^extern void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn);$/;"	p	typeref:typename:void *
__fio_memfree	lib/memalign.c	/^void __fio_memfree(void *ptr, size_t size, free_fn fn)$/;"	f	typeref:typename:void
__fio_memfree	lib/memalign.h	/^extern void __fio_memfree(void *ptr, size_t size, free_fn fn);$/;"	p	typeref:typename:void
__fio_net_prep_tail	server.c	/^static inline void __fio_net_prep_tail(z_stream *stream, void *out_pdu,$/;"	f	typeref:typename:void	file:
__fio_netio_queue	engines/net.c	/^static enum fio_q_status __fio_netio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
__fio_option_is_set	options.c	/^bool __fio_option_is_set(struct thread_options *o, unsigned int off1)$/;"	f	typeref:typename:bool
__fio_option_is_set	options.h	/^extern bool __fio_option_is_set(struct thread_options *, unsigned int off);$/;"	p	typeref:typename:bool
__fio_options	parse.c	/^static const struct fio_option *__fio_options;$/;"	v	typeref:typename:const struct fio_option *	file:
__fio_sem_init	fio_sem.c	/^int __fio_sem_init(struct fio_sem *sem, int value)$/;"	f	typeref:typename:int
__fio_sem_init	fio_sem.h	/^extern int __fio_sem_init(struct fio_sem *, int);$/;"	p	typeref:typename:int
__fio_sem_remove	fio_sem.c	/^void __fio_sem_remove(struct fio_sem *sem)$/;"	f	typeref:typename:void
__fio_sem_remove	fio_sem.h	/^extern void __fio_sem_remove(struct fio_sem *);$/;"	p	typeref:typename:void
__fio_stringify	fio.h	/^#define __fio_stringify(/;"	d
__fio_stringify_1	fio.h	/^#define __fio_stringify_1(/;"	d
__flist_add	flist.h	/^static inline void __flist_add(struct flist_head *new_entry,$/;"	f	typeref:typename:void
__flist_del	flist.h	/^static inline void __flist_del(struct flist_head *prev,$/;"	f	typeref:typename:void
__flist_splice	flist.h	/^static inline void __flist_splice(const struct flist_head *list,$/;"	f	typeref:typename:void
__fls	lib/fls.h	/^static inline int __fls(int x)$/;"	f	typeref:typename:int
__frand32_copy	lib/rand.h	/^static inline void __frand32_copy(struct taus88_state *dst,$/;"	f	typeref:typename:void
__frand64_copy	lib/rand.h	/^static inline void __frand64_copy(struct taus258_state *dst,$/;"	f	typeref:typename:void
__get_filelock	filelock.c	/^static struct fio_filelock *__get_filelock(void)$/;"	f	typeref:struct:fio_filelock *	file:
__get_io_u	io_u.c	/^struct io_u *__get_io_u(struct thread_data *td)$/;"	f	typeref:struct:io_u *
__get_io_u	io_u.h	/^extern struct io_u *__get_io_u(struct thread_data *);$/;"	p	typeref:struct:io_u *
__get_mult_bytes	parse.c	/^static unsigned long long __get_mult_bytes(const char *p, void *data,$/;"	f	typeref:typename:unsigned long long	file:
__get_next_file	io_u.c	/^static struct fio_file *__get_next_file(struct thread_data *td)$/;"	f	typeref:struct:fio_file *	file:
__get_next_fileno_rand	io_u.c	/^static unsigned int __get_next_fileno_rand(struct thread_data *td)$/;"	f	typeref:typename:unsigned int	file:
__get_next_rand_offset	io_u.c	/^static int __get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
__get_next_rand_offset_gauss	io_u.c	/^static int __get_next_rand_offset_gauss(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__get_next_rand_offset_pareto	io_u.c	/^static int __get_next_rand_offset_pareto(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__get_next_rand_offset_zipf	io_u.c	/^static int __get_next_rand_offset_zipf(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__get_next_rand_offset_zoned	io_u.c	/^static int __get_next_rand_offset_zoned(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__get_next_rand_offset_zoned_abs	io_u.c	/^static int __get_next_rand_offset_zoned_abs(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__get_next_seed	lib/rand.h	/^static inline uint64_t __get_next_seed(struct frand_state *fs)$/;"	f	typeref:typename:uint64_t
__get_sample	iolog.h	/^static inline struct io_sample *__get_sample(void *samples, int log_offset,$/;"	f	typeref:struct:io_sample *
__get_submit_worker	workqueue.c	/^static struct submit_worker *__get_submit_worker(struct workqueue *wq,$/;"	f	typeref:struct:submit_worker *	file:
__gfio_disk_util_show	gclient.c	/^static int __gfio_disk_util_show(GtkWidget *res_notebook,$/;"	f	typeref:typename:int	file:
__gfio_display_end_results	gclient.c	/^static void __gfio_display_end_results(GtkWidget *win, struct gfio_client *gc,$/;"	f	typeref:typename:void	file:
__gopt_new_combo	goptions.c	/^static struct gopt_combo *__gopt_new_combo(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt_combo *	file:
__gopt_new_int	goptions.c	/^static struct gopt_int *__gopt_new_int(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt_int *	file:
__graph_value_drop	graph.c	/^static void __graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	f	typeref:typename:void	file:
__handle_option	parse.c	/^static int __handle_option(const struct fio_option *o, const char *ptr,$/;"	f	typeref:typename:int	file:
__has_attribute	compiler/compiler.h	/^#define __has_attribute(/;"	d
__has_builtin	os/os-android.h	/^  #define __has_builtin(/;"	d
__has_builtin	os/os-linux.h	/^  #define __has_builtin(/;"	d
__hash_long	hash.h	/^static inline unsigned long __hash_long(uint64_t val)$/;"	f	typeref:typename:unsigned long
__hash_u64	hash.h	/^static inline uint64_t __hash_u64(uint64_t val)$/;"	f	typeref:typename:uint64_t
__hdr_size	verify.c	/^static inline unsigned int __hdr_size(int verify_type)$/;"	f	typeref:typename:unsigned int	file:
__ilog2	arch/arch-ppc.h	/^static inline int __ilog2(unsigned long bitmask)$/;"	f	typeref:typename:int
__inflight_add	t/btrace2fio.c	/^static void __inflight_add(struct inflight *i)$/;"	f	typeref:typename:void	file:
__init__	t/latency_percentiles.py	/^    def __init__(self, artifact_root, test_options, debug):$/;"	m	class:FioLatTest
__init__	t/run-fio-tests.py	/^    def __init__(self, exe_path, parameters, success):$/;"	m	class:FioExeTest
__init__	t/run-fio-tests.py	/^    def __init__(self, exe_path, parameters, success):$/;"	m	class:FioTest
__init__	t/run-fio-tests.py	/^    def __init__(self, fio_path, fio_job, success, fio_pre_job=None,$/;"	m	class:FioJobTest
__init__	t/run-fio-tests.py	/^    def __init__(self, fio_root):$/;"	m	class:Requirements
__init__	tools/fiologparser.py	/^    def __init__(self, ctx, fn):$/;"	m	class:TimeSeries
__init__	tools/fiologparser.py	/^    def __init__(self, ctx, start, end, value):$/;"	m	class:Sample
__init__	tools/hist/fiologparser_hist.py	/^    def __init__(self, file):$/;"	m	class:HistFileRdr
__init_disk_util	diskutil.c	/^static struct disk_util *__init_disk_util(struct thread_data *td,$/;"	f	typeref:struct:disk_util *	file:
__init_per_file_disk_util	diskutil.c	/^static struct disk_util *__init_per_file_disk_util(struct thread_data *td,$/;"	f	typeref:struct:disk_util *	file:
__init_per_file_disk_util	diskutil.c	/^static struct disk_util *__init_per_file_disk_util(struct thread_data *td,$/;"	p	typeref:struct:disk_util *	file:
__init_rand32	lib/rand.c	/^static void __init_rand32(struct taus88_state *state, unsigned int seed)$/;"	f	typeref:typename:void	file:
__init_rand64	lib/rand.c	/^void __init_rand64(struct taus258_state *state, uint64_t seed)$/;"	f	typeref:typename:void
__init_rand64	lib/rand.h	/^void __init_rand64(struct taus258_state *state, uint64_t seed);$/;"	p	typeref:typename:void
__init_rand_distribution	filesetup.c	/^static void __init_rand_distribution(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void	file:
__io_u_log_error	io_u.c	/^static void __io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
__io_u_mark_map	io_u.c	/^static void __io_u_mark_map(uint64_t *map, unsigned int nr)$/;"	f	typeref:typename:void	file:
__is_already_allocated	filesetup.c	/^static bool __is_already_allocated(const char *fname, bool set)$/;"	f	typeref:typename:bool	file:
__jhash_final	hash.h	/^#define __jhash_final(/;"	d
__jhash_mix	hash.h	/^#define __jhash_mix(/;"	d
__kernel_rwf_t	lib/types.h	/^typedef int __kernel_rwf_t;$/;"	t	typeref:typename:int
__key	os/os-android.h	/^static inline int shmget(key_t __key, size_t __size, int __shmflg)$/;"	z	function:shmget	typeref:typename:key_t	file:
__lat_target_failed	io_u.c	/^static bool __lat_target_failed(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
__le16_to_cpu	os/os.h	/^#define __le16_to_cpu(/;"	d
__le32_to_cpu	os/os.h	/^#define __le32_to_cpu(/;"	d
__le64_to_cpu	os/os.h	/^#define __le64_to_cpu(/;"	d
__lfsr_next	lib/lfsr.c	/^static inline void __lfsr_next(struct fio_lfsr *fl, unsigned int spin)$/;"	f	typeref:typename:void	file:
__load_ioengine	ioengines.c	/^static struct ioengine_ops *__load_ioengine(const char *engine)$/;"	f	typeref:struct:ioengine_ops *	file:
__log_buf	log.c	/^size_t __log_buf(struct buf_output *buf, const char *format, ...)$/;"	f	typeref:typename:size_t
__log_buf	log.h	/^extern size_t __log_buf(struct buf_output *, const char *format, ...) __attribute__ ((__format__/;"	p	typeref:typename:size_t
__log_entry_sz	iolog.h	/^static inline size_t __log_entry_sz(int log_offset)$/;"	f	typeref:typename:size_t
__lookup_file_hash	filehash.c	/^static struct fio_file *__lookup_file_hash(const char *name)$/;"	f	typeref:struct:fio_file *	file:
__must_check	compiler/compiler.h	/^#define __must_check	/;"	d
__o	cconv.c	/^int fio_test_cconv(struct thread_options *__o)$/;"	z	function:fio_test_cconv	typeref:struct:thread_options *	file:
__output_p	t/btrace2fio.c	/^static int __output_p(struct btrace_pid *p, unsigned long *ios)$/;"	f	typeref:typename:int	file:
__output_p_ascii	t/btrace2fio.c	/^static void __output_p_ascii(struct btrace_pid *p, unsigned long *ios)$/;"	f	typeref:typename:void	file:
__output_p_fio	t/btrace2fio.c	/^static int __output_p_fio(struct btrace_pid *p, unsigned long *ios,$/;"	f	typeref:typename:int	file:
__pad2	os/linux/io_uring.h	/^	__u64	__pad2[2];$/;"	m	struct:io_uring_sqe	typeref:typename:__u64[2]
__parse_jobs_ini	init.c	/^static int __parse_jobs_ini(struct thread_data *td,$/;"	f	typeref:typename:int	file:
__print_option	parse.c	/^static void __print_option(const struct fio_option *o,$/;"	f	typeref:typename:void	file:
__ptr	parse.c	/^static int handle_option(const struct fio_option *o, const char *__ptr,$/;"	z	function:handle_option	typeref:typename:const char *	file:
__rand	lib/rand.h	/^static inline uint64_t __rand(struct frand_state *state)$/;"	f	typeref:typename:uint64_t
__rand32	lib/rand.h	/^static inline unsigned int __rand32(struct taus88_state *state)$/;"	f	typeref:typename:unsigned int
__rand64	lib/rand.h	/^static inline uint64_t __rand64(struct taus258_state *state)$/;"	f	typeref:typename:uint64_t
__rand_0_1	lib/rand.h	/^static inline double __rand_0_1(struct frand_state *state)$/;"	f	typeref:typename:double
__rb_erase_color	lib/rbtree.c	/^static void __rb_erase_color(struct fio_rb_node *node,$/;"	f	typeref:typename:void	file:
__rb_rotate_left	lib/rbtree.c	/^static void __rb_rotate_left(struct fio_rb_node *node, struct rb_root *root)$/;"	f	typeref:typename:void	file:
__rb_rotate_right	lib/rbtree.c	/^static void __rb_rotate_right(struct fio_rb_node *node, struct rb_root *root)$/;"	f	typeref:typename:void	file:
__read_block	t/dedupe.c	/^static int __read_block(int fd, void *buf, off_t offset, size_t count)$/;"	f	typeref:typename:int	file:
__run_str	eta.c	/^static char __run_str[REAL_MAX_JOBS + 1];$/;"	v	typeref:typename:char[]	file:
__seed	lib/rand.c	/^static inline uint64_t __seed(uint64_t x, uint64_t m)$/;"	f	typeref:typename:uint64_t	file:
__setup_rate	init.c	/^static int __setup_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:typename:int	file:
__shmaddr	os/os-android.h	/^static inline int shmdt (const void *__shmaddr)$/;"	z	function:shmdt	typeref:typename:const void *	file:
__shmaddr	os/os-android.h	/^static inline void *shmat(int __shmid, const void *__shmaddr, int __shmflg)$/;"	z	function:shmat	typeref:typename:const void *	file:
__shmflg	os/os-android.h	/^static inline int shmget(key_t __key, size_t __size, int __shmflg)$/;"	z	function:shmget	typeref:typename:int	file:
__shmflg	os/os-android.h	/^static inline void *shmat(int __shmid, const void *__shmaddr, int __shmflg)$/;"	z	function:shmat	typeref:typename:int	file:
__shmid	os/os-android.h	/^static inline int shmctl(int __shmid, int __cmd, struct shmid_ds *__buf)$/;"	z	function:shmctl	typeref:typename:int	file:
__shmid	os/os-android.h	/^static inline void *shmat(int __shmid, const void *__shmaddr, int __shmflg)$/;"	z	function:shmat	typeref:typename:int	file:
__show_run_stats	stat.c	/^void __show_run_stats(void)$/;"	f	typeref:typename:void
__show_run_stats	stat.h	/^extern void __show_run_stats(void);$/;"	p	typeref:typename:void
__show_running_run_stats	stat.c	/^int __show_running_run_stats(void)$/;"	f	typeref:typename:int
__show_running_run_stats	stat.h	/^extern int __show_running_run_stats(void);$/;"	p	typeref:typename:int
__size	os/os-android.h	/^static inline int shmget(key_t __key, size_t __size, int __shmflg)$/;"	z	function:shmget	typeref:typename:size_t	file:
__sk_out_drop	server.c	/^static int __sk_out_drop(struct sk_out *sk_out)$/;"	f	typeref:typename:int	file:
__smalloc_pool	smalloc.c	/^static void *__smalloc_pool(struct pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
__string_to_net	cconv.c	/^static void __string_to_net(uint8_t *dst, const char *src, size_t dst_size)$/;"	f	typeref:typename:void	file:
__sum_stat	stat.c	/^static void __sum_stat(struct io_stat *dst, struct io_stat *src, bool first)$/;"	f	typeref:typename:void	file:
__tag	server.c	/^static int send_update_job_reply(uint64_t __tag, int error)$/;"	z	function:send_update_job_reply	typeref:typename:uint64_t	file:
__td_io_u_lock	fio.h	/^static inline void __td_io_u_lock(struct thread_data *td)$/;"	f	typeref:typename:void
__td_io_u_unlock	fio.h	/^static inline void __td_io_u_unlock(struct thread_data *td)$/;"	f	typeref:typename:void
__td_verror	fio.h	/^#define __td_verror(/;"	d
__td_zone_gen_index	zone-dist.c	/^static void __td_zone_gen_index(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:typename:void	file:
__thread_io_list_sz	verify-state.h	/^static inline size_t __thread_io_list_sz(uint32_t depth, uint32_t nofiles)$/;"	f	typeref:typename:size_t
__u16	os/windows/posix/include/asm/types.h	/^typedef unsigned short __u16;$/;"	t	typeref:typename:unsigned short
__u32	os/windows/posix/include/asm/types.h	/^typedef unsigned int __u32;$/;"	t	typeref:typename:unsigned int
__u64	os/windows/posix/include/asm/types.h	/^typedef unsigned long long __u64;$/;"	t	typeref:typename:unsigned long long
__update_graph_settings	gfio.c	/^static void __update_graph_settings(struct gfio_graphs *g)$/;"	f	typeref:typename:void	file:
__update_ts_cache	backend.c	/^static inline void __update_ts_cache(struct thread_data *td)$/;"	f	typeref:typename:void	file:
__val	options.c	/^static int str_io_size_cb(void *data, unsigned long long *__val)$/;"	z	function:str_io_size_cb	typeref:typename:unsigned long long *	file:
__val	options.c	/^static int str_offset_cb(void *data, unsigned long long *__val)$/;"	z	function:str_offset_cb	typeref:typename:unsigned long long *	file:
__val	options.c	/^static int str_offset_increment_cb(void *data, unsigned long long *__val)$/;"	z	function:str_offset_increment_cb	typeref:typename:unsigned long long *	file:
__val	options.c	/^static int str_size_cb(void *data, unsigned long long *__val)$/;"	z	function:str_size_cb	typeref:typename:unsigned long long *	file:
__val	options.c	/^static int str_zoneskip_cb(void *data, unsigned long long *__val)$/;"	z	function:str_zoneskip_cb	typeref:typename:unsigned long long *	file:
__verify_save_state	verify-state.h	/^extern void __verify_save_state(struct all_io_list *, const char *);$/;"	p	typeref:typename:void
__verify_save_state	verify.c	/^void __verify_save_state(struct all_io_list *state, const char *prefix)$/;"	f	typeref:typename:void
__write_log	iolog.c	/^static int __write_log(struct thread_data *td, struct io_log *log, int try)$/;"	f	typeref:typename:int	file:
_add_aws_auth_header	engines/http.c	/^static void _add_aws_auth_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	f	typeref:typename:void	file:
_add_stat_to_log	stat.c	/^static void _add_stat_to_log(struct io_log *iolog, unsigned long elapsed,$/;"	f	typeref:typename:void	file:
_add_swift_header	engines/http.c	/^static void _add_swift_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	f	typeref:typename:void	file:
_aws_uriencode	engines/http.c	/^static char *_aws_uriencode(const char *uri)$/;"	f	typeref:typename:char *	file:
_bdebug	lex.yy.c	/^void yyset_debug (int  _bdebug )$/;"	z	function:yyset_debug	typeref:typename:int	file:
_compiletime_assert	compiler/compiler.h	/^#define _compiletime_assert(/;"	d
_conv_hex	engines/http.c	/^static char *_conv_hex(const unsigned char *p, size_t len)$/;"	f	typeref:typename:char *	file:
_cpucount4	t/run-fio-tests.py	/^    _cpucount4 = False$/;"	v	class:Requirements
_curl_trace	engines/http.c	/^static int _curl_trace(CURL *handle, curl_infotype type,$/;"	f	typeref:typename:int	file:
_dev_close	engines/xnvme.c	/^static void _dev_close(struct thread_data *td, struct xnvme_fioe_fwrap *fwrap)$/;"	f	typeref:typename:void	file:
_dev_open	engines/xnvme.c	/^static int _dev_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
_fio_rados_connect	engines/rados.c	/^static int _fio_rados_connect(struct thread_data *td)$/;"	f	typeref:typename:int	file:
_fio_rados_disconnect	engines/rados.c	/^static void _fio_rados_disconnect(struct rados_data *rados)$/;"	f	typeref:typename:void	file:
_fio_rados_rm_objects	engines/rados.c	/^static void _fio_rados_rm_objects(struct thread_data *td, struct rados_data *rados)$/;"	f	typeref:typename:void	file:
_fio_rbd_connect	engines/rbd.c	/^static int _fio_rbd_connect(struct thread_data *td)$/;"	f	typeref:typename:int	file:
_fio_rbd_disconnect	engines/rbd.c	/^static void _fio_rbd_disconnect(struct rbd_data *rbd)$/;"	f	typeref:typename:void	file:
_fio_rbd_finish_aiocb	engines/rbd.c	/^static void _fio_rbd_finish_aiocb(rbd_completion_t comp, void *data)$/;"	f	typeref:typename:void	file:
_fio_rbd_setup_poll	engines/rbd.c	/^static bool _fio_rbd_setup_poll(struct rbd_data *rbd)$/;"	f	typeref:typename:bool	file:
_fio_setup_rados_data	engines/rados.c	/^static int _fio_setup_rados_data(struct thread_data *td,$/;"	f	typeref:typename:int	file:
_fio_setup_rbd_data	engines/rbd.c	/^static int _fio_setup_rbd_data(struct thread_data *td,$/;"	f	typeref:typename:int	file:
_gen_hex_md5	engines/http.c	/^static char *_gen_hex_md5(const char *p, size_t len)$/;"	f	typeref:typename:char *	file:
_gen_hex_sha256	engines/http.c	/^static char *_gen_hex_sha256(const char *p, size_t len)$/;"	f	typeref:typename:char *	file:
_get_nsec	t/time-test.c	/^static unsigned long long _get_nsec(int mode, unsigned long long t)$/;"	f	typeref:typename:unsigned long long	file:
_hmac	engines/http.c	/^static void _hmac(unsigned char *md, void *key, int key_len, char *data) {$/;"	f	typeref:typename:void	file:
_http_read	engines/http.c	/^static size_t _http_read(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	f	typeref:typename:size_t	file:
_http_seek	engines/http.c	/^static int _http_seek(void *stream, curl_off_t offset, int origin)$/;"	f	typeref:typename:int	file:
_http_write	engines/http.c	/^static size_t _http_write(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	f	typeref:typename:size_t	file:
_in_str	lex.yy.c	/^void yyset_in  ( FILE * _in_str  );$/;"	z	prototype:yyset_in	typeref:typename:FILE *	file:
_in_str	lex.yy.c	/^void yyset_in (FILE *  _in_str )$/;"	z	function:yyset_in	typeref:typename:FILE *	file:
_libaio	t/run-fio-tests.py	/^    _libaio = False$/;"	v	class:Requirements
_line_number	lex.yy.c	/^void yyset_lineno ( int _line_number  );$/;"	z	prototype:yyset_lineno	typeref:typename:int	file:
_line_number	lex.yy.c	/^void yyset_lineno (int  _line_number )$/;"	z	function:yyset_lineno	typeref:typename:int	file:
_linux	t/run-fio-tests.py	/^    _linux = False$/;"	v	class:Requirements
_not_macos	t/run-fio-tests.py	/^    _not_macos = False$/;"	v	class:Requirements
_not_windows	t/run-fio-tests.py	/^    _not_windows = False$/;"	v	class:Requirements
_out_str	lex.yy.c	/^void yyset_out  ( FILE * _out_str  );$/;"	z	prototype:yyset_out	typeref:typename:FILE *	file:
_out_str	lex.yy.c	/^void yyset_out (FILE *  _out_str )$/;"	z	function:yyset_out	typeref:typename:FILE *	file:
_pad	engines/xnvme.c	/^	uint8_t _pad[24];$/;"	m	struct:xnvme_fioe_fwrap	typeref:typename:uint8_t[24]	file:
_pad	engines/xnvme.c	/^	uint8_t _pad[8];$/;"	m	struct:xnvme_fioe_data	typeref:typename:uint8_t[8]	file:
_plat_idx_to_val	tools/hist/fiologparser_hist.py	/^def _plat_idx_to_val(idx, edge=0.5, FIO_IO_U_PLAT_BITS=6, FIO_IO_U_PLAT_VAL=64):$/;"	f
_root	t/run-fio-tests.py	/^    _root = False$/;"	v	class:Requirements
_uint32_t_S	crc/xxhash.c	/^typedef struct _uint32_t_S { uint32_t v; } _PACKED uint32_t_S;$/;"	s	file:
_unittests	t/run-fio-tests.py	/^    _unittests = False$/;"	v	class:Requirements
_yybytes_len	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	z	function:yy_scan_bytes	typeref:typename:int	file:
_zbd	t/run-fio-tests.py	/^    _zbd = False$/;"	v	class:Requirements
_zbd_reset_write_cnt	zbd.c	/^static void _zbd_reset_write_cnt(const struct thread_data *td,$/;"	f	typeref:typename:void	file:
_zoned_nullb	t/run-fio-tests.py	/^    _zoned_nullb = False$/;"	v	class:Requirements
a	gfio.c	/^static gint compare_recent_items(GtkRecentInfo *a, GtkRecentInfo *b)$/;"	z	function:compare_recent_items	typeref:typename:GtkRecentInfo *	file:
a	graph.c	/^static double maxdouble(double a, double b)$/;"	z	function:maxdouble	typeref:typename:double	file:
a	graph.c	/^static double mindouble(double a, double b)$/;"	z	function:mindouble	typeref:typename:double	file:
a	helper_thread.c	/^static void submit_action(enum action a)$/;"	z	function:submit_action	typeref:enum:action	file:
a	json.h	/^		const char *a;$/;"	m	union:json_object_add_value_string::__anon078191b5030a	typeref:typename:const char *
a	lib/flist_sort.c	/^				struct flist_head *a, struct flist_head *b)$/;"	z	function:merge	typeref:struct:flist_head *	file:
a	lib/flist_sort.c	/^				struct flist_head *a, struct flist_head *b)$/;"	z	function:merge_and_restore_back_links	typeref:struct:flist_head *	file:
a	stat.c	/^static int double_cmp(const void *a, const void *b)$/;"	z	function:double_cmp	typeref:typename:const void *	file:
a	t/btrace2fio.c	/^static int entry_cmp(void *priv, struct flist_head *a, struct flist_head *b)$/;"	z	function:entry_cmp	typeref:struct:flist_head *	file:
a	t/time-test.c	/^static void do_div(unsigned long long a[2], unsigned long long b,$/;"	z	function:do_div	typeref:typename:unsigned long long[2]	file:
a	t/time-test.c	/^static void do_mult(unsigned long long a[2], unsigned long long b,$/;"	z	function:do_mult	typeref:typename:unsigned long long[2]	file:
a	t/time-test.c	/^static void do_shift(unsigned long long a[2], unsigned int count)$/;"	z	function:do_shift	typeref:typename:unsigned long long[2]	file:
a	t/time-test.c	/^static void do_shift64(unsigned long long a[2], unsigned int count)$/;"	z	function:do_shift64	typeref:typename:unsigned long long[2]	file:
a	zbd.c	/^				const struct fio_file *f, enum swd_action a)$/;"	z	function:zbd_process_swd	typeref:enum:swd_action	file:
about_dialog	gfio.c	/^static void about_dialog(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
absolute	options.c	/^				    bool absolute)$/;"	z	function:parse_zoned_distribution	typeref:typename:bool	file:
absolute	options.c	/^			    char *str, bool absolute, unsigned int max_splits)$/;"	z	function:split_parse_ddir	typeref:typename:bool	file:
absolute	options.c	/^			   enum fio_ddir ddir, char *str, bool absolute)$/;"	z	function:zone_split_ddir	typeref:typename:bool	file:
absolute	thread_options.h	/^			    char *str, bool absolute, unsigned int max_splits);$/;"	z	prototype:split_parse_ddir	typeref:typename:bool	file:
accept	zbd.c	/^accept:$/;"	L	function:zbd_adjust_block	file:
accept_flags	os/linux/io_uring.h	/^		__u32		accept_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
accept_loop	server.c	/^static int accept_loop(int listen_sk)$/;"	f	typeref:typename:int	file:
access_perc	thread_options.h	/^	uint8_t access_perc;$/;"	m	struct:zone_split	typeref:typename:uint8_t
account_io_completion	io_u.c	/^static void account_io_completion(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
account_unique_capacity	t/dedupe.c	/^static int account_unique_capacity(uint64_t offset, uint64_t *unique_capacity,$/;"	f	typeref:typename:int	file:
acct_ddir	io_u.h	/^	enum fio_ddir acct_ddir;$/;"	m	struct:io_u	typeref:enum:fio_ddir
acct_ddir	io_u.h	/^static inline enum fio_ddir acct_ddir(struct io_u *io_u)$/;"	f	typeref:enum:fio_ddir
act	os/os-windows.h	/^int sigaction(int sig, const struct sigaction *act,$/;"	z	prototype:sigaction	typeref:typename:const struct sigaction *	file:
act	os/windows/posix.c	/^int sigaction(int sig, const struct sigaction *act, struct sigaction *oact)$/;"	z	function:sigaction	typeref:typename:const struct sigaction *	file:
act_add_dev	profiles/act.c	/^static int act_add_dev(const char *dev)$/;"	f	typeref:typename:int	file:
act_add_dev_prep	profiles/act.c	/^static int act_add_dev_prep(const char *dev)$/;"	f	typeref:typename:int	file:
act_add_opt	profiles/act.c	/^static int act_add_opt(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)));$/;"	p	typeref:typename:int	file:
act_add_opt	profiles/act.c	/^static int act_add_opt(const char *str, ...)$/;"	f	typeref:typename:int	file:
act_add_rw	profiles/act.c	/^static int act_add_rw(const char *dev, int reads)$/;"	f	typeref:typename:int	file:
act_io_ops	profiles/act.c	/^static struct prof_io_ops act_io_ops = {$/;"	v	typeref:struct:prof_io_ops	file:
act_io_u_lat	profiles/act.c	/^static int act_io_u_lat(struct thread_data *td, uint64_t nsec)$/;"	f	typeref:typename:int	file:
act_mask	blktrace_api.h	/^	__u16 act_mask;			\/* input *\/$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u16
act_options	profiles/act.c	/^static struct act_options act_options;$/;"	v	typeref:struct:act_options	file:
act_options	profiles/act.c	/^struct act_options {$/;"	s	file:
act_opts	profiles/act.c	/^static const char *act_opts[ACT_MAX_OPTS] = {$/;"	v	typeref:typename:const char * []	file:
act_pass	profiles/act.c	/^static struct act_pass_criteria act_pass[ACT_MAX_CRIT] = {$/;"	v	typeref:struct:act_pass_criteria[]	file:
act_pass_criteria	profiles/act.c	/^struct act_pass_criteria {$/;"	s	file:
act_prep_cmdline	profiles/act.c	/^static int act_prep_cmdline(void)$/;"	f	typeref:typename:int	file:
act_prof_data	profiles/act.c	/^struct act_prof_data {$/;"	s	file:
act_profile	profiles/act.c	/^static struct profile_ops act_profile = {$/;"	v	typeref:struct:profile_ops	file:
act_register	profiles/act.c	/^static void fio_init act_register(void)$/;"	f	typeref:typename:void fio_init	file:
act_run_data	profiles/act.c	/^static struct act_run_data *act_run_data;$/;"	v	typeref:struct:act_run_data *	file:
act_run_data	profiles/act.c	/^struct act_run_data {$/;"	s	file:
act_show_all_stats	profiles/act.c	/^static void act_show_all_stats(void)$/;"	f	typeref:typename:void	file:
act_slice	profiles/act.c	/^struct act_slice {$/;"	s	file:
act_td_exit	profiles/act.c	/^static void act_td_exit(struct thread_data *td)$/;"	f	typeref:typename:void	file:
act_td_init	profiles/act.c	/^static int act_td_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
act_unregister	profiles/act.c	/^static void fio_exit act_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
action	blktrace.c	/^static void trace_add_open_close_event(struct thread_data *td, int fileno, enum file_log_act act/;"	z	function:trace_add_open_close_event	typeref:enum:file_log_act	file:
action	blktrace_api.h	/^	__u32 action;		\/* what happened *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
action	gfio.c	/^static void recent_open(GtkAction *action, gpointer data)$/;"	z	function:recent_open	typeref:typename:GtkAction *	file:
action	helper_thread.c	/^enum action {$/;"	g	file:
actiongroup	gfio.h	/^	GtkActionGroup *actiongroup;$/;"	m	struct:gui	typeref:typename:GtkActionGroup *
actual	t/steadystate_tests.py	/^                    actual = jsonjob['read']['runtime']$/;"	v
actual	t/steadystate_tests.py	/^                actual = jsonjob['read']['runtime']$/;"	v
add	engines/libaio.c	/^			    unsigned int add)$/;"	z	function:ring_inc	typeref:typename:unsigned int	file:
add	t/dedupe.c	/^add:$/;"	L	function:insert_chunk	file:
add_agg_sample	stat.c	/^void add_agg_sample(union io_sample_data data, enum fio_ddir ddir,$/;"	f	typeref:typename:void
add_agg_sample	stat.h	/^extern void add_agg_sample(union io_sample_data, enum fio_ddir, unsigned long long);$/;"	p	typeref:typename:void
add_bs	t/btrace2fio.c	/^static void add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	f	typeref:typename:void	file:
add_button	gfio.c	/^static GtkWidget *add_button(GtkWidget *buttonbox,$/;"	f	typeref:typename:GtkWidget *	file:
add_buttons	gfio.c	/^static void add_buttons(struct gui_entry *ge, struct button_spec *buttonlist,$/;"	f	typeref:typename:void	file:
add_bw_sample	stat.c	/^void add_bw_sample(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void
add_bw_sample	stat.h	/^extern void add_bw_sample(struct thread_data *, struct io_u *,$/;"	p	typeref:typename:void
add_bw_samples	stat.c	/^static int add_bw_samples(struct thread_data *td, struct timespec *t)$/;"	f	typeref:typename:int	file:
add_cgroup	cgroup.c	/^static void add_cgroup(struct thread_data *td, const char *name,$/;"	f	typeref:typename:void	file:
add_clat_sample	stat.c	/^void add_clat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	f	typeref:typename:void
add_clat_sample	stat.h	/^extern void add_clat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	p	typeref:typename:void
add_ddir_lat_json	stat.c	/^static struct json_object *add_ddir_lat_json(struct thread_stat *ts,$/;"	f	typeref:struct:json_object *	file:
add_ddir_status_json	stat.c	/^static void add_ddir_status_json(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
add_dir_files	file.h	/^extern int add_dir_files(struct thread_data *, const char *);$/;"	p	typeref:typename:int
add_dir_files	filesetup.c	/^int add_dir_files(struct thread_data *td, const char *path)$/;"	f	typeref:typename:int
add_file	file.h	/^extern int add_file(struct thread_data *, const char *, int, int);$/;"	p	typeref:typename:int
add_file	filesetup.c	/^int add_file(struct thread_data *td, const char *fname, int numjob, int inc)$/;"	f	typeref:typename:int
add_file_exclusive	file.h	/^extern int add_file_exclusive(struct thread_data *, const char *);$/;"	p	typeref:typename:int
add_file_exclusive	filesetup.c	/^int add_file_exclusive(struct thread_data *td, const char *fname)$/;"	f	typeref:typename:int
add_file_hash	filehash.c	/^struct fio_file *add_file_hash(struct fio_file *f)$/;"	f	typeref:struct:fio_file *
add_file_hash	filehash.h	/^extern struct fio_file *add_file_hash(struct fio_file *);$/;"	p	typeref:struct:fio_file *
add_iops_sample	stat.c	/^void add_iops_sample(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void
add_iops_sample	stat.h	/^extern void add_iops_sample(struct thread_data *, struct io_u *,$/;"	p	typeref:typename:void
add_iops_samples	stat.c	/^static int add_iops_samples(struct thread_data *td, struct timespec *t)$/;"	f	typeref:typename:int	file:
add_item	t/dedupe.c	/^static void add_item(struct chunk *c, struct item *i)$/;"	f	typeref:typename:void	file:
add_job	client.h	/^	client_cmd_op		*add_job;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
add_job	init.c	/^static int add_job(struct thread_data *td, const char *jobname, int job_add_num,$/;"	f	typeref:typename:int	file:
add_job_opts	fio.h	/^extern void add_job_opts(const char **, int);$/;"	p	typeref:typename:void
add_job_opts	init.c	/^void add_job_opts(const char **o, int client_type)$/;"	f	typeref:typename:void
add_lat	t/read-to-pipe-async.c	/^static void add_lat(struct stats *s, unsigned int us, const char *name)$/;"	f	typeref:typename:void	file:
add_lat_percentile_prio_sample	stat.c	/^add_lat_percentile_prio_sample(struct thread_stat *ts, unsigned long long nsec,$/;"	f	typeref:typename:void	file:
add_lat_percentile_sample	stat.c	/^static inline void add_lat_percentile_sample(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
add_lat_sample	stat.c	/^void add_lat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	f	typeref:typename:void
add_lat_sample	stat.h	/^extern void add_lat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	p	typeref:typename:void
add_log_sample	stat.c	/^static unsigned long add_log_sample(struct thread_data *td,$/;"	f	typeref:typename:unsigned long	file:
add_mixed_ddir_status_json	stat.c	/^static void add_mixed_ddir_status_json(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
add_opt_posval	options.c	/^void add_opt_posval(const char *optname, const char *ival, const char *help)$/;"	f	typeref:typename:void
add_opt_posval	options.h	/^void add_opt_posval(const char *, const char *, const char *);$/;"	p	typeref:typename:void
add_option	options.c	/^int add_option(const struct fio_option *o)$/;"	f	typeref:typename:int
add_option	options.h	/^int add_option(const struct fio_option *);$/;"	p	typeref:typename:int
add_opts	t/btrace2fio.c	/^static char **add_opts;$/;"	v	typeref:typename:char **	file:
add_pool	smalloc.c	/^static bool add_pool(struct pool *pool, unsigned int alloc_size)$/;"	f	typeref:typename:bool	file:
add_profile_options	profile.c	/^static int add_profile_options(struct profile_ops *ops)$/;"	f	typeref:typename:int	file:
add_recent_file_items	gfio.c	/^static void add_recent_file_items(struct gui *ui)$/;"	f	typeref:typename:void	file:
add_reply	server.c	/^static void add_reply(uint64_t tag, struct flist_head *list)$/;"	f	typeref:typename:void	file:
add_sample	tools/fiologparser.py	/^    def add_sample(self, start, end, value):$/;"	m	class:TimeSeries
add_slat_sample	stat.c	/^void add_slat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	f	typeref:typename:void
add_slat_sample	stat.h	/^extern void add_slat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	p	typeref:typename:void
add_stat	t/io_uring.c	/^static void add_stat(struct submitter *s, int clock_index, int nr)$/;"	f	typeref:typename:void	file:
add_stat_prio_sample	stat.c	/^static inline void add_stat_prio_sample(struct clat_prio_stat *clat_prio,$/;"	f	typeref:typename:void	file:
add_stat_sample	stat.c	/^static inline void add_stat_sample(struct io_stat *is, unsigned long long data)$/;"	f	typeref:typename:void	file:
add_sync_clat_sample	stat.c	/^void add_sync_clat_sample(struct thread_stat *ts, unsigned long long nsec)$/;"	f	typeref:typename:void
add_sync_clat_sample	stat.h	/^extern void add_sync_clat_sample(struct thread_stat *ts,$/;"	p	typeref:typename:void
add_thread_segment	init.c	/^static int add_thread_segment(void)$/;"	f	typeref:typename:int	file:
add_tm_text	graph.c	/^	double minx, double maxx, int nticks, int add_tm_text)$/;"	z	function:graph_draw_x_ticks	typeref:typename:int	file:
add_tm_text	graph.c	/^	double miny, double maxy, int nticks, int add_tm_text)$/;"	z	function:graph_draw_y_ticks	typeref:typename:int	file:
add_to_dump_list	parse.c	/^static void add_to_dump_list(const struct fio_option *o,$/;"	f	typeref:typename:void	file:
add_to_histo_from	tools/hist/fio-histo-log-pctiles.py	/^def add_to_histo_from( target, source ):$/;"	f
add_to_lopt	options.c	/^static void add_to_lopt(struct option *lopt, struct fio_option *o,$/;"	f	typeref:typename:void	file:
addr	client.h	/^		struct sockaddr_in addr;$/;"	m	union:fio_client::__anon4f09d8da020a	typeref:struct:sockaddr_in
addr	engines/net.c	/^	struct sockaddr_in addr;$/;"	m	struct:netio_data	typeref:struct:sockaddr_in	file:
addr	engines/rdma.c	/^		     struct sockaddr_in *addr)$/;"	z	function:aton	typeref:struct:sockaddr_in *	file:
addr	engines/rdma.c	/^	struct sockaddr_in addr;$/;"	m	struct:rdmaio_data	typeref:struct:sockaddr_in	file:
addr	os/linux/io_uring.h	/^		__u64	addr;	\/* pointer to buffer or iovecs *\/$/;"	m	union:io_uring_sqe::__anon2bbba927020a	typeref:typename:__u64
addr	os/windows/posix.c	/^int mlock(const void * addr, size_t len)$/;"	z	function:mlock	typeref:typename:const void *	file:
addr	os/windows/posix.c	/^int msync(void *addr, size_t len, int flags)$/;"	z	function:msync	typeref:typename:void *	file:
addr	os/windows/posix.c	/^int munlock(const void * addr, size_t len)$/;"	z	function:munlock	typeref:typename:const void *	file:
addr	os/windows/posix.c	/^int munmap(void *addr, size_t len)$/;"	z	function:munmap	typeref:typename:void *	file:
addr	os/windows/posix.c	/^int posix_madvise(void *addr, size_t len, int advice)$/;"	z	function:posix_madvise	typeref:typename:void *	file:
addr	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:void *	file:
addr	os/windows/posix/include/sys/mman.h	/^int mlock(const void *addr, size_t len);$/;"	z	prototype:mlock	typeref:typename:const void *	file:
addr	os/windows/posix/include/sys/mman.h	/^int msync(void *addr, size_t len, int flags);$/;"	z	prototype:msync	typeref:typename:void *	file:
addr	os/windows/posix/include/sys/mman.h	/^int munlock(const void * addr, size_t len);$/;"	z	prototype:munlock	typeref:typename:const void *	file:
addr	os/windows/posix/include/sys/mman.h	/^int munmap(void *addr, size_t len);$/;"	z	prototype:munmap	typeref:typename:void *	file:
addr	os/windows/posix/include/sys/mman.h	/^int posix_madvise(void *addr, size_t len, int advice);$/;"	z	prototype:posix_madvise	typeref:typename:void *	file:
addr	os/windows/posix/include/sys/mman.h	/^void *mmap(void *addr, size_t len, int prot, int flags,$/;"	z	prototype:mmap	typeref:typename:void *	file:
addr2	os/linux/io_uring.h	/^		__u64	addr2;$/;"	m	union:io_uring_sqe::__anon2bbba927010a	typeref:typename:__u64
addr6	client.h	/^		struct sockaddr_in6 addr6;$/;"	m	union:fio_client::__anon4f09d8da020a	typeref:struct:sockaddr_in6
addr6	engines/net.c	/^	struct sockaddr_in6 addr6;$/;"	m	struct:netio_data	typeref:struct:sockaddr_in6	file:
addr_un	client.h	/^		struct sockaddr_un addr_un;$/;"	m	union:fio_client::__anon4f09d8da020a	typeref:struct:sockaddr_un
addr_un	engines/net.c	/^	struct sockaddr_un addr_un;$/;"	m	struct:netio_data	typeref:struct:sockaddr_un	file:
advice	helpers.c	/^int posix_fadvise(int fd, off_t offset, off_t len, int advice)$/;"	z	function:posix_fadvise	typeref:typename:int	file:
advice	helpers.h	/^extern int posix_fadvise(int fd, off_t offset, off_t len, int advice);$/;"	z	prototype:posix_fadvise	typeref:typename:int	file:
advice	os/windows/posix.c	/^int posix_madvise(void *addr, size_t len, int advice)$/;"	z	function:posix_madvise	typeref:typename:int	file:
advice	os/windows/posix/include/sys/mman.h	/^int posix_madvise(void *addr, size_t len, int advice);$/;"	z	prototype:posix_madvise	typeref:typename:int	file:
af	engines/net.c	/^static int fio_fill_addr(struct thread_data *td, const char *host, int af,$/;"	z	function:fio_fill_addr	typeref:typename:int	file:
affinity_mask	os/windows/cpu-affinity.c	/^static int mask_to_group_mask(os_cpu_mask_t *cpumask, int *processor_group, uint64_t *affinity_m/;"	z	function:mask_to_group_mask	typeref:typename:uint64_t *	file:
again	engines/rdma.c	/^again:$/;"	L	function:fio_rdmaio_getevents	file:
again	engines/rdma.c	/^again:$/;"	L	function:rdma_poll_wait	file:
again	io_u.c	/^again:$/;"	L	function:__get_io_u	file:
agg	client.c	/^static void convert_agg(struct disk_util_agg *agg)$/;"	z	function:convert_agg	typeref:struct:disk_util_agg *	file:
agg	diskutil.h	/^	struct disk_util_agg agg;$/;"	m	struct:disk_util	typeref:struct:disk_util_agg
agg	server.h	/^	struct disk_util_agg agg;$/;"	m	struct:cmd_du_pdu	typeref:struct:disk_util_agg
agg	stat.c	/^		struct disk_util_agg *agg, struct json_array *array)$/;"	z	function:json_array_add_disk_util	typeref:struct:disk_util_agg *	file:
agg	stat.c	/^static void show_agg_stats(struct disk_util_agg *agg, int terse,$/;"	z	function:show_agg_stats	typeref:struct:disk_util_agg *	file:
agg	stat.c	/^void print_disk_util(struct disk_util_stat *dus, struct disk_util_agg *agg,$/;"	z	function:print_disk_util	typeref:struct:disk_util_agg *	file:
agg	stat.h	/^				struct disk_util_agg *agg, struct json_array *parent);$/;"	z	prototype:json_array_add_disk_util	typeref:struct:disk_util_agg *	file:
agg	stat.h	/^	uint64_t agg[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
agg_io_log	backend.c	/^struct io_log *agg_io_log[DDIR_RWDIR_CNT];$/;"	v	typeref:struct:io_log * []
aggregate_slaves_stats	stat.c	/^static void aggregate_slaves_stats(struct disk_util *masterdu)$/;"	f	typeref:typename:void	file:
aio	t/io_uring.c	/^static int aio = 0;		\/* use libaio *\/$/;"	v	typeref:typename:int	file:
aio_ctx	engines/libaio.c	/^	io_context_t aio_ctx;$/;"	m	struct:libaio_data	typeref:typename:io_context_t	file:
aio_ctx	engines/libaio.c	/^static int user_io_getevents(io_context_t aio_ctx, unsigned int max,$/;"	z	function:user_io_getevents	typeref:typename:io_context_t	file:
aio_ctx	t/io_uring.c	/^	io_context_t aio_ctx;$/;"	m	struct:submitter	typeref:typename:io_context_t	file:
aio_events	engines/gfapi.h	/^	struct io_u **aio_events;$/;"	m	struct:gf_data	typeref:struct:io_u **
aio_events	engines/libaio.c	/^	struct io_event *aio_events;$/;"	m	struct:libaio_data	typeref:struct:io_event *	file:
aio_events	engines/posixaio.c	/^	struct io_u **aio_events;$/;"	m	struct:posixaio_data	typeref:struct:io_u **	file:
aio_events	engines/rados.c	/^	struct io_u **aio_events;$/;"	m	struct:rados_data	typeref:struct:io_u **	file:
aio_events	engines/rbd.c	/^	struct io_u **aio_events;$/;"	m	struct:rbd_data	typeref:struct:io_u **	file:
aio_events	engines/solarisaio.c	/^	struct io_u **aio_events;$/;"	m	struct:solarisaio_data	typeref:struct:io_u **	file:
aio_events	engines/windowsaio.c	/^	struct io_u **aio_events;$/;"	m	struct:windowsaio_data	typeref:struct:io_u **	file:
aio_pending	engines/solarisaio.c	/^	unsigned int aio_pending;$/;"	m	struct:solarisaio_data	typeref:typename:unsigned int	file:
aio_ring	engines/libaio.c	/^struct aio_ring {$/;"	s	file:
aio_rw_flags	engines/libaio.c	/^#define aio_rw_flags /;"	d	file:
aiocb	engines/ime.c	/^void fio_ime_aio_complete_cb  (struct ime_aiocb *aiocb, int err,$/;"	z	function:fio_ime_aio_complete_cb	typeref:struct:ime_aiocb *	file:
aiocb	io_u.h	/^		os_aiocb_t aiocb;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:typename:os_aiocb_t
aioreqs	engines/ime.c	/^		struct imeaio_req 	*aioreqs;	\/* array of aio requests *\/$/;"	m	union:ime_data::__anon63d57a09010a	typeref:struct:imeaio_req *	file:
al	lib/axmap.c	/^static bool axmap_isset_fn(struct axmap_level *al, uint64_t offset,$/;"	z	function:axmap_isset_fn	typeref:struct:axmap_level *	file:
al	lib/axmap.c	/^static bool axmap_set_fn(struct axmap_level *al, uint64_t offset,$/;"	z	function:axmap_set_fn	typeref:struct:axmap_level *	file:
alias	graph.c	/^	struct flist_head alias;$/;"	m	struct:graph_value	typeref:struct:flist_head	file:
alias	parse.h	/^	const char *alias;		\/* possible old allowed name *\/$/;"	m	struct:fio_option	typeref:typename:const char *
align	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	z	function:XXH32_endian_align	typeref:typename:XXH_alignment	file:
align	crc/xxhash.c	/^static uint32_t XXH_readLE32_align(const uint32_t* ptr, XXH_endianess endian, XXH_alignment alig/;"	z	function:XXH_readLE32_align	typeref:typename:XXH_alignment	file:
align_footer	lib/memalign.c	/^struct align_footer {$/;"	s	file:
align_histo_log	tools/hist/fio-histo-log-pctiles.py	/^def align_histo_log(raw_histogram_log, time_quantum, bucket_count, min_timestamp_ms, max_timesta/;"	f
alignment	cairo_text_helpers.c	/^			       double fontsize, const char *text, int alignment)$/;"	z	function:draw_aligned_text	typeref:typename:int	file:
alignment	fio.h	/^static inline void *fio_memalign(size_t alignment, size_t size, bool shared)$/;"	z	function:fio_memalign	typeref:typename:size_t	file:
alignment	lib/memalign.c	/^void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn)$/;"	z	function:__fio_memalign	typeref:typename:size_t	file:
alignment	lib/memalign.h	/^extern void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn);$/;"	z	prototype:__fio_memalign	typeref:typename:size_t	file:
all	Makefile	/^all: $(PROGS) $(T_TEST_PROGS) $(UT_PROGS) $(SCRIPTS) $(ENGS_OBJS) FORCE$/;"	t
all	Makefile	/^all: fio$/;"	t
all	libfio.c	/^static void reset_io_counters(struct thread_data *td, int all)$/;"	z	function:reset_io_counters	typeref:typename:int	file:
all	libfio.c	/^void clear_io_state(struct thread_data *td, int all)$/;"	z	function:clear_io_state	typeref:typename:int	file:
all	tools/plot/samples/Makefile	/^all: clean m2sw1-128k-sdb-randwrite-para.results_bw.log io bandwidth$/;"	t
all_io_list	verify-state.h	/^struct all_io_list {$/;"	s
all_prios	engines/cmdprio.c	/^static int find_clat_prio_index(unsigned int *all_prios, int nr_prios,$/;"	z	function:find_clat_prio_index	typeref:typename:unsigned int *	file:
all_sw_idle	workqueue.c	/^static bool all_sw_idle(struct workqueue *wq)$/;"	f	typeref:typename:bool	file:
allclients	client.c	/^static struct buf_output allclients;$/;"	v	typeref:struct:buf_output	file:
alloc_chunk	t/dedupe.c	/^static struct chunk *alloc_chunk(void)$/;"	f	typeref:struct:chunk *	file:
alloc_clat_prio_stat_ddir	stat.c	/^int alloc_clat_prio_stat_ddir(struct thread_stat *ts, enum fio_ddir ddir,$/;"	f	typeref:typename:int
alloc_clat_prio_stat_ddir	stat.h	/^extern int alloc_clat_prio_stat_ddir(struct thread_stat *, enum fio_ddir, int);$/;"	p	typeref:typename:int
alloc_mem_cudamalloc	memory.c	/^static int alloc_mem_cudamalloc(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:int	file:
alloc_mem_malloc	memory.c	/^static int alloc_mem_malloc(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:int	file:
alloc_mem_mmap	memory.c	/^static int alloc_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:int	file:
alloc_mem_shm	memory.c	/^static int alloc_mem_shm(struct thread_data *td, unsigned int total_mem)$/;"	f	typeref:typename:int	file:
alloc_new_file	filesetup.c	/^static struct fio_file *alloc_new_file(struct thread_data *td)$/;"	f	typeref:struct:fio_file *	file:
alloc_new_gui_entry	gfio.c	/^static struct gui_entry *alloc_new_gui_entry(struct gui *ui)$/;"	f	typeref:struct:gui_entry *	file:
alloc_or_get_clat_prio_index	stat.c	/^static int alloc_or_get_clat_prio_index(struct thread_stat *dst,$/;"	f	typeref:typename:int	file:
alloc_reply	server.c	/^static uint64_t alloc_reply(uint64_t tag, uint16_t opcode)$/;"	f	typeref:typename:uint64_t	file:
alloc_size	smalloc.c	/^static bool add_pool(struct pool *pool, unsigned int alloc_size)$/;"	z	function:add_pool	typeref:typename:unsigned int	file:
alloc_worker_fn	workqueue.h	/^	workqueue_alloc_worker_fn *alloc_worker_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_alloc_worker_fn *
alloca	y.tab.c	/^#    define alloca /;"	d	file:
allocate_io_mem	fio.h	/^extern int __must_check allocate_io_mem(struct thread_data *);$/;"	p	typeref:typename:int __must_check
allocate_io_mem	memory.c	/^int allocate_io_mem(struct thread_data *td)$/;"	f	typeref:typename:int
allocator	engines/librpma_gpspm_flush.pb-c.c	/^                      ProtobufCAllocator *allocator)$/;"	z	function:gpspm_flush_request__free_unpacked	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.c	/^                      ProtobufCAllocator *allocator)$/;"	z	function:gpspm_flush_response__free_unpacked	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.c	/^                     (ProtobufCAllocator  *allocator,$/;"	z	function:gpspm_flush_request__unpack	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.c	/^                     (ProtobufCAllocator  *allocator,$/;"	z	function:gpspm_flush_response__unpack	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.h	/^                      ProtobufCAllocator *allocator);$/;"	z	prototype:gpspm_flush_request__free_unpacked	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.h	/^                      ProtobufCAllocator *allocator);$/;"	z	prototype:gpspm_flush_response__free_unpacked	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.h	/^                     (ProtobufCAllocator  *allocator,$/;"	z	prototype:gpspm_flush_request__unpack	typeref:typename:ProtobufCAllocator *	file:
allocator	engines/librpma_gpspm_flush.pb-c.h	/^                     (ProtobufCAllocator  *allocator,$/;"	z	prototype:gpspm_flush_response__unpack	typeref:typename:ProtobufCAllocator *	file:
allow_create	thread_options.h	/^	uint32_t allow_create;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
allow_create	thread_options.h	/^	unsigned int allow_create;$/;"	m	struct:thread_options	typeref:typename:unsigned int
allow_mounted_write	thread_options.h	/^	uint32_t allow_mounted_write;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
allow_mounted_write	thread_options.h	/^	unsigned int allow_mounted_write;$/;"	m	struct:thread_options	typeref:typename:unsigned int
allrand_repeatable	thread_options.h	/^	uint32_t allrand_repeatable;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
allrand_repeatable	thread_options.h	/^	unsigned int allrand_repeatable;$/;"	m	struct:thread_options	typeref:typename:unsigned int
alternate_epoch	fio.h	/^	unsigned long long alternate_epoch; \/* Time job was started, clock_gettime's clock_id epoch ba/;"	m	struct:thread_data	typeref:typename:unsigned long long
any_io_in_flight	zbd.c	/^static bool any_io_in_flight(void)$/;"	f	typeref:typename:bool	file:
aopts	init.c	/^		int nested, char *name, char ***popts, int *aopts, int *nopts)$/;"	z	function:__parse_jobs_ini	typeref:typename:int *	file:
ap	oslib/asprintf.c	/^int vasprintf(char **strp, const char *fmt, va_list ap)$/;"	z	function:vasprintf	typeref:typename:va_list	file:
ap	oslib/asprintf.h	/^int vasprintf(char **strp, const char *fmt, va_list ap);$/;"	z	prototype:vasprintf	typeref:typename:va_list	file:
append	y.tab.c	/^          append:$/;"	L	function:yytnamerr	file:
applehelp	doc/Makefile	/^applehelp:$/;"	t
arch	gfio.h	/^	GtkWidget *arch;$/;"	m	struct:probe_widget	typeref:typename:GtkWidget *
arch	server.h	/^	uint8_t arch;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t
arch_aarch64	arch/arch.h	/^	arch_aarch64,$/;"	e	enum:__anon5399c5260103
arch_alpha	arch/arch.h	/^	arch_alpha,$/;"	e	enum:__anon5399c5260103
arch_arm	arch/arch.h	/^	arch_arm,$/;"	e	enum:__anon5399c5260103
arch_cache_line_size	os/os-android.h	/^static inline int arch_cache_line_size(void)$/;"	f	typeref:typename:int
arch_cache_line_size	os/os-linux.h	/^static inline int arch_cache_line_size(void)$/;"	f	typeref:typename:int
arch_ffz	arch/arch-aarch64.h	/^static inline int arch_ffz(unsigned long bitmask)$/;"	f	typeref:typename:int
arch_ffz	arch/arch-ia64.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	f	typeref:typename:unsigned long
arch_ffz	arch/arch-ppc.h	/^static inline int arch_ffz(unsigned long bitmask)$/;"	f	typeref:typename:int
arch_ffz	arch/arch-x86.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	f	typeref:typename:unsigned long
arch_ffz	arch/arch-x86_64.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	f	typeref:typename:unsigned long
arch_flags	libfio.c	/^unsigned long arch_flags = 0;$/;"	v	typeref:typename:unsigned long
arch_flags	t/arch.c	/^unsigned long arch_flags = 0;$/;"	v	typeref:typename:unsigned long
arch_generic	arch/arch.h	/^	arch_generic,$/;"	e	enum:__anon5399c5260103
arch_hppa	arch/arch.h	/^	arch_hppa,$/;"	e	enum:__anon5399c5260103
arch_ia64	arch/arch.h	/^	arch_ia64,$/;"	e	enum:__anon5399c5260103
arch_init	arch/arch-aarch64.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init	arch/arch-ia64.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init	arch/arch-ppc.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init	arch/arch-s390.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init	arch/arch-sh.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init	arch/arch-x86-common.h	/^static inline void arch_init(char *envp[])$/;"	f	typeref:typename:void
arch_init	arch/arch.h	/^static inline int arch_init(char *envp[])$/;"	f	typeref:typename:int
arch_init_amd	arch/arch-x86-common.h	/^static inline void arch_init_amd(void)$/;"	f	typeref:typename:void
arch_init_intel	arch/arch-x86-common.h	/^static inline void arch_init_intel(void)$/;"	f	typeref:typename:void
arch_mips	arch/arch.h	/^	arch_mips,$/;"	e	enum:__anon5399c5260103
arch_nr	arch/arch.h	/^	arch_nr,$/;"	e	enum:__anon5399c5260103
arch_ppc	arch/arch.h	/^	arch_ppc,$/;"	e	enum:__anon5399c5260103
arch_rand_long	arch/arch-x86_64.h	/^static inline int arch_rand_long(unsigned long *val)$/;"	f	typeref:typename:int
arch_rand_seed	arch/arch-x86_64.h	/^static inline int arch_rand_seed(unsigned long *seed)$/;"	f	typeref:typename:int
arch_random	lib/rand.c	/^int arch_random;$/;"	v	typeref:typename:int
arch_random	t/arch.c	/^int arch_random;$/;"	v	typeref:typename:int
arch_s390	arch/arch.h	/^	arch_s390,$/;"	e	enum:__anon5399c5260103
arch_sh	arch/arch.h	/^	arch_sh,$/;"	e	enum:__anon5399c5260103
arch_sparc	arch/arch.h	/^	arch_sparc,$/;"	e	enum:__anon5399c5260103
arch_sparc64	arch/arch.h	/^	arch_sparc64,$/;"	e	enum:__anon5399c5260103
arch_x86	arch/arch.h	/^	arch_x86,$/;"	e	enum:__anon5399c5260103
arch_x86_64	arch/arch.h	/^	arch_x86_64 = 1,$/;"	e	enum:__anon5399c5260103
arg	engines/rados.c	/^static void complete_callback(rados_completion_t cb, void *arg)$/;"	z	function:complete_callback	typeref:typename:void *	file:
arg	gfio.c	/^static void *job_thread(void *arg)$/;"	z	function:job_thread	typeref:typename:void *	file:
arg	gfio.c	/^static void *server_thread(void *arg)$/;"	z	function:server_thread	typeref:typename:void *	file:
arg	json.c	/^			       const struct json_value *arg)$/;"	z	function:json_object_add_value_type	typeref:typename:const struct json_value *	file:
arg	json.c	/^			      const struct json_value *arg)$/;"	z	function:json_array_add_value_type	typeref:typename:const struct json_value *	file:
arg	server.c	/^void fio_server_internal_set(const char *arg)$/;"	z	function:fio_server_internal_set	typeref:typename:const char *	file:
arg	server.c	/^void fio_server_set_arg(const char *arg)$/;"	z	function:fio_server_set_arg	typeref:typename:const char *	file:
arg	tools/hist/fiologparser_hist.py	/^    arg = p.add_argument$/;"	v
arg	tools/hist/half-bins.py	/^    arg = p.add_argument$/;"	v
arg_list	client.h	/^	struct flist_head arg_list;$/;"	m	struct:fio_client	typeref:struct:flist_head
arg_str	oslib/getopt_long.c	/^static inline const char *option_matches(const char *arg_str,$/;"	z	function:option_matches	typeref:typename:const char *	file:
argc	client.h	/^	uint16_t argc;$/;"	m	struct:fio_client	typeref:typename:uint16_t
argc	exp/test-expression-parser.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	fio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:int	file:
argc	gfio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:int	file:
argc	gfio.c	/^static void init_ui(int *argc, char **argv[], struct gui *ui)$/;"	z	function:init_ui	typeref:typename:int *	file:
argc	init.c	/^int parse_cmd_line(int argc, char *argv[], int client_type)$/;"	z	function:parse_cmd_line	typeref:typename:int	file:
argc	init.c	/^int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:int	file:
argc	oslib/getopt_long.c	/^int getopt_long_only(int argc, char *const *argv, const char *optstring,$/;"	z	function:getopt_long_only	typeref:typename:int	file:
argc	t/axmap.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/btrace2fio.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/dedupe.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/fuzz/onefile.c	/^int main(int argc, char** argv)$/;"	z	function:main	typeref:typename:int	file:
argc	t/gen-rand.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/genzipf.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/genzipf.c	/^static int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:int	file:
argc	t/ieee754.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/io_uring.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/lfsr-test.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/memlock.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/read-to-pipe-async.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/read-to-pipe-async.c	/^static int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:int	file:
argc	t/stest.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/time-test.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
argc	t/verify-state.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
args	idletime.c	/^int fio_idle_prof_parse_opt(const char *args)$/;"	z	function:fio_idle_prof_parse_opt	typeref:typename:const char *	file:
args	log.c	/^size_t log_valist(const char *fmt, va_list args)$/;"	z	function:log_valist	typeref:typename:va_list	file:
args	log.c	/^void log_prevalist(int type, const char *fmt, va_list args)$/;"	z	function:log_prevalist	typeref:typename:va_list	file:
args	os/windows/posix.c	/^static BOOL windows_create_process(PROCESS_INFORMATION *pi, const char *args, HANDLE *hjob)$/;"	z	function:windows_create_process	typeref:typename:const char *	file:
args	t/readonly.py	/^    args = parse_args()$/;"	v
args	t/sgunmap-perf.py	/^    args = parse_args()$/;"	v
args	t/sgunmap-test.py	/^    args = parse_args()$/;"	v
args	t/steadystate_tests.py	/^    args = parse_args()$/;"	v
args	t/strided.py	/^    args = parse_args()$/;"	v
arguments	engines/exec.c	/^	char *arguments;$/;"	m	struct:exec_options	typeref:typename:char *	file:
arguments	engines/exec.c	/^char *expand_variables(struct thread_options *o, char *arguments)$/;"	z	function:expand_variables	typeref:typename:char *	file:
argv	client.h	/^	char **argv;$/;"	m	struct:fio_client	typeref:typename:char **
argv	exp/test-expression-parser.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	fio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	gfio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	gfio.c	/^static void init_ui(int *argc, char **argv[], struct gui *ui)$/;"	z	function:init_ui	typeref:typename:char ** []	file:
argv	init.c	/^int parse_cmd_line(int argc, char *argv[], int client_type)$/;"	z	function:parse_cmd_line	typeref:typename:char * []	file:
argv	init.c	/^int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:char * []	file:
argv	oslib/getopt_long.c	/^int getopt_long_only(int argc, char *const *argv, const char *optstring,$/;"	z	function:getopt_long_only	typeref:typename:char * const *	file:
argv	t/axmap.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/btrace2fio.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/btrace2fio.c	/^static int usage(char *argv[])$/;"	z	function:usage	typeref:typename:char * []	file:
argv	t/dedupe.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/dedupe.c	/^static int usage(char *argv[])$/;"	z	function:usage	typeref:typename:char * []	file:
argv	t/fuzz/onefile.c	/^int main(int argc, char** argv)$/;"	z	function:main	typeref:typename:char **	file:
argv	t/gen-rand.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/genzipf.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/genzipf.c	/^static int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:char * []	file:
argv	t/ieee754.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/io_uring.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/io_uring.c	/^static void usage(char *argv, int status)$/;"	z	function:usage	typeref:typename:char *	file:
argv	t/lfsr-test.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/memlock.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/read-to-pipe-async.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/read-to-pipe-async.c	/^static int parse_options(int argc, char *argv[])$/;"	z	function:parse_options	typeref:typename:char * []	file:
argv	t/read-to-pipe-async.c	/^static int usage(char *argv[])$/;"	z	function:usage	typeref:typename:char * []	file:
argv	t/stest.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/time-test.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
argv	t/verify-state.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
arm_sig_int	t/io_uring.c	/^static void arm_sig_int(void)$/;"	f	typeref:typename:void	file:
array	engines/io_uring.c	/^	unsigned *array;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
array	json.c	/^int json_array_add_value_type(struct json_array *array,$/;"	z	function:json_array_add_value_type	typeref:struct:json_array *	file:
array	json.c	/^static int json_array_add_value(struct json_array *array, struct json_value *value)$/;"	z	function:json_array_add_value	typeref:struct:json_array *	file:
array	json.c	/^static int json_array_level(struct json_array *array)$/;"	z	function:json_array_level	typeref:struct:json_array *	file:
array	json.c	/^static int json_array_level(struct json_array *array);$/;"	z	prototype:json_array_level	typeref:struct:json_array *	file:
array	json.c	/^static struct json_value *json_create_value_array(struct json_array *array)$/;"	z	function:json_create_value_array	typeref:struct:json_array *	file:
array	json.c	/^static void json_free_array(struct json_array *array)$/;"	z	function:json_free_array	typeref:struct:json_array *	file:
array	json.c	/^static void json_print_array(struct json_array *array, struct buf_output *out)$/;"	z	function:json_print_array	typeref:struct:json_array *	file:
array	json.h	/^		struct json_array *array;$/;"	m	union:json_value::__anon078191b5010a	typeref:struct:json_array *
array	json.h	/^int json_array_add_value_type(struct json_array *array,$/;"	z	prototype:json_array_add_value_type	typeref:struct:json_array *	file:
array	os/linux/io_uring.h	/^	__u32 array;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
array	stat.c	/^		struct disk_util_agg *agg, struct json_array *array)$/;"	z	function:json_array_add_disk_util	typeref:struct:json_array *	file:
array	t/io_uring.c	/^	unsigned *array;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
array_collapser	tools/fiologparser.py	/^array_collapser = lambda vlist, val:  my_extend(vlist, val) $/;"	f
asprintf	oslib/asprintf.c	/^int asprintf(char **strp, const char *fmt, ...)$/;"	f	typeref:typename:int
asprintf	oslib/asprintf.h	/^int asprintf(char **strp, const char *fmt, ...);$/;"	p	typeref:typename:int
assign_clat_prio_index	engines/cmdprio.c	/^static void assign_clat_prio_index(struct cmdprio_prio *prio,$/;"	f	typeref:typename:void	file:
atomic32_compare_and_swap	gettime.c	/^static inline uint32_t atomic32_compare_and_swap(uint32_t *ptr, uint32_t old,$/;"	f	typeref:typename:uint32_t	file:
atomic_add	arch/arch.h	/^#define atomic_add(/;"	d
atomic_load_acquire	arch/arch.h	/^#define atomic_load_acquire(/;"	d
atomic_load_relaxed	arch/arch.h	/^#define atomic_load_relaxed(/;"	d
atomic_store_release	arch/arch.h	/^#define atomic_store_release(/;"	d
atomic_sub	arch/arch.h	/^#define atomic_sub(/;"	d
aton	engines/rdma.c	/^static int aton(struct thread_data *td, const char *host,$/;"	f	typeref:typename:int	file:
attr	oslib/linux-blkzoned.c	/^static char *blkzoned_get_sysfs_attr(const char *file_name, const char *attr)$/;"	z	function:blkzoned_get_sysfs_attr	typeref:typename:const char *	file:
author	doc/conf.py	/^author = 'Jens Axboe <axboe@kernel.dk>'$/;"	v
aux_path	init.c	/^char *aux_path = NULL;$/;"	v	typeref:typename:char *
average	tools/plot/fio2gnuplot	/^def average(s): return sum(s) * 1.0 \/ len(s)$/;"	f
avg_last	iolog.h	/^	unsigned long avg_last[DDIR_RWDIR_CNT];$/;"	m	struct:io_log	typeref:typename:unsigned long[]
avg_msec	iolog.h	/^	unsigned long avg_msec;$/;"	m	struct:io_log	typeref:typename:unsigned long
avg_msec	iolog.h	/^	unsigned long avg_msec;$/;"	m	struct:log_params	typeref:typename:unsigned long
avg_time	stat.c	/^			 struct timespec *t, unsigned int avg_time,$/;"	z	function:__add_samples	typeref:typename:unsigned int	file:
avg_window	iolog.h	/^	struct io_stat avg_window[DDIR_RWDIR_CNT];$/;"	m	struct:io_log	typeref:struct:io_stat[]
axmap	lib/axmap.c	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_isset	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^static bool axmap_handler(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_handler	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^static bool axmap_handler_topdown(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_handler_topdown	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^static uint64_t axmap_find_first_free(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_find_first_free	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^static void __axmap_set(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:__axmap_set	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^struct axmap {$/;"	s	file:
axmap	lib/axmap.c	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_next_free	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_set_nr	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^void axmap_free(struct axmap *axmap)$/;"	z	function:axmap_free	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^void axmap_reset(struct axmap *axmap)$/;"	z	function:axmap_reset	typeref:struct:axmap *	file:
axmap	lib/axmap.c	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_set	typeref:struct:axmap *	file:
axmap	lib/axmap.h	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_isset	typeref:struct:axmap *	file:
axmap	lib/axmap.h	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_next_free	typeref:struct:axmap *	file:
axmap	lib/axmap.h	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr, unsigned int nr_bits);$/;"	z	prototype:axmap_set_nr	typeref:struct:axmap *	file:
axmap	lib/axmap.h	/^void axmap_reset(struct axmap *axmap);$/;"	z	prototype:axmap_reset	typeref:struct:axmap *	file:
axmap	lib/axmap.h	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_set	typeref:struct:axmap *	file:
axmap_find_first_free	lib/axmap.c	/^static uint64_t axmap_find_first_free(struct axmap *axmap, uint64_t bit_nr)$/;"	f	typeref:typename:uint64_t	file:
axmap_free	lib/axmap.c	/^void axmap_free(struct axmap *axmap)$/;"	f	typeref:typename:void
axmap_free	lib/axmap.h	/^void axmap_free(struct axmap *bm);$/;"	p	typeref:typename:void
axmap_handler	lib/axmap.c	/^static bool axmap_handler(struct axmap *axmap, uint64_t bit_nr,$/;"	f	typeref:typename:bool	file:
axmap_handler_topdown	lib/axmap.c	/^static bool axmap_handler_topdown(struct axmap *axmap, uint64_t bit_nr,$/;"	f	typeref:typename:bool	file:
axmap_isset	lib/axmap.c	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr)$/;"	f	typeref:typename:bool
axmap_isset	lib/axmap.h	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr);$/;"	p	typeref:typename:bool
axmap_isset_fn	lib/axmap.c	/^static bool axmap_isset_fn(struct axmap_level *al, uint64_t offset,$/;"	f	typeref:typename:bool	file:
axmap_level	lib/axmap.c	/^struct axmap_level {$/;"	s	file:
axmap_new	lib/axmap.c	/^struct axmap *axmap_new(uint64_t nr_bits)$/;"	f	typeref:struct:axmap *
axmap_new	lib/axmap.h	/^struct axmap *axmap_new(uint64_t nr_bits);$/;"	p	typeref:struct:axmap *
axmap_next_free	lib/axmap.c	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr)$/;"	f	typeref:typename:uint64_t
axmap_next_free	lib/axmap.h	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr);$/;"	p	typeref:typename:uint64_t
axmap_reset	lib/axmap.c	/^void axmap_reset(struct axmap *axmap)$/;"	f	typeref:typename:void
axmap_reset	lib/axmap.h	/^void axmap_reset(struct axmap *axmap);$/;"	p	typeref:typename:void
axmap_set	lib/axmap.c	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr)$/;"	f	typeref:typename:void
axmap_set	lib/axmap.h	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr);$/;"	p	typeref:typename:void
axmap_set_data	lib/axmap.c	/^struct axmap_set_data {$/;"	s	file:
axmap_set_fn	lib/axmap.c	/^static bool axmap_set_fn(struct axmap_level *al, uint64_t offset,$/;"	f	typeref:typename:bool	file:
axmap_set_nr	lib/axmap.c	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr,$/;"	f	typeref:typename:unsigned int
axmap_set_nr	lib/axmap.h	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr, unsigned int nr_bits);$/;"	p	typeref:typename:unsigned int
b	gfio.c	/^static gint compare_recent_items(GtkRecentInfo *a, GtkRecentInfo *b)$/;"	z	function:compare_recent_items	typeref:typename:GtkRecentInfo *	file:
b	ghelpers.c	/^					gfloat r, gfloat g, gfloat b)$/;"	z	function:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
b	ghelpers.c	/^static void fill_color_from_rgb(GdkColor *c, gfloat r, gfloat g, gfloat b)$/;"	z	function:fill_color_from_rgb	typeref:typename:gfloat	file:
b	ghelpers.h	/^					gfloat r, gfloat g, gfloat b);$/;"	z	prototype:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
b	goptions.c	/^				     struct gopt_bool *b, struct fio_option *o)$/;"	z	function:gopt_handle_bool_changed	typeref:struct:gopt_bool *	file:
b	goptions.c	/^static void gopt_bool_set_val(struct gopt_bool *b, unsigned int val)$/;"	z	function:gopt_bool_set_val	typeref:struct:gopt_bool *	file:
b	graph.c	/^	double r, g, b;$/;"	m	struct:graph_label	typeref:typename:double	file:
b	graph.c	/^static double maxdouble(double a, double b)$/;"	z	function:maxdouble	typeref:typename:double	file:
b	graph.c	/^static double mindouble(double a, double b)$/;"	z	function:mindouble	typeref:typename:double	file:
b	io_u.c	/^					    enum fio_ddir ddir, uint64_t *b)$/;"	z	function:__get_next_rand_offset_zoned_abs	typeref:typename:uint64_t *	file:
b	io_u.c	/^					 uint64_t *b)$/;"	z	function:__get_next_rand_offset_pareto	typeref:typename:uint64_t *	file:
b	io_u.c	/^					uint64_t *b)$/;"	z	function:__get_next_rand_offset_gauss	typeref:typename:uint64_t *	file:
b	io_u.c	/^					uint64_t *b)$/;"	z	function:__get_next_rand_offset_zoned	typeref:typename:uint64_t *	file:
b	io_u.c	/^				       uint64_t *b)$/;"	z	function:__get_next_rand_offset_zipf	typeref:typename:uint64_t *	file:
b	io_u.c	/^				  enum fio_ddir ddir, uint64_t *b,$/;"	z	function:__get_next_rand_offset	typeref:typename:uint64_t *	file:
b	io_u.c	/^				enum fio_ddir ddir, uint64_t *b)$/;"	z	function:get_next_rand_offset	typeref:typename:uint64_t *	file:
b	io_u.c	/^			       enum fio_ddir ddir, uint64_t *b)$/;"	z	function:get_next_rand_block	typeref:typename:uint64_t *	file:
b	json.h	/^		char *b;$/;"	m	union:json_object_add_value_string::__anon078191b5030a	typeref:typename:char *
b	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	z	function:yy_init_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	z	function:yy_delete_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	z	function:yy_flush_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lex.yy.c	/^static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );$/;"	z	prototype:yy_init_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lex.yy.c	/^void yy_delete_buffer ( YY_BUFFER_STATE b  );$/;"	z	prototype:yy_delete_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lex.yy.c	/^void yy_flush_buffer ( YY_BUFFER_STATE b  );$/;"	z	prototype:yy_flush_buffer	typeref:typename:YY_BUFFER_STATE	file:
b	lib/bloom.c	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords)$/;"	z	function:bloom_set	typeref:struct:bloom *	file:
b	lib/bloom.c	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len,$/;"	z	function:bloom_string	typeref:struct:bloom *	file:
b	lib/bloom.c	/^static bool __bloom_check(struct bloom *b, const void *data, unsigned int len,$/;"	z	function:__bloom_check	typeref:struct:bloom *	file:
b	lib/bloom.c	/^void bloom_free(struct bloom *b)$/;"	z	function:bloom_free	typeref:struct:bloom *	file:
b	lib/bloom.h	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords);$/;"	z	prototype:bloom_set	typeref:struct:bloom *	file:
b	lib/bloom.h	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len, bool);$/;"	z	prototype:bloom_string	typeref:struct:bloom *	file:
b	lib/bloom.h	/^void bloom_free(struct bloom *b);$/;"	z	prototype:bloom_free	typeref:struct:bloom *	file:
b	lib/flist_sort.c	/^				struct flist_head *a, struct flist_head *b)$/;"	z	function:merge	typeref:struct:flist_head *	file:
b	lib/flist_sort.c	/^				struct flist_head *a, struct flist_head *b)$/;"	z	function:merge_and_restore_back_links	typeref:struct:flist_head *	file:
b	stat.c	/^static int double_cmp(const void *a, const void *b)$/;"	z	function:double_cmp	typeref:typename:const void *	file:
b	t/btrace2fio.c	/^static int entry_cmp(void *priv, struct flist_head *a, struct flist_head *b)$/;"	z	function:entry_cmp	typeref:struct:flist_head *	file:
b	t/time-test.c	/^static void do_div(unsigned long long a[2], unsigned long long b,$/;"	z	function:do_div	typeref:typename:unsigned long long	file:
b	t/time-test.c	/^static void do_mult(unsigned long long a[2], unsigned long long b,$/;"	z	function:do_mult	typeref:typename:unsigned long long	file:
ba	t/btrace2fio.c	/^static int bs_cmp(const void *ba, const void *bb)$/;"	z	function:bs_cmp	typeref:typename:const void *	file:
ba	thread_options.h	/^	uint64_t ba[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
ba	thread_options.h	/^	unsigned long long ba[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned long long[]
bad_crc	verify.c	/^	void *bad_crc;$/;"	m	struct:vcont	typeref:typename:void *	file:
bad_host	engines/rdma.c	/^bad_host:$/;"	L	function:compat_options	file:
badf	io_u.c	/^					   enum fio_file_flags badf)$/;"	z	function:get_next_file_rand	typeref:enum:fio_file_flags	file:
badf	io_u.c	/^					 int badf)$/;"	z	function:get_next_file_rr	typeref:typename:int	file:
bail	io_u.c	/^bail:$/;"	L	function:__get_next_rand_offset_zoned	file:
bail	io_u.c	/^bail:$/;"	L	function:__get_next_rand_offset_zoned_abs	file:
bandwidth	tools/plot/samples/Makefile	/^bandwidth: setup$/;"	t
bandwidth_graph	gfio.h	/^	struct graph *bandwidth_graph;$/;"	m	struct:gfio_graphs	typeref:struct:graph *
bar_graph_draw	graph.c	/^void bar_graph_draw(struct graph *bg, cairo_t *cr)$/;"	f	typeref:typename:void
bar_graph_draw	graph.h	/^void bar_graph_draw(struct graph *g, cairo_t *cr);$/;"	p	typeref:typename:void
bar_width	graph.c	/^			double label_offset, double bar_width,$/;"	z	function:draw_bars	typeref:typename:double	file:
bareverbose	oslib/libmtd_common.h	/^#define bareverbose(/;"	d
barrier_blocks	thread_options.h	/^	uint32_t barrier_blocks;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
barrier_blocks	thread_options.h	/^	unsigned int barrier_blocks;$/;"	m	struct:thread_options	typeref:typename:unsigned int
base	engines/librpma_gpspm_flush.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_GPSPMFlushRequest	typeref:typename:ProtobufCMessage
base	engines/librpma_gpspm_flush.pb-c.h	/^  ProtobufCMessage base;$/;"	m	struct:_GPSPMFlushResponse	typeref:typename:ProtobufCMessage
base	filesetup.c	/^	const char *base;$/;"	m	struct:fio_mount	typeref:typename:const char *	file:
base	gclient.c	/^					       const char *base,$/;"	z	function:gfio_output_clat_percentiles	typeref:typename:const char *	file:
base	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	z	function:yy_scan_buffer	typeref:typename:char *	file:
base	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );$/;"	z	prototype:yy_scan_buffer	typeref:typename:char *	file:
base	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	z	function:num2str	typeref:typename:int	file:
base	lib/strntol.c	/^long strntol(const char *str, size_t sz, char **end, int base)$/;"	z	function:strntol	typeref:typename:int	file:
base	lib/strntol.h	/^long strntol(const char *str, size_t sz, char **end, int base);$/;"	z	prototype:strntol	typeref:typename:int	file:
base	os/windows/posix.c	/^long long strtoll(const char *restrict str, char **restrict endptr, int base)$/;"	z	function:strtoll	typeref:typename:int	file:
base	unittests/lib/num2str.c	/^	int base;$/;"	m	struct:testcase	typeref:typename:int	file:
base_off	tickmarks.h	/^			int *power_of_ten, int use_KMG_symbols, int base_off);$/;"	z	prototype:calc_tickmarks	typeref:typename:int	file:
base_offset	graph.c	/^	unsigned int base_offset;$/;"	m	struct:graph	typeref:typename:unsigned int	file:
base_offset	graph.c	/^void graph_set_base_offset(struct graph *g, unsigned int base_offset)$/;"	z	function:graph_set_base_offset	typeref:typename:unsigned int	file:
base_offset	graph.h	/^extern void graph_set_base_offset(struct graph *g, unsigned int base_offset);$/;"	z	prototype:graph_set_base_offset	typeref:typename:unsigned int	file:
base_offset	tickmarks.c	/^			int use_KMG_symbols, int base_offset)$/;"	z	function:shorten	typeref:typename:int	file:
base_offset	tickmarks.c	/^		int *power_of_ten, int use_KMG_symbols, int base_offset)$/;"	z	function:calc_tickmarks	typeref:typename:int	file:
basename	os/windows/posix.c	/^char *basename(char *path)$/;"	f	typeref:typename:char *
basename	os/windows/posix/include/libgen.h	/^char *basename(char *path);$/;"	p	typeref:typename:char *
batch_complete	t/io_uring.c	/^static int batch_complete = BATCH_COMPLETE;$/;"	v	typeref:typename:int	file:
batch_submit	t/io_uring.c	/^static int batch_submit = BATCH_SUBMIT;$/;"	v	typeref:typename:int	file:
bb	t/btrace2fio.c	/^static int bs_cmp(const void *ba, const void *bb)$/;"	z	function:bs_cmp	typeref:typename:const void *	file:
bb_allowed	oslib/libmtd.h	/^	unsigned int bb_allowed:1;$/;"	m	struct:mtd_dev_info	typeref:typename:unsigned int:1
bc	blktrace.c	/^static int read_trace(struct thread_data *td, struct blktrace_cursor *bc)$/;"	z	function:read_trace	typeref:struct:blktrace_cursor *	file:
bc_calc	options.c	/^static char *bc_calc(char *str)$/;"	f	typeref:typename:char *	file:
bcs	blktrace.c	/^static int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)$/;"	z	function:find_earliest_io	typeref:struct:blktrace_cursor *	file:
bcs	blktrace.c	/^static int init_merge_param_list(fio_fp64_t *vals, struct blktrace_cursor *bcs,$/;"	z	function:init_merge_param_list	typeref:struct:blktrace_cursor *	file:
bcs	blktrace.c	/^static void merge_finish_file(struct blktrace_cursor *bcs, int i, int *nr_logs)$/;"	z	function:merge_finish_file	typeref:struct:blktrace_cursor *	file:
bdev_size	filesetup.c	/^static int bdev_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
be16_to_cpu	os/os.h	/^#define be16_to_cpu(/;"	d
be32_to_cpu	os/os.h	/^#define be32_to_cpu(/;"	d
be64_to_cpu	os/os.h	/^#define be64_to_cpu(/;"	d
beg	lib/pattern.c	/^static const char *parse_file(const char *beg, char *out,$/;"	z	function:parse_file	typeref:typename:const char *	file:
beg	lib/pattern.c	/^static const char *parse_number(const char *beg, char *out,$/;"	z	function:parse_number	typeref:typename:const char *	file:
beg	lib/pattern.c	/^static const char *parse_string(const char *beg, char *out,$/;"	z	function:parse_string	typeref:typename:const char *	file:
begin_print	printing.c	/^static void begin_print(GtkPrintOperation *operation,$/;"	f	typeref:typename:void	file:
best	workqueue.c	/^						 struct submit_worker **best)$/;"	z	function:__get_submit_worker	typeref:struct:submit_worker **	file:
bg	graph.c	/^graph_label_t graph_add_label(struct graph *bg, const char *label)$/;"	z	function:graph_add_label	typeref:struct:graph *	file:
bg	graph.c	/^int graph_add_data(struct graph *bg, graph_label_t label, const double value)$/;"	z	function:graph_add_data	typeref:struct:graph *	file:
bg	graph.c	/^int graph_add_xy_data(struct graph *bg, graph_label_t label,$/;"	z	function:graph_add_xy_data	typeref:struct:graph *	file:
bg	graph.c	/^static struct graph_label *graph_find_label(struct graph *bg,$/;"	z	function:graph_find_label	typeref:struct:graph *	file:
bg	graph.c	/^static void draw_bars(struct graph *bg, cairo_t *cr, struct graph_label *lb,$/;"	z	function:draw_bars	typeref:struct:graph *	file:
bg	graph.c	/^void bar_graph_draw(struct graph *bg, cairo_t *cr)$/;"	z	function:bar_graph_draw	typeref:struct:graph *	file:
bg	graph.c	/^void graph_free(struct graph *bg)$/;"	z	function:graph_free	typeref:struct:graph *	file:
bg	graph.c	/^void graph_title(struct graph *bg, const char *title)$/;"	z	function:graph_title	typeref:struct:graph *	file:
bg	graph.c	/^void graph_x_title(struct graph *bg, const char *title)$/;"	z	function:graph_x_title	typeref:struct:graph *	file:
bg	graph.c	/^void graph_y_title(struct graph *bg, const char *title)$/;"	z	function:graph_y_title	typeref:struct:graph *	file:
bg	graph.h	/^void graph_free(struct graph *bg);$/;"	z	prototype:graph_free	typeref:struct:graph *	file:
bigendian	server.h	/^	uint8_t bigendian;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t
bin_vals	tools/hist/fiologparser_hist.py	/^bin_vals = []$/;"	v
bind_sock	server.c	/^static char *bind_sock;$/;"	v	typeref:typename:char *	file:
bindir	Makefile	/^bindir = $(prefix)\/bin$/;"	m
bindname	engines/rdma.c	/^	char *bindname;$/;"	m	struct:rdmaio_options	typeref:typename:char *	file:
bit	lib/axmap.c	/^			   unsigned int bit, void *unused)$/;"	z	function:axmap_isset_fn	typeref:typename:unsigned int	file:
bit	lib/axmap.c	/^			 unsigned int bit, void *__data)$/;"	z	function:axmap_set_fn	typeref:typename:unsigned int	file:
bit_masks	lib/axmap.c	/^static const unsigned long bit_masks[] = {$/;"	v	typeref:typename:const unsigned long[]	file:
bit_nr	lib/axmap.c	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_isset	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^static bool axmap_handler(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_handler	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^static bool axmap_handler_topdown(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_handler_topdown	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^static uint64_t axmap_find_first_free(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_find_first_free	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^static void __axmap_set(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:__axmap_set	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_next_free	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr,$/;"	z	function:axmap_set_nr	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.c	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr)$/;"	z	function:axmap_set	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.h	/^bool axmap_isset(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_isset	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.h	/^uint64_t axmap_next_free(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_next_free	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.h	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr, unsigned int nr_bits);$/;"	z	prototype:axmap_set_nr	typeref:typename:uint64_t	file:
bit_nr	lib/axmap.h	/^void axmap_set(struct axmap *axmap, uint64_t bit_nr);$/;"	z	prototype:axmap_set	typeref:typename:uint64_t	file:
bit_off	t/axmap.c	/^static int test_multi(uint64_t size, unsigned int bit_off)$/;"	z	function:test_multi	typeref:typename:unsigned int	file:
bitmap	smalloc.c	/^	unsigned int *bitmap;			\/* blocks free\/busy map *\/$/;"	m	struct:pool	typeref:typename:unsigned int *	file:
bitmask	arch/arch-aarch64.h	/^static inline int arch_ffz(unsigned long bitmask)$/;"	z	function:arch_ffz	typeref:typename:unsigned long	file:
bitmask	arch/arch-ia64.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	z	function:arch_ffz	typeref:typename:unsigned long	file:
bitmask	arch/arch-ppc.h	/^static inline int __ilog2(unsigned long bitmask)$/;"	z	function:__ilog2	typeref:typename:unsigned long	file:
bitmask	arch/arch-ppc.h	/^static inline int arch_ffz(unsigned long bitmask)$/;"	z	function:arch_ffz	typeref:typename:unsigned long	file:
bitmask	arch/arch-x86.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	z	function:arch_ffz	typeref:typename:unsigned long	file:
bitmask	arch/arch-x86_64.h	/^static inline unsigned long arch_ffz(unsigned long bitmask)$/;"	z	function:arch_ffz	typeref:typename:unsigned long	file:
bitmask	lib/ffz.h	/^static inline int ffz(unsigned long bitmask)$/;"	z	function:ffz	typeref:typename:unsigned long	file:
bitmask	lib/ffz.h	/^static inline int ffz64(uint64_t bitmask)$/;"	z	function:ffz64	typeref:typename:uint64_t	file:
bits	hash.h	/^static inline unsigned long hash_long(unsigned long val, unsigned int bits)$/;"	z	function:hash_long	typeref:typename:unsigned int	file:
bits	hash.h	/^static inline unsigned long hash_ptr(void *ptr, unsigned int bits)$/;"	z	function:hash_ptr	typeref:typename:unsigned int	file:
bits	lib/ieee754.c	/^long double unpack754(uint64_t i, unsigned bits, unsigned expbits)$/;"	z	function:unpack754	typeref:typename:unsigned	file:
bits	lib/ieee754.c	/^uint64_t pack754(long double f, unsigned bits, unsigned expbits)$/;"	z	function:pack754	typeref:typename:unsigned	file:
bits	lib/ieee754.h	/^extern long double unpack754(uint64_t i, unsigned bits, unsigned expbits);$/;"	z	prototype:unpack754	typeref:typename:unsigned	file:
bits	lib/ieee754.h	/^extern uint64_t pack754(long double f, unsigned bits, unsigned expbits);$/;"	z	prototype:pack754	typeref:typename:unsigned	file:
bits	lib/prio_tree.c	/^static inline unsigned long prio_tree_maxindex(unsigned int bits)$/;"	z	function:prio_tree_maxindex	typeref:typename:unsigned int	file:
blk_SHA1Block	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data)$/;"	f	typeref:typename:void	file:
blk_SHA1Block	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data);$/;"	p	typeref:typename:void	file:
blk_io_trace	blktrace_api.h	/^struct blk_io_trace {$/;"	s
blk_io_trace_remap	blktrace_api.h	/^struct blk_io_trace_remap {$/;"	s
blk_user_trace_setup	blktrace_api.h	/^struct blk_user_trace_setup {$/;"	s
blk_zone	oslib/linux-blkzoned.c	/^#define blk_zone /;"	d	file:
blk_zone_report	oslib/linux-blkzoned.c	/^#define blk_zone_report /;"	d	file:
blk_zone_report_v2	oslib/linux-blkzoned.c	/^struct blk_zone_report_v2 {$/;"	s	file:
blk_zone_v2	oslib/linux-blkzoned.c	/^struct blk_zone_v2 {$/;"	s	file:
blktrace_cursor	blktrace.h	/^struct blktrace_cursor {$/;"	s
blktrace_lookup_device	oslib/linux-dev-lookup.c	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	f	typeref:typename:int
blktrace_lookup_device	oslib/linux-dev-lookup.h	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	p	typeref:typename:int
blktrace_notify	blktrace_api.h	/^enum blktrace_notify {$/;"	g
blkz	oslib/linux-blkzoned.c	/^			      struct blk_zone *blkz)$/;"	z	function:zone_capacity	typeref:struct:blk_zone *	file:
blkzoned_get_max_open_zones	oslib/blkzoned.h	/^extern int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	p	typeref:typename:int
blkzoned_get_max_open_zones	oslib/blkzoned.h	/^static inline int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
blkzoned_get_max_open_zones	oslib/linux-blkzoned.c	/^int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
blkzoned_get_sysfs_attr	oslib/linux-blkzoned.c	/^static char *blkzoned_get_sysfs_attr(const char *file_name, const char *attr)$/;"	f	typeref:typename:char *	file:
blkzoned_get_zoned_model	oslib/blkzoned.h	/^extern int blkzoned_get_zoned_model(struct thread_data *td,$/;"	p	typeref:typename:int
blkzoned_get_zoned_model	oslib/blkzoned.h	/^static inline int blkzoned_get_zoned_model(struct thread_data *td,$/;"	f	typeref:typename:int
blkzoned_get_zoned_model	oslib/linux-blkzoned.c	/^int blkzoned_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
blkzoned_report_zones	oslib/blkzoned.h	/^extern int blkzoned_report_zones(struct thread_data *td,$/;"	p	typeref:typename:int
blkzoned_report_zones	oslib/blkzoned.h	/^static inline int blkzoned_report_zones(struct thread_data *td,$/;"	f	typeref:typename:int
blkzoned_report_zones	oslib/linux-blkzoned.c	/^int blkzoned_report_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
blkzoned_reset_wp	oslib/blkzoned.h	/^extern int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	p	typeref:typename:int
blkzoned_reset_wp	oslib/blkzoned.h	/^static inline int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
blkzoned_reset_wp	oslib/linux-blkzoned.c	/^int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
block	crc/md5.h	/^	uint32_t block[MD5_BLOCK_WORDS];$/;"	m	struct:fio_md5_ctx	typeref:typename:uint32_t[]
block	io_u.c	/^static bool random_map_free(struct fio_file *f, const uint64_t block)$/;"	z	function:random_map_free	typeref:typename:const uint64_t	file:
block_dev_name	t/one-core-peak.sh	/^block_dev_name() {$/;"	f
block_error_hist	thread_options.h	/^	uint32_t block_error_hist;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
block_error_hist	thread_options.h	/^	unsigned block_error_hist;$/;"	m	struct:thread_options	typeref:typename:unsigned
block_hdr	smalloc.c	/^struct block_hdr {$/;"	s	file:
block_info_state	stat.h	/^enum block_info_state {$/;"	g
block_infos	stat.c	/^static int calc_block_percentiles(int nr_block_infos, uint32_t *block_infos,$/;"	z	function:calc_block_percentiles	typeref:typename:uint32_t *	file:
block_infos	stat.c	/^static void show_block_infos(int nr_block_infos, uint32_t *block_infos,$/;"	z	function:show_block_infos	typeref:typename:uint32_t *	file:
block_infos	stat.h	/^	uint32_t block_infos[MAX_NR_BLOCK_INFOS];$/;"	m	struct:thread_stat	typeref:typename:uint32_t[]
block_signals	helper_thread.c	/^static void block_signals(void)$/;"	f	typeref:typename:void	file:
block_size	engines/libiscsi.c	/^	int			 block_size;$/;"	m	struct:iscsi_lun	typeref:typename:int	file:
block_size	t/genzipf.c	/^static unsigned long block_size = 4096;$/;"	v	typeref:typename:unsigned long	file:
block_state	stat.c	/^static int block_state_category(int block_state)$/;"	z	function:block_state_category	typeref:typename:int	file:
block_state_category	stat.c	/^static int block_state_category(int block_state)$/;"	f	typeref:typename:int	file:
block_state_names	stat.c	/^static const char *block_state_names[] = {$/;"	v	typeref:typename:const char * []	file:
blockdev_invalidate_cache	os/os-aix.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-android.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-dragonfly.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-freebsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-hpux.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-linux.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-mac.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-netbsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-openbsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-solaris.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_invalidate_cache	os/os-windows.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int
blockdev_size	os/os-aix.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-android.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-dragonfly.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-freebsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-hpux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-linux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-mac.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-netbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-openbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os-windows.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blockdev_size	os/os.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
blocks	filesetup.c	/^				 uint64_t blocks)$/;"	z	function:check_rand_gen_limits	typeref:typename:uint64_t	file:
blocks_free	smalloc.c	/^static int blocks_free(struct pool *pool, unsigned int pool_idx,$/;"	f	typeref:typename:int	file:
blocks_iter	smalloc.c	/^static int blocks_iter(struct pool *pool, unsigned int pool_idx,$/;"	f	typeref:typename:int	file:
blocksize	t/dedupe.c	/^static unsigned int blocksize = 4096;$/;"	v	typeref:typename:unsigned int	file:
bloom	lib/bloom.c	/^struct bloom {$/;"	s	file:
bloom	t/dedupe.c	/^static struct bloom *bloom;$/;"	v	typeref:struct:bloom *	file:
bloom_crc32c	lib/bloom.c	/^static uint32_t bloom_crc32c(const void *buf, uint32_t len, uint32_t seed)$/;"	f	typeref:typename:uint32_t	file:
bloom_fnv	lib/bloom.c	/^static uint32_t bloom_fnv(const void *buf, uint32_t len, uint32_t seed)$/;"	f	typeref:typename:uint32_t	file:
bloom_free	lib/bloom.c	/^void bloom_free(struct bloom *b)$/;"	f	typeref:typename:void
bloom_free	lib/bloom.h	/^void bloom_free(struct bloom *b);$/;"	p	typeref:typename:void
bloom_hash	lib/bloom.c	/^struct bloom_hash {$/;"	s	file:
bloom_new	lib/bloom.c	/^struct bloom *bloom_new(uint64_t entries)$/;"	f	typeref:struct:bloom *
bloom_new	lib/bloom.h	/^struct bloom *bloom_new(uint64_t entries);$/;"	p	typeref:struct:bloom *
bloom_set	lib/bloom.c	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords)$/;"	f	typeref:typename:bool
bloom_set	lib/bloom.h	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords);$/;"	p	typeref:typename:bool
bloom_string	lib/bloom.c	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len,$/;"	f	typeref:typename:bool
bloom_string	lib/bloom.h	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len, bool);$/;"	p	typeref:typename:bool
blue	graph.c	/^		     double green, double blue)$/;"	z	function:graph_set_color	typeref:typename:double	file:
blue	graph.h	/^		double red, double green, double blue);$/;"	z	prototype:graph_set_color	typeref:typename:double	file:
bm	lib/axmap.h	/^void axmap_free(struct axmap *bm);$/;"	z	prototype:axmap_free	typeref:struct:axmap *	file:
bool	HOWTO.rst	/^.. _bool:$/;"	T	section:Parameter types
border_width	ghelpers.c	/^GtkWidget *get_scrolled_window(gint border_width)$/;"	z	function:get_scrolled_window	typeref:typename:gint	file:
border_width	ghelpers.h	/^GtkWidget *get_scrolled_window(gint border_width);$/;"	z	prototype:get_scrolled_window	typeref:typename:gint	file:
bottom_extra	graph.c	/^	double bottom_extra;$/;"	m	struct:graph	typeref:typename:double	file:
bottom_percent	graph.c	/^			   double bottom_percent)$/;"	z	function:graph_add_extra_space	typeref:typename:double	file:
bottom_percent	graph.h	/^				double top_percent, double bottom_percent);$/;"	z	prototype:graph_add_extra_space	typeref:typename:double	file:
box	gfio.c	/^static void combo_entry_changed(GtkComboBox *box, gpointer data)$/;"	z	function:combo_entry_changed	typeref:typename:GtkComboBox *	file:
box	ghelpers.c	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_combo_entry_in_frame	typeref:typename:GtkWidget *	file:
box	ghelpers.c	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_info_entry_in_frame	typeref:typename:GtkWidget *	file:
box	ghelpers.c	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	z	function:new_info_entry_in_frame_rgb	typeref:typename:GtkWidget *	file:
box	ghelpers.c	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_info_label_in_frame	typeref:typename:GtkWidget *	file:
box	ghelpers.h	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_combo_entry_in_frame	typeref:typename:GtkWidget *	file:
box	ghelpers.h	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_info_entry_in_frame	typeref:typename:GtkWidget *	file:
box	ghelpers.h	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	z	prototype:new_info_entry_in_frame_rgb	typeref:typename:GtkWidget *	file:
box	ghelpers.h	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_info_label_in_frame	typeref:typename:GtkWidget *	file:
box	goptions.c	/^				       GtkWidget *box, uint64_t groupmask)$/;"	z	function:gopt_get_group_frame	typeref:typename:GtkWidget *	file:
box	goptions.c	/^	GtkWidget *box;$/;"	m	struct:gopt	typeref:typename:GtkWidget *	file:
box	goptions.c	/^static void gopt_combo_changed(GtkComboBox *box, gpointer data)$/;"	z	function:gopt_combo_changed	typeref:typename:GtkComboBox *	file:
box	goptions.c	/^static void gopt_job_changed(GtkComboBox *box, gpointer data)$/;"	z	function:gopt_job_changed	typeref:typename:GtkComboBox *	file:
bpp	server.h	/^	uint8_t bpp;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t
break_on_this_error	backend.c	/^static bool break_on_this_error(struct thread_data *td, enum fio_ddir ddir,$/;"	f	typeref:typename:bool	file:
brick	engines/glusterfs.c	/^			       char *volume, char *brick)$/;"	z	function:fio_gf_get_glfs	typeref:typename:char *	file:
brick	engines/glusterfs.c	/^	char			*brick;$/;"	m	struct:glfs_info	typeref:typename:char *	file:
brick	engines/glusterfs.c	/^static glfs_t *fio_gf_new_fs(char *volume, char *brick)$/;"	z	function:fio_gf_new_fs	typeref:typename:char *	file:
bs	blktrace.c	/^				 unsigned long *ios, unsigned long long *bs,$/;"	z	function:handle_trace_discard	typeref:typename:unsigned long long *	file:
bs	blktrace.c	/^			    unsigned long long *bs, struct file_cache *cache)$/;"	z	function:handle_trace_fs	typeref:typename:unsigned long long *	file:
bs	blktrace.c	/^			 unsigned long *ios, unsigned long long *bs,$/;"	z	function:queue_trace	typeref:typename:unsigned long long *	file:
bs	engines/cmdprio.h	/^	uint64_t bs;$/;"	m	struct:cmdprio_bsprio	typeref:typename:uint64_t
bs	engines/net.c	/^	uint64_t bs;$/;"	m	struct:udp_seq	typeref:typename:uint64_t	file:
bs	engines/sg.c	/^	unsigned int bs;$/;"	m	struct:sgio_data	typeref:typename:unsigned int	file:
bs	engines/sg.c	/^static int fio_sgio_read_capacity(struct thread_data *td, unsigned int *bs,$/;"	z	function:fio_sgio_read_capacity	typeref:typename:unsigned int *	file:
bs	gfio.h	/^	struct multitext_widget bs;$/;"	m	struct:eta_widget	typeref:struct:multitext_widget
bs	iolog.h	/^	uint64_t bs;$/;"	m	struct:io_sample	typeref:typename:uint64_t
bs	profiles/tiobench.c	/^	unsigned int bs;$/;"	m	struct:tiobench_options	typeref:typename:unsigned int	file:
bs	profiles/tiobench.c	/^static unsigned int bs = 4096;$/;"	v	typeref:typename:unsigned int	file:
bs	stat.c	/^				    enum fio_ddir ddir, unsigned long long bs,$/;"	z	function:add_log_sample	typeref:typename:unsigned long long	file:
bs	stat.c	/^			     enum fio_ddir ddir, unsigned long long bs,$/;"	z	function:__add_log_sample	typeref:typename:unsigned long long	file:
bs	stat.c	/^		     unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_clat_sample	typeref:typename:unsigned long long	file:
bs	stat.c	/^		     unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_slat_sample	typeref:typename:unsigned long long	file:
bs	stat.c	/^		    unsigned long long bs)$/;"	z	function:add_agg_sample	typeref:typename:unsigned long long	file:
bs	stat.c	/^		    unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_lat_sample	typeref:typename:unsigned long long	file:
bs	t/btrace2fio.c	/^	struct bs *bs[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:struct:bs * []	file:
bs	t/btrace2fio.c	/^	unsigned int bs;$/;"	m	struct:bs	typeref:typename:unsigned int	file:
bs	t/btrace2fio.c	/^struct bs {$/;"	s	file:
bs	t/io_uring.c	/^static int bs = BS;$/;"	v	typeref:typename:int	file:
bs	t/read-to-pipe-async.c	/^static int bs = 4096;$/;"	v	typeref:typename:int	file:
bs	thread_options.h	/^	uint64_t bs;$/;"	m	struct:bssplit	typeref:typename:uint64_t
bs	thread_options.h	/^	uint64_t bs;$/;"	m	struct:split_prio	typeref:typename:uint64_t
bs	thread_options.h	/^	uint64_t bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
bs	thread_options.h	/^	unsigned long long bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned long long[]
bs1	stat.c	/^static int compare_block_infos(const void *bs1, const void *bs2)$/;"	z	function:compare_block_infos	typeref:typename:const void *	file:
bs2	stat.c	/^static int compare_block_infos(const void *bs1, const void *bs2)$/;"	z	function:compare_block_infos	typeref:typename:const void *	file:
bs_cmp	options.c	/^static int bs_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
bs_cmp	t/btrace2fio.c	/^static int bs_cmp(const void *ba, const void *bb)$/;"	f	typeref:typename:int	file:
bs_idx	profiles/tiobench.c	/^static char sz_idx[80], bs_idx[80], loop_idx[80], dir_idx[80], t_idx[80];$/;"	v	typeref:typename:char[80]	file:
bs_is_seq_rand	thread_options.h	/^	uint32_t bs_is_seq_rand;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
bs_is_seq_rand	thread_options.h	/^	unsigned int bs_is_seq_rand;$/;"	m	struct:thread_options	typeref:typename:unsigned int
bs_unaligned	thread_options.h	/^	uint32_t bs_unaligned;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
bs_unaligned	thread_options.h	/^	unsigned int bs_unaligned;$/;"	m	struct:thread_options	typeref:typename:unsigned int
bsap	t/btrace2fio.c	/^static void merge_bs(struct bs **bsap, unsigned int *nr_bsap,$/;"	z	function:merge_bs	typeref:struct:bs **	file:
bsb	t/btrace2fio.c	/^		     struct bs *bsb, unsigned int nr_bsb)$/;"	z	function:merge_bs	typeref:struct:bs *	file:
bsprio	engines/cmdprio.c	/^				  struct cmdprio_bsprio **bsprio)$/;"	z	function:fio_cmdprio_percentage	typeref:struct:cmdprio_bsprio **	file:
bsprio	engines/cmdprio.c	/^static int fio_cmdprio_fill_bsprio(struct cmdprio_bsprio *bsprio,$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:struct:cmdprio_bsprio *	file:
bsprio_desc	engines/cmdprio.c	/^fio_cmdprio_generate_bsprio_desc(struct cmdprio_bsprio_desc *bsprio_desc,$/;"	z	function:fio_cmdprio_generate_bsprio_desc	typeref:struct:cmdprio_bsprio_desc *	file:
bsprio_desc	engines/cmdprio.h	/^	struct cmdprio_bsprio_desc bsprio_desc[CMDPRIO_RWDIR_CNT];$/;"	m	struct:cmdprio	typeref:struct:cmdprio_bsprio_desc[]
bsprios	engines/cmdprio.h	/^	struct cmdprio_bsprio *bsprios;$/;"	m	struct:cmdprio_bsprio_desc	typeref:struct:cmdprio_bsprio *
bsrange_state	fio.h	/^	struct frand_state bsrange_state[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:struct:frand_state[]
bssplit	thread_options.h	/^	struct bssplit *bssplit[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:struct:bssplit * []
bssplit	thread_options.h	/^	struct bssplit bssplit[DDIR_RWDIR_CNT][BSSPLIT_MAX];$/;"	m	struct:thread_options_pack	typeref:struct:bssplit[][]
bssplit	thread_options.h	/^struct bssplit {$/;"	s
bssplit_ddir	options.c	/^static int bssplit_ddir(struct thread_options *o, void *eo,$/;"	f	typeref:typename:int	file:
bssplit_nr	thread_options.h	/^	uint32_t bssplit_nr[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
bssplit_nr	thread_options.h	/^	unsigned int bssplit_nr[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
bssplit_str	engines/cmdprio.h	/^	char *bssplit_str;$/;"	m	struct:cmdprio_options	typeref:typename:char *
bsz	engines/e4defrag.c	/^	int bsz;$/;"	m	struct:e4defrag_data	typeref:typename:int	file:
btrace_add_file	t/btrace2fio.c	/^static int btrace_add_file(struct btrace_pid *p, uint32_t devno)$/;"	f	typeref:typename:int	file:
btrace_out	t/btrace2fio.c	/^struct btrace_out {$/;"	s	file:
btrace_pid	t/btrace2fio.c	/^struct btrace_pid {$/;"	s	file:
buf	client.c	/^static const char *server_name(struct fio_client *client, char *buf,$/;"	z	function:server_name	typeref:typename:char *	file:
buf	client.h	/^	struct buf_output buf;$/;"	m	struct:fio_client	typeref:struct:buf_output
buf	crc/crc32c.h	/^static inline uint32_t fio_crc32c(unsigned char const *buf, unsigned long len)$/;"	z	function:fio_crc32c	typeref:typename:unsigned char const *	file:
buf	crc/fnv.c	/^uint64_t fnv(const void *buf, uint32_t len, uint64_t hval)$/;"	z	function:fnv	typeref:typename:const void *	file:
buf	crc/sha256.h	/^	uint8_t *buf;$/;"	m	struct:fio_sha256_ctx	typeref:typename:uint8_t *
buf	crc/sha3.h	/^	uint8_t		buf[SHA3_224_BLOCK_SIZE];$/;"	m	struct:fio_sha3_ctx	typeref:typename:uint8_t[]
buf	crc/sha512.h	/^	uint8_t *buf;$/;"	m	struct:fio_sha512_ctx	typeref:typename:uint8_t *
buf	crc/test.c	/^static void t_crc16(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc16	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_crc32(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_crc32c(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32c	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_crc64(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc64	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_crc7(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc7	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_fnv(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_fnv	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_jhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_jhash	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_md5(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_md5	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_murmur3(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_murmur3	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha1(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha1	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha256	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha3_224(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_224	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha3_256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_256	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha3_384(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_384	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha3_512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_512	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_sha512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha512	typeref:typename:void *	file:
buf	crc/test.c	/^static void t_xxhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_xxhash	typeref:typename:void *	file:
buf	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_aws_auth_header	typeref:typename:char *	file:
buf	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_swift_header	typeref:typename:char *	file:
buf	engines/http.c	/^	char *buf;$/;"	m	struct:http_curl_stream	typeref:typename:char *	file:
buf	engines/rdma.c	/^	uint64_t buf;$/;"	m	struct:remote_u	typeref:typename:uint64_t	file:
buf	engines/sg.c	/^static inline uint16_t sgio_get_be16(uint8_t *buf)$/;"	z	function:sgio_get_be16	typeref:typename:uint8_t *	file:
buf	engines/sg.c	/^static inline uint32_t sgio_get_be32(uint8_t *buf)$/;"	z	function:sgio_get_be32	typeref:typename:uint8_t *	file:
buf	engines/sg.c	/^static inline uint64_t sgio_get_be64(uint8_t *buf)$/;"	z	function:sgio_get_be64	typeref:typename:uint8_t *	file:
buf	engines/sg.c	/^static inline void sgio_set_be16(uint16_t val, uint8_t *buf)$/;"	z	function:sgio_set_be16	typeref:typename:uint8_t *	file:
buf	engines/sg.c	/^static inline void sgio_set_be32(uint32_t val, uint8_t *buf)$/;"	z	function:sgio_set_be32	typeref:typename:uint8_t *	file:
buf	engines/sg.c	/^static inline void sgio_set_be64(uint64_t val, uint8_t *buf)$/;"	z	function:sgio_set_be64	typeref:typename:uint8_t *	file:
buf	fifo.c	/^unsigned int fifo_get(struct fifo *fifo, void *buf, unsigned int len)$/;"	z	function:fifo_get	typeref:typename:void *	file:
buf	helper_thread.c	/^static int read_from_pipe(int fd, void *buf, size_t len)$/;"	z	function:read_from_pipe	typeref:typename:void *	file:
buf	helper_thread.c	/^static int write_to_pipe(int fd, const void *buf, size_t len)$/;"	z	function:write_to_pipe	typeref:typename:const void *	file:
buf	idletime.h	/^	void *buf;    \/* single data allocation for all threads *\/$/;"	m	struct:idle_prof_common	typeref:typename:void *
buf	init.c	/^static char *make_filename(char *buf, size_t buf_size,struct thread_options *o,$/;"	z	function:make_filename	typeref:typename:char *	file:
buf	io_u.c	/^void fill_io_buffer(struct thread_data *td, void *buf, unsigned long long min_write,$/;"	z	function:fill_io_buffer	typeref:typename:void *	file:
buf	io_u.h	/^	void *buf;$/;"	m	struct:io_u	typeref:typename:void *
buf	iolog.c	/^	void *buf;$/;"	m	struct:inflate_chunk_iter	typeref:typename:void *	file:
buf	iolog.c	/^static void clear_file_buffer(void *buf)$/;"	z	function:clear_file_buffer	typeref:typename:void *	file:
buf	iolog.h	/^	void *buf;$/;"	m	struct:iolog_compress	typeref:typename:void *
buf	lib/bloom.c	/^static uint32_t bloom_crc32c(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_crc32c	typeref:typename:const void *	file:
buf	lib/bloom.c	/^static uint32_t bloom_fnv(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_fnv	typeref:typename:const void *	file:
buf	lib/output_buffer.c	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len)$/;"	z	function:buf_output_add	typeref:typename:const char *	file:
buf	lib/output_buffer.h	/^	char *buf;$/;"	m	struct:buf_output	typeref:typename:char *
buf	lib/output_buffer.h	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len);$/;"	z	prototype:buf_output_add	typeref:typename:const char *	file:
buf	lib/pattern.c	/^		unsigned int off, const char *buf, unsigned int len)$/;"	z	function:cmp_pattern	typeref:typename:const char *	file:
buf	lib/pattern.h	/^		unsigned int off, const char *buf, unsigned int len);$/;"	z	prototype:cmp_pattern	typeref:typename:const char *	file:
buf	lib/rand.c	/^uint64_t fill_random_buf(struct frand_state *fs, void *buf,$/;"	z	function:fill_random_buf	typeref:typename:void *	file:
buf	lib/rand.c	/^uint64_t fill_random_buf_percentage(struct frand_state *fs, void *buf,$/;"	z	function:fill_random_buf_percentage	typeref:typename:void *	file:
buf	lib/rand.c	/^void __fill_random_buf(void *buf, unsigned int len, uint64_t seed)$/;"	z	function:__fill_random_buf	typeref:typename:void *	file:
buf	lib/rand.c	/^void __fill_random_buf_percentage(uint64_t seed, void *buf,$/;"	z	function:__fill_random_buf_percentage	typeref:typename:void *	file:
buf	lib/rand.h	/^extern uint64_t fill_random_buf(struct frand_state *, void *buf, unsigned int len);$/;"	z	prototype:fill_random_buf	typeref:typename:void *	file:
buf	lib/rand.h	/^extern void __fill_random_buf(void *buf, unsigned int len, uint64_t seed);$/;"	z	prototype:__fill_random_buf	typeref:typename:void *	file:
buf	log.c	/^size_t __log_buf(struct buf_output *buf, const char *format, ...)$/;"	z	function:__log_buf	typeref:struct:buf_output *	file:
buf	log.c	/^size_t log_info_buf(const char *buf, size_t len)$/;"	z	function:log_info_buf	typeref:typename:const char *	file:
buf	log.h	/^extern size_t log_info_buf(const char *buf, size_t len);$/;"	z	prototype:log_info_buf	typeref:typename:const char *	file:
buf	os/os-windows.h	/^char* ctime_r(const time_t *t, char *buf);$/;"	z	prototype:ctime_r	typeref:typename:char *	file:
buf	os/os-windows.h	/^int lstat(const char * path, struct stat * buf);$/;"	z	prototype:lstat	typeref:struct:stat *	file:
buf	os/os-windows.h	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);$/;"	z	prototype:pread	typeref:typename:void *	file:
buf	os/os-windows.h	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	prototype:pwrite	typeref:typename:const void *	file:
buf	os/windows/posix.c	/^char *ctime_r(const time_t *t, char *buf)$/;"	z	function:ctime_r	typeref:typename:char *	file:
buf	os/windows/posix.c	/^int lstat(const char *path, struct stat *buf)$/;"	z	function:lstat	typeref:struct:stat *	file:
buf	os/windows/posix.c	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf)$/;"	z	function:shmctl	typeref:struct:shmid_ds *	file:
buf	os/windows/posix.c	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset)$/;"	z	function:pread	typeref:typename:void *	file:
buf	os/windows/posix.c	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	function:pwrite	typeref:typename:const void *	file:
buf	os/windows/posix/include/sys/shm.h	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf);$/;"	z	prototype:shmctl	typeref:struct:shmid_ds *	file:
buf	oslib/libmtd.c	/^	     void *buf, int len)$/;"	z	function:mtd_read	typeref:typename:void *	file:
buf	oslib/libmtd.c	/^static int check_pattern(const void *buf, uint8_t patt, int size)$/;"	z	function:check_pattern	typeref:typename:const void *	file:
buf	oslib/libmtd.c	/^static int dev_read_data(const char *patt, int mtd_num, void *buf, int buf_len)$/;"	z	function:dev_read_data	typeref:typename:void *	file:
buf	oslib/libmtd.c	/^static int read_data(const char *file, void *buf, int buf_len)$/;"	z	function:read_data	typeref:typename:void *	file:
buf	oslib/libmtd.h	/^	     void *buf, int len);$/;"	z	prototype:mtd_read	typeref:typename:void *	file:
buf	oslib/libmtd_legacy.c	/^	char *buf;$/;"	m	struct:proc_parse_info	typeref:typename:char *	file:
buf	server.c	/^	void *buf;$/;"	m	struct:sk_entry	typeref:typename:void *	file:
buf	server.c	/^int fio_net_send_cmd(int fd, uint16_t opcode, const void *buf, off_t size,$/;"	z	function:fio_net_send_cmd	typeref:typename:const void *	file:
buf	server.c	/^int fio_server_text_output(int level, const char *buf, size_t len)$/;"	z	function:fio_server_text_output	typeref:typename:const char *	file:
buf	server.c	/^static int fio_net_queue_cmd(uint16_t opcode, void *buf, off_t size,$/;"	z	function:fio_net_queue_cmd	typeref:typename:void *	file:
buf	server.c	/^static int fio_recv_data(int sk, void *buf, unsigned int len, bool wait)$/;"	z	function:fio_recv_data	typeref:typename:void *	file:
buf	server.c	/^static int fio_send_cmd_ext_pdu(int sk, uint16_t opcode, const void *buf,$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:const void *	file:
buf	server.c	/^static struct sk_entry *fio_net_prep_cmd(uint16_t opcode, void *buf,$/;"	z	function:fio_net_prep_cmd	typeref:typename:void *	file:
buf	server.h	/^	uint8_t buf[0];$/;"	m	struct:cmd_job_pdu	typeref:typename:uint8_t[0]
buf	server.h	/^	uint8_t buf[0];$/;"	m	struct:cmd_text_pdu	typeref:typename:uint8_t[0]
buf	t/btrace2fio.c	/^static int trace_fifo_get(struct fifo *fifo, int fd, void *buf,$/;"	z	function:trace_fifo_get	typeref:typename:void *	file:
buf	t/dedupe.c	/^static int __read_block(int fd, void *buf, off_t offset, size_t count)$/;"	z	function:__read_block	typeref:typename:void *	file:
buf	t/dedupe.c	/^static int do_work(struct worker_thread *thread, void *buf)$/;"	z	function:do_work	typeref:typename:void *	file:
buf	t/dedupe.c	/^static int read_block(int fd, void *buf, off_t offset)$/;"	z	function:read_block	typeref:typename:void *	file:
buf	t/dedupe.c	/^static unsigned int read_blocks(int fd, void *buf, off_t offset, size_t size)$/;"	z	function:read_blocks	typeref:typename:void *	file:
buf	t/dedupe.c	/^static void crc_buf(void *buf, uint32_t *hash)$/;"	z	function:crc_buf	typeref:typename:void *	file:
buf	t/io_uring.c	/^static void file_depths(char *buf)$/;"	z	function:file_depths	typeref:typename:char *	file:
buf	t/read-to-pipe-async.c	/^	void *buf;$/;"	m	struct:work_item	typeref:typename:void *	file:
buf	t/verify-state.c	/^static void show_verify_state(void *buf, size_t size)$/;"	z	function:show_verify_state	typeref:typename:void *	file:
buf	verify.c	/^int paste_blockoff(char *buf, unsigned int len, void *priv)$/;"	z	function:paste_blockoff	typeref:typename:char *	file:
buf	verify.c	/^static void dump_buf(char *buf, unsigned int len, unsigned long long offset,$/;"	z	function:dump_buf	typeref:typename:char *	file:
buf	verify.h	/^extern int paste_blockoff(char *buf, unsigned int len, void *priv);$/;"	z	prototype:paste_blockoff	typeref:typename:char *	file:
buf1	verify.c	/^static void memswp(void *buf1, void *buf2, unsigned int len)$/;"	z	function:memswp	typeref:typename:void *	file:
buf2	verify.c	/^static void memswp(void *buf1, void *buf2, unsigned int len)$/;"	z	function:memswp	typeref:typename:void *	file:
buf_end	t/io_uring.c	/^	__u32	buf_end;$/;"	m	struct:io_uring_map_buffers	typeref:typename:__u32	file:
buf_filled_len	io_u.h	/^	unsigned long long buf_filled_len;$/;"	m	struct:io_u	typeref:typename:unsigned long long
buf_group	os/linux/io_uring.h	/^		__u16	buf_group;$/;"	m	union:io_uring_sqe::__anon2bbba927040a	typeref:typename:__u16
buf_in	t/dedupe.c	/^	unsigned char *buf_in;$/;"	m	struct:zlib_ctrl	typeref:typename:unsigned char *	file:
buf_index	os/linux/io_uring.h	/^		__u16	buf_index;$/;"	m	union:io_uring_sqe::__anon2bbba927040a	typeref:typename:__u16
buf_len	oslib/libmtd.c	/^static int dev_read_data(const char *patt, int mtd_num, void *buf, int buf_len)$/;"	z	function:dev_read_data	typeref:typename:int	file:
buf_len	oslib/libmtd.c	/^static int read_data(const char *file, void *buf, int buf_len)$/;"	z	function:read_data	typeref:typename:int	file:
buf_len	server.h	/^	uint32_t buf_len;$/;"	m	struct:cmd_job_pdu	typeref:typename:uint32_t
buf_len	server.h	/^	uint32_t buf_len;$/;"	m	struct:cmd_text_pdu	typeref:typename:uint32_t
buf_nr	blktrace_api.h	/^	__u32 buf_nr;			\/* input *\/$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u32
buf_out	t/dedupe.c	/^	unsigned char *buf_out;$/;"	m	struct:zlib_ctrl	typeref:typename:unsigned char *	file:
buf_output	lib/output_buffer.h	/^struct buf_output {$/;"	s
buf_output_add	lib/output_buffer.c	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len)$/;"	f	typeref:typename:size_t
buf_output_add	lib/output_buffer.h	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len);$/;"	p	typeref:typename:size_t
buf_output_free	lib/output_buffer.c	/^void buf_output_free(struct buf_output *out)$/;"	f	typeref:typename:void
buf_output_free	lib/output_buffer.h	/^void buf_output_free(struct buf_output *out);$/;"	p	typeref:typename:void
buf_output_init	lib/output_buffer.c	/^void buf_output_init(struct buf_output *out)$/;"	f	typeref:typename:void
buf_output_init	lib/output_buffer.h	/^void buf_output_init(struct buf_output *out);$/;"	p	typeref:typename:void
buf_ptr	lex.yy.c	/^    static void yyunput ( int c, char *buf_ptr  );$/;"	z	prototype:yyunput	typeref:typename:char *	file:
buf_ptr	lex.yy.c	/^static void __attribute__((unused)) yyunput(int c, char *buf_ptr);$/;"	z	prototype:yyunput	typeref:typename:char *	file:
buf_size	blktrace_api.h	/^	__u32 buf_size;			\/* input *\/$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u32
buf_size	init.c	/^static char *make_filename(char *buf, size_t buf_size,struct thread_options *o,$/;"	z	function:make_filename	typeref:typename:size_t	file:
buf_size	iolog.c	/^	size_t buf_size;$/;"	m	struct:inflate_chunk_iter	typeref:typename:size_t	file:
buf_size	t/read-to-pipe-async.c	/^	size_t buf_size;$/;"	m	struct:work_item	typeref:typename:size_t	file:
buf_start	t/io_uring.c	/^	__u32	buf_start;$/;"	m	struct:io_uring_map_buffers	typeref:typename:__u32	file:
buf_state	fio.h	/^	struct frand_state buf_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
buf_state_prev	fio.h	/^	struct frand_state buf_state_prev;$/;"	m	struct:thread_data	typeref:struct:frand_state
buf_state_ret	fio.h	/^	struct frand_state buf_state_ret;$/;"	m	struct:thread_data	typeref:struct:frand_state
buf_used	iolog.c	/^	size_t buf_used;$/;"	m	struct:inflate_chunk_iter	typeref:typename:size_t	file:
buffer	crc/crc16.c	/^unsigned short fio_crc16(const void *buffer, unsigned int len)$/;"	z	function:fio_crc16	typeref:typename:const void *	file:
buffer	crc/crc16.h	/^extern unsigned short fio_crc16(const void *buffer, unsigned int len);$/;"	z	prototype:fio_crc16	typeref:typename:const void *	file:
buffer	crc/crc32.c	/^uint32_t fio_crc32(const void *buffer, unsigned long length)$/;"	z	function:fio_crc32	typeref:typename:const void *	file:
buffer	crc/crc64.c	/^unsigned long long fio_crc64(const unsigned char *buffer, unsigned long length)$/;"	z	function:fio_crc64	typeref:typename:const unsigned char *	file:
buffer	crc/crc7.c	/^unsigned char fio_crc7(const unsigned char *buffer, unsigned int len)$/;"	z	function:fio_crc7	typeref:typename:const unsigned char *	file:
buffer	crc/crc7.h	/^extern unsigned char fio_crc7(const unsigned char *buffer, unsigned int len);$/;"	z	prototype:fio_crc7	typeref:typename:const unsigned char *	file:
buffer	engines/librpma_gpspm_flush.pb-c.c	/^                      ProtobufCBuffer *buffer)$/;"	z	function:gpspm_flush_request__pack_to_buffer	typeref:typename:ProtobufCBuffer *	file:
buffer	engines/librpma_gpspm_flush.pb-c.c	/^                      ProtobufCBuffer *buffer)$/;"	z	function:gpspm_flush_response__pack_to_buffer	typeref:typename:ProtobufCBuffer *	file:
buffer	engines/librpma_gpspm_flush.pb-c.h	/^                      ProtobufCBuffer     *buffer);$/;"	z	prototype:gpspm_flush_request__pack_to_buffer	typeref:typename:ProtobufCBuffer *	file:
buffer	engines/librpma_gpspm_flush.pb-c.h	/^                      ProtobufCBuffer     *buffer);$/;"	z	prototype:gpspm_flush_response__pack_to_buffer	typeref:typename:ProtobufCBuffer *	file:
buffer	exp/test-expression-parser.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:const char *	file:
buffer	fifo.c	/^unsigned int fifo_put(struct fifo *fifo, void *buffer, unsigned int len)$/;"	z	function:fifo_put	typeref:typename:void *	file:
buffer	fifo.h	/^	unsigned char *buffer;	\/* the buffer holding the data *\/$/;"	m	struct:fifo	typeref:typename:unsigned char *
buffer	lex.yy.c	/^extern int lexer_input(char *buffer, unsigned int *nbytes, int buffersize);$/;"	z	prototype:lexer_input	typeref:typename:char *	file:
buffer	oslib/statx.c	/^	  struct statx *buffer)$/;"	z	function:statx	typeref:struct:statx *	file:
buffer	oslib/statx.h	/^	  struct statx *buffer);$/;"	z	prototype:statx	typeref:struct:statx *	file:
buffer	parse.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:const char *	file:
buffer	verify.c	/^static void hexdump(void *buffer, int len)$/;"	z	function:hexdump	typeref:typename:void *	file:
buffer	y.tab.c	/^int evaluate_arithmetic_expression(const char *buffer, long long *ival, double *dval,$/;"	z	function:evaluate_arithmetic_expression	typeref:typename:const char *	file:
buffer	y.tab.c	/^int lexer_input(char* buffer, unsigned int *bytes_read, int bytes_requested)$/;"	z	function:lexer_input	typeref:typename:char *	file:
buffer_pattern	thread_options.h	/^	char buffer_pattern[MAX_PATTERN_SIZE];$/;"	m	struct:thread_options	typeref:typename:char[]
buffer_pattern	thread_options.h	/^	uint8_t buffer_pattern[MAX_PATTERN_SIZE];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
buffer_pattern_bytes	thread_options.h	/^	uint32_t buffer_pattern_bytes;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
buffer_pattern_bytes	thread_options.h	/^	unsigned int buffer_pattern_bytes;$/;"	m	struct:thread_options	typeref:typename:unsigned int
buffered	t/io_uring.c	/^static int buffered = 0;	\/* use buffered IO, not O_DIRECT *\/$/;"	v	typeref:typename:int	file:
buffered_event_count	engines/nfs.c	/^	int buffered_event_count; \/* IOs completed by libnfs, waiting for FIO *\/$/;"	m	struct:fio_libnfs_options	typeref:typename:int	file:
buffersize	lex.yy.c	/^extern int lexer_input(char *buffer, unsigned int *nbytes, int buffersize);$/;"	z	prototype:lexer_input	typeref:typename:int	file:
buflen	io_u.c	/^				uint64_t offset, uint64_t buflen)$/;"	z	function:mark_random_map	typeref:typename:uint64_t	file:
buflen	io_u.c	/^			     unsigned long long buflen)$/;"	z	function:io_u_fits	typeref:typename:unsigned long long	file:
buflen	io_u.h	/^	unsigned long long buflen;$/;"	m	struct:io_u	typeref:typename:unsigned long long
buflen	lib/output_buffer.h	/^	size_t buflen;$/;"	m	struct:buf_output	typeref:typename:size_t
bufsize	client.c	/^			       size_t bufsize)$/;"	z	function:server_name	typeref:typename:size_t	file:
busy	t/read-to-pipe-async.c	/^	int busy;$/;"	m	struct:reader_thread	typeref:typename:int	file:
busy_poll	engines/rados.c	/^	int busy_poll;$/;"	m	struct:rados_options	typeref:typename:int	file:
busy_poll	engines/rbd.c	/^	int busy_poll;$/;"	m	struct:rbd_options	typeref:typename:int	file:
busy_wait_polling	engines/librpma_fio.h	/^	unsigned int busy_wait_polling;$/;"	m	struct:librpma_fio_options_values	typeref:typename:unsigned int
button	gfio.c	/^	GtkWidget *button;$/;"	m	struct:connection_widgets	typeref:typename:GtkWidget *	file:
button	gfio.h	/^	GtkWidget *button[GFIO_BUTTON_NR];$/;"	m	struct:gui_entry	typeref:typename:GtkWidget * []
button	goptions.c	/^static void gopt_bool_toggled(GtkToggleButton *button, gpointer data)$/;"	z	function:gopt_bool_toggled	typeref:typename:GtkToggleButton *	file:
button	goptions.c	/^static void gopt_str_multi_toggled(GtkToggleButton *button, gpointer data)$/;"	z	function:gopt_str_multi_toggled	typeref:typename:GtkToggleButton *	file:
button_spec	gfio.c	/^static struct button_spec {$/;"	s	file:
buttonbox	gfio.c	/^static GtkWidget *add_button(GtkWidget *buttonbox,$/;"	z	function:add_button	typeref:typename:GtkWidget *	file:
buttonbox	gfio.h	/^	GtkWidget *buttonbox;$/;"	m	struct:gui	typeref:typename:GtkWidget *
buttonbox	gfio.h	/^	GtkWidget *buttonbox;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
buttonlist	gfio.c	/^static void add_buttons(struct gui_entry *ge, struct button_spec *buttonlist,$/;"	z	function:add_buttons	typeref:struct:button_spec *	file:
buttonspec	gfio.c	/^			     struct button_spec *buttonspec, gpointer data)$/;"	z	function:add_button	typeref:struct:button_spec *	file:
buttonspeclist	gfio.c	/^} buttonspeclist[] = {$/;"	v	typeref:struct:button_spec[]
buttontext	gfio.c	/^	const char *buttontext;$/;"	m	struct:button_spec	typeref:typename:const char *	file:
bw	steadystate.c	/^static bool steadystate_deviation(uint64_t iops, uint64_t bw,$/;"	z	function:steadystate_deviation	typeref:typename:uint64_t	file:
bw	steadystate.c	/^static bool steadystate_slope(uint64_t iops, uint64_t bw,$/;"	z	function:steadystate_slope	typeref:typename:uint64_t	file:
bw_avg_time	thread_options.h	/^	uint32_t bw_avg_time;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
bw_avg_time	thread_options.h	/^	unsigned int bw_avg_time;$/;"	m	struct:thread_options	typeref:typename:unsigned int
bw_data	steadystate.h	/^	uint64_t *bw_data;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t *
bw_log	fio.h	/^	struct io_log *bw_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
bw_log_file	thread_options.h	/^	char *bw_log_file;$/;"	m	struct:thread_options	typeref:typename:char *
bw_log_file	thread_options.h	/^	uint8_t bw_log_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
bw_sample_time	fio.h	/^	struct timespec bw_sample_time;$/;"	m	struct:thread_data	typeref:struct:timespec
bw_stat	stat.h	/^	struct io_stat bw_stat[DDIR_RWDIR_CNT]; \/* bandwidth stats *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat[]
byte_count	crc/md5.h	/^	uint64_t byte_count;$/;"	m	struct:fio_md5_ctx	typeref:typename:uint64_t
bytes	blktrace.c	/^		      unsigned int bytes, int rw, unsigned long long ttime,$/;"	z	function:store_ipo	typeref:typename:unsigned int	file:
bytes	blktrace_api.h	/^	__u32 bytes;		\/* transfer length *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
bytes	engines/ime.c	/^							   ssize_t bytes)$/;"	z	function:fio_ime_aio_complete_cb	typeref:typename:ssize_t	file:
bytes	engines/ime.c	/^static int fio_ime_psyncv_end(struct thread_data *td, ssize_t bytes)$/;"	z	function:fio_ime_psyncv_end	typeref:typename:ssize_t	file:
bytes	engines/sync.c	/^static int fio_vsyncio_end(struct thread_data *td, ssize_t bytes)$/;"	z	function:fio_vsyncio_end	typeref:typename:ssize_t	file:
bytes	io_u.c	/^				  const enum fio_ddir idx, unsigned int bytes)$/;"	z	function:account_io_completion	typeref:typename:unsigned int	file:
bytes	io_u.c	/^				uint64_t offset, unsigned int bytes)$/;"	z	function:file_log_write_comp	typeref:typename:unsigned int	file:
bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );$/;"	z	prototype:yy_scan_bytes	typeref:typename:const char *	file:
bytes	os/os-aix.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-android.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-dragonfly.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-dragonfly.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-freebsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-freebsd.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-hpux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-hpux.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-linux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-mac.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-mac.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-netbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-openbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-solaris.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-windows.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	os/os-windows.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:typename:unsigned long long *	file:
bytes	os/os.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:typename:unsigned long long *	file:
bytes	stat.c	/^		     unsigned int bytes)$/;"	z	function:add_iops_sample	typeref:typename:unsigned int	file:
bytes	stat.c	/^		   unsigned int bytes, unsigned long long spent)$/;"	z	function:add_bw_sample	typeref:typename:unsigned int	file:
bytes_done	backend.c	/^static void do_io(struct thread_data *td, uint64_t *bytes_done)$/;"	z	function:do_io	typeref:typename:uint64_t *	file:
bytes_done	fio.h	/^	uint64_t bytes_done[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
bytes_done	io_u.c	/^	uint64_t bytes_done[DDIR_RWDIR_CNT];	\/* output *\/$/;"	m	struct:io_completion_data	typeref:typename:uint64_t[]	file:
bytes_issued	backend.c	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	function:io_queue_event	typeref:typename:uint64_t *	file:
bytes_issued	fio.h	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	prototype:io_queue_event	typeref:typename:uint64_t *	file:
bytes_read	y.tab.c	/^int lexer_input(char* buffer, unsigned int *bytes_read, int bytes_requested)$/;"	z	function:lexer_input	typeref:typename:unsigned int *	file:
bytes_requested	y.tab.c	/^int lexer_input(char* buffer, unsigned int *bytes_read, int bytes_requested)$/;"	z	function:lexer_input	typeref:typename:int	file:
bytes_to_human_readable_unit	t/dedupe.c	/^static uint64_t bytes_to_human_readable_unit(uint64_t n, const char **unit_out)$/;"	f	typeref:typename:uint64_t	file:
byteswap_trace	blktrace.c	/^static void byteswap_trace(struct blk_io_trace *t)$/;"	f	typeref:typename:void	file:
byteswap_trace	t/btrace2fio.c	/^static void byteswap_trace(struct blk_io_trace *t)$/;"	f	typeref:typename:void	file:
c	ghelpers.c	/^static void fill_color_from_rgb(GdkColor *c, gfloat r, gfloat g, gfloat b)$/;"	z	function:fill_color_from_rgb	typeref:typename:GdkColor *	file:
c	goptions.c	/^					  struct gopt_combo *c,$/;"	z	function:gopt_handle_combo_int_changed	typeref:struct:gopt_combo *	file:
c	goptions.c	/^					  struct gopt_combo *c,$/;"	z	function:gopt_handle_combo_str_changed	typeref:struct:gopt_combo *	file:
c	goptions.c	/^static void gopt_combo_int_set_val(struct gopt_combo *c, unsigned int ip)$/;"	z	function:gopt_combo_int_set_val	typeref:struct:gopt_combo *	file:
c	goptions.c	/^static void gopt_combo_str_set_val(struct gopt_combo *c, const char *text)$/;"	z	function:gopt_combo_str_set_val	typeref:struct:gopt_combo *	file:
c	init.c	/^static int client_flag_set(char c)$/;"	z	function:client_flag_set	typeref:typename:char	file:
c	lex.yy.c	/^    static void yyunput ( int c, char *buf_ptr  );$/;"	z	prototype:yyunput	typeref:typename:int	file:
c	lex.yy.c	/^    static void yyunput (int c, char * yy_bp )$/;"	z	function:yyunput	typeref:typename:int	file:
c	lex.yy.c	/^static void __attribute__((unused)) yyunput(int c, char *buf_ptr);$/;"	z	prototype:yyunput	typeref:typename:int	file:
c	libfio.c	/^		uint8_t c[8];$/;"	m	union:endian_check::__anona626c76b030a	typeref:typename:uint8_t[8]	file:
c	parse.c	/^static int is_separator(char c)$/;"	z	function:is_separator	typeref:typename:char	file:
c	t/dedupe.c	/^static int col_check(struct chunk *c, struct item *i)$/;"	z	function:col_check	typeref:struct:chunk *	file:
c	t/dedupe.c	/^static void add_item(struct chunk *c, struct item *i)$/;"	z	function:add_item	typeref:struct:chunk *	file:
c	t/dedupe.c	/^static void show_chunk(struct chunk *c)$/;"	z	function:show_chunk	typeref:struct:chunk *	file:
c	t/time-test.c	/^		   unsigned long long c[2])$/;"	z	function:do_div	typeref:typename:unsigned long long[2]	file:
c1	crc/murmur3.c	/^			     uint32_t len, const uint32_t c1,$/;"	z	function:murmur3_tail	typeref:typename:const uint32_t	file:
c2	crc/murmur3.c	/^			     const uint32_t c2, uint32_t h1)$/;"	z	function:murmur3_tail	typeref:typename:const uint32_t	file:
cache	blktrace.c	/^				 struct file_cache *cache)$/;"	z	function:handle_trace_discard	typeref:struct:file_cache *	file:
cache	blktrace.c	/^			       struct file_cache *cache)$/;"	z	function:handle_trace_flush	typeref:struct:file_cache *	file:
cache	blktrace.c	/^			    unsigned long long *bs, struct file_cache *cache)$/;"	z	function:handle_trace_fs	typeref:struct:file_cache *	file:
cache	blktrace.c	/^			  struct file_cache *cache)$/;"	z	function:trace_add_file	typeref:struct:file_cache *	file:
cache	blktrace.c	/^			 struct file_cache *cache)$/;"	z	function:queue_trace	typeref:struct:file_cache *	file:
cached_bit	lib/lfsr.h	/^	uint64_t cached_bit;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
cached_cycle_length	lib/lfsr.h	/^	uint64_t cached_cycle_length;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
cachehit	stat.h	/^	uint64_t cachehit;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
cachemiss	stat.h	/^	uint64_t cachemiss;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
cairo_text_helpers.o	Makefile	/^cairo_text_helpers.o: cairo_text_helpers.c cairo_text_helpers.h$/;"	t
calc_block_percentiles	stat.c	/^static int calc_block_percentiles(int nr_block_infos, uint32_t *block_infos,$/;"	f	typeref:typename:int	file:
calc_clat_percentiles	stat.c	/^unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	f	typeref:typename:unsigned int
calc_clat_percentiles	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	p	typeref:typename:unsigned int
calc_clat_percentiles	t/io_uring.c	/^unsigned int calc_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	f	typeref:typename:unsigned int
calc_iops	eta.c	/^static void calc_iops(int unified_rw_rep, unsigned long mtime,$/;"	f	typeref:typename:void	file:
calc_lat	stat.c	/^bool calc_lat(struct io_stat *is, unsigned long long *min,$/;"	f	typeref:typename:bool
calc_lat	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	p	typeref:typename:bool
calc_log_samples	stat.c	/^int calc_log_samples(void)$/;"	f	typeref:typename:int
calc_log_samples	stat.h	/^extern int calc_log_samples(void);$/;"	p	typeref:typename:int
calc_mult_shift	t/time-test.c	/^static void calc_mult_shift(int mode, void *mult, unsigned int *shift,$/;"	f	typeref:typename:void	file:
calc_percentiles	t/read-to-pipe-async.c	/^static unsigned int calc_percentiles(unsigned int *io_u_plat, unsigned long nr,$/;"	f	typeref:typename:unsigned int	file:
calc_rate	eta.c	/^static void calc_rate(int unified_rw_rep, unsigned long mtime,$/;"	f	typeref:typename:void	file:
calc_thread_status	eta.c	/^bool calc_thread_status(struct jobs_eta *je, int force)$/;"	f	typeref:typename:bool
calc_thread_status	stat.h	/^extern bool calc_thread_status(struct jobs_eta *je, int force);$/;"	p	typeref:typename:bool
calc_tickmarks	tickmarks.c	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	f	typeref:typename:int
calc_tickmarks	tickmarks.h	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	p	typeref:typename:int
cali_mean	idletime.h	/^	double cali_mean;$/;"	m	struct:idle_prof_common	typeref:typename:double
cali_stddev	idletime.h	/^	double cali_stddev;$/;"	m	struct:idle_prof_common	typeref:typename:double
cali_time	idletime.h	/^	double cali_time; \/* microseconds to finish a unit work *\/$/;"	m	struct:idle_prof_thread	typeref:typename:double
calibrate_cpu_clock	gettime.c	/^static int calibrate_cpu_clock(void)$/;"	f	typeref:typename:int	file:
calibrate_unit	idletime.c	/^static double calibrate_unit(unsigned char *data)$/;"	f	typeref:typename:double	file:
calibration_stats	idletime.c	/^static void calibration_stats(void)$/;"	f	typeref:typename:void	file:
caller	gettime.c	/^	void *caller;$/;"	m	struct:gtod_log	typeref:typename:void *	file:
caller	gettime.c	/^static struct gtod_log *find_hash(void *caller)$/;"	z	function:find_hash	typeref:typename:void *	file:
caller	gettime.c	/^static void gtod_log_caller(void *caller)$/;"	z	function:gtod_log_caller	typeref:typename:void *	file:
caller	gettime.c	/^static void inc_caller(void *caller)$/;"	z	function:inc_caller	typeref:typename:void *	file:
caller	gettime.c	/^void fio_gettime(struct timespec *tp, void *caller)$/;"	z	function:fio_gettime	typeref:typename:void *	file:
calls	gettime.c	/^	unsigned long calls;$/;"	m	struct:gtod_log	typeref:typename:unsigned long	file:
calls	t/io_uring.c	/^	unsigned long calls;$/;"	m	struct:submitter	typeref:typename:unsigned long	file:
can_focus	gcompat.c	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus)$/;"	z	function:gtk_widget_set_can_focus	typeref:typename:gboolean	file:
can_focus	gcompat.h	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus);$/;"	z	prototype:gtk_widget_set_can_focus	typeref:typename:gboolean	file:
cancel	ioengines.h	/^	int (*cancel)(struct thread_data *, struct io_u *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct io_u *)
cancel_flags	os/linux/io_uring.h	/^		__u32		cancel_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
capacity	oslib/linux-blkzoned.c	/^	__u64	capacity;       \/* Zone capacity in number of sectors *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u64	file:
capacity	zbd.h	/^	uint64_t		capacity;$/;"	m	struct:fio_zone_info	typeref:typename:uint64_t
capacity	zbd_types.h	/^	uint64_t		capacity;$/;"	m	struct:zbd_zone	typeref:typename:uint64_t
capacity_unit	t/dedupe.c	/^static const char *capacity_unit[] = {"b","KB", "MB", "GB", "TB", "PB", "EB"};$/;"	v	typeref:typename:const char * []	file:
category	parse.h	/^	uint64_t category;		\/* what type of option *\/$/;"	m	struct:fio_option	typeref:typename:uint64_t
cb	engines/rados.c	/^static void complete_callback(rados_completion_t cb, void *arg)$/;"	z	function:complete_callback	typeref:typename:rados_completion_t	file:
cb	parse.h	/^	void *cb;			\/* callback *\/$/;"	m	struct:fio_option	typeref:typename:void *
cb	parse.h	/^	void *cb;			\/* sub-option callback *\/$/;"	m	struct:value_pair	typeref:typename:void *
cb_arg	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_ddir(struct thread_options *to, void *cb_arg,$/;"	z	function:fio_cmdprio_bssplit_ddir	typeref:typename:void *	file:
cb_arg	engines/xnvme.c	/^static void cb_pool(struct xnvme_cmd_ctx *ctx, void *cb_arg)$/;"	z	function:cb_pool	typeref:typename:void *	file:
cb_data_to_td	options.c	/^#define cb_data_to_td(/;"	d	file:
cb_pool	engines/xnvme.c	/^static void cb_pool(struct xnvme_cmd_ctx *ctx, void *cb_arg)$/;"	f	typeref:typename:void	file:
cdb	engines/sg.c	/^	unsigned char cdb[16];      \/\/ enhanced from 10 to support 16 byte commands$/;"	m	struct:sgio_cmd	typeref:typename:unsigned char[16]	file:
center	lib/gauss.c	/^		double center, unsigned int seed)$/;"	z	function:gauss_init	typeref:typename:double	file:
center	lib/gauss.h	/^		double center, unsigned int seed);$/;"	z	prototype:gauss_init	typeref:typename:double	file:
center	lib/zipf.c	/^			     double center, unsigned int seed)$/;"	z	function:shared_rand_init	typeref:typename:double	file:
center	lib/zipf.c	/^		 double center, unsigned int seed)$/;"	z	function:pareto_init	typeref:typename:double	file:
center	lib/zipf.c	/^	       double center, unsigned int seed)$/;"	z	function:zipf_init	typeref:typename:double	file:
center	lib/zipf.h	/^		 double center, unsigned int seed);$/;"	z	prototype:pareto_init	typeref:typename:double	file:
center	lib/zipf.h	/^	       double center, unsigned int seed);$/;"	z	prototype:zipf_init	typeref:typename:double	file:
center	options.c	/^static bool split_parse_distr(const char *str, double *val, double *center)$/;"	z	function:split_parse_distr	typeref:typename:double *	file:
cf	client.c	/^			      struct client_file *cf)$/;"	z	function:fio_client_send_cf	typeref:struct:client_file *	file:
cf_descr	engines/libcufile.c	/^	CUfileDescr_t  cf_descr;$/;"	m	struct:fio_libcufile_data	typeref:typename:CUfileDescr_t	file:
cf_handle	engines/libcufile.c	/^	CUfileHandle_t cf_handle;$/;"	m	struct:fio_libcufile_data	typeref:typename:CUfileHandle_t	file:
cfg	engines/librpma_fio.c	/^		struct rpma_conn_cfg *cfg)$/;"	z	function:librpma_fio_client_init	typeref:struct:rpma_conn_cfg *	file:
cfg	engines/librpma_fio.c	/^		struct rpma_conn_cfg *cfg)$/;"	z	function:librpma_fio_server_open_file	typeref:struct:rpma_conn_cfg *	file:
cfg	engines/librpma_fio.h	/^		struct fio_file *f, struct rpma_conn_cfg *cfg);$/;"	z	prototype:librpma_fio_server_open_file	typeref:struct:rpma_conn_cfg *	file:
cfg	engines/librpma_fio.h	/^		struct rpma_conn_cfg *cfg);$/;"	z	prototype:librpma_fio_client_init	typeref:struct:rpma_conn_cfg *	file:
cgid	os/windows/posix/include/sys/shm.h	/^	gid_t    cgid;   \/* creator's group ID *\/$/;"	m	struct:ipc_perm	typeref:typename:gid_t
cgroup	thread_options.h	/^	char *cgroup;$/;"	m	struct:thread_options	typeref:typename:char *
cgroup	thread_options.h	/^	uint8_t cgroup[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
cgroup2	cgroup.c	/^static int cgroup_write_pid(struct thread_data *td, char *path, bool cgroup2)$/;"	z	function:cgroup_write_pid	typeref:typename:bool	file:
cgroup2	cgroup.h	/^	bool cgroup2;$/;"	m	struct:cgroup_mnt	typeref:typename:bool
cgroup_del_pid	cgroup.c	/^static int cgroup_del_pid(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	f	typeref:typename:int	file:
cgroup_exit	cgroup.c	/^static void fio_exit cgroup_exit(void)$/;"	f	typeref:typename:void fio_exit	file:
cgroup_init	cgroup.c	/^static void fio_init cgroup_init(void)$/;"	f	typeref:typename:void fio_init	file:
cgroup_kill	cgroup.c	/^void cgroup_kill(struct flist_head *clist)$/;"	f	typeref:typename:void
cgroup_kill	cgroup.h	/^static inline void cgroup_kill(struct flist_head *list)$/;"	f	typeref:typename:void
cgroup_kill	cgroup.h	/^void cgroup_kill(struct flist_head *list);$/;"	p	typeref:typename:void
cgroup_list	backend.c	/^static struct flist_head *cgroup_list;$/;"	v	typeref:struct:flist_head *	file:
cgroup_member	cgroup.c	/^struct cgroup_member {$/;"	s	file:
cgroup_mnt	backend.c	/^static struct cgroup_mnt *cgroup_mnt;$/;"	v	typeref:struct:cgroup_mnt *	file:
cgroup_mnt	cgroup.h	/^struct cgroup_mnt {$/;"	s
cgroup_nodelete	cgroup.c	/^	unsigned int cgroup_nodelete;$/;"	m	struct:cgroup_member	typeref:typename:unsigned int	file:
cgroup_nodelete	thread_options.h	/^	uint32_t cgroup_nodelete;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
cgroup_nodelete	thread_options.h	/^	unsigned int cgroup_nodelete;$/;"	m	struct:thread_options	typeref:typename:unsigned int
cgroup_setup	cgroup.c	/^int cgroup_setup(struct thread_data *td, struct flist_head *clist, struct cgroup_mnt **mnt)$/;"	f	typeref:typename:int
cgroup_setup	cgroup.h	/^int cgroup_setup(struct thread_data *, struct flist_head *, struct cgroup_mnt **);$/;"	p	typeref:typename:int
cgroup_setup	cgroup.h	/^static inline int cgroup_setup(struct thread_data *td, struct flist_head *list,$/;"	f	typeref:typename:int
cgroup_shutdown	cgroup.c	/^void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	f	typeref:typename:void
cgroup_shutdown	cgroup.h	/^static inline void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	f	typeref:typename:void
cgroup_shutdown	cgroup.h	/^void cgroup_shutdown(struct thread_data *, struct cgroup_mnt *);$/;"	p	typeref:typename:void
cgroup_weight	thread_options.h	/^	uint32_t cgroup_weight;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
cgroup_weight	thread_options.h	/^	unsigned int cgroup_weight;$/;"	m	struct:thread_options	typeref:typename:unsigned int
cgroup_write_pid	cgroup.c	/^static int cgroup_write_pid(struct thread_data *td, char *path, bool cgroup2)$/;"	f	typeref:typename:int	file:
changed_list	goptions.c	/^	struct flist_head changed_list;$/;"	m	struct:gopt	typeref:struct:flist_head	file:
changed_list	goptions.c	/^	struct flist_head changed_list;$/;"	m	struct:gopt_job_view	typeref:struct:flist_head	file:
changes	doc/Makefile	/^changes:$/;"	t
channel	engines/rdma.c	/^				  struct rdma_event_channel *channel,$/;"	z	function:get_next_channel_event	typeref:struct:rdma_event_channel *	file:
channel	engines/rdma.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_comp_channel *	file:
char_size	filesetup.c	/^static int char_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
chardev_size	os/os-dragonfly.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
chardev_size	os/os-freebsd.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
chardev_size	os/os-hpux.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
chardev_size	os/os-mac.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
chardev_size	os/os-solaris.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
chardev_size	os/os-windows.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	f	typeref:typename:int
check	goptions.c	/^	GtkWidget *check;$/;"	m	struct:gopt_bool	typeref:typename:GtkWidget *	file:
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:FioLatTest
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test001
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test002
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test003
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test004
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test005
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test006
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test007
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test008
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test009
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test010
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test011
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test015
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test016
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test017
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test018
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test019
check	t/latency_percentiles.py	/^    def check(self):$/;"	m	class:Test021
check	t/sgunmap-test.py	/^def check(jsondata, parameters, block, qd, qdbatch, rw):$/;"	f
check	t/steadystate_tests.py	/^def check(data, iops, slope, pct, limit, dur, criterion):$/;"	f
check_args	t/one-core-peak.sh	/^check_args() {$/;"	f
check_binary	t/one-core-peak.sh	/^check_binary() {$/;"	f
check_cudaruntimecall	engines/libcufile.c	/^#define check_cudaruntimecall(/;"	d	file:
check_define	configure	/^check_define() {$/;"	f
check_dev_match	diskutil.c	/^static int check_dev_match(int majdev, int mindev, char *path)$/;"	f	typeref:typename:int	file:
check_drive_exists	t/one-core-peak.sh	/^check_drive_exists() {$/;"	f
check_empty	t/latency_percentiles.py	/^    def check_empty(job):$/;"	m	class:FioLatTest
check_engine_ops	ioengines.c	/^static bool check_engine_ops(struct thread_data *td, struct ioengine_ops *ops)$/;"	f	typeref:typename:bool	file:
check_existing_pidfile	server.c	/^static int check_existing_pidfile(const char *pidfile)$/;"	f	typeref:typename:int	file:
check_for_running_stats	stat.c	/^void check_for_running_stats(void)$/;"	f	typeref:typename:void
check_for_running_stats	stat.h	/^extern void check_for_running_stats(void);$/;"	p	typeref:typename:void
check_get_trim	io_u.c	/^static bool check_get_trim(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool	file:
check_get_verify	io_u.c	/^static bool check_get_verify(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool	file:
check_idle_governor	t/one-core-peak.sh	/^check_idle_governor() {$/;"	f
check_int	parse.c	/^static int check_int(const char *p, int *val)$/;"	f	typeref:typename:int	file:
check_io_scheduler	t/one-core-peak.sh	/^check_io_scheduler() {$/;"	f
check_jsonplus	t/latency_percentiles.py	/^    def check_jsonplus(self, jsondata):$/;"	m	class:FioLatTest
check_latencies	t/latency_percentiles.py	/^    def check_latencies(self, jsondata, ddir, slat=True, clat=True, tlat=True, plus=False,$/;"	m	class:FioLatTest
check_log	t/zbd/test-zbd-support	/^check_log() {$/;"	f
check_merges	t/btrace2fio.c	/^static void check_merges(struct btrace_pid *p, struct flist_head *pidlist)$/;"	f	typeref:typename:void	file:
check_min_lib_version	configure	/^check_min_lib_version() {$/;"	f
check_min_rate	backend.c	/^static bool check_min_rate(struct thread_data *td, struct timespec *now)$/;"	f	typeref:typename:bool	file:
check_mode_order	tools/genfio	/^check_mode_order() {$/;"	f
check_mount_writes	backend.c	/^static bool check_mount_writes(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
check_next_free	t/axmap.c	/^static int check_next_free(struct axmap *map, uint64_t start, uint64_t expected)$/;"	f	typeref:typename:int	file:
check_nocmdprio_lat	t/latency_percentiles.py	/^    def check_nocmdprio_lat(self, job):$/;"	m	class:FioLatTest
check_output	t/jsonplus2csv_test.py	/^def check_output(fio_output, script_path):$/;"	f
check_output	t/readonly.py	/^def check_output(output, test):$/;"	f
check_output	t/strided.py	/^def check_output(iops_log, test):$/;"	f
check_overlap	rate-submit.c	/^static void check_overlap(struct io_u *io_u)$/;"	f	typeref:typename:void	file:
check_pattern	oslib/libmtd.c	/^static int check_pattern(const void *buf, uint8_t patt, int size)$/;"	f	typeref:typename:int	file:
check_poll_queue	t/one-core-peak.sh	/^check_poll_queue() {$/;"	f
check_prio_latencies	t/latency_percentiles.py	/^    def check_prio_latencies(self, jsondata, clat=True, plus=False):$/;"	m	class:FioLatTest
check_rand_gen_limits	filesetup.c	/^static int check_rand_gen_limits(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
check_range_bytes	parse.c	/^static int check_range_bytes(const char *str, long long *val, void *data)$/;"	f	typeref:typename:int	file:
check_read	t/zbd/test-zbd-support	/^check_read() {$/;"	f
check_reset_count	t/zbd/test-zbd-support	/^check_reset_count() {$/;"	f
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioExeTest
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_iops_rate
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0005
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0006
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0007
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0008
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0009
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0012
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioJobTest_t0014
check_result	t/run-fio-tests.py	/^    def check_result(self):$/;"	m	class:FioTest
check_root	t/one-core-peak.sh	/^check_root() {$/;"	f
check_scaling_governor	t/one-core-peak.sh	/^check_scaling_governor() {$/;"	f
check_set_rlimits	engines/rdma.c	/^static int check_set_rlimits(struct thread_data *td)$/;"	f	typeref:typename:int	file:
check_status_file	stat.c	/^static int check_status_file(void)$/;"	f	typeref:typename:int	file:
check_str_bytes	parse.c	/^int check_str_bytes(const char *p, long long *val, void *data)$/;"	f	typeref:typename:int
check_str_bytes	parse.h	/^extern int check_str_bytes(const char *p, long long *val, void *data);$/;"	p	typeref:typename:int
check_str_time	parse.c	/^int check_str_time(const char *p, long long *val, int is_seconds)$/;"	f	typeref:typename:int
check_str_time	parse.h	/^extern int check_str_time(const char *p, long long *val, int);$/;"	p	typeref:typename:int
check_str_update	eta.c	/^static void check_str_update(struct thread_data *td)$/;"	f	typeref:typename:void	file:
check_sync_lat	t/latency_percentiles.py	/^    def check_sync_lat(self, jsondata, plus=False):$/;"	m	class:FioLatTest
check_sysblock_value	t/one-core-peak.sh	/^check_sysblock_value() {$/;"	f
check_terse	t/latency_percentiles.py	/^    def check_terse(self, terse, jsondata):$/;"	m	class:FioLatTest
check_trigger_file	backend.c	/^void check_trigger_file(void)$/;"	f	typeref:typename:void
check_trigger_file	fio.h	/^extern void check_trigger_file(void);$/;"	p	typeref:typename:void
check_update_rusage	backend.c	/^static void check_update_rusage(struct thread_data *td)$/;"	f	typeref:typename:void	file:
check_waitees	init.c	/^static int check_waitees(char *waitee)$/;"	f	typeref:typename:int	file:
check_written	t/zbd/test-zbd-support	/^check_written() {$/;"	f
checks	goptions.c	/^	GtkWidget *checks[PARSE_MAX_VP];$/;"	m	struct:gopt_str_multi	typeref:typename:GtkWidget * []	file:
child_cm_id	engines/rdma.c	/^	struct rdma_cm_id *child_cm_id;$/;"	m	struct:rdmaio_data	typeref:struct:rdma_cm_id *	file:
chsz	engines/dfs.c	/^	daos_size_t	chsz;    \/* Chunk size *\/$/;"	m	struct:daos_fio_options	typeref:typename:daos_size_t	file:
chunck_size	engines/libhdfs.c	/^	unsigned int chunck_size;$/;"	m	struct:hdfsio_options	typeref:typename:unsigned int	file:
chunk	t/dedupe.c	/^struct chunk {$/;"	s	file:
chunk_id	engines/libhdfs.c	/^static int get_chunck_name(char *dest, char *file_name, uint64_t chunk_id) {$/;"	z	function:get_chunck_name	typeref:typename:uint64_t	file:
chunk_list	iolog.h	/^	struct flist_head chunk_list;$/;"	m	struct:io_log	typeref:struct:flist_head
chunk_lock	iolog.h	/^	pthread_mutex_t chunk_lock;$/;"	m	struct:io_log	typeref:typename:pthread_mutex_t
chunk_seq	iolog.h	/^	unsigned int chunk_seq;$/;"	m	struct:io_log	typeref:typename:unsigned int
chunk_size	t/dedupe.c	/^static unsigned int chunk_size = 1048576;$/;"	v	typeref:typename:unsigned int	file:
chunk_sz	iolog.c	/^	size_t chunk_sz;$/;"	m	struct:inflate_chunk_iter	typeref:typename:size_t	file:
cid	engines/dfs.c	/^daos_oclass_id_t	cid = OC_UNKNOWN;  \/* object class *\/$/;"	v	typeref:typename:daos_oclass_id_t
clat_graph	gfio.h	/^	struct graph *clat_graph;$/;"	m	struct:gui_entry	typeref:struct:graph *
clat_hist_log	fio.h	/^	struct io_log *clat_hist_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
clat_log	fio.h	/^	struct io_log *clat_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
clat_percentiles	stat.h	/^	uint32_t clat_percentiles;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
clat_percentiles	thread_options.h	/^	uint32_t clat_percentiles;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
clat_percentiles	thread_options.h	/^	unsigned int clat_percentiles;$/;"	m	struct:thread_options	typeref:typename:unsigned int
clat_prio	stat.c	/^static inline void add_stat_prio_sample(struct clat_prio_stat *clat_prio,$/;"	z	function:add_stat_prio_sample	typeref:struct:clat_prio_stat *	file:
clat_prio	stat.h	/^		struct clat_prio_stat *clat_prio[DDIR_RWDIR_CNT];$/;"	m	union:thread_stat::__anon1c8a8417040a	typeref:struct:clat_prio_stat * []
clat_prio_index	engines/cmdprio.h	/^	uint16_t clat_prio_index;$/;"	m	struct:cmdprio_prio	typeref:typename:uint16_t
clat_prio_index	io_u.h	/^	unsigned short clat_prio_index;$/;"	m	struct:io_u	typeref:typename:unsigned short
clat_prio_index	stat.c	/^					unsigned short clat_prio_index,$/;"	z	function:add_stat_prio_sample	typeref:typename:unsigned short	file:
clat_prio_index	stat.c	/^			       unsigned short clat_prio_index)$/;"	z	function:add_lat_percentile_prio_sample	typeref:typename:unsigned short	file:
clat_prio_index	stat.c	/^		     unsigned short clat_prio_index)$/;"	z	function:add_clat_sample	typeref:typename:unsigned short	file:
clat_prio_index	stat.c	/^		    unsigned short clat_prio_index)$/;"	z	function:add_lat_sample	typeref:typename:unsigned short	file:
clat_prio_offset	stat.h	/^		uint64_t clat_prio_offset[DDIR_RWDIR_CNT];$/;"	m	union:thread_stat::__anon1c8a8417040a	typeref:typename:uint64_t[]
clat_prio_stat	stat.h	/^struct clat_prio_stat {$/;"	s
clat_prio_stat_add_samples	stat.c	/^static int clat_prio_stat_add_samples(struct thread_stat *dst,$/;"	f	typeref:typename:int	file:
clat_prio_stats_copy	stat.c	/^static int clat_prio_stats_copy(struct thread_stat *dst, struct thread_stat *src,$/;"	f	typeref:typename:int	file:
clat_stat	stat.h	/^	struct io_stat clat_stat;$/;"	m	struct:clat_prio_stat	typeref:struct:io_stat
clat_stat	stat.h	/^	struct io_stat clat_stat[DDIR_RWDIR_CNT]; \/* completion latency *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat[]
clean	Makefile	/^clean: FORCE$/;"	t
clean	doc/Makefile	/^clean:$/;"	t
clean	tools/plot/samples/Makefile	/^clean:$/;"	t
cleanfn	unittests/unittest.c	/^	CU_CleanupFunc cleanfn, struct fio_unittest_entry *tvec)$/;"	z	function:fio_unittest_add_suite	typeref:typename:CU_CleanupFunc	file:
cleanup	backend.c	/^cleanup:$/;"	L	function:init_file_completion_logging	file:
cleanup	engines/filecreate.c	/^static void cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
cleanup	engines/filedelete.c	/^static void cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
cleanup	engines/filestat.c	/^static void cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
cleanup	engines/glusterfs.c	/^cleanup:$/;"	L	function:fio_gf_setup	file:
cleanup	engines/http.c	/^cleanup:$/;"	L	function:fio_http_setup	file:
cleanup	engines/rados.c	/^cleanup:$/;"	L	function:fio_rados_setup	file:
cleanup	engines/rbd.c	/^cleanup:$/;"	L	function:fio_rbd_setup	file:
cleanup	ioengines.h	/^	void (*cleanup)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:void (*)(struct thread_data *)
cleanup	os/windows/posix.c	/^cleanup:$/;"	L	function:windows_handle_connection	file:
cleanup_io_u	backend.c	/^static void cleanup_io_u(struct thread_data *td)$/;"	f	typeref:typename:void	file:
cleanup_nullb	t/zbd/run-tests-against-nullb	/^cleanup_nullb()$/;"	f
cleanup_pending_aio	backend.c	/^static void cleanup_pending_aio(struct thread_data *td)$/;"	f	typeref:typename:void	file:
cleanup_pool	smalloc.c	/^static void cleanup_pool(struct pool *pool)$/;"	f	typeref:typename:void	file:
clear_blocks	smalloc.c	/^static void clear_blocks(struct pool *pool, unsigned int pool_idx,$/;"	f	typeref:typename:void	file:
clear_error	filesetup.c	/^static inline void clear_error(struct thread_data *td)$/;"	f	typeref:typename:void	file:
clear_file_buffer	iolog.c	/^static void clear_file_buffer(void *buf)$/;"	f	typeref:typename:void	file:
clear_ge_ui_info	gfio.c	/^void clear_ge_ui_info(struct gui_entry *ge)$/;"	f	typeref:typename:void
clear_ge_ui_info	gfio.h	/^extern void clear_ge_ui_info(struct gui_entry *ge);$/;"	p	typeref:typename:void
clear_io_state	fio.h	/^extern void clear_io_state(struct thread_data *, int);$/;"	p	typeref:typename:void
clear_io_state	libfio.c	/^void clear_io_state(struct thread_data *td, int all)$/;"	f	typeref:typename:void
clear_io_u	io_u.c	/^void clear_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
clear_io_u	io_u.h	/^extern void clear_io_u(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
clear_rusage_stat	stat.c	/^void clear_rusage_stat(struct thread_data *td)$/;"	f	typeref:typename:void
clear_rusage_stat	stat.h	/^extern void clear_rusage_stat(struct thread_data *);$/;"	p	typeref:typename:void
clickfunction	gfio.c	/^typedef void (*clickfunction)(GtkWidget *widget, gpointer data);$/;"	t	typeref:typename:void (*)(GtkWidget * widget,gpointer data)	file:
client	client.c	/^					struct fio_client *client)$/;"	z	function:json_object_add_client_info	typeref:struct:fio_client *	file:
client	client.c	/^int fio_client_connect(struct fio_client *client)$/;"	z	function:fio_client_connect	typeref:struct:fio_client *	file:
client	client.c	/^int fio_client_send_ini(struct fio_client *client, const char *filename,$/;"	z	function:fio_client_send_ini	typeref:struct:fio_client *	file:
client	client.c	/^int fio_client_terminate(struct fio_client *client)$/;"	z	function:fio_client_terminate	typeref:struct:fio_client *	file:
client	client.c	/^int fio_client_update_options(struct fio_client *client,$/;"	z	function:fio_client_update_options	typeref:struct:fio_client *	file:
client	client.c	/^int fio_client_wait_for_reply(struct fio_client *client, uint64_t tag)$/;"	z	function:fio_client_wait_for_reply	typeref:struct:fio_client *	file:
client	client.c	/^int fio_handle_client(struct fio_client *client)$/;"	z	function:fio_handle_client	typeref:struct:fio_client *	file:
client	client.c	/^int fio_start_client(struct fio_client *client)$/;"	z	function:fio_start_client	typeref:struct:fio_client *	file:
client	client.c	/^static bool remove_reply_cmd(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:remove_reply_cmd	typeref:struct:fio_client *	file:
client	client.c	/^static const char *server_name(struct fio_client *client, char *buf,$/;"	z	function:server_name	typeref:struct:fio_client *	file:
client	client.c	/^static int __fio_client_send_local_ini(struct fio_client *client,$/;"	z	function:__fio_client_send_local_ini	typeref:struct:fio_client *	file:
client	client.c	/^static int __fio_client_send_remote_ini(struct fio_client *client,$/;"	z	function:__fio_client_send_remote_ini	typeref:struct:fio_client *	file:
client	client.c	/^static int client_check_cmd_timeout(struct fio_client *client,$/;"	z	function:client_check_cmd_timeout	typeref:struct:fio_client *	file:
client	client.c	/^static int fio_client_connect_ip(struct fio_client *client)$/;"	z	function:fio_client_connect_ip	typeref:struct:fio_client *	file:
client	client.c	/^static int fio_client_connect_sock(struct fio_client *client)$/;"	z	function:fio_client_connect_sock	typeref:struct:fio_client *	file:
client	client.c	/^static int fio_client_handle_iolog(struct fio_client *client,$/;"	z	function:fio_client_handle_iolog	typeref:struct:fio_client *	file:
client	client.c	/^static int fio_client_send_cf(struct fio_client *client,$/;"	z	function:fio_client_send_cf	typeref:struct:fio_client *	file:
client	client.c	/^static int fio_send_file(struct fio_client *client, struct cmd_sendfile *pdu,$/;"	z	function:fio_send_file	typeref:struct:fio_client *	file:
client	client.c	/^static int handle_cmd_timeout(struct fio_client *client,$/;"	z	function:handle_cmd_timeout	typeref:struct:fio_client *	file:
client	client.c	/^static int send_client_cmd_line(struct fio_client *client)$/;"	z	function:send_client_cmd_line	typeref:struct:fio_client *	file:
client	client.c	/^static void __fio_client_add_cmd_option(struct fio_client *client,$/;"	z	function:__fio_client_add_cmd_option	typeref:struct:fio_client *	file:
client	client.c	/^static void fio_client_add_hash(struct fio_client *client)$/;"	z	function:fio_client_add_hash	typeref:struct:fio_client *	file:
client	client.c	/^static void fio_client_remove_hash(struct fio_client *client)$/;"	z	function:fio_client_remove_hash	typeref:struct:fio_client *	file:
client	client.c	/^static void fio_drain_client_text(struct fio_client *client)$/;"	z	function:fio_drain_client_text	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_du	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_du	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_eta(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_eta	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_gs	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_gs	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_job_opt(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_job_opt	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_probe	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_probe	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_start	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_start	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_stop(struct fio_client *client)$/;"	z	function:handle_stop	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_stop(struct fio_client *client);$/;"	z	prototype:handle_stop	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_text	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_text	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_ts	typeref:struct:fio_client *	file:
client	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_ts	typeref:struct:fio_client *	file:
client	client.c	/^static void probe_client(struct fio_client *client)$/;"	z	function:probe_client	typeref:struct:fio_client *	file:
client	client.c	/^static void remove_client(struct fio_client *client)$/;"	z	function:remove_client	typeref:struct:fio_client *	file:
client	client.c	/^struct fio_client *fio_get_client(struct fio_client *client)$/;"	z	function:fio_get_client	typeref:struct:fio_client *	file:
client	client.c	/^void fio_put_client(struct fio_client *client)$/;"	z	function:fio_put_client	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_add_job_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_add_job_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_client_job_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_client_job_start	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_client_removed(struct fio_client *client)$/;"	z	function:gfio_client_removed	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_client_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_client_start	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_client_stop(struct fio_client *client)$/;"	z	function:gfio_client_stop	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_client_timed_out(struct fio_client *client)$/;"	z	function:gfio_client_timed_out	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_disk_util_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_disk_util_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	z	function:gfio_display_ts	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	z	prototype:gfio_display_ts	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_group_stats_op(struct fio_client *client,$/;"	z	function:gfio_group_stats_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_probe_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_probe_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_quit_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_quit_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_text_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_text_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_thread_status_op(struct fio_client *client,$/;"	z	function:gfio_thread_status_op	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_update_client_eta(struct fio_client *client, struct jobs_eta *je)$/;"	z	function:gfio_update_client_eta	typeref:struct:fio_client *	file:
client	gclient.c	/^static void gfio_update_job_op(struct fio_client *client,$/;"	z	function:gfio_update_job_op	typeref:struct:fio_client *	file:
client	gfio.c	/^static void gfio_client_added(struct gui_entry *ge, struct fio_client *client)$/;"	z	function:gfio_client_added	typeref:struct:fio_client *	file:
client	gfio.c	/^static void gfio_set_client(struct gfio_client *gc, struct fio_client *client)$/;"	z	function:gfio_set_client	typeref:struct:fio_client *	file:
client	gfio.h	/^	struct fio_client *client;$/;"	m	struct:gfio_client	typeref:struct:fio_client *
client	gfio.h	/^	struct gfio_client *client;$/;"	m	struct:gui_entry	typeref:struct:gfio_client *
client	goptions.c	/^	struct gfio_client *client;$/;"	m	struct:gopt_job_view	typeref:struct:gfio_client *	file:
client	init.c	/^static void parse_cmd_client(void *client, char *opt)$/;"	z	function:parse_cmd_client	typeref:typename:void *	file:
client_check_cmd_timeout	client.c	/^static int client_check_cmd_timeout(struct fio_client *client,$/;"	f	typeref:typename:int	file:
client_cleanup	engines/librpma_apm.c	/^static void client_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
client_cleanup	engines/librpma_gpspm.c	/^static void client_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
client_cmd_op	client.h	/^typedef void (client_cmd_op)(struct fio_client *, struct fio_net_cmd *);$/;"	t	typeref:typename:void ()(struct fio_client *,struct fio_net_cmd *)
client_cpus	gfio.h	/^	uint32_t client_cpus;$/;"	m	struct:gfio_client	typeref:typename:uint32_t
client_data	client.h	/^	void *client_data;$/;"	m	struct:fio_client	typeref:typename:void *
client_data	engines/librpma_fio.h	/^	void *client_data;$/;"	m	struct:librpma_fio_client_data	typeref:typename:void *
client_data	engines/librpma_gpspm.c	/^struct client_data {$/;"	s	file:
client_display_thread_status	client.c	/^static void client_display_thread_status(struct jobs_eta *je)$/;"	f	typeref:typename:void	file:
client_display_thread_status	client.c	/^static void client_display_thread_status(struct jobs_eta *je);$/;"	p	typeref:typename:void	file:
client_eta	client.h	/^struct client_eta {$/;"	s
client_eta_op	client.h	/^typedef void (client_eta_op)(struct jobs_eta *je);$/;"	t	typeref:typename:void ()(struct jobs_eta * je)
client_file	client.h	/^struct client_file {$/;"	s
client_flag_set	init.c	/^static int client_flag_set(char c)$/;"	f	typeref:typename:int	file:
client_flags	gfio.h	/^	uint64_t client_flags;$/;"	m	struct:gfio_client	typeref:typename:uint64_t
client_flush_hist_samples	client.c	/^static void client_flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	f	typeref:typename:void	file:
client_get_io_u_index	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	f	typeref:typename:int	file:
client_get_io_u_index	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	p	typeref:typename:int	file:
client_get_io_u_index	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	f	typeref:typename:int	file:
client_get_io_u_index	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	p	typeref:typename:int	file:
client_getevent_process	engines/librpma_fio.c	/^static int client_getevent_process(struct thread_data *td)$/;"	f	typeref:typename:int	file:
client_gs	client.c	/^struct group_run_stats client_gs;$/;"	v	typeref:struct:group_run_stats
client_hash	client.c	/^static struct flist_head client_hash[FIO_CLIENT_HASH_SZ];$/;"	v	typeref:struct:flist_head[]	file:
client_init	engines/librpma_apm.c	/^static int client_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
client_init	engines/librpma_gpspm.c	/^static int client_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
client_io_flush	engines/librpma_apm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	f	typeref:typename:int	file:
client_io_flush	engines/librpma_apm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	p	typeref:typename:int	file:
client_io_flush	engines/librpma_gpspm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	f	typeref:typename:int	file:
client_io_flush	engines/librpma_gpspm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	p	typeref:typename:int	file:
client_jobs_eta_op	client.h	/^typedef void (client_jobs_eta_op)(struct fio_client *client, struct jobs_eta *je);$/;"	t	typeref:typename:void ()(struct fio_client * client,struct jobs_eta * je)
client_name	engines/rados.c	/^	char *client_name;$/;"	m	struct:rados_options	typeref:typename:char *	file:
client_name	engines/rbd.c	/^	char *client_name;$/;"	m	struct:rbd_options	typeref:typename:char *	file:
client_op	client.h	/^typedef void (client_op)(struct fio_client *);$/;"	t	typeref:typename:void ()(struct fio_client *)
client_ops	client.h	/^struct client_ops {$/;"	s
client_post_init	engines/librpma_gpspm.c	/^static int client_post_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
client_queue_sync	engines/librpma_fio.c	/^static enum fio_q_status client_queue_sync(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
client_recv	engines/rdma.c	/^static int client_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	f	typeref:typename:int	file:
client_signal_handler	client.c	/^static void client_signal_handler(void)$/;"	f	typeref:typename:void	file:
client_sockaddr_str	options.c	/^char client_sockaddr_str[INET6_ADDRSTRLEN] = { 0 };$/;"	v	typeref:typename:char[]
client_timed_out_op	client.h	/^typedef void (client_timed_out_op)(struct fio_client *);$/;"	t	typeref:typename:void ()(struct fio_client *)
client_ts	client.c	/^struct thread_stat client_ts;$/;"	v	typeref:struct:thread_stat
client_type	client.h	/^	uint32_t client_type;$/;"	m	struct:client_ops	typeref:typename:uint32_t
client_type	fio.h	/^	int client_type;$/;"	m	struct:thread_data	typeref:typename:int
client_type	init.c	/^		   int recursed, int client_type)$/;"	z	function:add_job	typeref:typename:int	file:
client_type	init.c	/^int parse_cmd_line(int argc, char *argv[], int client_type)$/;"	z	function:parse_cmd_line	typeref:typename:int	file:
client_type	init.c	/^void add_job_opts(const char **o, int client_type)$/;"	z	function:add_job_opts	typeref:typename:int	file:
client_type	server.h	/^	uint16_t client_type;$/;"	m	struct:cmd_line_pdu	typeref:typename:uint16_t
client_type	server.h	/^	uint16_t client_type;$/;"	m	struct:cmd_load_file_pdu	typeref:typename:uint16_t
client_type	server.h	/^	uint32_t client_type;$/;"	m	struct:cmd_job_pdu	typeref:typename:uint32_t
clients_array	client.c	/^static struct json_array *clients_array = NULL;$/;"	v	typeref:struct:json_array *	file:
clist	cgroup.c	/^			struct flist_head *clist)$/;"	z	function:add_cgroup	typeref:struct:flist_head *	file:
clist	cgroup.c	/^int cgroup_setup(struct thread_data *td, struct flist_head *clist, struct cgroup_mnt **mnt)$/;"	z	function:cgroup_setup	typeref:struct:flist_head *	file:
clist	cgroup.c	/^void cgroup_kill(struct flist_head *clist)$/;"	z	function:cgroup_kill	typeref:struct:flist_head *	file:
clk_tck	os/os.h	/^extern void os_clk_tck(long *clk_tck);$/;"	z	prototype:os_clk_tck	typeref:typename:long *	file:
clk_tck	os/os.h	/^static inline void os_clk_tck(long *clk_tck)$/;"	z	function:os_clk_tck	typeref:typename:long *	file:
clk_tck	os/windows/dlls.c	/^void os_clk_tck(long *clk_tck)$/;"	z	function:os_clk_tck	typeref:typename:long *	file:
clock_batch	t/io_uring.c	/^	unsigned long *clock_batch;$/;"	m	struct:submitter	typeref:typename:unsigned long *	file:
clock_cmp	gettime.c	/^static int clock_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
clock_entry	gettime.c	/^struct clock_entry {$/;"	s	file:
clock_gettime	os/windows/posix.c	/^int clock_gettime(clockid_t clock_id, struct timespec *tp)$/;"	f	typeref:typename:int
clock_gettime	os/windows/posix.h	/^extern int clock_gettime(clockid_t clock_id, struct timespec *tp);$/;"	p	typeref:typename:int
clock_id	os/windows/posix.c	/^int clock_gettime(clockid_t clock_id, struct timespec *tp)$/;"	z	function:clock_gettime	typeref:typename:clockid_t	file:
clock_id	os/windows/posix.h	/^extern int clock_gettime(clockid_t clock_id, struct timespec *tp);$/;"	z	prototype:clock_gettime	typeref:typename:clockid_t	file:
clock_id	time.c	/^void set_epoch_time(struct thread_data *td, int log_alternate_epoch, clockid_t clock_id)$/;"	z	function:set_epoch_time	typeref:typename:clockid_t	file:
clock_index	t/io_uring.c	/^	int clock_index;$/;"	m	struct:submitter	typeref:typename:int	file:
clock_index	t/io_uring.c	/^static void add_stat(struct submitter *s, int clock_index, int nr)$/;"	z	function:add_stat	typeref:typename:int	file:
clock_mult	gettime.c	/^static unsigned long long clock_mult;$/;"	v	typeref:typename:unsigned long long	file:
clock_mult	t/time-test.c	/^static unsigned long long clock_mult;$/;"	v	typeref:typename:unsigned long long	file:
clock_mult128	t/time-test.c	/^static __uint128_t clock_mult128;$/;"	v	typeref:typename:__uint128_t	file:
clock_mult64_128	t/time-test.c	/^static unsigned long long clock_mult64_128[2];$/;"	v	typeref:typename:unsigned long long[2]	file:
clock_seqlock	t/time-test.c	/^static struct seqlock clock_seqlock;$/;"	v	typeref:struct:seqlock	file:
clock_shift	gettime.c	/^static unsigned int clock_shift;$/;"	v	typeref:typename:unsigned int	file:
clock_shift	t/time-test.c	/^static unsigned int clock_shift;$/;"	v	typeref:typename:unsigned int	file:
clock_thread	gettime.c	/^struct clock_thread {$/;"	s	file:
clock_thread_fn	gettime.c	/^static void *clock_thread_fn(void *data)$/;"	f	typeref:typename:void *	file:
clockid_t	os/os-mac.h	/^typedef unsigned int clockid_t;$/;"	t	typeref:typename:unsigned int
clockid_t	os/windows/posix.h	/^typedef int clockid_t;$/;"	t	typeref:typename:int
clocksource	thread_options.h	/^	enum fio_cs clocksource;$/;"	m	struct:thread_options	typeref:enum:fio_cs
clocksource	thread_options.h	/^	uint32_t clocksource;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
close	tools/hist/fiologparser_hist.py	/^    def close(self):$/;"	m	class:HistFileRdr
close_and_free_files	file.h	/^extern void close_and_free_files(struct thread_data *);$/;"	p	typeref:typename:void
close_and_free_files	filesetup.c	/^void close_and_free_files(struct thread_data *td)$/;"	f	typeref:typename:void
close_fd_0	helper_thread.c	/^close_fd_0:$/;"	L	function:pipe_over_loopback	file:
close_fd_1	helper_thread.c	/^close_fd_1:$/;"	L	function:pipe_over_loopback	file:
close_file	ioengines.h	/^	int (*close_file)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
close_files	file.h	/^extern void close_files(struct thread_data *);$/;"	p	typeref:typename:void
close_files	filesetup.c	/^void close_files(struct thread_data *td)$/;"	f	typeref:typename:void
close_ioengine	ioengines.c	/^void close_ioengine(struct thread_data *td)$/;"	f	typeref:typename:void
close_ioengine	ioengines.h	/^extern void close_ioengine(struct thread_data *);$/;"	p	typeref:typename:void
closedir	os/windows/posix.c	/^int closedir(DIR *dirp)$/;"	f	typeref:typename:int
closedir	os/windows/posix/include/dirent.h	/^int closedir(DIR *dirp);$/;"	p	typeref:typename:int
closelog	os/windows/posix.c	/^void closelog(void)$/;"	f	typeref:typename:void
closelog	os/windows/posix/include/syslog.h	/^void closelog(void);$/;"	p	typeref:typename:void
cluster	engines/rados.c	/^	rados_t cluster;$/;"	m	struct:rados_data	typeref:typename:rados_t	file:
cluster	engines/rbd.c	/^	rados_t cluster;$/;"	m	struct:rbd_data	typeref:typename:rados_t	file:
cluster_color	tools/fiograph/fiograph.conf	/^cluster_color=gainsboro$/;"	k	section:fio_jobs
cluster_name	engines/rados.c	/^	char *cluster_name;$/;"	m	struct:rados_options	typeref:typename:char *	file:
cluster_name	engines/rbd.c	/^	char *cluster_name;$/;"	m	struct:rbd_options	typeref:typename:char *	file:
cluster_style	tools/fiograph/fiograph.conf	/^cluster_style=filled$/;"	k	section:fio_jobs
cm_channel	engines/rdma.c	/^	struct rdma_event_channel *cm_channel;$/;"	m	struct:rdmaio_data	typeref:struct:rdma_event_channel *	file:
cm_id	engines/rdma.c	/^	struct rdma_cm_id *cm_id;$/;"	m	struct:rdmaio_data	typeref:struct:rdma_cm_id *	file:
cmd	backend.c	/^void exec_trigger(const char *cmd)$/;"	z	function:exec_trigger	typeref:typename:const char *	file:
cmd	client.c	/^				   struct fio_net_cmd *cmd)$/;"	z	function:fio_client_handle_iolog	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^int fio_clients_send_trigger(const char *cmd)$/;"	z	function:fio_clients_send_trigger	typeref:typename:const char *	file:
cmd	client.c	/^static bool remove_reply_cmd(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:remove_reply_cmd	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static struct cmd_iolog_pdu *convert_iolog(struct fio_net_cmd *cmd,$/;"	z	function:convert_iolog	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static struct cmd_iolog_pdu *convert_iolog_gz(struct fio_net_cmd *cmd,$/;"	z	function:convert_iolog_gz	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void convert_stop(struct fio_net_cmd *cmd)$/;"	z	function:convert_stop	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void convert_text(struct fio_net_cmd *cmd)$/;"	z	function:convert_text	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void convert_text(struct fio_net_cmd *cmd);$/;"	z	prototype:convert_text	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_du	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_du	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_eta(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_eta	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_gs	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_gs	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_job_opt(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_job_opt	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_probe	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_probe	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_start	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_start	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_text	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_text	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:handle_ts	typeref:struct:fio_net_cmd *	file:
cmd	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	z	prototype:handle_ts	typeref:struct:fio_net_cmd *	file:
cmd	engines/net.c	/^	uint32_t cmd;$/;"	m	struct:udp_close_msg	typeref:typename:uint32_t	file:
cmd	gclient.c	/^				  struct fio_net_cmd *cmd)$/;"	z	function:gfio_thread_status_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^				struct fio_net_cmd *cmd)$/;"	z	function:gfio_group_stats_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^			       struct fio_net_cmd *cmd)$/;"	z	function:gfio_update_job_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_add_job_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_add_job_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_client_job_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_client_job_start	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_client_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_client_start	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_disk_util_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_disk_util_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_probe_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_probe_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_quit_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_quit_op	typeref:struct:fio_net_cmd *	file:
cmd	gclient.c	/^static void gfio_text_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	z	function:gfio_text_op	typeref:struct:fio_net_cmd *	file:
cmd	os/os-windows.h	/^int fcntl(int fildes, int cmd, ...);$/;"	z	prototype:fcntl	typeref:typename:int	file:
cmd	os/windows/posix.c	/^int fcntl(int fildes, int cmd, ...)$/;"	z	function:fcntl	typeref:typename:int	file:
cmd	os/windows/posix.c	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf)$/;"	z	function:shmctl	typeref:typename:int	file:
cmd	os/windows/posix/include/sys/shm.h	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf);$/;"	z	prototype:shmctl	typeref:typename:int	file:
cmd	oslib/libmtd.c	/^	      unsigned int cmd)$/;"	z	function:do_oob_op	typeref:typename:unsigned int	file:
cmd	server.c	/^			  struct fio_net_cmd *cmd)$/;"	z	function:handle_command	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^			  struct fio_net_cmd *cmd)$/;"	z	function:handle_run_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int fio_net_send_ack(struct fio_net_cmd *cmd, int error, int signal)$/;"	z	function:fio_net_send_ack	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_job_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_job_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_jobline_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_jobline_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_load_file_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_load_file_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_probe_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_probe_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_send_eta_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_send_eta_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_trigger_cmd(struct fio_net_cmd *cmd, struct flist_head *job_list)$/;"	z	function:handle_trigger_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int handle_update_job_cmd(struct fio_net_cmd *cmd)$/;"	z	function:handle_update_job_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static int verify_convert_cmd(struct fio_net_cmd *cmd)$/;"	z	function:verify_convert_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static void __fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	z	function:__fio_init_net_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static void fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	z	function:fio_init_net_cmd	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static void fio_net_cmd_crc(struct fio_net_cmd *cmd)$/;"	z	function:fio_net_cmd_crc	typeref:struct:fio_net_cmd *	file:
cmd	server.c	/^static void fio_net_cmd_crc_pdu(struct fio_net_cmd *cmd, const void *pdu)$/;"	z	function:fio_net_cmd_crc_pdu	typeref:struct:fio_net_cmd *	file:
cmd	server.h	/^	uint8_t cmd[];$/;"	m	struct:cmd_vtrigger_pdu	typeref:typename:uint8_t[]
cmd64	oslib/libmtd.c	/^	      uint64_t start, uint64_t length, void *data, unsigned int cmd64,$/;"	z	function:do_oob_op	typeref:typename:unsigned int	file:
cmd_add_job_pdu	server.h	/^struct cmd_add_job_pdu {$/;"	s
cmd_client_probe_pdu	server.h	/^struct cmd_client_probe_pdu {$/;"	s
cmd_completed	engines/nbd.c	/^static int cmd_completed (void *vp, int *error)$/;"	f	typeref:typename:int	file:
cmd_crc16	server.h	/^	uint16_t cmd_crc16;	\/* cmd checksum *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint16_t
cmd_du_pdu	server.h	/^struct cmd_du_pdu {$/;"	s
cmd_end_pdu	server.h	/^struct cmd_end_pdu {$/;"	s
cmd_iolog_pdu	server.h	/^struct cmd_iolog_pdu {$/;"	s
cmd_job_option	server.h	/^struct cmd_job_option {$/;"	s
cmd_job_pdu	server.h	/^struct cmd_job_pdu {$/;"	s
cmd_line_pdu	server.h	/^struct cmd_line_pdu {$/;"	s
cmd_list	client.h	/^	struct flist_head cmd_list;$/;"	m	struct:fio_client	typeref:struct:flist_head
cmd_load_file_pdu	server.h	/^struct cmd_load_file_pdu {$/;"	s
cmd_optstr	init.c	/^static char cmd_optstr[256];$/;"	v	typeref:typename:char[256]	file:
cmd_probe_reply_pdu	server.h	/^struct cmd_probe_reply_pdu {$/;"	s
cmd_reply	server.c	/^struct cmd_reply {$/;"	s	file:
cmd_sendfile	server.h	/^struct cmd_sendfile {$/;"	s
cmd_sendfile_reply	server.h	/^struct cmd_sendfile_reply {$/;"	s
cmd_single_line_pdu	server.h	/^struct cmd_single_line_pdu {$/;"	s
cmd_start_pdu	server.h	/^struct cmd_start_pdu {$/;"	s
cmd_text_pdu	server.h	/^struct cmd_text_pdu {$/;"	s
cmd_ts_pdu	server.h	/^struct cmd_ts_pdu {$/;"	s
cmd_vtrigger_pdu	server.h	/^struct cmd_vtrigger_pdu {$/;"	s
cmdline	profile.h	/^	const char **cmdline;$/;"	m	struct:profile_ops	typeref:typename:const char **
cmdprio	engines/cmdprio.c	/^					     struct cmdprio *cmdprio)$/;"	z	function:fio_cmdprio_parse_and_gen_bssplit	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^				     struct cmdprio *cmdprio)$/;"	z	function:fio_cmdprio_parse_and_gen	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	function:fio_cmdprio_set_ioprio	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	function:fio_cmdprio_init	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^static int fio_cmdprio_gen_perc(struct thread_data *td, struct cmdprio *cmdprio)$/;"	z	function:fio_cmdprio_gen_perc	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^static int fio_cmdprio_percentage(struct cmdprio *cmdprio, struct io_u *io_u,$/;"	z	function:fio_cmdprio_percentage	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.c	/^void fio_cmdprio_cleanup(struct cmdprio *cmdprio)$/;"	z	function:fio_cmdprio_cleanup	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.h	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	prototype:fio_cmdprio_set_ioprio	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.h	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	prototype:fio_cmdprio_init	typeref:struct:cmdprio *	file:
cmdprio	engines/cmdprio.h	/^struct cmdprio {$/;"	s
cmdprio	engines/cmdprio.h	/^void fio_cmdprio_cleanup(struct cmdprio *cmdprio);$/;"	z	prototype:fio_cmdprio_cleanup	typeref:struct:cmdprio *	file:
cmdprio	engines/io_uring.c	/^	struct cmdprio cmdprio;$/;"	m	struct:ioring_data	typeref:struct:cmdprio	file:
cmdprio	engines/libaio.c	/^	struct cmdprio cmdprio;$/;"	m	struct:libaio_data	typeref:struct:cmdprio	file:
cmdprio_SRCS	Makefile	/^  cmdprio_SRCS = engines\/cmdprio.c$/;"	m
cmdprio_bsprio	engines/cmdprio.h	/^struct cmdprio_bsprio {$/;"	s
cmdprio_bsprio_desc	engines/cmdprio.h	/^struct cmdprio_bsprio_desc {$/;"	s
cmdprio_options	engines/cmdprio.h	/^struct cmdprio_options {$/;"	s
cmdprio_options	engines/io_uring.c	/^	struct cmdprio_options cmdprio_options;$/;"	m	struct:ioring_options	typeref:struct:cmdprio_options	file:
cmdprio_options	engines/libaio.c	/^	struct cmdprio_options cmdprio_options;$/;"	m	struct:libaio_options	typeref:struct:cmdprio_options	file:
cmdprio_parse_result	engines/cmdprio.c	/^struct cmdprio_parse_result {$/;"	s	file:
cmdprio_prio	engines/cmdprio.h	/^struct cmdprio_prio {$/;"	s
cmdprio_values	engines/cmdprio.c	/^struct cmdprio_values {$/;"	s	file:
cmds	engines/sg.c	/^	struct sgio_cmd *cmds;$/;"	m	struct:sgio_data	typeref:struct:sgio_cmd *	file:
cmp	flist.h	/^	int (*cmp)(void *priv, struct flist_head *a, struct flist_head *b));$/;"	z	prototype:flist_sort	typeref:typename:int (*)(void * priv,struct flist_head * a,struct flist_head * b)	file:
cmp	graph.c	/^static double find_double_data(struct graph *g, double_comparator cmp)$/;"	z	function:find_double_data	typeref:typename:double_comparator	file:
cmp	graph.c	/^static double find_double_values(struct graph_label *l, double_comparator cmp)$/;"	z	function:find_double_values	typeref:typename:double_comparator	file:
cmp	graph.c	/^static double find_xy_value(struct graph *g, xy_value_extractor getvalue, double_comparator cmp)$/;"	z	function:find_xy_value	typeref:typename:double_comparator	file:
cmp	lib/flist_sort.c	/^				int (*cmp)(void *priv, struct flist_head *a,$/;"	z	function:merge	typeref:typename:int (*)(void * priv,struct flist_head * a,struct flist_head * b)	file:
cmp	lib/flist_sort.c	/^				int (*cmp)(void *priv, struct flist_head *a,$/;"	z	function:merge_and_restore_back_links	typeref:typename:int (*)(void * priv,struct flist_head * a,struct flist_head * b)	file:
cmp	lib/flist_sort.c	/^		int (*cmp)(void *priv, struct flist_head *a,$/;"	z	function:flist_sort	typeref:typename:int (*)(void * priv,struct flist_head * a,struct flist_head * b)	file:
cmp_pattern	lib/pattern.c	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	f	typeref:typename:int
cmp_pattern	lib/pattern.h	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	p	typeref:typename:int
cmthread	engines/rdma.c	/^	pthread_t cmthread;$/;"	m	struct:rdmaio_data	typeref:typename:pthread_t	file:
code	engines/windowsaio.c	/^int geterrno_from_win_error (DWORD code, int deferrno);$/;"	z	prototype:geterrno_from_win_error	typeref:typename:DWORD	file:
coh	engines/dfs.c	/^daos_handle_t		coh;  \/* container handle *\/$/;"	v	typeref:typename:daos_handle_t
col_check	t/dedupe.c	/^static int col_check(struct chunk *c, struct item *i)$/;"	f	typeref:typename:int	file:
collapse_entries	t/btrace2fio.c	/^static unsigned int collapse_entries = 0;$/;"	v	typeref:typename:unsigned int	file:
collision_check	t/dedupe.c	/^static unsigned int collision_check;$/;"	v	typeref:typename:unsigned int	file:
color	lib/rbtree.c	/^ color:$/;"	L	function:rb_erase	file:
color	lib/rbtree.h	/^static inline void rb_set_color(struct fio_rb_node *rb, int color)$/;"	z	function:rb_set_color	typeref:typename:int	file:
columns	tools/hist/fiologparser_hist.py	/^columns = None$/;"	v
combo	gfio.c	/^	GtkWidget *combo;$/;"	m	struct:connection_widgets	typeref:typename:GtkWidget *	file:
combo	goptions.c	/^	GtkWidget *combo;$/;"	m	struct:gopt_combo	typeref:typename:GtkWidget *	file:
combo	goptions.c	/^	GtkWidget *combo;$/;"	m	struct:gopt_str_val	typeref:typename:GtkWidget *	file:
combo_box	gcompat.c	/^gchar *gtk_combo_box_text_get_active_text(GtkComboBoxText *combo_box)$/;"	z	function:gtk_combo_box_text_get_active_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.c	/^void gtk_combo_box_text_append_text(GtkComboBoxText *combo_box,$/;"	z	function:gtk_combo_box_text_append_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.c	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position,$/;"	z	function:gtk_combo_box_text_insert_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.c	/^void gtk_combo_box_text_prepend_text(GtkComboBoxText *combo_box,$/;"	z	function:gtk_combo_box_text_prepend_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.h	/^gchar *gtk_combo_box_text_get_active_text(GtkComboBoxText *combo_box);$/;"	z	prototype:gtk_combo_box_text_get_active_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.h	/^void gtk_combo_box_text_append_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	z	prototype:gtk_combo_box_text_append_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.h	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position, const gchar *text/;"	z	prototype:gtk_combo_box_text_insert_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.h	/^void gtk_combo_box_text_prepend_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	z	prototype:gtk_combo_box_text_prepend_text	typeref:typename:GtkComboBoxText *	file:
combo_box	gcompat.h	/^void gtk_combo_box_text_remove(GtkComboBoxText *combo_box, gint position);$/;"	z	prototype:gtk_combo_box_text_remove	typeref:typename:GtkComboBoxText *	file:
combo_entry_changed	gfio.c	/^static void combo_entry_changed(GtkComboBox *box, gpointer data)$/;"	f	typeref:typename:void	file:
combo_entry_destroy	gfio.c	/^static void combo_entry_destroy(GtkWidget *widget, gpointer data)$/;"	f	typeref:typename:void	file:
command_data	engines/libiscsi.c	/^		     void *command_data, void *private_data)$/;"	z	function:iscsi_cb	typeref:typename:void *	file:
commit	ioengines.h	/^	int (*commit)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *)
common_print_version	oslib/libmtd_common.h	/^#define common_print_version(/;"	d
comp	engines/rbd.c	/^static void _fio_rbd_finish_aiocb(rbd_completion_t comp, void *data)$/;"	z	function:_fio_rbd_finish_aiocb	typeref:typename:rbd_completion_t	file:
comp_time	backend.c	/^		   struct timespec *comp_time)$/;"	z	function:io_queue_event	typeref:struct:timespec *	file:
comp_time	fio.h	/^		   struct timespec *comp_time);$/;"	z	prototype:io_queue_event	typeref:struct:timespec *	file:
compare_2_floats	tools/hist/fio-histo-log-pctiles.py	/^    def compare_2_floats(self, x, y):$/;"	m	class:Test
compare_block_infos	stat.c	/^static int compare_block_infos(const void *bs1, const void *bs2)$/;"	f	typeref:typename:int	file:
compare_buckets	tools/hist/fio-histo-log-pctiles.py	/^        compare_buckets = lambda k: self.compare_2_floats(buckets[k], buckets_expected[k])$/;"	f	member:Test.is_close	file:
compare_recent_items	gfio.c	/^static gint compare_recent_items(GtkRecentInfo *a, GtkRecentInfo *b)$/;"	f	typeref:typename:gint	file:
compat_features	engines/libaio.c	/^	unsigned compat_features;$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
compat_options	engines/rdma.c	/^static int compat_options(struct thread_data *td)$/;"	f	typeref:typename:int	file:
compile_object	configure	/^compile_object() {$/;"	f
compile_prog	configure	/^compile_prog() {$/;"	f
compiletime_assert	compiler/compiler.h	/^#define compiletime_assert(/;"	d
complete	engines/dfs.c	/^	bool		complete;$/;"	m	struct:daos_iou	typeref:typename:bool	file:
complete_callback	engines/rados.c	/^static void complete_callback(rados_completion_t cb, void *arg)$/;"	f	typeref:typename:void	file:
complete_events	engines/libiscsi.c	/^	struct iscsi_task	**complete_events;$/;"	m	struct:iscsi_info	typeref:struct:iscsi_task **	file:
complete_seen	t/btrace2fio.c	/^	int complete_seen;$/;"	m	struct:btrace_out	typeref:typename:int	file:
completed	engines/nbd.c	/^	struct io_u **completed;$/;"	m	struct:nbd_data	typeref:struct:io_u **	file:
completed	engines/xnvme.c	/^	uint64_t completed;$/;"	m	struct:xnvme_fioe_data	typeref:typename:uint64_t	file:
completed_lock	engines/rados.c	/^	pthread_mutex_t completed_lock;$/;"	m	struct:rados_data	typeref:typename:pthread_mutex_t	file:
completed_more_io	engines/rados.c	/^	pthread_cond_t completed_more_io;$/;"	m	struct:rados_data	typeref:typename:pthread_cond_t	file:
completed_operations	engines/rados.c	/^	struct flist_head completed_operations;$/;"	m	struct:rados_data	typeref:struct:flist_head	file:
completion	engines/rados.c	/^	rados_completion_t completion;$/;"	m	struct:fio_rados_iou	typeref:typename:rados_completion_t	file:
completion	engines/rbd.c	/^	rbd_completion_t completion;$/;"	m	struct:fio_rbd_iou	typeref:typename:rbd_completion_t	file:
compress_chunk	thread_options.h	/^	uint32_t compress_chunk;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
compress_chunk	thread_options.h	/^	unsigned int compress_chunk;$/;"	m	struct:thread_options	typeref:typename:unsigned int
compress_percentage	thread_options.h	/^	uint32_t compress_percentage;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
compress_percentage	thread_options.h	/^	unsigned int compress_percentage;$/;"	m	struct:thread_options	typeref:typename:unsigned int
compressed	server.h	/^	uint32_t compressed;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
compression	t/dedupe.c	/^static unsigned int compression = 0;$/;"	v	typeref:typename:unsigned int	file:
comps	verify-state.h	/^	struct file_comp comps[0];$/;"	m	struct:thread_io_list	typeref:struct:file_comp[0]
compute_aggregated_file	tools/plot/fio2gnuplot	/^def compute_aggregated_file(fio_data_file, gnuplot_output_filename, gnuplot_output_dir):$/;"	f
compute_math	tools/plot/fio2gnuplot	/^def compute_math(fio_data_file, title,gnuplot_output_filename,gnuplot_output_dir,mode,disk_perf,/;"	f
compute_nb_threads	t/one-core-peak.sh	/^compute_nb_threads() {$/;"	f
compute_percentiles_from_logs	tools/hist/fio-histo-log-pctiles.py	/^def compute_percentiles_from_logs():$/;"	f
compute_temp_file	tools/plot/fio2gnuplot	/^def compute_temp_file(fio_data_file,disk_perf,gnuplot_output_dir, min_time, max_time):$/;"	f
cond	fio_sem.h	/^	pthread_cond_t cond;$/;"	m	struct:fio_sem	typeref:typename:pthread_cond_t
cond	idletime.h	/^	pthread_cond_t  cond;$/;"	m	struct:idle_prof_thread	typeref:typename:pthread_cond_t
cond	oslib/linux-blkzoned.c	/^	__u8	cond;           \/* Zone condition *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u8	file:
cond	pshared.c	/^int cond_init_pshared(pthread_cond_t *cond)$/;"	z	function:cond_init_pshared	typeref:typename:pthread_cond_t *	file:
cond	pshared.c	/^int mutex_cond_init_pshared(pthread_mutex_t *mutex, pthread_cond_t *cond)$/;"	z	function:mutex_cond_init_pshared	typeref:typename:pthread_cond_t *	file:
cond	t/read-to-pipe-async.c	/^	pthread_cond_t cond;$/;"	m	struct:thread_data	typeref:typename:pthread_cond_t	file:
cond	t/read-to-pipe-async.c	/^	pthread_cond_t cond;$/;"	m	struct:work_item	typeref:typename:pthread_cond_t	file:
cond	workqueue.h	/^	pthread_cond_t cond;$/;"	m	struct:submit_worker	typeref:typename:pthread_cond_t
cond	zbd.h	/^	enum zbd_zone_cond	cond:4;$/;"	m	struct:fio_zone_info	typeref:enum:zbd_zone_cond:4
cond	zbd_types.h	/^	enum zbd_zone_cond	cond;$/;"	m	struct:zbd_zone	typeref:enum:zbd_zone_cond
cond_endio	engines/ime.c	/^	pthread_cond_t		cond_endio;		\/* Condition var to notify FIO *\/$/;"	m	struct:imeaio_req	typeref:typename:pthread_cond_t	file:
cond_init_pshared	pshared.c	/^int cond_init_pshared(pthread_cond_t *cond)$/;"	f	typeref:typename:int
cond_init_pshared	pshared.h	/^extern int cond_init_pshared(pthread_cond_t *);$/;"	p	typeref:typename:int
config-host.mak	Makefile	/^config-host.mak: configure$/;"	t
config_file	tools/fiograph/fiograph.py	/^config_file = None$/;"	v
configure_flags=	ci/actions-build.sh	/^    local configure_flags=()$/;"	f
configure_nullb	t/zbd/run-tests-against-nullb	/^configure_nullb()$/;"	f
conn	engines/librpma_fio.h	/^	struct rpma_conn *conn;$/;"	m	struct:librpma_fio_client_data	typeref:struct:rpma_conn *
conn	engines/librpma_fio.h	/^	struct rpma_conn *conn;$/;"	m	struct:librpma_fio_server_data	typeref:struct:rpma_conn *
conn_list	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, HANDLE hProcess)$/;"	z	function:fio_server_add_conn_pid	typeref:struct:flist_head *	file:
conn_list	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, pid_t pid)$/;"	z	function:fio_server_add_conn_pid	typeref:struct:flist_head *	file:
conn_list	server.c	/^static void fio_server_check_conns(struct flist_head *conn_list)$/;"	z	function:fio_server_check_conns	typeref:struct:flist_head *	file:
conn_req	engines/librpma_gpspm.c	/^		struct rpma_conn_req *conn_req)$/;"	z	function:prepare_connection	typeref:struct:rpma_conn_req *	file:
connect_clicked	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data)$/;"	f	typeref:typename:void	file:
connect_clicked	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data);$/;"	p	typeref:typename:void	file:
connect_job_entry	gfio.c	/^static void connect_job_entry(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
connected	engines/rados.c	/^	bool connected;$/;"	m	struct:rados_data	typeref:typename:bool	file:
connected	engines/rbd.c	/^	bool connected;$/;"	m	struct:rbd_data	typeref:typename:bool	file:
connection_widgets	gfio.c	/^struct connection_widgets$/;"	s	file:
cont	engines/dfs.c	/^	char		*cont;   \/* Container UUID *\/$/;"	m	struct:daos_fio_options	typeref:typename:char *	file:
container_of	flist.h	/^#define container_of(/;"	d
context	engines/nfs.c	/^	struct nfs_context *context;$/;"	m	struct:fio_libnfs_options	typeref:struct:nfs_context *	file:
context	printing.c	/^			      GtkPrintContext *context, gint page_nr,$/;"	z	function:results_draw_page	typeref:typename:GtkPrintContext *	file:
context	printing.c	/^			GtkPrintContext *context, gpointer data)$/;"	z	function:begin_print	typeref:typename:GtkPrintContext *	file:
continue_on_error	stat.h	/^		uint16_t continue_on_error;$/;"	m	union:thread_stat::__anon1c8a8417010a	typeref:typename:uint16_t
continue_on_error	thread_options.h	/^	enum error_type continue_on_error;$/;"	m	struct:thread_options	typeref:enum:error_type
continue_on_error	thread_options.h	/^	uint32_t continue_on_error;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
convert_agg	client.c	/^static void convert_agg(struct disk_util_agg *agg)$/;"	f	typeref:typename:void	file:
convert_agg	server.c	/^static void convert_agg(struct disk_util_agg *dst, struct disk_util_agg *src)$/;"	f	typeref:typename:void	file:
convert_agg_kbytes_percent	stat.c	/^static double convert_agg_kbytes_percent(struct group_run_stats *rs,$/;"	f	typeref:typename:double	file:
convert_dus	client.c	/^static void convert_dus(struct disk_util_stat *dus)$/;"	f	typeref:typename:void	file:
convert_dus	server.c	/^static void convert_dus(struct disk_util_stat *dst, struct disk_util_stat *src)$/;"	f	typeref:typename:void	file:
convert_gs	client.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	f	typeref:typename:void	file:
convert_gs	server.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	f	typeref:typename:void	file:
convert_io_stat	client.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	f	typeref:typename:void	file:
convert_io_stat	server.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	f	typeref:typename:void	file:
convert_iolog	client.c	/^static struct cmd_iolog_pdu *convert_iolog(struct fio_net_cmd *, bool *);$/;"	p	typeref:struct:cmd_iolog_pdu *	file:
convert_iolog	client.c	/^static struct cmd_iolog_pdu *convert_iolog(struct fio_net_cmd *cmd,$/;"	f	typeref:struct:cmd_iolog_pdu *	file:
convert_iolog_gz	client.c	/^static struct cmd_iolog_pdu *convert_iolog_gz(struct fio_net_cmd *cmd,$/;"	f	typeref:struct:cmd_iolog_pdu *	file:
convert_jobs_eta	client.c	/^static void convert_jobs_eta(struct jobs_eta *je)$/;"	f	typeref:typename:void	file:
convert_stop	client.c	/^static void convert_stop(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
convert_text	client.c	/^static void convert_text(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
convert_text	client.c	/^static void convert_text(struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
convert_thread_options_to_cpu	cconv.c	/^void convert_thread_options_to_cpu(struct thread_options *o,$/;"	f	typeref:typename:void
convert_thread_options_to_cpu	thread_options.h	/^extern void convert_thread_options_to_cpu(struct thread_options *o, struct thread_options_pack */;"	p	typeref:typename:void
convert_thread_options_to_net	cconv.c	/^void convert_thread_options_to_net(struct thread_options_pack *top,$/;"	f	typeref:typename:void
convert_thread_options_to_net	thread_options.h	/^extern void convert_thread_options_to_net(struct thread_options_pack *top, struct thread_options/;"	p	typeref:typename:void
convert_ts	client.c	/^static void convert_ts(struct thread_stat *dst, struct thread_stat *src)$/;"	f	typeref:typename:void	file:
cookie	client.c	/^int fio_client_add(struct client_ops *ops, const char *hostname, void **cookie)$/;"	z	function:fio_client_add	typeref:typename:void **	file:
cookie	client.c	/^int fio_client_add_ini_file(void *cookie, const char *ini_file, bool remote)$/;"	z	function:fio_client_add_ini_file	typeref:typename:void *	file:
cookie	client.c	/^void fio_client_add_cmd_option(void *cookie, const char *opt)$/;"	z	function:fio_client_add_cmd_option	typeref:typename:void *	file:
copy_opt_list	init.c	/^static void copy_opt_list(struct thread_data *dst, struct thread_data *src)$/;"	f	typeref:typename:void	file:
copyright	doc/conf.py	/^copyright = '2017, Jens Axboe <axboe@kernel.dk>'$/;"	v
count	crc/sha256.h	/^	uint32_t count;$/;"	m	struct:fio_sha256_ctx	typeref:typename:uint32_t
count	crc/sha512.h	/^	uint32_t count[4];$/;"	m	struct:fio_sha512_ctx	typeref:typename:uint32_t[4]
count	server.c	/^static int fio_sendv_data(int sk, struct iovec *iov, int count)$/;"	z	function:fio_sendv_data	typeref:typename:int	file:
count	server.c	/^static ssize_t iov_total_len(const struct iovec *iov, int count)$/;"	z	function:iov_total_len	typeref:typename:int	file:
count	t/dedupe.c	/^	uint64_t count;$/;"	m	struct:chunk	typeref:typename:uint64_t	file:
count	t/dedupe.c	/^static int __read_block(int fd, void *buf, off_t offset, size_t count)$/;"	z	function:__read_block	typeref:typename:size_t	file:
count	t/time-test.c	/^static void do_shift(unsigned long long a[2], unsigned int count)$/;"	z	function:do_shift	typeref:typename:unsigned int	file:
count	t/time-test.c	/^static void do_shift64(unsigned long long a[2], unsigned int count)$/;"	z	function:do_shift64	typeref:typename:unsigned int	file:
count_labels	graph.c	/^static int count_labels(struct graph *g)$/;"	f	typeref:typename:int	file:
count_values	graph.c	/^static int count_values(struct graph_label *l)$/;"	f	typeref:typename:int	file:
coverage	doc/Makefile	/^coverage:$/;"	t
cp	os/windows/posix.c	/^in_addr_t inet_network(const char *cp)$/;"	z	function:inet_network	typeref:typename:const char *	file:
cp	os/windows/posix/include/arpa/inet.h	/^in_addr_t inet_network(const char *cp);$/;"	z	prototype:inet_network	typeref:typename:const char *	file:
cp	oslib/inet_aton.c	/^int inet_aton(const char *cp, struct in_addr *inp)$/;"	z	function:inet_aton	typeref:typename:const char *	file:
cp	oslib/inet_aton.h	/^int inet_aton(const char *cp, struct in_addr *inp);$/;"	z	prototype:inet_aton	typeref:typename:const char *	file:
cpu	blktrace_api.h	/^	__u32 cpu;		\/* on what cpu did it happen *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
cpu	gettime-thread.c	/^	unsigned int cpu;$/;"	m	struct:gtod_cpu_data	typeref:typename:unsigned int	file:
cpu	gettime-thread.c	/^void fio_gtod_set_cpu(unsigned int cpu)$/;"	z	function:fio_gtod_set_cpu	typeref:typename:unsigned int	file:
cpu	gettime.c	/^	int cpu;$/;"	m	struct:clock_thread	typeref:typename:int	file:
cpu	gettime.c	/^	uint32_t cpu;$/;"	m	struct:clock_entry	typeref:typename:uint32_t	file:
cpu	gettime.h	/^extern void fio_gtod_set_cpu(unsigned int cpu);$/;"	z	prototype:fio_gtod_set_cpu	typeref:typename:unsigned int	file:
cpu	idletime.c	/^static double fio_idle_prof_cpu_stat(int cpu)$/;"	z	function:fio_idle_prof_cpu_stat	typeref:typename:int	file:
cpu	idletime.h	/^	int cpu;$/;"	m	struct:idle_prof_thread	typeref:typename:int
cpu	os/os-dragonfly.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:int	file:
cpu	os/os-dragonfly.h	/^static inline void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_clear	typeref:typename:int	file:
cpu	os/os-dragonfly.h	/^static inline void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_set	typeref:typename:int	file:
cpu	os/os-solaris.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:int	file:
cpu	os/os-windows.h	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_isset	typeref:typename:int	file:
cpu	os/os-windows.h	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_clear	typeref:typename:int	file:
cpu	os/os-windows.h	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_set	typeref:typename:int	file:
cpu	os/os.h	/^extern int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu);$/;"	z	prototype:fio_cpus_split	typeref:typename:unsigned int	file:
cpu	os/windows/cpu-affinity.c	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:int	file:
cpu	os/windows/cpu-affinity.c	/^static void cpu_to_row_offset(int cpu, int *row, int *offset)$/;"	z	function:cpu_to_row_offset	typeref:typename:int	file:
cpu	os/windows/cpu-affinity.c	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_clear	typeref:typename:int	file:
cpu	os/windows/cpu-affinity.c	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_set	typeref:typename:int	file:
cpu_features	os/os.h	/^} cpu_features;$/;"	t	typeref:enum:__anon741282ae0203
cpu_index	options.c	/^int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	z	function:fio_cpus_split	typeref:typename:unsigned int	file:
cpu_index	os/os.h	/^static inline int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	z	function:fio_cpus_split	typeref:typename:unsigned int	file:
cpu_mask	idletime.h	/^	os_cpu_mask_t cpu_mask;$/;"	m	struct:idle_prof_thread	typeref:typename:os_cpu_mask_t
cpu_options	engines/cpu.c	/^struct cpu_options {$/;"	s	file:
cpu_to_be16	os/os.h	/^#define cpu_to_be16(/;"	d
cpu_to_be32	os/os.h	/^#define cpu_to_be32(/;"	d
cpu_to_be64	os/os.h	/^#define cpu_to_be64(/;"	d
cpu_to_le16	os/os.h	/^#define cpu_to_le16(/;"	d
cpu_to_le32	os/os.h	/^#define cpu_to_le32(/;"	d
cpu_to_le64	os/os.h	/^#define cpu_to_le64(/;"	d
cpu_to_row_offset	os/windows/cpu-affinity.c	/^static void cpu_to_row_offset(int cpu, int *row, int *offset)$/;"	f	typeref:typename:void	file:
cpucount4	t/run-fio-tests.py	/^    def cpucount4(cls):$/;"	m	class:Requirements
cpucycle	engines/cpu.c	/^	unsigned int cpucycle;$/;"	m	struct:cpu_options	typeref:typename:unsigned int	file:
cpuid	arch/arch-x86-common.h	/^static inline void cpuid(unsigned int op,$/;"	f	typeref:typename:void
cpuload	engines/cpu.c	/^	unsigned int cpuload;$/;"	m	struct:cpu_options	typeref:typename:unsigned int	file:
cpumask	os/os-freebsd.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	z	function:fio_getaffinity	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/os-freebsd.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:os_cpu_mask_t	file:
cpumask	os/os-windows.h	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask);$/;"	z	prototype:fio_setaffinity	typeref:typename:os_cpu_mask_t	file:
cpumask	os/os-windows.h	/^int first_set_cpu(os_cpu_mask_t *cpumask);$/;"	z	prototype:first_set_cpu	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/os.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	z	function:fio_getaffinity	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/os.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:os_cpu_mask_t	file:
cpumask	os/windows/cpu-affinity.c	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:os_cpu_mask_t	file:
cpumask	os/windows/cpu-affinity.c	/^int first_set_cpu(os_cpu_mask_t *cpumask)$/;"	z	function:first_set_cpu	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/windows/cpu-affinity.c	/^static int last_set_cpu(os_cpu_mask_t *cpumask)$/;"	z	function:last_set_cpu	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/windows/cpu-affinity.c	/^static int mask_to_group_mask(os_cpu_mask_t *cpumask, int *processor_group, uint64_t *affinity_m/;"	z	function:mask_to_group_mask	typeref:typename:os_cpu_mask_t *	file:
cpumask	os/windows/cpu-affinity.c	/^static void print_mask(os_cpu_mask_t *cpumask)$/;"	z	function:print_mask	typeref:typename:os_cpu_mask_t *	file:
cpumask	thread_options.h	/^	os_cpu_mask_t cpumask;$/;"	m	struct:thread_options	typeref:typename:os_cpu_mask_t
cpumode	engines/cpu.c	/^	enum stress_mode cpumode;$/;"	m	struct:cpu_options	typeref:enum:stress_mode	file:
cpus	server.h	/^	uint32_t cpus;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint32_t
cpus_allowed_policy	thread_options.h	/^	uint32_t cpus_allowed_policy;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
cpus_allowed_policy	thread_options.h	/^	unsigned int cpus_allowed_policy;$/;"	m	struct:thread_options	typeref:typename:unsigned int
cpus_online	os/os-hpux.h	/^static inline unsigned int cpus_online(void)$/;"	f	typeref:typename:unsigned int
cpus_online	os/os-linux.h	/^static inline unsigned int cpus_online(void)$/;"	f	typeref:typename:unsigned int
cpus_online	os/os-windows.h	/^unsigned int cpus_online(void);$/;"	p	typeref:typename:unsigned int
cpus_online	os/os.h	/^static inline unsigned int cpus_online(void)$/;"	f	typeref:typename:unsigned int
cpus_online	os/windows/cpu-affinity.c	/^unsigned int cpus_online(void)$/;"	f	typeref:typename:unsigned int
cpy_pattern	lib/pattern.c	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	f	typeref:typename:int
cpy_pattern	lib/pattern.h	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	p	typeref:typename:int
cq	engines/librpma_fio.h	/^	struct rpma_cq *cq;$/;"	m	struct:librpma_fio_client_data	typeref:struct:rpma_cq *
cq	engines/librpma_fio.h	/^	struct rpma_cq *cq;$/;"	m	struct:librpma_fio_server_data	typeref:struct:rpma_cq *
cq	engines/rdma.c	/^	struct ibv_cq *cq;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_cq *	file:
cq_entries	os/linux/io_uring.h	/^	__u32 cq_entries;$/;"	m	struct:io_uring_params	typeref:typename:__u32
cq_event_handler	engines/rdma.c	/^static int cq_event_handler(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	f	typeref:typename:int	file:
cq_event_num	engines/rdma.c	/^	int cq_event_num;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
cq_off	os/linux/io_uring.h	/^	struct io_cqring_offsets cq_off;$/;"	m	struct:io_uring_params	typeref:struct:io_cqring_offsets
cq_ring	engines/io_uring.c	/^	struct io_cq_ring cq_ring;$/;"	m	struct:ioring_data	typeref:struct:io_cq_ring	file:
cq_ring	t/io_uring.c	/^	struct io_cq_ring cq_ring;$/;"	m	struct:submitter	typeref:struct:io_cq_ring	file:
cq_ring_mask	engines/io_uring.c	/^	unsigned cq_ring_mask;$/;"	m	struct:ioring_data	typeref:typename:unsigned	file:
cq_ring_mask	t/io_uring.c	/^static unsigned sq_ring_mask, cq_ring_mask;$/;"	v	typeref:typename:unsigned	file:
cq_ring_off	engines/io_uring.c	/^	int cq_ring_off;$/;"	m	struct:ioring_data	typeref:typename:int	file:
cqes	engines/io_uring.c	/^	struct io_uring_cqe *cqes;$/;"	m	struct:io_cq_ring	typeref:struct:io_uring_cqe *	file:
cqes	os/linux/io_uring.h	/^	__u32 cqes;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
cqes	t/io_uring.c	/^	struct io_uring_cqe *cqes;$/;"	m	struct:io_cq_ring	typeref:struct:io_uring_cqe *	file:
cr	cairo_text_helpers.c	/^static void draw_aligned_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_aligned_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.c	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_centered_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.c	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	z	function:draw_left_justified_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.c	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	z	function:draw_right_justified_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.c	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	function:draw_vertical_centered_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.h	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	prototype:draw_centered_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.h	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	z	prototype:draw_left_justified_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.h	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	z	prototype:draw_right_justified_text	typeref:typename:cairo_t *	file:
cr	cairo_text_helpers.h	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:cairo_t *	file:
cr	gfio.c	/^static void draw_graph(struct graph *g, cairo_t *cr)$/;"	z	function:draw_graph	typeref:typename:cairo_t *	file:
cr	graph.c	/^static double graph_draw_y_ticks(struct graph *g, cairo_t *cr,$/;"	z	function:graph_draw_y_ticks	typeref:typename:cairo_t *	file:
cr	graph.c	/^static void draw_bars(struct graph *bg, cairo_t *cr, struct graph_label *lb,$/;"	z	function:draw_bars	typeref:typename:cairo_t *	file:
cr	graph.c	/^static void graph_draw_common(struct graph *g, cairo_t *cr, double *x1,$/;"	z	function:graph_draw_common	typeref:typename:cairo_t *	file:
cr	graph.c	/^static void graph_draw_x_ticks(struct graph *g, cairo_t *cr,$/;"	z	function:graph_draw_x_ticks	typeref:typename:cairo_t *	file:
cr	graph.c	/^void bar_graph_draw(struct graph *bg, cairo_t *cr)$/;"	z	function:bar_graph_draw	typeref:typename:cairo_t *	file:
cr	graph.c	/^void line_graph_draw(struct graph *g, cairo_t *cr)$/;"	z	function:line_graph_draw	typeref:typename:cairo_t *	file:
cr	graph.h	/^void bar_graph_draw(struct graph *g, cairo_t *cr);$/;"	z	prototype:bar_graph_draw	typeref:typename:cairo_t *	file:
cr	graph.h	/^void line_graph_draw(struct graph *g, cairo_t *cr);$/;"	z	prototype:line_graph_draw	typeref:typename:cairo_t *	file:
cr_bw	gfio.h	/^	GtkWidget *cr_bw;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
cr_iops	gfio.h	/^	GtkWidget *cr_iops;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
crc	crc/crc16.h	/^static inline unsigned short crc16_byte(unsigned short crc,$/;"	z	function:crc16_byte	typeref:typename:unsigned short	file:
crc	crc/crc32c-intel.c	/^static uint32_t crc32c_intel_le_hw_byte(uint32_t crc, unsigned char const *data,$/;"	z	function:crc32c_intel_le_hw_byte	typeref:typename:uint32_t	file:
crc	crc/crc7.h	/^static inline unsigned char crc7_byte(unsigned char crc, unsigned char data)$/;"	z	function:crc7_byte	typeref:typename:unsigned char	file:
crc	verify-state.h	/^	uint64_t crc;$/;"	m	struct:verify_state_hdr	typeref:typename:uint64_t
crc16	verify.h	/^	uint16_t crc16;$/;"	m	struct:vhdr_crc16	typeref:typename:uint16_t
crc16_byte	crc/crc16.h	/^static inline unsigned short crc16_byte(unsigned short crc,$/;"	f	typeref:typename:unsigned short
crc16_table	crc/crc16.c	/^unsigned short const crc16_table[256] = {$/;"	v	typeref:typename:unsigned short const[256]
crc32	verify.h	/^	uint32_t crc32;$/;"	m	struct:verify_header	typeref:typename:uint32_t
crc32	verify.h	/^	uint32_t crc32;$/;"	m	struct:vhdr_crc32	typeref:typename:uint32_t
crc32c_arm64	crc/crc32c-arm64.c	/^uint32_t crc32c_arm64(unsigned char const *data, unsigned long length)$/;"	f	typeref:typename:uint32_t
crc32c_arm64	crc/crc32c.h	/^#define crc32c_arm64 /;"	d
crc32c_arm64	crc/crc32c.h	/^extern uint32_t crc32c_arm64(unsigned char const *, unsigned long);$/;"	p	typeref:typename:uint32_t
crc32c_arm64_available	crc/crc32c-arm64.c	/^bool crc32c_arm64_available = false;$/;"	v	typeref:typename:bool
crc32c_arm64_probe	crc/crc32c-arm64.c	/^void crc32c_arm64_probe(void)$/;"	f	typeref:typename:void
crc32c_arm64_probe	crc/crc32c.h	/^extern void crc32c_arm64_probe(void);$/;"	p	typeref:typename:void
crc32c_arm64_probe	crc/crc32c.h	/^static inline void crc32c_arm64_probe(void)$/;"	f	typeref:typename:void
crc32c_intel	crc/crc32c-intel.c	/^uint32_t crc32c_intel(unsigned char const *data, unsigned long length)$/;"	f	typeref:typename:uint32_t
crc32c_intel	crc/crc32c.h	/^#define crc32c_intel /;"	d
crc32c_intel	crc/crc32c.h	/^extern uint32_t crc32c_intel(unsigned char const *, unsigned long);$/;"	p	typeref:typename:uint32_t
crc32c_intel_available	crc/crc32c-intel.c	/^bool crc32c_intel_available = false;$/;"	v	typeref:typename:bool
crc32c_intel_le_hw_byte	crc/crc32c-intel.c	/^static uint32_t crc32c_intel_le_hw_byte(uint32_t crc, unsigned char const *data,$/;"	f	typeref:typename:uint32_t	file:
crc32c_intel_probe	crc/crc32c-intel.c	/^void crc32c_intel_probe(void)$/;"	f	typeref:typename:void
crc32c_intel_probe	crc/crc32c.h	/^extern void crc32c_intel_probe(void);$/;"	p	typeref:typename:void
crc32c_intel_probe	crc/crc32c.h	/^static inline void crc32c_intel_probe(void)$/;"	f	typeref:typename:void
crc32c_probed	crc/crc32c-arm64.c	/^static bool crc32c_probed;$/;"	v	typeref:typename:bool	file:
crc32c_probed	crc/crc32c-intel.c	/^static bool crc32c_probed;$/;"	v	typeref:typename:bool	file:
crc32c_sw	crc/crc32c.c	/^uint32_t crc32c_sw(unsigned char const *data, unsigned long length)$/;"	f	typeref:typename:uint32_t
crc32c_sw	crc/crc32c.h	/^extern uint32_t crc32c_sw(unsigned char const *, unsigned long);$/;"	p	typeref:typename:uint32_t
crc32c_table	crc/crc32c.c	/^static const uint32_t crc32c_table[256] = {$/;"	v	typeref:typename:const uint32_t[256]	file:
crc64	verify.h	/^	uint64_t crc64;$/;"	m	struct:vhdr_crc64	typeref:typename:uint64_t
crc7	verify.h	/^	uint8_t crc7;$/;"	m	struct:vhdr_crc7	typeref:typename:uint8_t
crc7_byte	crc/crc7.h	/^static inline unsigned char crc7_byte(unsigned char crc, unsigned char data)$/;"	f	typeref:typename:unsigned char
crc7_syndrome_table	crc/crc7.c	/^const unsigned char crc7_syndrome_table[256] = {$/;"	v	typeref:typename:const unsigned char[256]
crc_buf	t/dedupe.c	/^static void crc_buf(void *buf, uint32_t *hash)$/;"	f	typeref:typename:void	file:
crc_len	verify.c	/^	unsigned int crc_len;$/;"	m	struct:vcont	typeref:typename:unsigned int	file:
crctab	crc/crc32.c	/^static const uint32_t crctab[256] = {$/;"	v	typeref:typename:const uint32_t[256]	file:
crctab64	crc/crc64.c	/^static const unsigned long long crctab64[256] = {$/;"	v	typeref:typename:const unsigned long long[256]	file:
create_fsync	thread_options.h	/^	uint32_t create_fsync;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
create_fsync	thread_options.h	/^	unsigned int create_fsync;$/;"	m	struct:thread_options	typeref:typename:unsigned int
create_legend	tools/fiograph/fiograph.py	/^def create_legend():$/;"	f
create_named_pipe	os/windows/posix.c	/^static HANDLE create_named_pipe(char *pipe_name, int wait_connect_time)$/;"	f	typeref:typename:HANDLE	file:
create_nullb	t/zbd/run-tests-against-nullb	/^create_nullb()$/;"	f
create_on_open	thread_options.h	/^	uint32_t create_on_open;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
create_on_open	thread_options.h	/^	unsigned int create_on_open;$/;"	m	struct:thread_options	typeref:typename:unsigned int
create_only	thread_options.h	/^	uint32_t create_only;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
create_only	thread_options.h	/^	unsigned int create_only;$/;"	m	struct:thread_options	typeref:typename:unsigned int
create_serialize	thread_options.h	/^	uint32_t create_serialize;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
create_serialize	thread_options.h	/^	unsigned int create_serialize;$/;"	m	struct:thread_options	typeref:typename:unsigned int
create_spinbutton	ghelpers.c	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval)$/;"	f	typeref:typename:GtkWidget *
create_spinbutton	ghelpers.h	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval);$/;"	p	typeref:typename:GtkWidget *
create_sub_graph	tools/fiograph/fiograph.py	/^def create_sub_graph(name):$/;"	f
create_work_dirs	filesetup.c	/^static bool create_work_dirs(struct thread_data *td, const char *fname)$/;"	f	typeref:typename:bool	file:
created	gfio.c	/^					  int *created)$/;"	z	function:get_ge_from_page	typeref:typename:int *	file:
criterion	steadystate.h	/^	double criterion;$/;"	m	struct:steadystate_data	typeref:typename:double
cscope	Makefile	/^cscope:$/;"	t
ctime_r	os/os-windows.h	/^char* ctime_r(const time_t *t, char *buf);$/;"	p	typeref:typename:char *
ctime_r	os/windows/posix.c	/^char *ctime_r(const time_t *t, char *buf)$/;"	f	typeref:typename:char *
ctx	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data)$/;"	z	function:blk_SHA1Block	typeref:struct:fio_sha1_ctx *	file:
ctx	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data);$/;"	z	prototype:blk_SHA1Block	typeref:struct:fio_sha1_ctx *	file:
ctx	crc/sha1.c	/^void fio_sha1_final(struct fio_sha1_ctx *ctx)$/;"	z	function:fio_sha1_final	typeref:struct:fio_sha1_ctx *	file:
ctx	crc/sha1.c	/^void fio_sha1_init(struct fio_sha1_ctx *ctx)$/;"	z	function:fio_sha1_init	typeref:struct:fio_sha1_ctx *	file:
ctx	crc/sha1.c	/^void fio_sha1_update(struct fio_sha1_ctx *ctx, const void *data,$/;"	z	function:fio_sha1_update	typeref:struct:fio_sha1_ctx *	file:
ctx	engines/xnvme.c	/^static void cb_pool(struct xnvme_cmd_ctx *ctx, void *cb_arg)$/;"	z	function:cb_pool	typeref:struct:xnvme_cmd_ctx *	file:
ctx	gfio.c	/^static void drag_and_drop_received(GtkWidget *widget, GdkDragContext *ctx,$/;"	z	function:drag_and_drop_received	typeref:typename:GdkDragContext *	file:
ctx	stat.h	/^	uint64_t ctx;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
ctx	tools/fiologparser.py	/^    ctx = parse_args()$/;"	v
cu_ctx	fio.h	/^	CUcontext cu_ctx;$/;"	m	struct:thread_data	typeref:typename:CUcontext
cu_dev	fio.h	/^	CUdevice  cu_dev;$/;"	m	struct:thread_data	typeref:typename:CUdevice
cu_mem_ptr	engines/libcufile.c	/^	void               *cu_mem_ptr;    \/* GPU memory *\/$/;"	m	struct:libcufile_options	typeref:typename:void *	file:
cuda_io	engines/libcufile.c	/^	unsigned int        cuda_io;       \/* Type of I\/O to use with CUDA *\/$/;"	m	struct:libcufile_options	typeref:typename:unsigned int	file:
cufile_initialized	engines/libcufile.c	/^static int cufile_initialized = 0;$/;"	v	typeref:typename:int	file:
cuid	os/windows/posix/include/sys/shm.h	/^	uid_t    cuid;   \/* creator's user ID *\/$/;"	m	struct:ipc_perm	typeref:typename:uid_t
cur	engines/xnvme.c	/^	int32_t cur;$/;"	m	struct:xnvme_fioe_data	typeref:typename:int32_t	file:
cur	lib/prio_tree.h	/^	struct prio_tree_node	*cur;$/;"	m	struct:prio_tree_iter	typeref:struct:prio_tree_node *
curBins	tools/hist/fiologparser_hist.py	/^    def curBins(self):$/;"	m	class:HistFileRdr
curDir	tools/hist/fiologparser_hist.py	/^    def curDir(self):$/;"	m	class:HistFileRdr
curTS	tools/hist/fiologparser_hist.py	/^    def curTS(self):$/;"	m	class:HistFileRdr
cur_commit	engines/ime.c	/^	unsigned int cur_commit;	\/* index of the first uncommitted req *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
cur_depth	fio.h	/^	unsigned int cur_depth;$/;"	m	struct:thread_data	typeref:typename:unsigned int
cur_file	t/io_uring.c	/^	unsigned cur_file;$/;"	m	struct:submitter	typeref:typename:unsigned	file:
cur_log	iolog.c	/^int iolog_cur_flush(struct io_log *log, struct io_logs *cur_log)$/;"	z	function:iolog_cur_flush	typeref:struct:io_logs *	file:
cur_log	iolog.h	/^					   struct io_logs *cur_log,$/;"	z	function:get_sample	typeref:struct:io_logs *	file:
cur_log	iolog.h	/^static inline size_t log_sample_sz(struct io_log *log, struct io_logs *cur_log)$/;"	z	function:log_sample_sz	typeref:struct:io_logs *	file:
cur_log	server.c	/^				      struct io_logs *cur_log, z_stream *stream)$/;"	z	function:__fio_append_iolog_gz_hist	typeref:struct:io_logs *	file:
cur_log	server.c	/^				 struct io_logs *cur_log, z_stream *stream)$/;"	z	function:__fio_append_iolog_gz	typeref:struct:io_logs *	file:
cur_log_max	iolog.h	/^	uint32_t cur_log_max;$/;"	m	struct:io_log	typeref:typename:uint32_t
cur_off	t/io_uring.c	/^	unsigned long cur_off;$/;"	m	struct:file	typeref:typename:unsigned long	file:
cur_offset	t/dedupe.c	/^	uint64_t cur_offset;$/;"	m	struct:worker_thread	typeref:typename:uint64_t	file:
cur_offset	t/dedupe.c	/^static uint64_t cur_offset;$/;"	v	typeref:typename:uint64_t	file:
cur_page	gfio.c	/^static struct gui_entry *get_ge_from_page(struct gui *ui, gint cur_page,$/;"	z	function:get_ge_from_page	typeref:typename:gint	file:
cur_segment	backend.c	/^unsigned int cur_segment = 0;$/;"	v	typeref:typename:unsigned int
cur_slice	profiles/act.c	/^	unsigned int cur_slice;$/;"	m	struct:act_prof_data	typeref:typename:unsigned int	file:
cur_text	ghelpers.h	/^	unsigned int cur_text;$/;"	m	struct:multitext_widget	typeref:typename:unsigned int
curl	engines/http.c	/^	CURL *curl;$/;"	m	struct:http_data	typeref:typename:CURL *	file:
curl	engines/http.c	/^static void _add_aws_auth_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_aws_auth_header	typeref:typename:CURL *	file:
curl	engines/http.c	/^static void _add_swift_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_swift_header	typeref:typename:CURL *	file:
curr	parse.c	/^			   void *data, int first, int more, int curr)$/;"	z	function:__handle_option	typeref:typename:int	file:
curr_file_id	engines/libhdfs.c	/^	uint64_t curr_file_id;$/;"	m	struct:hdfsio_data	typeref:typename:uint64_t	file:
current_queue	engines/sg.c	/^	int current_queue;$/;"	m	struct:sgio_data	typeref:typename:int	file:
current_state	lex.yy.c	/^static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );$/;"	z	prototype:yy_try_NUL_trans	typeref:typename:yy_state_type	file:
cw_bw	gfio.h	/^	GtkWidget *cw_bw;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
cw_iops	gfio.h	/^	GtkWidget *cw_iops;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
cycle_length	lib/lfsr.h	/^	uint64_t cycle_length;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
cycles	t/io_uring.c	/^static unsigned long cycles_to_nsec(unsigned long cycles)$/;"	z	function:cycles_to_nsec	typeref:typename:unsigned long	file:
cycles_per_msec	gettime.c	/^static unsigned long long cycles_per_msec;$/;"	v	typeref:typename:unsigned long long	file:
cycles_per_usec	t/time-test.c	/^			    unsigned long long cycles_per_usec)$/;"	z	function:calc_mult_shift	typeref:typename:unsigned long long	file:
cycles_per_usec	t/time-test.c	/^static long long test_clock(int mode, int cycles_per_usec, int fast_test,$/;"	z	function:test_clock	typeref:typename:int	file:
cycles_start	gettime.c	/^static unsigned long long cycles_start;$/;"	v	typeref:typename:unsigned long long	file:
cycles_start	t/time-test.c	/^static unsigned long long cycles_start;$/;"	v	typeref:typename:unsigned long long	file:
cycles_to_nsec	t/io_uring.c	/^static unsigned long cycles_to_nsec(unsigned long cycles)$/;"	f	typeref:typename:unsigned long	file:
cycles_wrap	gettime.c	/^static unsigned int cycles_wrap;$/;"	v	typeref:typename:unsigned int	file:
d_ino	os/windows/posix/include/dirent.h	/^	ino_t  d_ino;     \/*  File serial number *\/$/;"	m	struct:dirent	typeref:typename:ino_t
d_name	os/windows/posix/include/dirent.h	/^	char   d_name[MAX_PATH];  \/* Name of entry *\/$/;"	m	struct:dirent	typeref:typename:char[]
daos_data	engines/dfs.c	/^struct daos_data {$/;"	s	file:
daos_fio_cleanup	engines/dfs.c	/^static void daos_fio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
daos_fio_close	engines/dfs.c	/^static int daos_fio_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
daos_fio_event	engines/dfs.c	/^static struct io_u * daos_fio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
daos_fio_get_file_size	engines/dfs.c	/^static int daos_fio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
daos_fio_getevents	engines/dfs.c	/^static int daos_fio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
daos_fio_global_cleanup	engines/dfs.c	/^static int daos_fio_global_cleanup()$/;"	f	typeref:typename:int	file:
daos_fio_global_init	engines/dfs.c	/^static int daos_fio_global_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
daos_fio_init	engines/dfs.c	/^static int daos_fio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
daos_fio_invalidate	engines/dfs.c	/^static int daos_fio_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
daos_fio_io_u_free	engines/dfs.c	/^static void daos_fio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
daos_fio_io_u_init	engines/dfs.c	/^static int daos_fio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
daos_fio_open	engines/dfs.c	/^static int daos_fio_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
daos_fio_options	engines/dfs.c	/^struct daos_fio_options {$/;"	s	file:
daos_fio_prep	engines/dfs.c	/^static int daos_fio_prep(struct thread_data fio_unused *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
daos_fio_queue	engines/dfs.c	/^static enum fio_q_status daos_fio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
daos_fio_setup	engines/dfs.c	/^static int daos_fio_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
daos_fio_unlink	engines/dfs.c	/^static int daos_fio_unlink(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
daos_initialized	engines/dfs.c	/^static bool		daos_initialized;$/;"	v	typeref:typename:bool	file:
daos_iou	engines/dfs.c	/^struct daos_iou {$/;"	s	file:
daos_mutex	engines/dfs.c	/^static pthread_mutex_t	daos_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
data	backend.c	/^static void *thread_main(void *data)$/;"	z	function:thread_main	typeref:typename:void *	file:
data	client.c	/^static int read_data(int fd, void *data, size_t size)$/;"	z	function:read_data	typeref:typename:void *	file:
data	client.c	/^static int read_ini_data(int fd, void *data, size_t size)$/;"	z	function:read_ini_data	typeref:typename:void *	file:
data	crc/crc16.h	/^					const unsigned char data)$/;"	z	function:crc16_byte	typeref:typename:const unsigned char	file:
data	crc/crc32c-arm64.c	/^uint32_t crc32c_arm64(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_arm64	typeref:typename:unsigned char const *	file:
data	crc/crc32c-intel.c	/^static uint32_t crc32c_intel_le_hw_byte(uint32_t crc, unsigned char const *data,$/;"	z	function:crc32c_intel_le_hw_byte	typeref:typename:unsigned char const *	file:
data	crc/crc32c-intel.c	/^uint32_t crc32c_intel(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_intel	typeref:typename:unsigned char const *	file:
data	crc/crc32c.c	/^uint32_t crc32c_sw(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_sw	typeref:typename:unsigned char const *	file:
data	crc/crc7.h	/^static inline unsigned char crc7_byte(unsigned char crc, unsigned char data)$/;"	z	function:crc7_byte	typeref:typename:unsigned char	file:
data	crc/md5.c	/^void fio_md5_update(struct fio_md5_ctx *mctx, const uint8_t *data,$/;"	z	function:fio_md5_update	typeref:typename:const uint8_t *	file:
data	crc/murmur3.c	/^static uint32_t murmur3_tail(const uint8_t *data, const int nblocks,$/;"	z	function:murmur3_tail	typeref:typename:const uint8_t *	file:
data	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data)$/;"	z	function:blk_SHA1Block	typeref:typename:const unsigned int *	file:
data	crc/sha1.c	/^static void blk_SHA1Block(struct fio_sha1_ctx *ctx, const unsigned int *data);$/;"	z	prototype:blk_SHA1Block	typeref:typename:const unsigned int *	file:
data	crc/sha1.c	/^void fio_sha1_update(struct fio_sha1_ctx *ctx, const void *data,$/;"	z	function:fio_sha1_update	typeref:typename:const void *	file:
data	crc/sha256.c	/^void fio_sha256_update(struct fio_sha256_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha256_update	typeref:typename:const uint8_t *	file:
data	crc/sha3.c	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha3_update	typeref:typename:const uint8_t *	file:
data	crc/sha3.h	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	z	prototype:fio_sha3_update	typeref:typename:const uint8_t *	file:
data	crc/sha512.c	/^void fio_sha512_update(struct fio_sha512_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha512_update	typeref:typename:const uint8_t *	file:
data	engines/cmdprio.c	/^				    enum fio_ddir ddir, char *str, bool data)$/;"	z	function:fio_cmdprio_bssplit_ddir	typeref:typename:bool	file:
data	engines/glusterfs_async.c	/^			struct glfs_stat *poststat, void *data)$/;"	z	function:gf_async_cb	typeref:typename:void *	file:
data	engines/http.c	/^	     char *data, size_t size,$/;"	z	function:_curl_trace	typeref:typename:char *	file:
data	engines/http.c	/^static void _hmac(unsigned char *md, void *key, int key_len, char *data) {$/;"	z	function:_hmac	typeref:typename:char *	file:
data	engines/io_uring.c	/^static int fio_ioring_sqpoll_cb(void *data, unsigned long long *val)$/;"	z	function:fio_ioring_sqpoll_cb	typeref:typename:void *	file:
data	engines/librpma_gpspm_flush.pb-c.c	/^                      const uint8_t       *data)$/;"	z	function:gpspm_flush_request__unpack	typeref:typename:const uint8_t *	file:
data	engines/librpma_gpspm_flush.pb-c.c	/^                      const uint8_t       *data)$/;"	z	function:gpspm_flush_response__unpack	typeref:typename:const uint8_t *	file:
data	engines/librpma_gpspm_flush.pb-c.h	/^                      const uint8_t       *data);$/;"	z	prototype:gpspm_flush_request__unpack	typeref:typename:const uint8_t *	file:
data	engines/librpma_gpspm_flush.pb-c.h	/^                      const uint8_t       *data);$/;"	z	prototype:gpspm_flush_response__unpack	typeref:typename:const uint8_t *	file:
data	engines/net.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	z	function:str_hostname_cb	typeref:typename:void *	file:
data	engines/net.c	/^static int str_hostname_cb(void *data, const char *input);$/;"	z	prototype:str_hostname_cb	typeref:typename:void *	file:
data	engines/nfs.c	/^static void nfs_callback(int res, struct nfs_context *nfs, void *data,$/;"	z	function:nfs_callback	typeref:typename:void *	file:
data	engines/rbd.c	/^static void _fio_rbd_finish_aiocb(rbd_completion_t comp, void *data)$/;"	z	function:_fio_rbd_finish_aiocb	typeref:typename:void *	file:
data	engines/rdma.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	z	function:str_hostname_cb	typeref:typename:void *	file:
data	engines/sg.c	/^static int sg_fd_read(int fd, void *data, size_t size)$/;"	z	function:sg_fd_read	typeref:typename:void *	file:
data	gclient.c	/^				       gpointer data)$/;"	z	function:on_config_lat_drawing_area	typeref:typename:gpointer	file:
data	gclient.c	/^static gboolean results_window_delete(GtkWidget *w, gpointer data)$/;"	z	function:results_window_delete	typeref:typename:gpointer	file:
data	gclient.c	/^static void disk_util_destroy(GtkWidget *w, gpointer data)$/;"	z	function:disk_util_destroy	typeref:typename:gpointer	file:
data	gclient.c	/^static void results_close(GtkWidget *w, gpointer *data)$/;"	z	function:results_close	typeref:typename:gpointer *	file:
data	gclient.c	/^static void results_print(GtkWidget *w, gpointer *data)$/;"	z	function:results_print	typeref:typename:gpointer *	file:
data	gerror.c	/^				 gpointer data)$/;"	z	function:on_info_bar_response	typeref:typename:gpointer	file:
data	gettime-thread.c	/^static void *gtod_thread_main(void *data)$/;"	z	function:gtod_thread_main	typeref:typename:void *	file:
data	gettime.c	/^static void *clock_thread_fn(void *data)$/;"	z	function:clock_thread_fn	typeref:typename:void *	file:
data	gettime.c	/^static void kill_tv_tls_key(void *data)$/;"	z	function:kill_tv_tls_key	typeref:typename:void *	file:
data	gfio.c	/^				     guint page, gpointer data)$/;"	z	function:notebook_switch_page	typeref:typename:gpointer	file:
data	gfio.c	/^				   gpointer data)$/;"	z	function:on_config_drawing_area	typeref:typename:gpointer	file:
data	gfio.c	/^				   guint info, guint time, gpointer *data)$/;"	z	function:drag_and_drop_received	typeref:typename:gpointer *	file:
data	gfio.c	/^			      gpointer data)$/;"	z	function:graph_tooltip	typeref:typename:gpointer	file:
data	gfio.c	/^			      gpointer data)$/;"	z	function:start_job_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^			     struct button_spec *buttonspec, gpointer data)$/;"	z	function:add_button	typeref:typename:gpointer	file:
data	gfio.c	/^			 gpointer data)$/;"	z	function:quit_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void about_dialog(GtkWidget *w, gpointer data)$/;"	z	function:about_dialog	typeref:typename:gpointer	file:
data	gfio.c	/^static void combo_entry_changed(GtkComboBox *box, gpointer data)$/;"	z	function:combo_entry_changed	typeref:typename:gpointer	file:
data	gfio.c	/^static void combo_entry_destroy(GtkWidget *widget, gpointer data)$/;"	z	function:combo_entry_destroy	typeref:typename:gpointer	file:
data	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data)$/;"	z	function:connect_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:connect_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void connect_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:connect_job_entry	typeref:typename:gpointer	file:
data	gfio.c	/^static void edit_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:edit_job_entry	typeref:typename:gpointer	file:
data	gfio.c	/^static void file_close(GtkWidget *w, gpointer data)$/;"	z	function:file_close	typeref:typename:gpointer	file:
data	gfio.c	/^static void file_new(GtkWidget *w, gpointer data)$/;"	z	function:file_new	typeref:typename:gpointer	file:
data	gfio.c	/^static void file_open(GtkWidget *w, gpointer data)$/;"	z	function:file_open	typeref:typename:gpointer	file:
data	gfio.c	/^static void file_open(GtkWidget *w, gpointer data);$/;"	z	prototype:file_open	typeref:typename:gpointer	file:
data	gfio.c	/^static void file_save(GtkWidget *w, gpointer data)$/;"	z	function:file_save	typeref:typename:gpointer	file:
data	gfio.c	/^static void ge_update_settings_fn(gpointer key, gpointer value, gpointer data)$/;"	z	function:ge_update_settings_fn	typeref:typename:gpointer	file:
data	gfio.c	/^static void ge_widget_destroy(GtkWidget *w, gpointer data)$/;"	z	function:ge_widget_destroy	typeref:typename:gpointer	file:
data	gfio.c	/^static void hostname_cb(GtkEntry *entry, gpointer data)$/;"	z	function:hostname_cb	typeref:typename:gpointer	file:
data	gfio.c	/^static void preferences(GtkWidget *w, gpointer data)$/;"	z	function:preferences	typeref:typename:gpointer	file:
data	gfio.c	/^static void recent_open(GtkAction *action, gpointer data)$/;"	z	function:recent_open	typeref:typename:gpointer	file:
data	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data)$/;"	z	function:send_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:send_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void send_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:send_job_entry	typeref:typename:gpointer	file:
data	gfio.c	/^static void start_job_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:start_job_clicked	typeref:typename:gpointer	file:
data	gfio.c	/^static void start_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:start_job_entry	typeref:typename:gpointer	file:
data	gfio.c	/^static void view_log(GtkWidget *w, gpointer data)$/;"	z	function:view_log	typeref:typename:gpointer	file:
data	gfio.c	/^static void view_log_destroy(GtkWidget *w, gpointer data)$/;"	z	function:view_log_destroy	typeref:typename:gpointer	file:
data	gfio.c	/^static void view_results(GtkWidget *w, gpointer data)$/;"	z	function:view_results	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_bool_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_bool_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_bool_toggled(GtkToggleButton *button, gpointer data)$/;"	z	function:gopt_bool_toggled	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_combo_changed(GtkComboBox *box, gpointer data)$/;"	z	function:gopt_combo_changed	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_combo_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_combo_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_int_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_int_changed	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_int_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_int_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_job_changed(GtkComboBox *box, gpointer data)$/;"	z	function:gopt_job_changed	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_range_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_range_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_changed(GtkEntry *entry, gpointer data)$/;"	z	function:gopt_str_changed	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_multi_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_multi_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_multi_toggled(GtkToggleButton *button, gpointer data)$/;"	z	function:gopt_str_multi_toggled	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_val_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_str_val_changed	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_val_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_val_destroy	typeref:typename:gpointer	file:
data	goptions.c	/^static void gopt_str_val_spin_wrapped(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_str_val_spin_wrapped	typeref:typename:gpointer	file:
data	goptions.c	/^static void range_value_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:range_value_changed	typeref:typename:gpointer	file:
data	helper_thread.c	/^static void *helper_thread_main(void *data)$/;"	z	function:helper_thread_main	typeref:typename:void *	file:
data	idletime.c	/^static double calibrate_unit(unsigned char *data)$/;"	z	function:calibrate_unit	typeref:typename:unsigned char *	file:
data	idletime.c	/^static void *idle_prof_thread_fn(void *data)$/;"	z	function:idle_prof_thread_fn	typeref:typename:void *	file:
data	idletime.h	/^	unsigned char *data;             \/* bytes to be touched *\/$/;"	m	struct:idle_prof_thread	typeref:typename:unsigned char *
data	iolog.c	/^static int gz_work(struct iolog_flush_data *data)$/;"	z	function:gz_work	typeref:struct:iolog_flush_data *	file:
data	iolog.h	/^	union io_sample_data data;$/;"	m	struct:io_sample	typeref:union:io_sample_data
data	lib/axmap.c	/^			  void *), void *data)$/;"	z	function:axmap_handler	typeref:typename:void *	file:
data	lib/axmap.c	/^			 struct axmap_set_data *data)$/;"	z	function:__axmap_set	typeref:struct:axmap_set_data *	file:
data	lib/bloom.c	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords)$/;"	z	function:bloom_set	typeref:typename:uint32_t *	file:
data	lib/bloom.c	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len,$/;"	z	function:bloom_string	typeref:typename:const char *	file:
data	lib/bloom.c	/^static bool __bloom_check(struct bloom *b, const void *data, unsigned int len,$/;"	z	function:__bloom_check	typeref:typename:const void *	file:
data	lib/bloom.h	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords);$/;"	z	prototype:bloom_set	typeref:typename:uint32_t *	file:
data	lib/bloom.h	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len, bool);$/;"	z	prototype:bloom_string	typeref:typename:const char *	file:
data	options.c	/^			enum fio_ddir ddir, char *str, bool data)$/;"	z	function:bssplit_ddir	typeref:typename:bool	file:
data	options.c	/^		    split_parse_fn *fn, void *eo, bool data)$/;"	z	function:str_split_parse	typeref:typename:bool	file:
data	options.c	/^static int fio_clock_source_cb(void *data, const char *str)$/;"	z	function:fio_clock_source_cb	typeref:typename:void *	file:
data	options.c	/^static int gtod_cpu_verify(const struct fio_option *o, void *data)$/;"	z	function:gtod_cpu_verify	typeref:typename:void *	file:
data	options.c	/^static int rw_verify(const struct fio_option *o, void *data)$/;"	z	function:rw_verify	typeref:typename:void *	file:
data	options.c	/^static int str_bssplit_cb(void *data, const char *input)$/;"	z	function:str_bssplit_cb	typeref:typename:void *	file:
data	options.c	/^static int str_buffer_compress_cb(void *data, unsigned long long *il)$/;"	z	function:str_buffer_compress_cb	typeref:typename:void *	file:
data	options.c	/^static int str_buffer_pattern_cb(void *data, const char *input)$/;"	z	function:str_buffer_pattern_cb	typeref:typename:void *	file:
data	options.c	/^static int str_cpumask_cb(void *data, unsigned long long *val)$/;"	z	function:str_cpumask_cb	typeref:typename:void *	file:
data	options.c	/^static int str_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_cpus_allowed_cb	typeref:typename:void *	file:
data	options.c	/^static int str_dedupe_cb(void *data, unsigned long long *il)$/;"	z	function:str_dedupe_cb	typeref:typename:void *	file:
data	options.c	/^static int str_directory_cb(void *data, const char fio_unused *unused)$/;"	z	function:str_directory_cb	typeref:typename:void *	file:
data	options.c	/^static int str_filename_cb(void *data, const char *input)$/;"	z	function:str_filename_cb	typeref:typename:void *	file:
data	options.c	/^static int str_fst_cb(void *data, const char *str)$/;"	z	function:str_fst_cb	typeref:typename:void *	file:
data	options.c	/^static int str_gtod_reduce_cb(void *data, int *il)$/;"	z	function:str_gtod_reduce_cb	typeref:typename:void *	file:
data	options.c	/^static int str_ignore_error_cb(void *data, const char *input)$/;"	z	function:str_ignore_error_cb	typeref:typename:void *	file:
data	options.c	/^static int str_io_size_cb(void *data, unsigned long long *__val)$/;"	z	function:str_io_size_cb	typeref:typename:void *	file:
data	options.c	/^static int str_ioengine_external_cb(void *data, const char *str)$/;"	z	function:str_ioengine_external_cb	typeref:typename:void *	file:
data	options.c	/^static int str_log_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_log_cpus_allowed_cb	typeref:typename:void *	file:
data	options.c	/^static int str_mem_cb(void *data, const char *mem)$/;"	z	function:str_mem_cb	typeref:typename:void *	file:
data	options.c	/^static int str_numa_cpunodes_cb(void *data, char *input)$/;"	z	function:str_numa_cpunodes_cb	typeref:typename:void *	file:
data	options.c	/^static int str_numa_mpol_cb(void *data, char *input)$/;"	z	function:str_numa_mpol_cb	typeref:typename:void *	file:
data	options.c	/^static int str_offset_cb(void *data, unsigned long long *__val)$/;"	z	function:str_offset_cb	typeref:typename:void *	file:
data	options.c	/^static int str_offset_increment_cb(void *data, unsigned long long *__val)$/;"	z	function:str_offset_increment_cb	typeref:typename:void *	file:
data	options.c	/^static int str_opendir_cb(void *data, const char fio_unused *str)$/;"	z	function:str_opendir_cb	typeref:typename:void *	file:
data	options.c	/^static int str_random_distribution_cb(void *data, const char *str)$/;"	z	function:str_random_distribution_cb	typeref:typename:void *	file:
data	options.c	/^static int str_replay_skip_cb(void *data, const char *input)$/;"	z	function:str_replay_skip_cb	typeref:typename:void *	file:
data	options.c	/^static int str_rw_cb(void *data, const char *str)$/;"	z	function:str_rw_cb	typeref:typename:void *	file:
data	options.c	/^static int str_rwmix_read_cb(void *data, unsigned long long *val)$/;"	z	function:str_rwmix_read_cb	typeref:typename:void *	file:
data	options.c	/^static int str_rwmix_write_cb(void *data, unsigned long long *val)$/;"	z	function:str_rwmix_write_cb	typeref:typename:void *	file:
data	options.c	/^static int str_sfr_cb(void *data, const char *str)$/;"	z	function:str_sfr_cb	typeref:typename:void *	file:
data	options.c	/^static int str_size_cb(void *data, unsigned long long *__val)$/;"	z	function:str_size_cb	typeref:typename:void *	file:
data	options.c	/^static int str_steadystate_cb(void *data, const char *str)$/;"	z	function:str_steadystate_cb	typeref:typename:void *	file:
data	options.c	/^static int str_verify_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_verify_cpus_allowed_cb	typeref:typename:void *	file:
data	options.c	/^static int str_verify_pattern_cb(void *data, const char *input)$/;"	z	function:str_verify_pattern_cb	typeref:typename:void *	file:
data	options.c	/^static int str_write_bw_log_cb(void *data, const char *str)$/;"	z	function:str_write_bw_log_cb	typeref:typename:void *	file:
data	options.c	/^static int str_write_hist_log_cb(void *data, const char *str)$/;"	z	function:str_write_hist_log_cb	typeref:typename:void *	file:
data	options.c	/^static int str_write_iops_log_cb(void *data, const char *str)$/;"	z	function:str_write_iops_log_cb	typeref:typename:void *	file:
data	options.c	/^static int str_write_lat_log_cb(void *data, const char *str)$/;"	z	function:str_write_lat_log_cb	typeref:typename:void *	file:
data	options.c	/^static int str_zoneskip_cb(void *data, unsigned long long *__val)$/;"	z	function:str_zoneskip_cb	typeref:typename:void *	file:
data	options.c	/^unsigned int fio_get_kb_base(void *data)$/;"	z	function:fio_get_kb_base	typeref:typename:void *	file:
data	os/linux/io_uring.h	/^	__aligned_u64 data;$/;"	m	struct:io_uring_rsrc_register	typeref:typename:__aligned_u64
data	os/linux/io_uring.h	/^	__aligned_u64 data;$/;"	m	struct:io_uring_rsrc_update	typeref:typename:__aligned_u64
data	os/linux/io_uring.h	/^	__aligned_u64 data;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__aligned_u64
data	oslib/libmtd.c	/^		  uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_write_oob	typeref:typename:void *	file:
data	oslib/libmtd.c	/^		 uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_read_oob	typeref:typename:void *	file:
data	oslib/libmtd.c	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	function:mtd_write	typeref:typename:void *	file:
data	oslib/libmtd.c	/^	      uint64_t start, uint64_t length, void *data, unsigned int cmd64,$/;"	z	function:do_oob_op	typeref:typename:void *	file:
data	oslib/libmtd.h	/^		  uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_write_oob	typeref:typename:void *	file:
data	oslib/libmtd.h	/^		 uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_read_oob	typeref:typename:void *	file:
data	oslib/libmtd.h	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	prototype:mtd_write	typeref:typename:void *	file:
data	parse.c	/^			   void *data, int first, int more, int curr)$/;"	z	function:__handle_option	typeref:typename:void *	file:
data	parse.c	/^			 void *data)$/;"	z	function:handle_option	typeref:typename:void *	file:
data	parse.c	/^		     const struct fio_option *options, void *data,$/;"	z	function:parse_cmd_option	typeref:typename:void *	file:
data	parse.c	/^		 const struct fio_option **o, void *data,$/;"	z	function:parse_option	typeref:typename:void *	file:
data	parse.c	/^int check_str_bytes(const char *p, long long *val, void *data)$/;"	z	function:check_str_bytes	typeref:typename:void *	file:
data	parse.c	/^int str_to_decimal(const char *str, long long *val, int kilo, void *data,$/;"	z	function:str_to_decimal	typeref:typename:void *	file:
data	parse.c	/^static int check_range_bytes(const char *str, long long *val, void *data)$/;"	z	function:check_range_bytes	typeref:typename:void *	file:
data	parse.c	/^static unsigned long long __get_mult_bytes(const char *p, void *data,$/;"	z	function:__get_mult_bytes	typeref:typename:void *	file:
data	parse.c	/^static unsigned long long get_mult_bytes(const char *str, int len, void *data,$/;"	z	function:get_mult_bytes	typeref:typename:void *	file:
data	parse.c	/^void fill_default_options(void *data, const struct fio_option *options)$/;"	z	function:fill_default_options	typeref:typename:void *	file:
data	parse.c	/^void options_free(const struct fio_option *options, void *data)$/;"	z	function:options_free	typeref:typename:void *	file:
data	parse.c	/^void options_mem_dupe(const struct fio_option *options, void *data)$/;"	z	function:options_mem_dupe	typeref:typename:void *	file:
data	parse.h	/^extern int check_str_bytes(const char *p, long long *val, void *data);$/;"	z	prototype:check_str_bytes	typeref:typename:void *	file:
data	printing.c	/^			      gpointer data)$/;"	z	function:results_draw_page	typeref:typename:gpointer	file:
data	printing.c	/^			GtkPrintContext *context, gpointer data)$/;"	z	function:begin_print	typeref:typename:gpointer	file:
data	printing.c	/^			GtkPrintOperationResult result, gpointer data)$/;"	z	function:results_print_done	typeref:typename:gpointer	file:
data	server.c	/^	void *data;$/;"	m	struct:cmd_reply	typeref:typename:void *	file:
data	server.c	/^static void *fio_backend_thread(void *data)$/;"	z	function:fio_backend_thread	typeref:typename:void *	file:
data	server.h	/^	uint8_t data[0];$/;"	m	struct:cmd_sendfile_reply	typeref:typename:uint8_t[0]
data	stat.c	/^				    union io_sample_data data,$/;"	z	function:add_log_sample	typeref:union:io_sample_data	file:
data	stat.c	/^static inline void add_stat_sample(struct io_stat *is, unsigned long long data)$/;"	z	function:add_stat_sample	typeref:typename:unsigned long long	file:
data	stat.c	/^static void __add_log_sample(struct io_log *iolog, union io_sample_data data,$/;"	z	function:__add_log_sample	typeref:union:io_sample_data	file:
data	stat.c	/^void add_agg_sample(union io_sample_data data, enum fio_ddir ddir,$/;"	z	function:add_agg_sample	typeref:union:io_sample_data	file:
data	t/dedupe.c	/^static void *thread_fn(void *data)$/;"	z	function:thread_fn	typeref:typename:void *	file:
data	t/fuzz/fuzz_parseini.c	/^int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	z	function:LLVMFuzzerTestOneInput	typeref:typename:const uint8_t *	file:
data	t/io_uring.c	/^static void *submitter_aio_fn(void *data)$/;"	z	function:submitter_aio_fn	typeref:typename:void *	file:
data	t/io_uring.c	/^static void *submitter_sync_fn(void *data)$/;"	z	function:submitter_sync_fn	typeref:typename:void *	file:
data	t/io_uring.c	/^static void *submitter_uring_fn(void *data)$/;"	z	function:submitter_uring_fn	typeref:typename:void *	file:
data	t/memlock.c	/^static void *worker(void *data)$/;"	z	function:worker	typeref:typename:void *	file:
data	t/read-to-pipe-async.c	/^static void *reader_fn(void *data)$/;"	z	function:reader_fn	typeref:typename:void *	file:
data	t/read-to-pipe-async.c	/^static void *reader_one_off(void *data)$/;"	z	function:reader_one_off	typeref:typename:void *	file:
data	t/read-to-pipe-async.c	/^static void *writer_fn(void *data)$/;"	z	function:writer_fn	typeref:typename:void *	file:
data	thread_options.h	/^			   split_parse_fn *fn, void *eo, bool data);$/;"	z	prototype:str_split_parse	typeref:typename:bool	file:
data	verify.c	/^static int mem_is_zero(const void *data, size_t length)$/;"	z	function:mem_is_zero	typeref:typename:const void *	file:
data	verify.c	/^static int mem_is_zero_slow(const void *data, size_t length, size_t *offset)$/;"	z	function:mem_is_zero_slow	typeref:typename:const void *	file:
data	verify.c	/^static void *verify_async_thread(void *data)$/;"	z	function:verify_async_thread	typeref:typename:void *	file:
data	workqueue.c	/^static void *worker_thread(void *data)$/;"	z	function:worker_thread	typeref:typename:void *	file:
dataIn	crc/sha1.h	/^void fio_sha1_update(struct fio_sha1_ctx *, const void *dataIn, unsigned long len);$/;"	z	prototype:fio_sha1_update	typeref:typename:const void *	file:
data_size	oslib/libmtd_legacy.c	/^	int data_size;$/;"	m	struct:proc_parse_info	typeref:typename:int	file:
datap	server.c	/^				void **datap)$/;"	z	function:fio_server_get_verify_state	typeref:typename:void **	file:
ddir	backend.c	/^				  const enum fio_ddir ddir)$/;"	z	function:update_runtime	typeref:typename:const enum fio_ddir	file:
ddir	backend.c	/^			     enum fio_ddir ddir)$/;"	z	function:__check_min_rate	typeref:enum:fio_ddir	file:
ddir	backend.c	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	function:io_queue_event	typeref:enum:fio_ddir	file:
ddir	backend.c	/^static bool break_on_this_error(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:break_on_this_error	typeref:enum:fio_ddir	file:
ddir	backend.c	/^static long long usec_for_io(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:usec_for_io	typeref:enum:fio_ddir	file:
ddir	backend.c	/^static void handle_thinktime(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:handle_thinktime	typeref:enum:fio_ddir	file:
ddir	engines/cmdprio.c	/^				    enum fio_ddir ddir, char *str, bool data)$/;"	z	function:fio_cmdprio_bssplit_ddir	typeref:enum:fio_ddir	file:
ddir	engines/cmdprio.c	/^static int init_ts_clat_prio(struct thread_stat *ts, enum fio_ddir ddir,$/;"	z	function:init_ts_clat_prio	typeref:enum:fio_ddir	file:
ddir	engines/ime.c	/^	enum fio_ddir		ddir;			\/* Type of IO (read or write) *\/$/;"	m	struct:imeaio_req	typeref:enum:fio_ddir	file:
ddir	engines/ime.c	/^	enum fio_ddir	ddir;	\/* Type of IO (read or write) *\/$/;"	m	struct:imesio_req	typeref:enum:fio_ddir	file:
ddir	engines/net.c	/^					   enum fio_ddir ddir)$/;"	z	function:__fio_netio_queue	typeref:enum:fio_ddir	file:
ddir	filesetup.c	/^void lock_file(struct thread_data *td, struct fio_file *f, enum fio_ddir ddir)$/;"	z	function:lock_file	typeref:enum:fio_ddir	file:
ddir	fio.h	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	prototype:io_queue_event	typeref:enum:fio_ddir	file:
ddir	fio.h	/^static inline bool option_check_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:option_check_rate	typeref:enum:fio_ddir	file:
ddir	gclient.c	/^				       int ddir, uint64_t *io_u_plat,$/;"	z	function:gfio_show_clat_percentiles	typeref:typename:int	file:
ddir	gclient.c	/^				  struct thread_stat *ts, int ddir)$/;"	z	function:gfio_show_ddir_status	typeref:typename:int	file:
ddir	init.c	/^static int __setup_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:__setup_rate	typeref:enum:fio_ddir	file:
ddir	io_ddir.h	/^static inline const char *ddir_str(enum td_ddir ddir)$/;"	z	function:ddir_str	typeref:enum:td_ddir	file:
ddir	io_ddir.h	/^static inline const char *io_ddir_name(enum fio_ddir ddir)$/;"	z	function:io_ddir_name	typeref:enum:fio_ddir	file:
ddir	io_ddir.h	/^static inline int ddir_rw(enum fio_ddir ddir)$/;"	z	function:ddir_rw	typeref:enum:fio_ddir	file:
ddir	io_ddir.h	/^static inline int ddir_sync(enum fio_ddir ddir)$/;"	z	function:ddir_sync	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^					    enum fio_ddir ddir, uint64_t *b)$/;"	z	function:__get_next_rand_offset_zoned_abs	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^					 struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_pareto	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^					struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_gauss	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^					struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_zoned	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^				       struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_zipf	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^				  enum fio_ddir ddir, uint64_t *b,$/;"	z	function:__get_next_rand_offset	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^				enum fio_ddir ddir, uint64_t *b)$/;"	z	function:get_next_rand_offset	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^			       enum fio_ddir ddir, uint64_t *b)$/;"	z	function:get_next_rand_block	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^			       enum fio_ddir ddir, uint64_t *offset)$/;"	z	function:get_next_seq_offset	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^			   enum fio_ddir ddir)$/;"	z	function:last_block	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^			  enum fio_ddir ddir, int rw_seq,$/;"	z	function:get_next_block	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^static bool should_do_random(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:should_do_random	typeref:enum:fio_ddir	file:
ddir	io_u.c	/^static enum fio_ddir rate_ddir(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:rate_ddir	typeref:enum:fio_ddir	file:
ddir	io_u.h	/^	enum fio_ddir ddir;$/;"	m	struct:io_u	typeref:enum:fio_ddir
ddir	iolog.h	/^				      enum fio_ddir ddir)$/;"	z	function:io_sample_set_ddir	typeref:enum:fio_ddir	file:
ddir	iolog.h	/^	enum fio_ddir ddir;$/;"	m	struct:io_piece	typeref:enum:fio_ddir
ddir	options.c	/^			   enum fio_ddir ddir, char *str, bool absolute)$/;"	z	function:zone_split_ddir	typeref:enum:fio_ddir	file:
ddir	options.c	/^			enum fio_ddir ddir, char *str, bool data)$/;"	z	function:bssplit_ddir	typeref:enum:fio_ddir	file:
ddir	rate-submit.c	/^		     enum fio_ddir ddir)$/;"	z	function:sum_ddir	typeref:enum:fio_ddir	file:
ddir	stat.c	/^					     enum fio_ddir ddir,$/;"	z	function:add_lat_percentile_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^					 enum fio_ddir ddir, int mean)$/;"	z	function:convert_agg_kbytes_percent	typeref:enum:fio_ddir	file:
ddir	stat.c	/^					enum fio_ddir ddir, uint32_t ioprio,$/;"	z	function:alloc_or_get_clat_prio_index	typeref:enum:fio_ddir	file:
ddir	stat.c	/^				    enum fio_ddir ddir, unsigned long long bs,$/;"	z	function:add_log_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^				   enum fio_ddir ddir, int ver,$/;"	z	function:show_ddir_status_terse	typeref:enum:fio_ddir	file:
ddir	stat.c	/^				 struct group_run_stats *rs, enum fio_ddir ddir,$/;"	z	function:add_ddir_status_json	typeref:enum:fio_ddir	file:
ddir	stat.c	/^			       enum fio_ddir ddir,$/;"	z	function:add_lat_percentile_prio_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^			     enum fio_ddir ddir, struct buf_output *out)$/;"	z	function:show_ddir_status	typeref:enum:fio_ddir	file:
ddir	stat.c	/^			     enum fio_ddir ddir, unsigned long long bs,$/;"	z	function:__add_log_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^int alloc_clat_prio_stat_ddir(struct thread_stat *ts, enum fio_ddir ddir,$/;"	z	function:alloc_clat_prio_stat_ddir	typeref:enum:fio_ddir	file:
ddir	stat.c	/^static int find_clat_prio_index(struct thread_stat *dst, enum fio_ddir ddir,$/;"	z	function:find_clat_prio_index	typeref:enum:fio_ddir	file:
ddir	stat.c	/^static int get_nr_prios_with_samples(struct thread_stat *ts, enum fio_ddir ddir)$/;"	z	function:get_nr_prios_with_samples	typeref:enum:fio_ddir	file:
ddir	stat.c	/^static int grow_clat_prio_stat(struct thread_stat *dst, enum fio_ddir ddir)$/;"	z	function:grow_clat_prio_stat	typeref:enum:fio_ddir	file:
ddir	stat.c	/^static void __add_stat_to_log(struct io_log *iolog, enum fio_ddir ddir,$/;"	z	function:__add_stat_to_log	typeref:enum:fio_ddir	file:
ddir	stat.c	/^void add_agg_sample(union io_sample_data data, enum fio_ddir ddir,$/;"	z	function:add_agg_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^void add_clat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_clat_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^void add_lat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_lat_sample	typeref:enum:fio_ddir	file:
ddir	stat.c	/^void add_slat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_slat_sample	typeref:enum:fio_ddir	file:
ddir	td_error.c	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err)$/;"	z	function:td_error_type	typeref:enum:fio_ddir	file:
ddir	td_error.h	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err);$/;"	z	prototype:td_error_type	typeref:enum:fio_ddir	file:
ddir	zbd.c	/^			      enum fio_ddir ddir)$/;"	z	function:zbd_adjust_ddir	typeref:enum:fio_ddir	file:
ddir	zbd.h	/^			      enum fio_ddir ddir);$/;"	z	prototype:zbd_adjust_ddir	typeref:enum:fio_ddir	file:
ddir	zone-dist.c	/^static void __td_zone_gen_index(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:__td_zone_gen_index	typeref:enum:fio_ddir	file:
ddir_rw	io_ddir.h	/^static inline int ddir_rw(enum fio_ddir ddir)$/;"	f	typeref:typename:int
ddir_rw_sum	io_ddir.h	/^#define ddir_rw_sum(/;"	d
ddir_seq_add	thread_options.h	/^	long long ddir_seq_add;$/;"	m	struct:thread_options	typeref:typename:long long
ddir_seq_add	thread_options.h	/^	uint64_t ddir_seq_add;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
ddir_seq_nr	fio.h	/^	unsigned int ddir_seq_nr;$/;"	m	struct:thread_data	typeref:typename:unsigned int
ddir_seq_nr	thread_options.h	/^	uint32_t ddir_seq_nr;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ddir_seq_nr	thread_options.h	/^	unsigned int ddir_seq_nr;$/;"	m	struct:thread_options	typeref:typename:unsigned int
ddir_str	io_ddir.h	/^static inline const char *ddir_str(enum td_ddir ddir)$/;"	f	typeref:typename:const char *
ddir_sync	io_ddir.h	/^static inline int ddir_sync(enum fio_ddir ddir)$/;"	f	typeref:typename:int
ddir_to_op	engines/io_uring.c	/^static const int ddir_to_op[2][2] = {$/;"	v	typeref:typename:const int[2][2]	file:
debug	engines/nbd.c	/^	int debug;$/;"	m	struct:nbd_data	typeref:typename:int	file:
debug	gettime.c	/^	int debug;$/;"	m	struct:clock_thread	typeref:typename:int	file:
debug	gettime.c	/^int fio_monotonic_clocktest(int debug)$/;"	z	function:fio_monotonic_clocktest	typeref:typename:int	file:
debug	gettime.h	/^extern int fio_monotonic_clocktest(int debug);$/;"	z	prototype:fio_monotonic_clocktest	typeref:typename:int	file:
debug_flag	lex.yy.c	/^void yyset_debug ( int debug_flag  );$/;"	z	prototype:yyset_debug	typeref:typename:int	file:
debug_init	t/debug.c	/^void debug_init(void)$/;"	f	typeref:typename:void
debug_init	t/debug.h	/^extern void debug_init(void);$/;"	p	typeref:typename:void
debug_level	debug.h	/^struct debug_level {$/;"	s
debug_levels	init.c	/^const struct debug_level debug_levels[] = {$/;"	v	typeref:typename:const struct debug_level[]
debug_print	tools/fio_jsonplus_clat2csv	/^def debug_print(debug, *args):$/;"	f
dedupe_check	t/dedupe.c	/^static int dedupe_check(const char *filename, uint64_t *nextents,$/;"	f	typeref:typename:int	file:
dedupe_global	thread_options.h	/^	uint32_t dedupe_global;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
dedupe_global	thread_options.h	/^	unsigned int dedupe_global;$/;"	m	struct:thread_options	typeref:typename:unsigned int
dedupe_mode	thread_options.h	/^	uint32_t dedupe_mode;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
dedupe_mode	thread_options.h	/^	unsigned int dedupe_mode;$/;"	m	struct:thread_options	typeref:typename:unsigned int
dedupe_mode	thread_options.h	/^enum dedupe_mode {$/;"	g
dedupe_percentage	thread_options.h	/^	uint32_t dedupe_percentage;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
dedupe_percentage	thread_options.h	/^	unsigned int dedupe_percentage;$/;"	m	struct:thread_options	typeref:typename:unsigned int
dedupe_state	fio.h	/^	struct frand_state dedupe_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
dedupe_working_set_index_state	fio.h	/^	struct frand_state dedupe_working_set_index_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
dedupe_working_set_percentage	thread_options.h	/^	uint32_t dedupe_working_set_percentage;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
dedupe_working_set_percentage	thread_options.h	/^	unsigned int dedupe_working_set_percentage;$/;"	m	struct:thread_options	typeref:typename:unsigned int
dedupe_working_set_states	fio.h	/^	struct frand_state *dedupe_working_set_states;$/;"	m	struct:thread_data	typeref:struct:frand_state *
def	blktrace.c	/^				 int nr_logs, int def, size_t off)$/;"	z	function:init_merge_param_list	typeref:typename:int	file:
def	parse.h	/^	const char *def;		\/* default setting *\/$/;"	m	struct:fio_option	typeref:typename:const char *
def_thread	init.c	/^static struct thread_data def_thread;$/;"	v	typeref:struct:thread_data	file:
deferred	iolog.h	/^	unsigned int deferred;$/;"	m	struct:io_log	typeref:typename:unsigned int
deferred_free_lock	iolog.h	/^	pthread_mutex_t deferred_free_lock;$/;"	m	struct:io_log	typeref:typename:pthread_mutex_t
deferred_items	iolog.h	/^	void *deferred_items[IOLOG_MAX_DEFER];$/;"	m	struct:io_log	typeref:typename:void * []
deferrno	engines/windowsaio.c	/^int geterrno_from_win_error (DWORD code, int deferrno);$/;"	z	prototype:geterrno_from_win_error	typeref:typename:int	file:
defval	ghelpers.c	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval)$/;"	z	function:create_spinbutton	typeref:typename:double	file:
defval	ghelpers.h	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval);$/;"	z	prototype:create_spinbutton	typeref:typename:double	file:
deinitialize_fio	fio.h	/^extern void deinitialize_fio(void);$/;"	p	typeref:typename:void
deinitialize_fio	libfio.c	/^void deinitialize_fio(void)$/;"	f	typeref:typename:void
del_opt_posval	options.c	/^void del_opt_posval(const char *optname, const char *ival)$/;"	f	typeref:typename:void
del_opt_posval	options.h	/^void del_opt_posval(const char *, const char *);$/;"	p	typeref:typename:void
delay	iolog.c	/^static void iolog_delay(struct thread_data *td, unsigned long delay)$/;"	z	function:iolog_delay	typeref:typename:unsigned long	file:
delay	iolog.h	/^	unsigned long delay;$/;"	m	struct:io_piece	typeref:typename:unsigned long
delay_since_ttime	iolog.c	/^unsigned long long delay_since_ttime(const struct thread_data *td,$/;"	f	typeref:typename:unsigned long long
delay_since_ttime	iolog.h	/^extern unsigned long long delay_since_ttime(const struct thread_data *,$/;"	p	typeref:typename:unsigned long long
delay_state	fio.h	/^	struct frand_state delay_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
delete_file	engines/filedelete.c	/^static int delete_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
delete_invalidate	engines/filedelete.c	/^static int delete_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
delim	oslib/strsep.c	/^char *strsep(char **stringp, const char *delim)$/;"	z	function:strsep	typeref:typename:const char *	file:
delta_nsec	t/time-test.c	/^			    int quiet, int delta_ticks, int delta_nsec)$/;"	z	function:test_clock	typeref:typename:int	file:
delta_nsec	t/time-test.c	/^static int discontinuity(int mode, int delta_ticks, int delta_nsec,$/;"	z	function:discontinuity	typeref:typename:int	file:
delta_ticks	t/time-test.c	/^			    int quiet, int delta_ticks, int delta_nsec)$/;"	z	function:test_clock	typeref:typename:int	file:
delta_ticks	t/time-test.c	/^static int discontinuity(int mode, int delta_ticks, int delta_nsec,$/;"	z	function:discontinuity	typeref:typename:int	file:
depth	backend.c	/^					unsigned int depth)$/;"	z	function:init_file_completion_logging	typeref:typename:unsigned int	file:
depth	blktrace.c	/^static void depth_dec(struct blk_io_trace *t, int *depth)$/;"	z	function:depth_dec	typeref:typename:int *	file:
depth	blktrace.c	/^static void depth_end(struct blk_io_trace *t, int *this_depth, int *depth)$/;"	z	function:depth_end	typeref:typename:int *	file:
depth	blktrace.c	/^static void depth_inc(struct blk_io_trace *t, int *depth)$/;"	z	function:depth_inc	typeref:typename:int *	file:
depth	engines/ime.c	/^	unsigned int depth;			\/* max entries in the queue *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
depth	lib/roundup.h	/^static inline unsigned roundup_pow2(unsigned depth)$/;"	z	function:roundup_pow2	typeref:typename:unsigned	file:
depth	t/btrace2fio.c	/^	unsigned int depth;$/;"	m	struct:btrace_out	typeref:typename:unsigned int	file:
depth	t/io_uring.c	/^static int depth = DEPTH;$/;"	v	typeref:typename:int	file:
depth	verify-state.h	/^	uint32_t depth;$/;"	m	struct:thread_io_list	typeref:typename:uint32_t
depth	verify-state.h	/^static inline size_t __thread_io_list_sz(uint32_t depth, uint32_t nofiles)$/;"	z	function:__thread_io_list_sz	typeref:typename:uint32_t	file:
depth_dec	blktrace.c	/^static void depth_dec(struct blk_io_trace *t, int *depth)$/;"	f	typeref:typename:void	file:
depth_diff	t/btrace2fio.c	/^static unsigned int depth_diff = 1;$/;"	v	typeref:typename:unsigned int	file:
depth_disabled	t/btrace2fio.c	/^	int depth_disabled;$/;"	m	struct:btrace_out	typeref:typename:int	file:
depth_end	blktrace.c	/^static void depth_end(struct blk_io_trace *t, int *this_depth, int *depth)$/;"	f	typeref:typename:void	file:
depth_inc	blktrace.c	/^static void depth_inc(struct blk_io_trace *t, int *depth)$/;"	f	typeref:typename:void	file:
desc	engines/mtd.c	/^static libmtd_t desc;$/;"	v	typeref:typename:libmtd_t	file:
desc	lib/pattern.h	/^	const struct pattern_fmt_desc *desc;$/;"	m	struct:pattern_fmt	typeref:typename:const struct pattern_fmt_desc *
desc	options.c	/^	const char *desc;$/;"	m	struct:fio_keyword	typeref:typename:const char *	file:
desc	oslib/libmtd.c	/^int mtd_dev_present(libmtd_t desc, int mtd_num) {$/;"	z	function:mtd_dev_present	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_erase	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info1	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info)$/;"	z	function:mtd_get_info	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_probe_node(libmtd_t desc, const char *node)$/;"	z	function:mtd_probe_node	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_read_oob	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_torture	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	function:mtd_write	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_write_oob	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^static int do_oob_op(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:do_oob_op	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.c	/^void libmtd_close(libmtd_t desc)$/;"	z	function:libmtd_close	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_dev_present(libmtd_t desc, int mtd_num);$/;"	z	prototype:mtd_dev_present	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_erase	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info1	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info);$/;"	z	prototype:mtd_get_info	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_probe_node(libmtd_t desc, const char *node);$/;"	z	prototype:mtd_probe_node	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_read_oob	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_torture	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	prototype:mtd_write	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_write_oob	typeref:typename:libmtd_t	file:
desc	oslib/libmtd.h	/^void libmtd_close(libmtd_t desc);$/;"	z	prototype:libmtd_close	typeref:typename:libmtd_t	file:
desc	profile.h	/^	char desc[64];$/;"	m	struct:profile_ops	typeref:typename:char[64]
description	stat.h	/^	char description[FIO_JOBDESC_SIZE];$/;"	m	struct:thread_stat	typeref:typename:char[]
description	thread_options.h	/^	char *description;$/;"	m	struct:thread_options	typeref:typename:char *
description	thread_options.h	/^	uint8_t description[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
descriptor	engines/librpma_fio.h	/^	char descriptor[LIBRPMA_FIO_DESCRIPTOR_MAX_SIZE];$/;"	m	struct:librpma_fio_workspace	typeref:typename:char[]
dest	engines/libhdfs.c	/^static int get_chunck_name(char *dest, char *file_name, uint64_t chunk_id) {$/;"	z	function:get_chunck_name	typeref:typename:char *	file:
destroy_attr	rwlock.c	/^destroy_attr:$/;"	L	function:fio_rwlock_init	file:
detect_first_core	t/one-core-peak.sh	/^detect_first_core() {$/;"	f
dev	engines/xnvme.c	/^	struct xnvme_dev *dev;$/;"	m	struct:xnvme_fioe_fwrap	typeref:struct:xnvme_dev *	file:
dev	gclient.c	/^			  unsigned long long max, double mean, double dev)$/;"	z	function:gfio_show_lat	typeref:typename:double	file:
dev	lib/gauss.c	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	function:gauss_init	typeref:typename:double	file:
dev	lib/gauss.h	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	prototype:gauss_init	typeref:typename:double	file:
dev	lib/mountcheck.c	/^int device_is_mounted(const char *dev)$/;"	z	function:device_is_mounted	typeref:typename:const char *	file:
dev	profiles/act.c	/^static int act_add_dev(const char *dev)$/;"	z	function:act_add_dev	typeref:typename:const char *	file:
dev	profiles/act.c	/^static int act_add_dev_prep(const char *dev)$/;"	z	function:act_add_dev_prep	typeref:typename:const char *	file:
dev	profiles/act.c	/^static int act_add_rw(const char *dev, int reads)$/;"	z	function:act_add_rw	typeref:typename:const char *	file:
dev	stat.c	/^			unsigned long long max, double mean, double dev,$/;"	z	function:display_lat	typeref:typename:double	file:
dev	stat.c	/^	      unsigned long long *max, double *mean, double *dev)$/;"	z	function:calc_lat	typeref:typename:double *	file:
dev	stat.h	/^				double *dev)$/;"	z	function:nsec_to_msec	typeref:typename:double *	file:
dev	stat.h	/^				double *dev)$/;"	z	function:nsec_to_usec	typeref:typename:double *	file:
dev	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	z	prototype:calc_lat	typeref:typename:double *	file:
dev-dax_LIBS	Makefile	/^  dev-dax_LIBS = -lpmem$/;"	m
dev-dax_SRCS	Makefile	/^  dev-dax_SRCS = engines\/dev-dax.c$/;"	m
dev_get_major	oslib/libmtd.c	/^static int dev_get_major(struct libmtd *lib, int mtd_num, int *major, int *minor)$/;"	f	typeref:typename:int	file:
dev_mem_ptr	fio.h	/^	CUdeviceptr dev_mem_ptr;$/;"	m	struct:thread_data	typeref:typename:CUdeviceptr
dev_node2num	oslib/libmtd.c	/^static int dev_node2num(struct libmtd *lib, const char *node, int *mtd_num)$/;"	f	typeref:typename:int	file:
dev_num	oslib/libmtd_int.h	/^int legacy_get_dev_info1(int dev_num, struct mtd_dev_info *mtd);$/;"	z	prototype:legacy_get_dev_info1	typeref:typename:int	file:
dev_read_data	oslib/libmtd.c	/^static int dev_read_data(const char *patt, int mtd_num, void *buf, int buf_len)$/;"	f	typeref:typename:int	file:
dev_read_hex_int	oslib/libmtd.c	/^static int dev_read_hex_int(const char *patt, int mtd_num, int *value)$/;"	f	typeref:typename:int	file:
dev_read_pos_int	oslib/libmtd.c	/^static int dev_read_pos_int(const char *patt, int mtd_num, int *value)$/;"	f	typeref:typename:int	file:
dev_read_pos_ll	oslib/libmtd.c	/^static int dev_read_pos_ll(const char *patt, int mtd_num, long long *value)$/;"	f	typeref:typename:int	file:
dev_size	t/dedupe.c	/^static int run_dedupe_threads(struct fio_file *f, uint64_t dev_size,$/;"	z	function:run_dedupe_threads	typeref:typename:uint64_t	file:
devdax_off	engines/dev-dax.c	/^	off_t devdax_off;$/;"	m	struct:fio_devdax_data	typeref:typename:off_t	file:
devdax_ptr	engines/dev-dax.c	/^	void *devdax_ptr;$/;"	m	struct:fio_devdax_data	typeref:typename:void *	file:
devdax_sz	engines/dev-dax.c	/^	size_t devdax_sz;$/;"	m	struct:fio_devdax_data	typeref:typename:size_t	file:
devhelp	doc/Makefile	/^devhelp:$/;"	t
deviation	steadystate.h	/^	double deviation;$/;"	m	struct:steadystate_data	typeref:typename:double
device	blktrace.c	/^static int trace_add_file(struct thread_data *td, __u32 device,$/;"	z	function:trace_add_file	typeref:typename:__u32	file:
device	blktrace_api.h	/^	__u32 device;		\/* device identifier (dev_t) *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
device	blktrace_api.h	/^	__u32 device;$/;"	m	struct:blk_io_trace_remap	typeref:typename:__u32
device_from	blktrace_api.h	/^	__u32 device_from;$/;"	m	struct:blk_io_trace_remap	typeref:typename:__u32
device_is_mounted	lib/mountcheck.c	/^int device_is_mounted(const char *dev)$/;"	f	typeref:typename:int
device_is_mounted	lib/mountcheck.h	/^extern int device_is_mounted(const char *);$/;"	p	typeref:typename:int
device_names	profiles/act.c	/^	char *device_names;$/;"	m	struct:act_options	typeref:typename:char *	file:
devno	t/btrace2fio.c	/^static int btrace_add_file(struct btrace_pid *p, uint32_t devno)$/;"	z	function:btrace_add_file	typeref:typename:uint32_t	file:
dfd	oslib/statx.c	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	function:statx	typeref:typename:int	file:
dfd	oslib/statx.h	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	prototype:statx	typeref:typename:int	file:
dfs	engines/dfs.c	/^dfs_t			*dfs; \/* dfs mount reference *\/$/;"	v	typeref:typename:dfs_t *
dfs_LIBS	Makefile	/^  dfs_LIBS = -luuid -ldaos -ldfs$/;"	m
dfs_SRCS	Makefile	/^  dfs_SRCS = engines\/dfs.c$/;"	m
dialog	gcompat.h	/^static inline GtkWidget *gtk_dialog_get_content_area(GtkDialog *dialog)$/;"	z	function:gtk_dialog_get_content_area	typeref:typename:GtkDialog *	file:
dialog	goptions.c	/^	GtkWidget *dialog;$/;"	m	struct:gopt_job_view	typeref:typename:GtkWidget *	file:
did_arg	init.c	/^static bool did_arg;$/;"	v	typeref:typename:bool	file:
did_stat	client.h	/^	bool did_stat;$/;"	m	struct:fio_client	typeref:typename:bool
digest_sz	crc/sha3.c	/^static void fio_sha3_init(struct fio_sha3_ctx *sctx, unsigned int digest_sz)$/;"	z	function:fio_sha3_init	typeref:typename:unsigned int	file:
dir	profiles/tiobench.c	/^	char *dir;$/;"	m	struct:tiobench_options	typeref:typename:char *	file:
dir	profiles/tiobench.c	/^static char *dir;$/;"	v	typeref:typename:char *	file:
dir_idx	profiles/tiobench.c	/^static char sz_idx[80], bs_idx[80], loop_idx[80], dir_idx[80], t_idx[80];$/;"	v	typeref:typename:char[80]	file:
dir_map	tools/hist/fiologparser_hist.py	/^dir_map = ['r', 'w', 't']  # map of directional value in log to textual representation$/;"	v
direct_write_to_pmem	engines/librpma_fio.h	/^	uint8_t direct_write_to_pmem; \/* Direct Write to PMem is possible *\/$/;"	m	struct:librpma_fio_workspace	typeref:typename:uint8_t
direct_write_to_pmem	engines/librpma_fio.h	/^	unsigned int direct_write_to_pmem;$/;"	m	struct:librpma_fio_options_values	typeref:typename:unsigned int
directio	os/os-solaris.h	/^extern int directio(int, int);$/;"	p	typeref:typename:int
direction_read	tools/hist/fio-histo-log-pctiles.py	/^direction_read = 0$/;"	v
direction_write	tools/hist/fio-histo-log-pctiles.py	/^direction_write = 1$/;"	v
directory	engines/libhdfs.c	/^	char *directory;$/;"	m	struct:hdfsio_options	typeref:typename:char *	file:
directory	thread_options.h	/^	char *directory;$/;"	m	struct:thread_options	typeref:typename:char *
directory	thread_options.h	/^	uint8_t directory[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
dirent	os/windows/posix/include/dirent.h	/^struct dirent$/;"	s
dirent_ctx	os/windows/posix/include/dirent.h	/^struct dirent_ctx$/;"	s
dirhtml	doc/Makefile	/^dirhtml:$/;"	t
dirname	filesetup.c	/^static bool recurse_dir(struct thread_data *td, const char *dirname)$/;"	z	function:recurse_dir	typeref:typename:const char *	file:
dirname	os/windows/posix.c	/^DIR *opendir(const char *dirname)$/;"	z	function:opendir	typeref:typename:const char *	file:
dirname	os/windows/posix/include/dirent.h	/^	char dirname[MAX_PATH];$/;"	m	struct:dirent_ctx	typeref:typename:char[]
dirname	os/windows/posix/include/dirent.h	/^DIR *opendir(const char *dirname);$/;"	z	prototype:opendir	typeref:typename:const char *	file:
dirp	os/windows/posix.c	/^int closedir(DIR *dirp)$/;"	z	function:closedir	typeref:typename:DIR *	file:
dirp	os/windows/posix.c	/^struct dirent *readdir(DIR *dirp)$/;"	z	function:readdir	typeref:typename:DIR *	file:
dirp	os/windows/posix/include/dirent.h	/^int closedir(DIR *dirp);$/;"	z	prototype:closedir	typeref:typename:DIR *	file:
dirp	os/windows/posix/include/dirent.h	/^struct dirent *readdir(DIR *dirp);$/;"	z	prototype:readdir	typeref:typename:DIR *	file:
disable	stat.c	/^disable:$/;"	L	function:regrow_log	file:
disable_bw	thread_options.h	/^	uint32_t disable_bw;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
disable_bw	thread_options.h	/^	unsigned int disable_bw;$/;"	m	struct:thread_options	typeref:typename:unsigned int
disable_clat	thread_options.h	/^	uint32_t disable_clat;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
disable_clat	thread_options.h	/^	unsigned int disable_clat;$/;"	m	struct:thread_options	typeref:typename:unsigned int
disable_hash	lib/gauss.h	/^	bool disable_hash;$/;"	m	struct:gauss_state	typeref:typename:bool
disable_hash	lib/zipf.h	/^	bool disable_hash;$/;"	m	struct:zipf_state	typeref:typename:bool
disable_lat	thread_options.h	/^	uint32_t disable_lat;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
disable_lat	thread_options.h	/^	unsigned int disable_lat;$/;"	m	struct:thread_options	typeref:typename:unsigned int
disable_prio_stat	stat.h	/^	uint32_t disable_prio_stat;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
disable_slat	thread_options.h	/^	uint32_t disable_slat;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
disable_slat	thread_options.h	/^	unsigned int disable_slat;$/;"	m	struct:thread_options	typeref:typename:unsigned int
disabled	iolog.h	/^	bool disabled;$/;"	m	struct:io_log	typeref:typename:bool
discard_pdu	blktrace.c	/^static int discard_pdu(FILE* f, struct blk_io_trace *t)$/;"	f	typeref:typename:int	file:
discard_pdu	t/btrace2fio.c	/^static int discard_pdu(struct fifo *fifo, int fd, struct blk_io_trace *t)$/;"	f	typeref:typename:int	file:
discontinuity	t/time-test.c	/^static int discontinuity(int mode, int delta_ticks, int delta_nsec,$/;"	f	typeref:typename:int	file:
disk_stats_shown	client.h	/^	bool disk_stats_shown;$/;"	m	struct:fio_client	typeref:typename:bool
disk_util	client.h	/^	client_cmd_op		*disk_util;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
disk_util	diskutil.h	/^struct disk_util {$/;"	s
disk_util_add	diskutil.c	/^static struct disk_util *disk_util_add(struct thread_data *td, int majdev,$/;"	f	typeref:struct:disk_util *	file:
disk_util_agg	diskutil.h	/^struct disk_util_agg {$/;"	s
disk_util_dec	diskutil.h	/^static inline void disk_util_dec(struct disk_util *du)$/;"	f	typeref:typename:void
disk_util_destroy	gclient.c	/^static void disk_util_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
disk_util_exists	diskutil.c	/^static struct disk_util *disk_util_exists(int major, int minor)$/;"	f	typeref:struct:disk_util *	file:
disk_util_free	diskutil.c	/^static void disk_util_free(struct disk_util *du)$/;"	f	typeref:typename:void	file:
disk_util_inc	diskutil.h	/^static inline void disk_util_inc(struct disk_util *du)$/;"	f	typeref:typename:void
disk_util_mod	diskutil.h	/^static inline void disk_util_mod(struct disk_util *du, int val)$/;"	f	typeref:typename:void
disk_util_prune_entries	diskutil.c	/^void disk_util_prune_entries(void)$/;"	f	typeref:typename:void
disk_util_prune_entries	diskutil.h	/^#define disk_util_prune_entries(/;"	d
disk_util_prune_entries	diskutil.h	/^extern void disk_util_prune_entries(void);$/;"	p	typeref:typename:void
disk_util_sem	diskutil.c	/^static struct fio_sem *disk_util_sem;$/;"	v	typeref:struct:fio_sem *	file:
disk_util_stat	diskutil.h	/^struct disk_util_stat {$/;"	s
disk_util_stats	diskutil.h	/^struct disk_util_stats {$/;"	s
disk_util_vbox	gfio.h	/^	GtkWidget *disk_util_vbox;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
diskname_to_printable	tools/genfio	/^diskname_to_printable() {$/;"	f
display_lat	stat.c	/^static void display_lat(const char *name, unsigned long long min,$/;"	f	typeref:typename:void	file:
display_thread_status	eta.c	/^void display_thread_status(struct jobs_eta *je)$/;"	f	typeref:typename:void
display_thread_status	stat.h	/^extern void display_thread_status(struct jobs_eta *je);$/;"	p	typeref:typename:void
dist	parse.h	/^extern int string_distance_ok(const char *s1, int dist);$/;"	z	prototype:string_distance_ok	typeref:typename:int	file:
dist_type	t/genzipf.c	/^static int dist_type = TYPE_ZIPF;$/;"	v	typeref:typename:int	file:
dist_types	t/genzipf.c	/^static const char *dist_types[] = { "None", "Zipf", "Pareto", "Normal" };$/;"	v	typeref:typename:const char * []	file:
dist_val	t/genzipf.c	/^static double dist_val;$/;"	v	typeref:typename:double	file:
distance	parse.c	/^int string_distance_ok(const char *opt, int distance)$/;"	z	function:string_distance_ok	typeref:typename:int	file:
distclean	Makefile	/^distclean: clean FORCE$/;"	t
dl_error	os/windows/posix.c	/^char *dl_error = NULL;$/;"	v	typeref:typename:char *
dlclose	os/windows/posix.c	/^int dlclose(void *handle)$/;"	f	typeref:typename:int
dlclose	os/windows/posix/include/dlfcn.h	/^int dlclose(void *handle);$/;"	p	typeref:typename:int
dlerror	os/windows/posix.c	/^char *dlerror(void)$/;"	f	typeref:typename:char *
dlerror	os/windows/posix/include/dlfcn.h	/^char *dlerror(void);$/;"	p	typeref:typename:char *
dlhandle	ioengines.h	/^	void *dlhandle;$/;"	m	struct:ioengine_ops	typeref:typename:void *
dlopen	os/windows/posix.c	/^void *dlopen(const char *file, int mode)$/;"	f	typeref:typename:void *
dlopen	os/windows/posix/include/dlfcn.h	/^void *dlopen(const char *file, int mode);$/;"	p	typeref:typename:void *
dlopen_external	ioengines.c	/^#define dlopen_external(/;"	d	file:
dlopen_external	ioengines.c	/^static void *dlopen_external(struct thread_data *td, const char *engine)$/;"	f	typeref:typename:void *	file:
dlopen_ioengine	ioengines.c	/^static struct ioengine_ops *dlopen_ioengine(struct thread_data *td,$/;"	f	typeref:struct:ioengine_ops *	file:
dlsym	os/windows/posix.c	/^void *dlsym(void *handle, const char *name)$/;"	f	typeref:typename:void *
dlsym	os/windows/posix/include/dlfcn.h	/^void *dlsym(void *restrict handle, const char *restrict name);$/;"	p	typeref:typename:void *
dma_map	t/io_uring.c	/^static int dma_map;		\/* pre-map DMA buffers *\/$/;"	v	typeref:typename:int	file:
do_action	lex.yy.c	/^do_action:	\/* This label is used only to access EOF actions. *\/$/;"	L	file:
do_append	iolog.c	/^void flush_log(struct io_log *log, bool do_append)$/;"	z	function:flush_log	typeref:typename:bool	file:
do_cc	configure	/^do_cc() {$/;"	f
do_cpuid	arch/arch-x86.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	f	typeref:typename:void
do_cpuid	arch/arch-x86_64.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	f	typeref:typename:void
do_disk_util	thread_options.h	/^	uint32_t do_disk_util;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
do_disk_util	thread_options.h	/^	unsigned int do_disk_util;$/;"	m	struct:thread_options	typeref:typename:unsigned int
do_div	t/time-test.c	/^static void do_div(unsigned long long a[2], unsigned long long b,$/;"	f	typeref:typename:void	file:
do_dry_run	backend.c	/^static uint64_t do_dry_run(struct thread_data *td)$/;"	f	typeref:typename:uint64_t	file:
do_exit	idletime.c	/^do_exit:$/;"	L	function:idle_prof_thread_fn	file:
do_file_open	gfio.c	/^static int do_file_open(struct gui_entry *ge, const gchar *uri)$/;"	f	typeref:typename:int	file:
do_file_open_with_tab	gfio.c	/^static int do_file_open_with_tab(struct gui *ui, const gchar *uri)$/;"	f	typeref:typename:int	file:
do_finish	t/io_uring.c	/^static void do_finish(const char *reason)$/;"	f	typeref:typename:void	file:
do_io	backend.c	/^static void do_io(struct thread_data *td, uint64_t *bytes_done)$/;"	f	typeref:typename:void	file:
do_io_u_sync	io_u.c	/^int do_io_u_sync(const struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
do_io_u_sync	io_u.h	/^int do_io_u_sync(const struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int
do_io_u_trim	io_u.c	/^int do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
do_io_u_trim	io_u.h	/^int do_io_u_trim(const struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int
do_mount	engines/nfs.c	/^static int do_mount(struct thread_data *td, const char *url)$/;"	f	typeref:typename:int	file:
do_mult	t/time-test.c	/^static void do_mult(unsigned long long a[2], unsigned long long b,$/;"	f	typeref:typename:void	file:
do_nop	t/io_uring.c	/^static int do_nop = 0;		\/* no-op SQ ring commands *\/$/;"	v	typeref:typename:int	file:
do_not_strip_quotes	y.tab.c	/^    do_not_strip_quotes: ;$/;"	L	function:yytnamerr	file:
do_oob_op	oslib/libmtd.c	/^static int do_oob_op(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	f	typeref:typename:int	file:
do_qsort	engines/cpu.c	/^static int do_qsort(struct thread_data *td)$/;"	f	typeref:typename:int	file:
do_rand_allocs	t/stest.c	/^static int do_rand_allocs(void)$/;"	f	typeref:typename:int	file:
do_shift	t/time-test.c	/^static void do_shift(unsigned long long a[2], unsigned int count)$/;"	f	typeref:typename:void	file:
do_shift64	t/time-test.c	/^static void do_shift64(unsigned long long a[2], unsigned int count)$/;"	f	typeref:typename:void	file:
do_sync	engines/sg.c	/^					  struct io_u *io_u, int do_sync)$/;"	z	function:fio_sgio_rw_doio	typeref:typename:int	file:
do_sync	engines/sg.c	/^				       struct io_u *io_u, int do_sync)$/;"	z	function:fio_sgio_doio	typeref:typename:int	file:
do_sync_file_range	io_u.c	/^static int do_sync_file_range(const struct thread_data *td,$/;"	f	typeref:typename:int	file:
do_test	lib/memcpy.c	/^#define do_test(/;"	d	file:
do_usleep	backend.c	/^static void do_usleep(unsigned int usecs)$/;"	f	typeref:typename:void	file:
do_verify	backend.c	/^static void do_verify(struct thread_data *td, uint64_t verify_bytes)$/;"	f	typeref:typename:void	file:
do_verify	thread_options.h	/^	uint32_t do_verify;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
do_verify	thread_options.h	/^	unsigned int do_verify;$/;"	m	struct:thread_options	typeref:typename:unsigned int
do_work	t/dedupe.c	/^static int do_work(struct worker_thread *thread, void *buf)$/;"	f	typeref:typename:int	file:
doc	Makefile	/^doc: tools\/plot\/fio2gnuplot.1$/;"	t
doctest	doc/Makefile	/^doctest:$/;"	t
done	engines/dev-dax.c	/^done:$/;"	L	function:fio_devdax_prep	file:
done	engines/mmap.c	/^done:$/;"	L	function:fio_mmapio_prep	file:
done	filesetup.c	/^done:$/;"	L	function:extend_file	file:
done	filesetup.c	/^done:$/;"	L	function:setup_files	file:
done	fio.c	/^done:$/;"	L	function:main	file:
done	fio.h	/^	int done;$/;"	m	struct:thread_data	typeref:typename:int
done	goptions.c	/^done:$/;"	L	function:gopt_handle_changed_options	file:
done	ioengines.c	/^done:$/;"	L	function:td_io_open_file	file:
done	iolog.c	/^done:$/;"	L	function:gz_work	file:
done	lib/num2str.c	/^done:$/;"	L	function:num2str	file:
done	log.c	/^done:$/;"	L	function:log_err	file:
done	t/dedupe.c	/^	volatile int done;$/;"	m	struct:worker_thread	typeref:typename:volatile int	file:
done	t/io_uring.c	/^	unsigned long done;$/;"	m	struct:submitter	typeref:typename:unsigned long	file:
done	t/read-to-pipe-async.c	/^	int done;$/;"	m	struct:thread_data	typeref:typename:int	file:
done	verify.c	/^done:$/;"	L	function:verify_async_thread	file:
done	verify.c	/^done:$/;"	L	function:verify_io_u	file:
done	workqueue.c	/^done:$/;"	L	function:worker_thread	file:
done_cond	t/read-to-pipe-async.c	/^	pthread_cond_t done_cond;$/;"	m	struct:thread_data	typeref:typename:pthread_cond_t	file:
done_key	fio.c	/^done_key:$/;"	L	function:main	file:
done_list	t/read-to-pipe-async.c	/^	struct flist_head done_list;$/;"	m	struct:reader_thread	typeref:struct:flist_head	file:
done_list	t/read-to-pipe-async.c	/^	struct flist_head done_list;$/;"	m	struct:writer_thread	typeref:struct:flist_head	file:
done_lock	t/read-to-pipe-async.c	/^	pthread_mutex_t done_lock;$/;"	m	struct:thread_data	typeref:typename:pthread_mutex_t	file:
done_secs	backend.c	/^unsigned long done_secs = 0;$/;"	v	typeref:typename:unsigned long
donor_fd	engines/e4defrag.c	/^	__u32 donor_fd;         \/* donor file descriptor *\/$/;"	m	struct:move_extent	typeref:typename:__u32	file:
donor_fd	engines/e4defrag.c	/^	int donor_fd;$/;"	m	struct:e4defrag_data	typeref:typename:int	file:
donor_name	engines/e4defrag.c	/^	char * donor_name;$/;"	m	struct:e4defrag_options	typeref:typename:char *	file:
donor_start	engines/e4defrag.c	/^	__u64 donor_start;      \/* logical start offset in block for donor *\/$/;"	m	struct:move_extent	typeref:typename:__u64	file:
dont_graph_all_zeroes	graph.c	/^	unsigned int dont_graph_all_zeroes;$/;"	m	struct:graph	typeref:typename:unsigned int	file:
dosTime	os/windows/posix.c	/^void Time_tToSystemTime(time_t dosTime, SYSTEMTIME *systemTime)$/;"	z	function:Time_tToSystemTime	typeref:typename:time_t	file:
double_cmp	stat.c	/^static int double_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
double_comparator	graph.c	/^typedef double (*double_comparator)(double a, double b);$/;"	t	typeref:typename:double (*)(double a,double b)	file:
dprint	debug.h	/^#define dprint(/;"	d
dprint	debug.h	/^static inline void dprint(int type, const char *str, ...)$/;"	f	typeref:typename:void
dprint_io_u	io_u.h	/^#define dprint_io_u(/;"	d
dprint_io_u	io_u.h	/^static inline void dprint_io_u(struct io_u *io_u, const char *p)$/;"	f	typeref:typename:void
dprintf	t/time-test.c	/^#define dprintf(/;"	d	file:
drag_and_drop_received	gfio.c	/^static void drag_and_drop_received(GtkWidget *widget, GdkDragContext *ctx,$/;"	f	typeref:typename:void	file:
draw_aligned_text	cairo_text_helpers.c	/^static void draw_aligned_text(cairo_t *cr, const char *font, double x, double y,$/;"	f	typeref:typename:void	file:
draw_bars	graph.c	/^static void draw_bars(struct graph *bg, cairo_t *cr, struct graph_label *lb,$/;"	f	typeref:typename:void	file:
draw_centered_text	cairo_text_helpers.c	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	f	typeref:typename:void
draw_centered_text	cairo_text_helpers.h	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	p	typeref:typename:void
draw_graph	gfio.c	/^static void draw_graph(struct graph *g, cairo_t *cr)$/;"	f	typeref:typename:void	file:
draw_left_justified_text	cairo_text_helpers.c	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	f	typeref:typename:void
draw_left_justified_text	cairo_text_helpers.h	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	p	typeref:typename:void
draw_right_justified_text	cairo_text_helpers.c	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	f	typeref:typename:void
draw_right_justified_text	cairo_text_helpers.h	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	p	typeref:typename:void
draw_vertical_centered_text	cairo_text_helpers.c	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	f	typeref:typename:void
draw_vertical_centered_text	cairo_text_helpers.h	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	p	typeref:typename:void
drawing_area	gfio.h	/^	GtkWidget *drawing_area;$/;"	m	struct:gfio_graphs	typeref:typename:GtkWidget *
dresult	lex.yy.c	/^extern int yyerror(long long *result, double *dresult,$/;"	z	prototype:yyerror	typeref:typename:double *	file:
dresult	y.tab.c	/^		__attribute__((unused)) double *dresult,$/;"	z	function:yyerror	typeref:typename:double *	file:
dresult	y.tab.c	/^		__attribute__((unused)) double *dresult,$/;"	z	prototype:yyerror	typeref:typename:double *	file:
dresult	y.tab.c	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:double *	file:
dresult	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:double *	file:
dresult	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:double *	file:
dresult	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:double *	file:
dresult	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:double *	file:
dresult	y.tab.c	/^yyparse (long long *result, double *dresult, int *has_error, int *units_specified)$/;"	z	function:yyparse	typeref:typename:double *	file:
dresult	y.tab.h	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:double *	file:
drop_io_u	stat.h	/^	uint64_t drop_io_u[DDIR_RWDIR_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
dropped	os/linux/io_uring.h	/^	__u32 dropped;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
dsize	oslib/strlcat.c	/^strlcat(char *dst, const char *src, size_t dsize)$/;"	z	function:strlcat	typeref:typename:size_t	file:
dsize	oslib/strlcat.h	/^size_t strlcat(char *dst, const char *src, size_t dsize);$/;"	z	prototype:strlcat	typeref:typename:size_t	file:
dst	cconv.c	/^static void __string_to_net(uint8_t *dst, const char *src, size_t dst_size)$/;"	z	function:__string_to_net	typeref:typename:uint8_t *	file:
dst	cconv.c	/^static void string_to_cpu(char **dst, const uint8_t *src)$/;"	z	function:string_to_cpu	typeref:typename:char **	file:
dst	client.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:convert_gs	typeref:struct:group_run_stats *	file:
dst	client.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	z	function:convert_io_stat	typeref:struct:io_stat *	file:
dst	client.c	/^static void convert_ts(struct thread_stat *dst, struct thread_stat *src)$/;"	z	function:convert_ts	typeref:struct:thread_stat *	file:
dst	client.c	/^void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je)$/;"	z	function:fio_client_sum_jobs_eta	typeref:struct:jobs_eta *	file:
dst	client.h	/^extern void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je);$/;"	z	prototype:fio_client_sum_jobs_eta	typeref:struct:jobs_eta *	file:
dst	engines/net.c	/^			 void *dst, struct addrinfo **res)$/;"	z	function:fio_fill_addr	typeref:typename:void *	file:
dst	init.c	/^static void copy_opt_list(struct thread_data *dst, struct thread_data *src)$/;"	z	function:copy_opt_list	typeref:struct:thread_data *	file:
dst	lib/memcpy.c	/^	void *dst;$/;"	m	struct:memcpy_test	typeref:typename:void *	file:
dst	lib/memcpy.c	/^static void simple_memcpy(void *dst, void const *src, size_t len)$/;"	z	function:simple_memcpy	typeref:typename:void *	file:
dst	lib/rand.h	/^static inline void __frand32_copy(struct taus88_state *dst,$/;"	z	function:__frand32_copy	typeref:struct:taus88_state *	file:
dst	lib/rand.h	/^static inline void __frand64_copy(struct taus258_state *dst,$/;"	z	function:__frand64_copy	typeref:struct:taus258_state *	file:
dst	lib/rand.h	/^static inline void frand_copy(struct frand_state *dst, struct frand_state *src)$/;"	z	function:frand_copy	typeref:struct:frand_state *	file:
dst	oslib/strlcat.c	/^strlcat(char *dst, const char *src, size_t dsize)$/;"	z	function:strlcat	typeref:typename:char *	file:
dst	oslib/strlcat.h	/^size_t strlcat(char *dst, const char *src, size_t dsize);$/;"	z	prototype:strlcat	typeref:typename:char *	file:
dst	rate-submit.c	/^static void sum_ddir(struct thread_data *dst, struct thread_data *src,$/;"	z	function:sum_ddir	typeref:struct:thread_data *	file:
dst	rate-submit.c	/^static void sum_val(uint64_t *dst, uint64_t *src)$/;"	z	function:sum_val	typeref:typename:uint64_t *	file:
dst	server.c	/^static void convert_agg(struct disk_util_agg *dst, struct disk_util_agg *src)$/;"	z	function:convert_agg	typeref:struct:disk_util_agg *	file:
dst	server.c	/^static void convert_dus(struct disk_util_stat *dst, struct disk_util_stat *src)$/;"	z	function:convert_dus	typeref:struct:disk_util_stat *	file:
dst	server.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:convert_gs	typeref:struct:group_run_stats *	file:
dst	server.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	z	function:convert_io_stat	typeref:struct:io_stat *	file:
dst	stat.c	/^static int alloc_or_get_clat_prio_index(struct thread_stat *dst,$/;"	z	function:alloc_or_get_clat_prio_index	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int clat_prio_stat_add_samples(struct thread_stat *dst,$/;"	z	function:clat_prio_stat_add_samples	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int clat_prio_stats_copy(struct thread_stat *dst, struct thread_stat *src,$/;"	z	function:clat_prio_stats_copy	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int find_clat_prio_index(struct thread_stat *dst, enum fio_ddir ddir,$/;"	z	function:find_clat_prio_index	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int grow_clat_prio_stat(struct thread_stat *dst, enum fio_ddir ddir)$/;"	z	function:grow_clat_prio_stat	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int sum_clat_prio_stats(struct thread_stat *dst, struct thread_stat *src,$/;"	z	function:sum_clat_prio_stats	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int sum_clat_prio_stats_src_multi_prio(struct thread_stat *dst,$/;"	z	function:sum_clat_prio_stats_src_multi_prio	typeref:struct:thread_stat *	file:
dst	stat.c	/^static int sum_clat_prio_stats_src_single_prio(struct thread_stat *dst,$/;"	z	function:sum_clat_prio_stats_src_single_prio	typeref:struct:thread_stat *	file:
dst	stat.c	/^static void __sum_stat(struct io_stat *dst, struct io_stat *src, bool first)$/;"	z	function:__sum_stat	typeref:struct:io_stat *	file:
dst	stat.c	/^static void stat_calc_lat(struct thread_stat *ts, double *dst,$/;"	z	function:stat_calc_lat	typeref:typename:double *	file:
dst	stat.c	/^static void sum_stat(struct io_stat *dst, struct io_stat *src, bool pure_sum)$/;"	z	function:sum_stat	typeref:struct:io_stat *	file:
dst	stat.c	/^void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:sum_group_stats	typeref:struct:group_run_stats *	file:
dst	stat.c	/^void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src)$/;"	z	function:sum_thread_stats	typeref:struct:thread_stat *	file:
dst	stat.h	/^extern void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src);$/;"	z	prototype:sum_group_stats	typeref:struct:group_run_stats *	file:
dst	stat.h	/^extern void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src);$/;"	z	prototype:sum_thread_stats	typeref:struct:thread_stat *	file:
dst_ddir	stat.c	/^					       enum fio_ddir dst_ddir,$/;"	z	function:sum_clat_prio_stats_src_single_prio	typeref:enum:fio_ddir	file:
dst_ddir	stat.c	/^					      enum fio_ddir dst_ddir,$/;"	z	function:sum_clat_prio_stats_src_multi_prio	typeref:enum:fio_ddir	file:
dst_ddir	stat.c	/^				      enum fio_ddir dst_ddir, uint32_t ioprio,$/;"	z	function:clat_prio_stat_add_samples	typeref:enum:fio_ddir	file:
dst_ddir	stat.c	/^				enum fio_ddir dst_ddir, enum fio_ddir src_ddir)$/;"	z	function:clat_prio_stats_copy	typeref:enum:fio_ddir	file:
dst_ddir	stat.c	/^			       enum fio_ddir dst_ddir, enum fio_ddir src_ddir)$/;"	z	function:sum_clat_prio_stats	typeref:enum:fio_ddir	file:
dst_size	cconv.c	/^static void __string_to_net(uint8_t *dst, const char *src, size_t dst_size)$/;"	z	function:__string_to_net	typeref:typename:size_t	file:
du	diskutil.c	/^static int get_io_ticks(struct disk_util *du, struct disk_util_stat *dus)$/;"	z	function:get_io_ticks	typeref:struct:disk_util *	file:
du	diskutil.c	/^static void disk_util_free(struct disk_util *du)$/;"	z	function:disk_util_free	typeref:struct:disk_util *	file:
du	diskutil.c	/^static void update_io_tick_disk(struct disk_util *du)$/;"	z	function:update_io_tick_disk	typeref:struct:disk_util *	file:
du	diskutil.h	/^static inline void disk_util_dec(struct disk_util *du)$/;"	z	function:disk_util_dec	typeref:struct:disk_util *	file:
du	diskutil.h	/^static inline void disk_util_inc(struct disk_util *du)$/;"	z	function:disk_util_inc	typeref:struct:disk_util *	file:
du	diskutil.h	/^static inline void disk_util_mod(struct disk_util *du, int val)$/;"	z	function:disk_util_mod	typeref:struct:disk_util *	file:
du	file.h	/^	struct disk_util *du;$/;"	m	struct:fio_file	typeref:struct:disk_util *
du	gfio.h	/^	struct cmd_du_pdu *du;$/;"	m	struct:gfio_client	typeref:struct:cmd_du_pdu *
du_array	client.c	/^static struct json_array *du_array = NULL;$/;"	v	typeref:struct:json_array *	file:
dummy	doc/Makefile	/^dummy:$/;"	t
dummy	engines/skeleton_external.c	/^	unsigned int dummy;$/;"	m	struct:fio_skeleton_options	typeref:typename:unsigned int	file:
dump_buf	verify.c	/^static void dump_buf(char *buf, unsigned int len, unsigned long long offset,$/;"	f	typeref:typename:void	file:
dump_cmdline	init.c	/^static bool dump_cmdline;$/;"	v	typeref:typename:bool	file:
dump_list	parse.c	/^			     struct flist_head *dump_list, const char *post)$/;"	z	function:add_to_dump_list	typeref:struct:flist_head *	file:
dump_list	parse.c	/^		     struct flist_head *dump_list)$/;"	z	function:parse_cmd_option	typeref:struct:flist_head *	file:
dump_list	parse.c	/^		 struct flist_head *dump_list)$/;"	z	function:parse_option	typeref:struct:flist_head *	file:
dump_opt_list	init.c	/^static void dump_opt_list(struct thread_data *td)$/;"	f	typeref:typename:void	file:
dump_output	t/dedupe.c	/^static unsigned int dump_output;$/;"	v	typeref:typename:unsigned int	file:
dump_print_option	init.c	/^static void dump_print_option(struct print_option *p)$/;"	f	typeref:typename:void	file:
dump_trace	blktrace.c	/^static void dump_trace(struct blk_io_trace *t)$/;"	f	typeref:typename:void	file:
dump_verify_buffers	verify.c	/^static void dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:void	file:
dup_and_sub_options	options.c	/^static char **dup_and_sub_options(char **opts, int num_opts)$/;"	f	typeref:typename:char **	file:
dup_files	file.h	/^extern void dup_files(struct thread_data *, struct thread_data *);$/;"	p	typeref:typename:void
dup_files	filesetup.c	/^void dup_files(struct thread_data *td, struct thread_data *org)$/;"	f	typeref:typename:void
dup_pattern	lib/pattern.c	/^static int dup_pattern(char *out, unsigned int out_len, unsigned int pattern_len)$/;"	f	typeref:typename:int	file:
dupes	t/dedupe.c	/^	unsigned long dupes;$/;"	m	struct:worker_thread	typeref:typename:unsigned long	file:
dur	steadystate.h	/^	unsigned long long dur;$/;"	m	struct:steadystate_data	typeref:typename:unsigned long long
dus	client.c	/^static void convert_dus(struct disk_util_stat *dus)$/;"	z	function:convert_dus	typeref:struct:disk_util_stat *	file:
dus	diskutil.c	/^static int get_io_ticks(struct disk_util *du, struct disk_util_stat *dus)$/;"	z	function:get_io_ticks	typeref:struct:disk_util_stat *	file:
dus	diskutil.h	/^	struct disk_util_stat dus;$/;"	m	struct:disk_util	typeref:struct:disk_util_stat
dus	server.h	/^	struct disk_util_stat dus;$/;"	m	struct:cmd_du_pdu	typeref:struct:disk_util_stat
dus	stat.c	/^void json_array_add_disk_util(struct disk_util_stat *dus,$/;"	z	function:json_array_add_disk_util	typeref:struct:disk_util_stat *	file:
dus	stat.c	/^void print_disk_util(struct disk_util_stat *dus, struct disk_util_agg *agg,$/;"	z	function:print_disk_util	typeref:struct:disk_util_stat *	file:
dus	stat.h	/^extern void json_array_add_disk_util(struct disk_util_stat *dus,$/;"	z	prototype:json_array_add_disk_util	typeref:struct:disk_util_stat *	file:
dval	exp/test-expression-parser.c	/^					  double *dval, double implied_units, int is_time);$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:double *	file:
dval	lex.yy.c	/^			double dval;$/;"	v	typeref:typename:double
dval	parse.c	/^					  double *dval, double implied_units,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:double *	file:
dval	y.tab.c	/^		double dval;$/;"	m	struct:valtype::parser_value_type	typeref:typename:double	file:
dval	y.tab.c	/^	double dval;$/;"	m	struct:parser_value_type	typeref:typename:double	file:
dval	y.tab.c	/^int evaluate_arithmetic_expression(const char *buffer, long long *ival, double *dval,$/;"	z	function:evaluate_arithmetic_expression	typeref:typename:double *	file:
dval	y.tab.h	/^		double dval;$/;"	m	struct:valtype::parser_value_type	typeref:typename:double
e	gettime.c	/^int64_t rel_time_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:rel_time_since	typeref:typename:const struct timespec *	file:
e	gettime.c	/^uint64_t mtime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:mtime_since	typeref:typename:const struct timespec *	file:
e	gettime.c	/^uint64_t mtime_since_tv(const struct timeval *s, const struct timeval *e)$/;"	z	function:mtime_since_tv	typeref:typename:const struct timeval *	file:
e	gettime.c	/^uint64_t ntime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:ntime_since	typeref:typename:const struct timespec *	file:
e	gettime.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:utime_since	typeref:typename:const struct timespec *	file:
e	t/read-to-pipe-async.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:utime_since	typeref:typename:const struct timespec *	file:
e0	crc/sha256.c	/^#define e0(/;"	d	file:
e0	crc/sha512.c	/^#define e0(/;"	d	file:
e1	crc/sha256.c	/^#define e1(/;"	d	file:
e1	crc/sha512.c	/^#define e1(/;"	d	file:
e4defrag_data	engines/e4defrag.c	/^struct e4defrag_data {$/;"	s	file:
e4defrag_options	engines/e4defrag.c	/^struct e4defrag_options {$/;"	s	file:
eax	arch/arch-x86-common.h	/^			 unsigned int *eax, unsigned int *ebx,$/;"	z	function:cpuid	typeref:typename:unsigned int *	file:
eax	arch/arch-x86.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
eax	arch/arch-x86_64.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
eb	engines/mtd.c	/^				  struct io_u *io_u, int eb)$/;"	z	function:fio_mtd_maybe_mark_bad	typeref:typename:int	file:
eb	engines/mtd.c	/^			  struct io_u *io_u, int eb)$/;"	z	function:fio_mtd_is_bad	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_erase	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_bad	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_locked	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_lock	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_mark_bad	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_read	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_torture	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_unlock	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	function:mtd_write	typeref:typename:int	file:
eb	oslib/libmtd.c	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_write_img	typeref:typename:int	file:
eb	oslib/libmtd.c	/^static inline int mtd_ioctl_error(const struct mtd_dev_info *mtd, int eb,$/;"	z	function:mtd_ioctl_error	typeref:typename:int	file:
eb	oslib/libmtd.c	/^static int mtd_valid_erase_block(const struct mtd_dev_info *mtd, int eb)$/;"	z	function:mtd_valid_erase_block	typeref:typename:int	file:
eb	oslib/libmtd.c	/^static int mtd_xlock(const struct mtd_dev_info *mtd, int fd, int eb, int req,$/;"	z	function:mtd_xlock	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_erase	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_bad	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_locked	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_lock	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_mark_bad	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_read	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_torture	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_unlock	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	prototype:mtd_write	typeref:typename:int	file:
eb	oslib/libmtd.h	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_write_img	typeref:typename:int	file:
eb_cnt	oslib/libmtd.h	/^	int eb_cnt;$/;"	m	struct:mtd_dev_info	typeref:typename:int
eb_size	oslib/libmtd.h	/^	int eb_size;$/;"	m	struct:mtd_dev_info	typeref:typename:int
eb_size	oslib/libmtd_legacy.c	/^	int eb_size;$/;"	m	struct:proc_parse_info	typeref:typename:int	file:
ebx	arch/arch-x86-common.h	/^			 unsigned int *eax, unsigned int *ebx,$/;"	z	function:cpuid	typeref:typename:unsigned int *	file:
ebx	arch/arch-x86.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
ebx	arch/arch-x86_64.h	/^static inline void do_cpuid(unsigned int *eax, unsigned int *ebx,$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
ecount	engines/xnvme.c	/^	uint64_t ecount;$/;"	m	struct:xnvme_fioe_data	typeref:typename:uint64_t	file:
ecx	arch/arch-x86-common.h	/^			 unsigned int *ecx, unsigned int *edx)$/;"	z	function:cpuid	typeref:typename:unsigned int *	file:
ecx	arch/arch-x86.h	/^			    unsigned int *ecx, unsigned int *edx)$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
ecx	arch/arch-x86_64.h	/^			    unsigned int *ecx, unsigned int *edx)$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
edit_job_entry	gfio.c	/^static void edit_job_entry(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
edx	arch/arch-x86-common.h	/^			 unsigned int *ecx, unsigned int *edx)$/;"	z	function:cpuid	typeref:typename:unsigned int *	file:
edx	arch/arch-x86.h	/^			    unsigned int *ecx, unsigned int *edx)$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
edx	arch/arch-x86_64.h	/^			    unsigned int *ecx, unsigned int *edx)$/;"	z	function:do_cpuid	typeref:typename:unsigned int *	file:
elapsed	stat.c	/^			      unsigned long elapsed, bool log_max)$/;"	z	function:__add_stat_to_log	typeref:typename:unsigned long	file:
elapsed	stat.c	/^static void _add_stat_to_log(struct io_log *iolog, unsigned long elapsed,$/;"	z	function:_add_stat_to_log	typeref:typename:unsigned long	file:
elapsed_nsec	t/time-test.c	/^static unsigned long long elapsed_nsec;$/;"	v	typeref:typename:unsigned long long	file:
elapsed_us	backend.c	/^				  unsigned long long *elapsed_us,$/;"	z	function:update_runtime	typeref:typename:unsigned long long *	file:
elem	t/stest.c	/^struct elem {$/;"	s	file:
element	server.c	/^	struct ffi_element element;$/;"	m	struct:fio_fork_item	typeref:struct:ffi_element	file:
element	server.c	/^static void fio_server_add_fork_item(struct ffi_element *element, struct flist_head *list)$/;"	z	function:fio_server_add_fork_item	typeref:struct:ffi_element *	file:
enable_check_swd	zbd.c	/^static const bool enable_check_swd = false;$/;"	v	typeref:typename:const bool	file:
enable_smalloc_debug	smalloc.c	/^static const bool enable_smalloc_debug = false;$/;"	v	typeref:typename:const bool	file:
end	doc/make.bat	/^:end$/;"	l
end	engines/cmdprio.c	/^				   int implicit_cmdprio, int start, int end)$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:typename:int	file:
end	lib/rand.h	/^				    uint64_t end)$/;"	z	function:rand_between	typeref:typename:uint64_t	file:
end	lib/rand.h	/^static inline uint32_t rand32_upto(struct frand_state *state, uint32_t end)$/;"	z	function:rand32_upto	typeref:typename:uint32_t	file:
end	lib/rand.h	/^static inline uint64_t rand64_upto(struct frand_state *state, uint64_t end)$/;"	z	function:rand64_upto	typeref:typename:uint64_t	file:
end	lib/strntol.c	/^long strntol(const char *str, size_t sz, char **end, int base)$/;"	z	function:strntol	typeref:typename:char **	file:
end	lib/strntol.h	/^long strntol(const char *str, size_t sz, char **end, int base);$/;"	z	prototype:strntol	typeref:typename:char **	file:
end	os/windows/dobuild.cmd	/^:end$/;"	l
end	workqueue.c	/^						 unsigned int end,$/;"	z	function:__get_submit_worker	typeref:typename:unsigned int	file:
end_count	engines/windowsaio.c	/^static BOOL timeout_expired(DWORD start_count, DWORD end_count)$/;"	z	function:timeout_expired	typeref:typename:DWORD	file:
end_fsync	thread_options.h	/^	uint32_t end_fsync;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
end_fsync	thread_options.h	/^	unsigned int end_fsync;$/;"	m	struct:thread_options	typeref:typename:unsigned int
end_io	io_u.h	/^	int (*end_io)(struct thread_data *, struct io_u **);$/;"	m	struct:io_u	typeref:typename:int (*)(struct thread_data *,struct io_u **)
end_lba	blktrace_api.h	/^	__u64 end_lba;$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u64
end_results	gfio.h	/^struct end_results {$/;"	s
end_sector	t/btrace2fio.c	/^	uint64_t end_sector;$/;"	m	struct:inflight	typeref:typename:uint64_t	file:
endian	crc/xxhash.c	/^static XXH_errorcode XXH32_update_endian (void* state_in, const void* input, int len, XXH_endian/;"	z	function:XXH32_update_endian	typeref:typename:XXH_endianess	file:
endian	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	z	function:XXH32_endian_align	typeref:typename:XXH_endianess	file:
endian	crc/xxhash.c	/^static uint32_t XXH32_intermediateDigest_endian (void* state_in, XXH_endianess endian)$/;"	z	function:XXH32_intermediateDigest_endian	typeref:typename:XXH_endianess	file:
endian	crc/xxhash.c	/^static uint32_t XXH_readLE32(const uint32_t* ptr, XXH_endianess endian) { return XXH_readLE32_al/;"	z	function:XXH_readLE32	typeref:typename:XXH_endianess	file:
endian	crc/xxhash.c	/^static uint32_t XXH_readLE32_align(const uint32_t* ptr, XXH_endianess endian, XXH_alignment alig/;"	z	function:XXH_readLE32_align	typeref:typename:XXH_endianess	file:
endian_check	libfio.c	/^static int endian_check(void)$/;"	f	typeref:typename:int	file:
endptr	os/windows/posix.c	/^long long strtoll(const char *restrict str, char **restrict endptr, int base)$/;"	z	function:strtoll	typeref:typename:char ** 	file:
engine	ioengines.c	/^int fio_show_ioengine_help(const char *engine)$/;"	z	function:fio_show_ioengine_help	typeref:typename:const char *	file:
engine	ioengines.c	/^static struct ioengine_ops *__load_ioengine(const char *engine)$/;"	z	function:__load_ioengine	typeref:typename:const char *	file:
engine	ioengines.c	/^static void *dlopen_external(struct thread_data *td, const char *engine)$/;"	z	function:dlopen_external	typeref:typename:const char *	file:
engine	ioengines.h	/^extern int fio_show_ioengine_help(const char *engine);$/;"	z	prototype:fio_show_ioengine_help	typeref:typename:const char *	file:
engine_data	file.h	/^		void *engine_data;$/;"	m	union:fio_file::__anonfd762ebb020a	typeref:typename:void *
engine_data	io_u.h	/^		void *engine_data;$/;"	m	union:io_u::__anon04db5ec7020a	typeref:typename:void *
engine_lib	ioengines.c	/^					    const char *engine_lib)$/;"	z	function:dlopen_ioengine	typeref:typename:const char *	file:
engine_pos	file.h	/^		uint64_t engine_pos;$/;"	m	union:fio_file::__anonfd762ebb020a	typeref:typename:uint64_t
engine_template =	Makefile	/^define engine_template =$/;"	m
enter_ring_fd	t/io_uring.c	/^	int enter_ring_fd;$/;"	m	struct:submitter	typeref:typename:int	file:
entries	engines/cmdprio.c	/^				   struct split_prio *entries,$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:struct:split_prio *	file:
entries	engines/cmdprio.c	/^	struct split_prio *entries;$/;"	m	struct:cmdprio_parse_result	typeref:struct:split_prio *	file:
entries	engines/libaio.c	/^	unsigned int entries;$/;"	m	struct:libaio_data	typeref:typename:unsigned int	file:
entries	gettime.c	/^	struct clock_entry *entries;$/;"	m	struct:clock_thread	typeref:struct:clock_entry *	file:
entries	lib/bloom.c	/^struct bloom *bloom_new(uint64_t entries)$/;"	z	function:bloom_new	typeref:typename:uint64_t	file:
entries	lib/bloom.h	/^struct bloom *bloom_new(uint64_t entries);$/;"	z	prototype:bloom_new	typeref:typename:uint64_t	file:
entries	options.c	/^int split_parse_prio_ddir(struct thread_options *o, struct split_prio **entries,$/;"	z	function:split_parse_prio_ddir	typeref:struct:split_prio **	file:
entries	t/io_uring.c	/^static int io_uring_setup(unsigned entries, struct io_uring_params *p)$/;"	z	function:io_uring_setup	typeref:typename:unsigned	file:
entries	thread_options.h	/^				 struct split_prio **entries, int *nr_entries,$/;"	z	prototype:split_parse_prio_ddir	typeref:struct:split_prio **	file:
entries_close	t/btrace2fio.c	/^static int entries_close(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	f	typeref:typename:int	file:
entry	flist.h	/^static inline void flist_del(struct flist_head *entry)$/;"	z	function:flist_del	typeref:struct:flist_head *	file:
entry	flist.h	/^static inline void flist_del_init(struct flist_head *entry)$/;"	z	function:flist_del_init	typeref:struct:flist_head *	file:
entry	gfio.c	/^static void hostname_cb(GtkEntry *entry, gpointer data)$/;"	z	function:hostname_cb	typeref:typename:GtkEntry *	file:
entry	ghelpers.c	/^void entry_set_int_value(GtkWidget *entry, unsigned int val)$/;"	z	function:entry_set_int_value	typeref:typename:GtkWidget *	file:
entry	ghelpers.c	/^void label_set_int_value(GtkWidget *entry, unsigned int val)$/;"	z	function:label_set_int_value	typeref:typename:GtkWidget *	file:
entry	ghelpers.h	/^	GtkWidget *entry;$/;"	m	struct:multitext_widget	typeref:typename:GtkWidget *
entry	ghelpers.h	/^void entry_set_int_value(GtkWidget *entry, unsigned int val);$/;"	z	prototype:entry_set_int_value	typeref:typename:GtkWidget *	file:
entry	ghelpers.h	/^void label_set_int_value(GtkWidget *entry, unsigned int val);$/;"	z	prototype:label_set_int_value	typeref:typename:GtkWidget *	file:
entry	goptions.c	/^	GtkWidget *entry;$/;"	m	struct:gopt_str	typeref:typename:GtkWidget *	file:
entry	goptions.c	/^static void gopt_str_changed(GtkEntry *entry, gpointer data)$/;"	z	function:gopt_str_changed	typeref:typename:GtkEntry *	file:
entry	options.c	/^				       struct split_prio *entry, char *str)$/;"	z	function:parse_cmdprio_bssplit_entry	typeref:struct:split_prio *	file:
entry	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry)$/;"	z	function:handle_sk_entry	typeref:struct:sk_entry *	file:
entry	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry);$/;"	z	prototype:handle_sk_entry	typeref:struct:sk_entry *	file:
entry	server.c	/^static void entry_set_flags(struct sk_entry *entry, struct flist_head *list,$/;"	z	function:entry_set_flags	typeref:struct:sk_entry *	file:
entry	server.c	/^static void finish_entry(struct sk_entry *entry)$/;"	z	function:finish_entry	typeref:struct:sk_entry *	file:
entry	server.c	/^static void fio_net_queue_entry(struct sk_entry *entry)$/;"	z	function:fio_net_queue_entry	typeref:struct:sk_entry *	file:
entry_cmp	t/btrace2fio.c	/^static int entry_cmp(void *priv, struct flist_head *a, struct flist_head *b)$/;"	f	typeref:typename:int	file:
entry_set_flags	server.c	/^static void entry_set_flags(struct sk_entry *entry, struct flist_head *list,$/;"	f	typeref:typename:void	file:
entry_set_int_value	ghelpers.c	/^void entry_set_int_value(GtkWidget *entry, unsigned int val)$/;"	f	typeref:typename:void
entry_set_int_value	ghelpers.h	/^void entry_set_int_value(GtkWidget *entry, unsigned int val);$/;"	p	typeref:typename:void
envp	arch/arch-aarch64.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch-ia64.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch-ppc.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch-s390.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch-sh.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch-x86-common.h	/^static inline void arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	arch/arch.h	/^static inline int arch_init(char *envp[])$/;"	z	function:arch_init	typeref:typename:char * []	file:
envp	fio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:char * []	file:
envp	fio.h	/^extern int initialize_fio(char *envp[]);$/;"	z	prototype:initialize_fio	typeref:typename:char * []	file:
envp	gfio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	z	function:main	typeref:typename:char * []	file:
envp	libfio.c	/^int initialize_fio(char *envp[])$/;"	z	function:initialize_fio	typeref:typename:char * []	file:
eo	engines/exec.c	/^static int exec_background(struct thread_options *o, struct exec_options *eo)$/;"	z	function:exec_background	typeref:struct:exec_options *	file:
eo	fio.h	/^	void *eo;$/;"	m	struct:thread_data	typeref:typename:void *
eo	options.c	/^		    split_parse_fn *fn, void *eo, bool data)$/;"	z	function:str_split_parse	typeref:typename:void *	file:
eo	options.c	/^static int bssplit_ddir(struct thread_options *o, void *eo,$/;"	z	function:bssplit_ddir	typeref:typename:void *	file:
eo	options.c	/^static int zone_split_ddir(struct thread_options *o, void *eo,$/;"	z	function:zone_split_ddir	typeref:typename:void *	file:
eo	thread_options.h	/^			   split_parse_fn *fn, void *eo, bool data);$/;"	z	prototype:str_split_parse	typeref:typename:void *	file:
eof	zbd.c	/^eof:$/;"	L	function:zbd_adjust_block	file:
epoch	fio.h	/^	struct timespec epoch;	\/* time job was started *\/$/;"	m	struct:thread_data	typeref:struct:timespec
epub	doc/Makefile	/^epub:$/;"	t
epub3	doc/Makefile	/^epub3:$/;"	t
eqh	engines/dfs.c	/^	daos_handle_t	eqh;$/;"	m	struct:daos_data	typeref:typename:daos_handle_t	file:
err	backend.c	/^err:$/;"	L	function:thread_main	file:
err	blktrace.c	/^err:$/;"	L	function:init_blktrace_read	file:
err	blktrace.c	/^err:$/;"	L	function:read_blktrace	file:
err	cgroup.c	/^err:$/;"	L	function:add_cgroup	file:
err	cgroup.c	/^err:$/;"	L	function:cgroup_setup	file:
err	client.c	/^err:$/;"	L	function:convert_iolog_gz	file:
err	client.c	/^err:$/;"	L	function:fio_client_add_explicit	file:
err	engines/cmdprio.c	/^err:$/;"	L	function:fio_cmdprio_gen_perc	file:
err	engines/cmdprio.c	/^err:$/;"	L	function:fio_cmdprio_parse_and_gen_bssplit	file:
err	engines/e4defrag.c	/^err:$/;"	L	function:fio_e4defrag_init	file:
err	engines/http.c	/^err:$/;"	L	function:fio_http_queue	file:
err	engines/ime.c	/^void fio_ime_aio_complete_cb  (struct ime_aiocb *aiocb, int err,$/;"	z	function:fio_ime_aio_complete_cb	typeref:typename:int	file:
err	engines/io_uring.c	/^err:$/;"	L	function:fio_ioring_register_files	file:
err	engines/libpmem.c	/^err:$/;"	L	function:fio_libpmem_file	file:
err	engines/librpma_fio.c	/^err:$/;"	L	function:client_queue_sync	file:
err	engines/libzbc.c	/^err:$/;"	L	function:libzbc_open_dev	file:
err	engines/libzbc.c	/^err:$/;"	L	function:libzbc_reset_wp	file:
err	engines/mmap.c	/^err:$/;"	L	function:fio_mmap_file	file:
err	engines/net.c	/^err:$/;"	L	function:fio_netio_accept	file:
err	filelock.c	/^err:$/;"	L	function:fio_filelock_init	file:
err	filesetup.c	/^err:$/;"	L	function:bdev_size	file:
err	filesetup.c	/^err:$/;"	L	function:char_size	file:
err	filesetup.c	/^err:$/;"	L	function:extend_file	file:
err	filesetup.c	/^err:$/;"	L	function:generic_prepopulate_file	file:
err	gettime-thread.c	/^err:$/;"	L	function:fio_start_gtod_thread	file:
err	gettime.c	/^err:$/;"	L	function:clock_thread_fn	file:
err	gettime.c	/^err:$/;"	L	function:fio_monotonic_clocktest	file:
err	helper_thread.c	/^err:$/;"	L	function:pipe_over_loopback	file:
err	init.c	/^err:$/;"	L	function:add_job	file:
err	ioengines.c	/^err:$/;"	L	function:td_io_open_file	file:
err	iolog.c	/^	int err;$/;"	m	struct:inflate_chunk_iter	typeref:typename:int	file:
err	iolog.c	/^err:$/;"	L	function:gz_work	file:
err	os/windows/cpu-affinity.c	/^err:$/;"	L	function:fio_getaffinity	file:
err	os/windows/cpu-affinity.c	/^err:$/;"	L	function:fio_setaffinity	file:
err	rate-submit.c	/^err:$/;"	L	function:io_workqueue_init_worker_fn	file:
err	rwlock.c	/^err:$/;"	L	function:fio_rwlock_init	file:
err	t/btrace2fio.c	/^err:$/;"	L	function:load_blktrace	file:
err	t/dedupe.c	/^	int err;$/;"	m	struct:worker_thread	typeref:typename:int	file:
err	t/dedupe.c	/^err:$/;"	L	function:dedupe_check	file:
err	td_error.c	/^		       int err)$/;"	z	function:td_non_fatal_error	typeref:typename:int	file:
err	td_error.c	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err)$/;"	z	function:td_error_type	typeref:typename:int	file:
err	td_error.c	/^void update_error_count(struct thread_data *td, int err)$/;"	z	function:update_error_count	typeref:typename:int	file:
err	td_error.h	/^		       int err);$/;"	z	prototype:td_non_fatal_error	typeref:typename:int	file:
err	td_error.h	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err);$/;"	z	prototype:td_error_type	typeref:typename:int	file:
err	td_error.h	/^void update_error_count(struct thread_data *td, int err);$/;"	z	prototype:update_error_count	typeref:typename:int	file:
err	tools/hist/fiologparser_hist.py	/^err = sys.stderr.write$/;"	v
err	verify.c	/^err:$/;"	L	function:verify_header	file:
err	verify.c	/^err:$/;"	L	function:verify_load_state	file:
err	workqueue.c	/^err:$/;"	L	function:workqueue_init	file:
err1	engines/rdma.c	/^err1:$/;"	L	function:fio_rdmaio_setup_qp	file:
err2	engines/rdma.c	/^err2:$/;"	L	function:fio_rdmaio_setup_qp	file:
err3	engines/rdma.c	/^err3:$/;"	L	function:fio_rdmaio_setup_qp	file:
err_cfg_delete	engines/librpma_apm.c	/^err_cfg_delete:$/;"	L	function:client_init	file:
err_cfg_delete	engines/librpma_gpspm.c	/^err_cfg_delete:$/;"	L	function:client_init	file:
err_cfg_delete	engines/librpma_gpspm.c	/^err_cfg_delete:$/;"	L	function:server_open_file	file:
err_cleanup_common	engines/librpma_apm.c	/^err_cleanup_common:$/;"	L	function:client_init	file:
err_cleanup_common	engines/librpma_gpspm.c	/^err_cleanup_common:$/;"	L	function:client_init	file:
err_close	engines/libzbc.c	/^err_close:$/;"	L	function:libzbc_open_dev	file:
err_close	engines/mtd.c	/^err_close:$/;"	L	function:fio_mtd_open_file	file:
err_conn_delete	engines/librpma_fio.c	/^err_conn_delete:$/;"	L	function:librpma_fio_client_init	file:
err_conn_delete	engines/librpma_fio.c	/^err_conn_delete:$/;"	L	function:librpma_fio_server_open_file	file:
err_entry	gfio.h	/^	GtkWidget *err_entry;$/;"	m	struct:gfio_client	typeref:typename:GtkWidget *
err_ep_shutdown	engines/librpma_fio.c	/^err_ep_shutdown:$/;"	L	function:librpma_fio_server_open_file	file:
err_file	blktrace.c	/^err_file:$/;"	L	function:merge_blktrace_iologs	file:
err_free	engines/librpma_fio.c	/^err_free:$/;"	L	function:librpma_fio_server_open_file	file:
err_free	engines/mtd.c	/^err_free:$/;"	L	function:fio_mtd_open_file	file:
err_free_ccd	engines/librpma_fio.c	/^err_free_ccd:$/;"	L	function:librpma_fio_client_init	file:
err_free_cd	engines/librpma_gpspm.c	/^err_free_cd:$/;"	L	function:client_init	file:
err_free_close_out	lib/pattern.c	/^err_free_close_out:$/;"	L	function:parse_file	file:
err_free_csd	engines/librpma_fio.c	/^err_free_csd:$/;"	L	function:librpma_fio_server_init	file:
err_free_io_u_queues	engines/librpma_fio.c	/^err_free_io_u_queues:$/;"	L	function:librpma_fio_client_init	file:
err_free_out	lib/pattern.c	/^err_free_out:$/;"	L	function:parse_file	file:
err_free_sd	engines/librpma_gpspm.c	/^err_free_sd:$/;"	L	function:server_init	file:
err_free_unpacked	engines/librpma_gpspm.c	/^err_free_unpacked:$/;"	L	function:server_qe_process	file:
err_io_init	rate-submit.c	/^err_io_init:$/;"	L	function:io_workqueue_init_worker_fn	file:
err_merge_buf	blktrace.c	/^err_merge_buf:$/;"	L	function:merge_blktrace_iologs	file:
err_mr_dereg	engines/librpma_fio.c	/^err_mr_dereg:$/;"	L	function:librpma_fio_server_open_file	file:
err_offset	filesetup.c	/^err_offset:$/;"	L	function:setup_files	file:
err_out	filesetup.c	/^err_out:$/;"	L	function:setup_files	file:
err_out	gettime.c	/^err_out:$/;"	L	function:clock_thread_fn	file:
err_out	lib/pattern.c	/^err_out:$/;"	L	function:parse_file	file:
err_out_file	blktrace.c	/^err_out_file:$/;"	L	function:merge_blktrace_iologs	file:
err_param	blktrace.c	/^err_param:$/;"	L	function:merge_blktrace_iologs	file:
err_peer_delete	engines/librpma_fio.c	/^err_peer_delete:$/;"	L	function:librpma_fio_client_init	file:
err_put	io_u.c	/^err_put:$/;"	L	function:get_io_u	file:
err_req_delete	engines/librpma_fio.c	/^err_req_delete:$/;"	L	function:librpma_fio_client_init	file:
err_req_delete	engines/librpma_fio.c	/^err_req_delete:$/;"	L	function:librpma_fio_server_open_file	file:
err_server_cleanup	engines/librpma_gpspm.c	/^err_server_cleanup:$/;"	L	function:server_init	file:
err_terminate	engines/librpma_gpspm.c	/^err_terminate:$/;"	L	function:server_cmpl_process	file:
err_terminate	engines/librpma_gpspm.c	/^err_terminate:$/;"	L	function:server_qe_process	file:
err_unmap	engines/librpma_fio.c	/^err_unmap:$/;"	L	function:librpma_fio_allocate_pmem	file:
errdetails	ioengines.h	/^	char *(*errdetails)(struct io_u *);$/;"	m	struct:ioengine_ops	typeref:typename:char * (*)(struct io_u *)
errmsg	oslib/libmtd_common.h	/^#define errmsg(/;"	d
errmsg_die	oslib/libmtd_common.h	/^#define errmsg_die(/;"	d
error	blktrace_api.h	/^	__u16 error;		\/* completion error *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u16
error	client.h	/^	int error;$/;"	m	struct:fio_client	typeref:typename:int
error	engines/nbd.c	/^static int cmd_completed (void *vp, int *error)$/;"	z	function:cmd_completed	typeref:typename:int *	file:
error	engines/pmemblk.c	/^error:$/;"	L	function:pmb_open	file:
error	err.h	/^static inline void *ERR_PTR(uintptr_t error)$/;"	z	function:ERR_PTR	typeref:typename:uintptr_t	file:
error	filesetup.c	/^error:$/;"	L	function:pre_read_file	file:
error	fio.h	/^	int error;$/;"	m	struct:thread_data	typeref:typename:int
error	gerror.c	/^static void report_error(struct gui_entry *ge, GError *error)$/;"	z	function:report_error	typeref:typename:GError *	file:
error	io_u.c	/^	int error;			\/* output *\/$/;"	m	struct:io_completion_data	typeref:typename:int	file:
error	io_u.h	/^	unsigned int error;$/;"	m	struct:io_u	typeref:typename:unsigned int
error	os/os-android.h	/^error:$/;"	L	function:shmget	file:
error	server.c	/^	int error;$/;"	m	struct:cmd_reply	typeref:typename:int	file:
error	server.c	/^static int fio_net_queue_stop(int error, int signal)$/;"	z	function:fio_net_queue_stop	typeref:typename:int	file:
error	server.c	/^static int fio_net_send_ack(struct fio_net_cmd *cmd, int error, int signal)$/;"	z	function:fio_net_send_ack	typeref:typename:int	file:
error	server.c	/^static int send_update_job_reply(uint64_t __tag, int error)$/;"	z	function:send_update_job_reply	typeref:typename:int	file:
error	server.h	/^	uint32_t error;$/;"	m	struct:cmd_end_pdu	typeref:typename:uint32_t
error	server.h	/^	uint32_t error;$/;"	m	struct:cmd_sendfile_reply	typeref:typename:uint32_t
error	stat.h	/^	uint32_t error;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
error_clients	client.c	/^static int error_clients;$/;"	v	typeref:typename:int	file:
error_code	zbd.c	/^bool zbd_unaligned_write(int error_code)$/;"	z	function:zbd_unaligned_write	typeref:typename:int	file:
error_code	zbd.h	/^bool zbd_unaligned_write(int error_code);$/;"	z	prototype:zbd_unaligned_write	typeref:typename:int	file:
error_dump	thread_options.h	/^	uint32_t error_dump;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
error_dump	thread_options.h	/^	unsigned int error_dump;$/;"	m	struct:thread_options	typeref:typename:unsigned int
error_info_bar	gfio.h	/^	GtkWidget *error_info_bar;$/;"	m	struct:gui	typeref:typename:GtkWidget *
error_info_bar	gfio.h	/^	GtkWidget *error_info_bar;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
error_label	gfio.h	/^	GtkWidget *error_label;$/;"	m	struct:gui	typeref:typename:GtkWidget *
error_label	gfio.h	/^	GtkWidget *error_label;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
error_type	td_error.h	/^enum error_type {$/;"	g
error_type_bit	td_error.h	/^enum error_type_bit {$/;"	g
eta	client.c	/^static int fio_client_dec_jobs_eta(struct client_eta *eta, client_eta_op eta_fn)$/;"	z	function:fio_client_dec_jobs_eta	typeref:struct:client_eta *	file:
eta	client.h	/^	client_eta_op		*eta;$/;"	m	struct:client_ops	typeref:typename:client_eta_op *
eta	client.h	/^	struct jobs_eta eta;$/;"	m	struct:client_eta	typeref:struct:jobs_eta
eta	gfio.h	/^	struct eta_widget eta;$/;"	m	struct:gui	typeref:struct:eta_widget
eta	gfio.h	/^	struct eta_widget eta;$/;"	m	struct:gui_entry	typeref:struct:eta_widget
eta_fn	client.c	/^static int fio_client_dec_jobs_eta(struct client_eta *eta, client_eta_op eta_fn)$/;"	z	function:fio_client_dec_jobs_eta	typeref:typename:client_eta_op	file:
eta_in_flight	client.h	/^	struct client_eta *eta_in_flight;$/;"	m	struct:fio_client	typeref:struct:client_eta *
eta_interval_msec	init.c	/^unsigned int eta_interval_msec = 1000;$/;"	v	typeref:typename:unsigned int
eta_list	client.h	/^	struct flist_head eta_list;$/;"	m	struct:fio_client	typeref:struct:flist_head
eta_msec	client.h	/^	unsigned int eta_msec;$/;"	m	struct:client_ops	typeref:typename:unsigned int
eta_new_line	init.c	/^int eta_new_line = 0;$/;"	v	typeref:typename:int
eta_print	init.c	/^int eta_print = FIO_ETA_AUTO;$/;"	v	typeref:typename:int
eta_sec	eta.c	/^void eta_to_str(char *str, unsigned long eta_sec)$/;"	z	function:eta_to_str	typeref:typename:unsigned long	file:
eta_sec	stat.h	/^extern void eta_to_str(char *str, unsigned long eta_sec);$/;"	z	prototype:eta_to_str	typeref:typename:unsigned long	file:
eta_time_within_slack	eta.c	/^bool eta_time_within_slack(unsigned int time)$/;"	f	typeref:typename:bool
eta_time_within_slack	fio.h	/^extern bool eta_time_within_slack(unsigned int time);$/;"	p	typeref:typename:bool
eta_timeouts	client.h	/^	unsigned int eta_timeouts;$/;"	m	struct:fio_client	typeref:typename:unsigned int
eta_to_str	eta.c	/^void eta_to_str(char *str, unsigned long eta_sec)$/;"	f	typeref:typename:void
eta_to_str	stat.h	/^extern void eta_to_str(char *str, unsigned long eta_sec);$/;"	p	typeref:typename:void
eta_ts	client.c	/^static struct timespec eta_ts;$/;"	v	typeref:struct:timespec	file:
eta_widget	gfio.h	/^struct eta_widget {$/;"	s
etype	options.c	/^static int ignore_error_type(struct thread_data *td, enum error_type_bit etype,$/;"	z	function:ignore_error_type	typeref:enum:error_type_bit	file:
etype	td_error.c	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	z	function:td_non_fatal_error	typeref:enum:error_type_bit	file:
etype	td_error.h	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	z	prototype:td_non_fatal_error	typeref:enum:error_type_bit	file:
ev	engines/dfs.c	/^	daos_event_t	ev;$/;"	m	struct:daos_iou	typeref:typename:daos_event_t	file:
eval_timer	helper_thread.c	/^static int eval_timer(struct interval_timer *it, const struct timespec *now,$/;"	f	typeref:typename:int	file:
evaluate_arithmetic_expression	exp/test-expression-parser.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	p	typeref:typename:int	file:
evaluate_arithmetic_expression	parse.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	p	typeref:typename:int	file:
evaluate_arithmetic_expression	y.tab.c	/^int evaluate_arithmetic_expression(const char *buffer, long long *ival, double *dval,$/;"	f	typeref:typename:int
event	engines/dfs.c	/^static struct io_u * daos_fio_event(struct thread_data *td, int event)$/;"	z	function:daos_fio_event	typeref:typename:int	file:
event	engines/glusterfs_async.c	/^static struct io_u *fio_gf_event(struct thread_data *td, int event)$/;"	z	function:fio_gf_event	typeref:typename:int	file:
event	engines/http.c	/^static struct io_u *fio_http_event(struct thread_data *td, int event)$/;"	z	function:fio_http_event	typeref:typename:int	file:
event	engines/ime.c	/^static struct io_u *fio_ime_event(struct thread_data *td, int event)$/;"	z	function:fio_ime_event	typeref:typename:int	file:
event	engines/io_uring.c	/^static struct io_u *fio_ioring_event(struct thread_data *td, int event)$/;"	z	function:fio_ioring_event	typeref:typename:int	file:
event	engines/libaio.c	/^static struct io_u *fio_libaio_event(struct thread_data *td, int event)$/;"	z	function:fio_libaio_event	typeref:typename:int	file:
event	engines/libiscsi.c	/^static struct io_u *fio_iscsi_event(struct thread_data *td, int event)$/;"	z	function:fio_iscsi_event	typeref:typename:int	file:
event	engines/librpma_fio.c	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event)$/;"	z	function:librpma_fio_client_event	typeref:typename:int	file:
event	engines/librpma_fio.h	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event);$/;"	z	prototype:librpma_fio_client_event	typeref:typename:int	file:
event	engines/nbd.c	/^static struct io_u *nbd_event(struct thread_data *td, int event)$/;"	z	function:nbd_event	typeref:typename:int	file:
event	engines/nfs.c	/^static struct io_u *fio_libnfs_event(struct thread_data *td, int event)$/;"	z	function:fio_libnfs_event	typeref:typename:int	file:
event	engines/null.c	/^	io_u *fio_null_event(struct thread_data *, int event)$/;"	z	function:NullData::fio_null_event	typeref:typename:int	file:
event	engines/null.c	/^static struct io_u *fio_null_event(struct thread_data *td, int event)$/;"	z	function:fio_null_event	typeref:typename:int	file:
event	engines/null.c	/^static struct io_u *null_event(struct null_data *nd, int event)$/;"	z	function:null_event	typeref:typename:int	file:
event	engines/posixaio.c	/^static struct io_u *fio_posixaio_event(struct thread_data *td, int event)$/;"	z	function:fio_posixaio_event	typeref:typename:int	file:
event	engines/rados.c	/^static struct io_u *fio_rados_event(struct thread_data *td, int event)$/;"	z	function:fio_rados_event	typeref:typename:int	file:
event	engines/rbd.c	/^static struct io_u *fio_rbd_event(struct thread_data *td, int event)$/;"	z	function:fio_rbd_event	typeref:typename:int	file:
event	engines/rdma.c	/^static struct io_u *fio_rdmaio_event(struct thread_data *td, int event)$/;"	z	function:fio_rdmaio_event	typeref:typename:int	file:
event	engines/sg.c	/^static struct io_u *fio_sgio_event(struct thread_data *td, int event)$/;"	z	function:fio_sgio_event	typeref:typename:int	file:
event	engines/skeleton_external.c	/^static struct io_u *fio_skeleton_event(struct thread_data *td, int event)$/;"	z	function:fio_skeleton_event	typeref:typename:int	file:
event	engines/solarisaio.c	/^static struct io_u *fio_solarisaio_event(struct thread_data *td, int event)$/;"	z	function:fio_solarisaio_event	typeref:typename:int	file:
event	engines/sync.c	/^static struct io_u *fio_vsyncio_event(struct thread_data *td, int event)$/;"	z	function:fio_vsyncio_event	typeref:typename:int	file:
event	engines/windowsaio.c	/^static struct io_u* fio_windowsaio_event(struct thread_data *td, int event)$/;"	z	function:fio_windowsaio_event	typeref:typename:int	file:
event	engines/xnvme.c	/^static struct io_u *xnvme_fioe_event(struct thread_data *td, int event)$/;"	z	function:xnvme_fioe_event	typeref:typename:int	file:
event	gclient.c	/^static gint on_config_lat_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	z	function:on_config_lat_drawing_area	typeref:typename:GdkEventConfigure *	file:
event	gclient.c	/^static int on_expose_lat_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_lat_drawing_area	typeref:typename:GdkEvent *	file:
event	gfio.c	/^static gint on_config_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	z	function:on_config_drawing_area	typeref:typename:GdkEventConfigure *	file:
event	gfio.c	/^static int on_expose_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_drawing_area	typeref:typename:GdkEvent *	file:
event	ioengines.h	/^	struct io_u *(*event)(struct thread_data *, int);$/;"	m	struct:ioengine_ops	typeref:struct:io_u * (*)(struct thread_data *,int)
event_io_us	engines/ime.c	/^	struct io_u 	**event_io_us;	\/* array of the events retrieved after get_events*\/$/;"	m	struct:ime_data	typeref:struct:io_u **	file:
events	engines/ime.c	/^	unsigned int 	events;			\/* number of committed iovecs\/io_us *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
events	engines/io_uring.c	/^static int fio_ioring_cqring_reap(struct thread_data *td, unsigned int events,$/;"	z	function:fio_ioring_cqring_reap	typeref:typename:unsigned int	file:
events	engines/libaio.c	/^			     struct io_event *events)$/;"	z	function:user_io_getevents	typeref:struct:io_event *	file:
events	engines/libaio.c	/^	struct io_event events[0];$/;"	m	struct:aio_ring	typeref:struct:io_event[0]	file:
events	engines/net.c	/^static int poll_wait(struct thread_data *td, int fd, short events)$/;"	z	function:poll_wait	typeref:typename:short	file:
events	engines/nfs.c	/^	struct io_u**events;$/;"	m	struct:fio_libnfs_options	typeref:struct:io_u **	file:
events	engines/null.c	/^	int events;$/;"	m	struct:null_data	typeref:typename:int	file:
events	engines/rbd.c	/^				     unsigned int *events)$/;"	z	function:fri_check_complete	typeref:typename:unsigned int *	file:
events	engines/rbd.c	/^static int rbd_iter_events(struct thread_data *td, unsigned int *events,$/;"	z	function:rbd_iter_events	typeref:typename:unsigned int *	file:
events	engines/sg.c	/^	struct io_u **events;$/;"	m	struct:sgio_data	typeref:struct:io_u **	file:
events	engines/sync.c	/^	unsigned int events;$/;"	m	struct:syncio_data	typeref:typename:unsigned int	file:
events	server.c	/^bool fio_server_poll_fd(int fd, short events, int timeout)$/;"	z	function:fio_server_poll_fd	typeref:typename:short	file:
events	server.h	/^extern bool fio_server_poll_fd(int fd, short events, int timeout);$/;"	z	prototype:fio_server_poll_fd	typeref:typename:short	file:
events	t/io_uring.c	/^static int reap_events_aio(struct submitter *s, struct io_event *events, int evs)$/;"	z	function:reap_events_aio	typeref:struct:io_event *	file:
evs	t/io_uring.c	/^static int reap_events_aio(struct submitter *s, struct io_event *events, int evs)$/;"	z	function:reap_events_aio	typeref:typename:int	file:
examine_zone	zbd.c	/^examine_zone:$/;"	L	function:zbd_convert_to_open_zone	file:
exceeds_number_ios	backend.c	/^static bool exceeds_number_ios(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
exception_suffix	tools/hist/fio-histo-log-pctiles.py	/^def exception_suffix( record_num, pathname ):$/;"	f
exclude_patterns	doc/conf.py	/^exclude_patterns = ['output', 'Thumbs.db', '.DS_Store', 'fio_examples.rst']$/;"	v
exec_background	engines/exec.c	/^static int exec_background(struct thread_options *o, struct exec_options *eo)$/;"	f	typeref:typename:int	file:
exec_options	engines/exec.c	/^struct exec_options {$/;"	s	file:
exec_postrun	thread_options.h	/^	char *exec_postrun;$/;"	m	struct:thread_options	typeref:typename:char *
exec_postrun	thread_options.h	/^	uint8_t exec_postrun[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
exec_postrun	tools/fiograph/fiograph.conf	/^[exec_postrun]$/;"	s
exec_prerun	thread_options.h	/^	char *exec_prerun;$/;"	m	struct:thread_options	typeref:typename:char *
exec_prerun	thread_options.h	/^	uint8_t exec_prerun[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
exec_prerun	tools/fiograph/fiograph.conf	/^[exec_prerun]$/;"	s
exec_profile	init.c	/^char *exec_profile = NULL;$/;"	v	typeref:typename:char *
exec_string	backend.c	/^static int exec_string(struct thread_options *o, const char *string,$/;"	f	typeref:typename:int	file:
exec_trigger	backend.c	/^void exec_trigger(const char *cmd)$/;"	f	typeref:typename:void
exec_trigger	fio.h	/^extern void exec_trigger(const char *);$/;"	p	typeref:typename:void
exists_and_not_regfile	file.h	/^extern bool exists_and_not_regfile(const char *);$/;"	p	typeref:typename:bool
exists_and_not_regfile	filesetup.c	/^bool exists_and_not_regfile(const char *filename)$/;"	f	typeref:typename:bool
exit	engines/xnvme.c	/^exit:$/;"	L	function:xnvme_fioe_get_file_size	file:
exit	engines/xnvme.c	/^exit:$/;"	L	function:xnvme_fioe_get_max_open_zones	file:
exit	engines/xnvme.c	/^exit:$/;"	L	function:xnvme_fioe_get_zoned_model	file:
exit	engines/xnvme.c	/^exit:$/;"	L	function:xnvme_fioe_report_zones	file:
exit	engines/xnvme.c	/^exit:$/;"	L	function:xnvme_fioe_reset_wp	file:
exit	helper_thread.c	/^	volatile int exit;$/;"	m	struct:helper_data	typeref:typename:volatile int	file:
exit	t/read-to-pipe-async.c	/^	int exit;$/;"	m	struct:thread_data	typeref:typename:int	file:
exit_backend	server.c	/^bool exit_backend = false;$/;"	v	typeref:typename:bool
exit_err	engines/libcufile.c	/^exit_err:$/;"	L	function:fio_libcufile_open_file	file:
exit_error	engines/libcufile.c	/^exit_error:$/;"	L	function:fio_libcufile_iomem_alloc	file:
exit_io_done	engines/cpu.c	/^	unsigned int exit_io_done;$/;"	m	struct:cpu_options	typeref:typename:unsigned int	file:
exit_thread	t/read-to-pipe-async.c	/^static void exit_thread(struct thread_data *thread,$/;"	f	typeref:typename:void	file:
exit_value	backend.c	/^static int exit_value;$/;"	v	typeref:typename:int	file:
exit_what	thread_options.h	/^	uint32_t exit_what;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
exit_what	thread_options.h	/^	unsigned int exit_what;$/;"	m	struct:thread_options	typeref:typename:unsigned int
exit_worker_fn	workqueue.h	/^	workqueue_exit_worker_fn *exit_worker_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_exit_worker_fn *
exitall_error	thread_options.h	/^	uint32_t exitall_error;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
exitall_error	thread_options.h	/^	unsigned int exitall_error;$/;"	m	struct:thread_options	typeref:typename:unsigned int
exitall_on_terminate	init.c	/^bool exitall_on_terminate = false;$/;"	v	typeref:typename:bool
exited	server.c	/^	int exited;$/;"	m	struct:fio_fork_item	typeref:typename:int	file:
exitval	server.c	/^	int exitval;$/;"	m	struct:fio_fork_item	typeref:typename:int	file:
exp/test-expression-parser	Makefile	/^exp\/test-expression-parser: exp\/test-expression-parser.o$/;"	t
exp/test-expression-parser.o	Makefile	/^exp\/test-expression-parser.o: exp\/test-expression-parser.c$/;"	t
expand_thread_area	init.c	/^static int expand_thread_area(void)$/;"	f	typeref:typename:int	file:
expand_variables	engines/exec.c	/^char *expand_variables(struct thread_options *o, char *arguments)$/;"	f	typeref:typename:char *
expbits	lib/ieee754.c	/^long double unpack754(uint64_t i, unsigned bits, unsigned expbits)$/;"	z	function:unpack754	typeref:typename:unsigned	file:
expbits	lib/ieee754.c	/^uint64_t pack754(long double f, unsigned bits, unsigned expbits)$/;"	z	function:pack754	typeref:typename:unsigned	file:
expbits	lib/ieee754.h	/^extern long double unpack754(uint64_t i, unsigned bits, unsigned expbits);$/;"	z	prototype:unpack754	typeref:typename:unsigned	file:
expbits	lib/ieee754.h	/^extern uint64_t pack754(long double f, unsigned bits, unsigned expbits);$/;"	z	prototype:pack754	typeref:typename:unsigned	file:
expected	t/axmap.c	/^static int check_next_free(struct axmap *map, uint64_t start, uint64_t expected)$/;"	z	function:check_next_free	typeref:typename:uint64_t	file:
expected	unittests/lib/num2str.c	/^	const char *expected;$/;"	m	struct:testcase	typeref:typename:const char *	file:
experimental_verify	thread_options.h	/^	uint32_t experimental_verify;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
experimental_verify	thread_options.h	/^	unsigned int experimental_verify;$/;"	m	struct:thread_options	typeref:typename:unsigned int
expires	helper_thread.c	/^	struct timespec	expires;$/;"	m	struct:interval_timer	typeref:struct:timespec	file:
extend_file	filesetup.c	/^static int extend_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
extensions	doc/conf.py	/^extensions = []$/;"	v
extent	t/dedupe.c	/^struct extent {$/;"	s	file:
extent_list	t/dedupe.c	/^	struct flist_head extent_list[0];$/;"	m	struct:chunk	typeref:struct:flist_head[0]	file:
f	backend.c	/^static bool fio_io_sync(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_io_sync	typeref:struct:fio_file *	file:
f	backend.c	/^static int fio_file_fsync(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_file_fsync	typeref:struct:fio_file *	file:
f	blktrace.c	/^static int discard_pdu(FILE* f, struct blk_io_trace *t)$/;"	z	function:discard_pdu	typeref:typename:FILE *	file:
f	blktrace.h	/^	FILE			*f;	\/\/ blktrace file$/;"	m	struct:blktrace_cursor	typeref:typename:FILE *
f	client.c	/^static void client_flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:client_flush_hist_samples	typeref:typename:FILE *	file:
f	diskutil.c	/^					  struct fio_file *f)$/;"	z	function:__init_disk_util	typeref:struct:fio_file *	file:
f	engines/cpu.c	/^			  struct fio_file fio_unused *f)$/;"	z	function:fio_cpuio_open	typeref:struct:fio_file fio_unused *	file:
f	engines/dev-dax.c	/^fio_devdax_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_get_file_size	typeref:struct:fio_file *	file:
f	engines/dev-dax.c	/^static int fio_devdax_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_close_file	typeref:struct:fio_file *	file:
f	engines/dev-dax.c	/^static int fio_devdax_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_devdax_file	typeref:struct:fio_file *	file:
f	engines/dev-dax.c	/^static int fio_devdax_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_open_file	typeref:struct:fio_file *	file:
f	engines/dfs.c	/^static int daos_fio_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_close	typeref:struct:fio_file *	file:
f	engines/dfs.c	/^static int daos_fio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_get_file_size	typeref:struct:fio_file *	file:
f	engines/dfs.c	/^static int daos_fio_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_invalidate	typeref:struct:fio_file *	file:
f	engines/dfs.c	/^static int daos_fio_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_open	typeref:struct:fio_file *	file:
f	engines/dfs.c	/^static int daos_fio_unlink(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_unlink	typeref:struct:fio_file *	file:
f	engines/exec.c	/^	      struct fio_file fio_unused * f)$/;"	z	function:fio_exec_open	typeref:struct:fio_file fio_unused *	file:
f	engines/falloc.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:open_file	typeref:struct:fio_file *	file:
f	engines/filecreate.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_file_size	typeref:struct:fio_file *	file:
f	engines/filecreate.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:open_file	typeref:struct:fio_file *	file:
f	engines/filedelete.c	/^static int delete_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:delete_file	typeref:struct:fio_file *	file:
f	engines/filedelete.c	/^static int delete_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:delete_invalidate	typeref:struct:fio_file *	file:
f	engines/filestat.c	/^static int stat_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:stat_file	typeref:struct:fio_file *	file:
f	engines/filestat.c	/^static int stat_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:stat_invalidate	typeref:struct:fio_file *	file:
f	engines/gfapi.h	/^extern int fio_gf_close_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_close_file	typeref:struct:fio_file *	file:
f	engines/gfapi.h	/^extern int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_get_file_size	typeref:struct:fio_file *	file:
f	engines/gfapi.h	/^extern int fio_gf_open_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_open_file	typeref:struct:fio_file *	file:
f	engines/gfapi.h	/^extern int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_unlink_file	typeref:struct:fio_file *	file:
f	engines/glusterfs.c	/^int fio_gf_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_close_file	typeref:struct:fio_file *	file:
f	engines/glusterfs.c	/^int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_get_file_size	typeref:struct:fio_file *	file:
f	engines/glusterfs.c	/^int fio_gf_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_open_file	typeref:struct:fio_file *	file:
f	engines/glusterfs.c	/^int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_unlink_file	typeref:struct:fio_file *	file:
f	engines/http.c	/^static int fio_http_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_http_invalidate	typeref:struct:fio_file *	file:
f	engines/http.c	/^static int fio_http_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_http_open	typeref:struct:fio_file *	file:
f	engines/ime.c	/^static int fio_ime_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:fio_ime_close_file	typeref:struct:fio_file *	file:
f	engines/ime.c	/^static int fio_ime_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_get_file_size	typeref:struct:fio_file *	file:
f	engines/ime.c	/^static int fio_ime_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_open_file	typeref:struct:fio_file *	file:
f	engines/ime.c	/^static int fio_ime_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_unlink_file	typeref:struct:fio_file *	file:
f	engines/io_uring.c	/^static int fio_ioring_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ioring_close_file	typeref:struct:fio_file *	file:
f	engines/io_uring.c	/^static int fio_ioring_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ioring_open_file	typeref:struct:fio_file *	file:
f	engines/libcufile.c	/^static int fio_libcufile_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libcufile_close_file	typeref:struct:fio_file *	file:
f	engines/libcufile.c	/^static int fio_libcufile_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libcufile_open_file	typeref:struct:fio_file *	file:
f	engines/libhdfs.c	/^int fio_hdfsio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_hdfsio_close_file	typeref:struct:fio_file *	file:
f	engines/libhdfs.c	/^int fio_hdfsio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_hdfsio_open_file	typeref:struct:fio_file *	file:
f	engines/libiscsi.c	/^			       char *initiator, struct fio_file *f, int i)$/;"	z	function:fio_iscsi_setup_lun	typeref:struct:fio_file *	file:
f	engines/libiscsi.c	/^static int fio_iscsi_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_iscsi_close_file	typeref:struct:fio_file *	file:
f	engines/libiscsi.c	/^static int fio_iscsi_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_iscsi_open_file	typeref:struct:fio_file *	file:
f	engines/libpmem.c	/^static int fio_libpmem_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libpmem_close_file	typeref:struct:fio_file *	file:
f	engines/libpmem.c	/^static int fio_libpmem_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_libpmem_file	typeref:struct:fio_file *	file:
f	engines/libpmem.c	/^static int fio_libpmem_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libpmem_open_file	typeref:struct:fio_file *	file:
f	engines/librpma_apm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:server_open_file	typeref:struct:fio_file *	file:
f	engines/librpma_fio.c	/^		struct fio_file *f)$/;"	z	function:librpma_fio_client_get_file_size	typeref:struct:fio_file *	file:
f	engines/librpma_fio.c	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	z	function:librpma_fio_allocate_pmem	typeref:struct:fio_file *	file:
f	engines/librpma_fio.c	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f)$/;"	z	function:librpma_fio_file_nop	typeref:struct:fio_file *	file:
f	engines/librpma_fio.c	/^int librpma_fio_server_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:librpma_fio_server_close_file	typeref:struct:fio_file *	file:
f	engines/librpma_fio.c	/^int librpma_fio_server_open_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:librpma_fio_server_open_file	typeref:struct:fio_file *	file:
f	engines/librpma_fio.h	/^		struct fio_file *f);$/;"	z	prototype:librpma_fio_client_get_file_size	typeref:struct:fio_file *	file:
f	engines/librpma_fio.h	/^		struct fio_file *f);$/;"	z	prototype:librpma_fio_server_close_file	typeref:struct:fio_file *	file:
f	engines/librpma_fio.h	/^		struct fio_file *f, struct rpma_conn_cfg *cfg);$/;"	z	prototype:librpma_fio_server_open_file	typeref:struct:fio_file *	file:
f	engines/librpma_fio.h	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:librpma_fio_allocate_pmem	typeref:struct:fio_file *	file:
f	engines/librpma_fio.h	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:librpma_fio_file_nop	typeref:struct:fio_file *	file:
f	engines/librpma_gpspm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:server_open_file	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_close_file	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_get_dev_info(struct libzbc_data *ld, struct fio_file *f)$/;"	z	function:libzbc_get_dev_info	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_get_file_size	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_get_max_open_zones	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_get_zoned_model	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_invalidate	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_open_dev(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_open_dev	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_open_file	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_report_zones	typeref:struct:fio_file *	file:
f	engines/libzbc.c	/^static int libzbc_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_reset_wp	typeref:struct:fio_file *	file:
f	engines/mmap.c	/^static bool fio_madvise_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_madvise_file	typeref:struct:fio_file *	file:
f	engines/mmap.c	/^static int fio_mmap_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_mmap_file	typeref:struct:fio_file *	file:
f	engines/mmap.c	/^static int fio_mmapio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mmapio_close_file	typeref:struct:fio_file *	file:
f	engines/mmap.c	/^static int fio_mmapio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mmapio_open_file	typeref:struct:fio_file *	file:
f	engines/mtd.c	/^static int fio_mtd_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_close_file	typeref:struct:fio_file *	file:
f	engines/mtd.c	/^static int fio_mtd_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_get_file_size	typeref:struct:fio_file *	file:
f	engines/mtd.c	/^static int fio_mtd_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_open_file	typeref:struct:fio_file *	file:
f	engines/nbd.c	/^static int nbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:nbd_invalidate	typeref:struct:fio_file *	file:
f	engines/nbd.c	/^static int nbd_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:nbd_open_file	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_accept(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_accept	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_close_file	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_connect(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_connect	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_open_file	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_send_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_send_open	typeref:struct:fio_file *	file:
f	engines/net.c	/^static int fio_netio_udp_recv_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_udp_recv_open	typeref:struct:fio_file *	file:
f	engines/net.c	/^static void fio_netio_send_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_send_close	typeref:struct:fio_file *	file:
f	engines/nfs.c	/^static int fio_libnfs_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libnfs_close	typeref:struct:fio_file *	file:
f	engines/nfs.c	/^static int fio_libnfs_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libnfs_open	typeref:struct:fio_file *	file:
f	engines/null.c	/^		     struct fio_file fio_unused *f)$/;"	z	function:null_open	typeref:struct:fio_file fio_unused *	file:
f	engines/null.c	/^	int fio_null_open(struct thread_data *, struct fio_file *f)$/;"	z	function:NullData::fio_null_open	typeref:struct:fio_file *	file:
f	engines/null.c	/^static int fio_null_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_null_open	typeref:struct:fio_file *	file:
f	engines/pmemblk.c	/^				  struct fio_file *f)$/;"	z	function:fio_pmemblk_close_file	typeref:struct:fio_file *	file:
f	engines/pmemblk.c	/^static int fio_pmemblk_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_get_file_size	typeref:struct:fio_file *	file:
f	engines/pmemblk.c	/^static int fio_pmemblk_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_open_file	typeref:struct:fio_file *	file:
f	engines/pmemblk.c	/^static int fio_pmemblk_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_unlink_file	typeref:struct:fio_file *	file:
f	engines/rados.c	/^static int fio_rados_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rados_invalidate	typeref:struct:fio_file *	file:
f	engines/rados.c	/^static int fio_rados_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rados_open	typeref:struct:fio_file *	file:
f	engines/rbd.c	/^static int fio_rbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rbd_invalidate	typeref:struct:fio_file *	file:
f	engines/rbd.c	/^static int fio_rbd_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rbd_open	typeref:struct:fio_file *	file:
f	engines/rdma.c	/^static int fio_rdmaio_accept(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_accept	typeref:struct:fio_file *	file:
f	engines/rdma.c	/^static int fio_rdmaio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_close_file	typeref:struct:fio_file *	file:
f	engines/rdma.c	/^static int fio_rdmaio_connect(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_connect	typeref:struct:fio_file *	file:
f	engines/rdma.c	/^static int fio_rdmaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_open_file	typeref:struct:fio_file *	file:
f	engines/sg.c	/^					     struct fio_file *f,$/;"	z	function:fio_sgio_ioctl_doio	typeref:struct:fio_file *	file:
f	engines/sg.c	/^					  struct fio_file *f,$/;"	z	function:fio_sgio_rw_doio	typeref:struct:fio_file *	file:
f	engines/sg.c	/^int fio_sgio_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_close	typeref:struct:fio_file *	file:
f	engines/sg.c	/^static int fio_sgio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_get_file_size	typeref:struct:fio_file *	file:
f	engines/sg.c	/^static int fio_sgio_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_open	typeref:struct:fio_file *	file:
f	engines/sg.c	/^static int fio_sgio_stream_control(struct fio_file *f, bool open_stream, uint16_t *stream_id)$/;"	z	function:fio_sgio_stream_control	typeref:struct:fio_file *	file:
f	engines/sg.c	/^static int fio_sgio_type_check(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_type_check	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^					   struct fio_file *f,$/;"	z	function:fio_skeleton_get_max_open_zones	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^			struct fio_file *f, enum zbd_zoned_model *model)$/;"	z	function:fio_skeleton_get_zoned_model	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^static int fio_skeleton_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_skeleton_close	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^static int fio_skeleton_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_skeleton_open	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^static int fio_skeleton_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_skeleton_report_zones	typeref:struct:fio_file *	file:
f	engines/skeleton_external.c	/^static int fio_skeleton_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_skeleton_reset_wp	typeref:struct:fio_file *	file:
f	engines/windowsaio.c	/^static int fio_windowsaio_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:fio_windowsaio_close_file	typeref:struct:fio_file *	file:
f	engines/windowsaio.c	/^static int fio_windowsaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_windowsaio_open_file	typeref:struct:fio_file *	file:
f	engines/windowsaio.c	/^static int windowsaio_invalidate_cache(struct fio_file *f)$/;"	z	function:windowsaio_invalidate_cache	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int _dev_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:_dev_open	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_close	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_get_file_size	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:xnvme_fioe_get_max_open_zones	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:xnvme_fioe_get_zoned_model	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_invalidate	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_open	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_report_zones(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_report_zones	typeref:struct:fio_file *	file:
f	engines/xnvme.c	/^static int xnvme_fioe_reset_wp(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_reset_wp	typeref:struct:fio_file *	file:
f	file.h	/^extern int __must_check file_lookup_open(struct fio_file *f, int flags);$/;"	z	prototype:file_lookup_open	typeref:struct:fio_file *	file:
f	filehash.c	/^struct fio_file *add_file_hash(struct fio_file *f)$/;"	z	function:add_file_hash	typeref:struct:fio_file *	file:
f	filehash.c	/^void remove_file_hash(struct fio_file *f)$/;"	z	function:remove_file_hash	typeref:struct:fio_file *	file:
f	filesetup.c	/^int file_invalidate_cache(struct thread_data *td, struct fio_file *f)$/;"	z	function:file_invalidate_cache	typeref:struct:fio_file *	file:
f	filesetup.c	/^int file_lookup_open(struct fio_file *f, int flags)$/;"	z	function:file_lookup_open	typeref:struct:fio_file *	file:
f	filesetup.c	/^int fio_set_directio(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_set_directio	typeref:struct:fio_file *	file:
f	filesetup.c	/^int generic_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:generic_close_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^int generic_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_get_file_size	typeref:struct:fio_file *	file:
f	filesetup.c	/^int generic_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_open_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^int generic_prepopulate_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_prepopulate_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^int put_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:put_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^static bool pre_read_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:pre_read_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int __file_invalidate_cache(struct thread_data *td, struct fio_file *f,$/;"	z	function:__file_invalidate_cache	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int bdev_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:bdev_size	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int char_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:char_size	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int check_rand_gen_limits(struct thread_data *td, struct fio_file *f,$/;"	z	function:check_rand_gen_limits	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int extend_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:extend_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:file_size	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_file_size	typeref:struct:fio_file *	file:
f	filesetup.c	/^static int native_fallocate(struct thread_data *td, struct fio_file *f)$/;"	z	function:native_fallocate	typeref:struct:fio_file *	file:
f	filesetup.c	/^static void __init_rand_distribution(struct thread_data *td, struct fio_file *f)$/;"	z	function:__init_rand_distribution	typeref:struct:fio_file *	file:
f	filesetup.c	/^static void fallocate_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fallocate_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^static void get_file_type(struct fio_file *f)$/;"	z	function:get_file_type	typeref:struct:fio_file *	file:
f	filesetup.c	/^uint64_t get_start_offset(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_start_offset	typeref:struct:fio_file *	file:
f	filesetup.c	/^void fio_file_free(struct fio_file *f)$/;"	z	function:fio_file_free	typeref:struct:fio_file *	file:
f	filesetup.c	/^void fio_file_reset(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_file_reset	typeref:struct:fio_file *	file:
f	filesetup.c	/^void get_file(struct fio_file *f)$/;"	z	function:get_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^void lock_file(struct thread_data *td, struct fio_file *f, enum fio_ddir ddir)$/;"	z	function:lock_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^void unlock_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:unlock_file	typeref:struct:fio_file *	file:
f	filesetup.c	/^void unlock_file_all(struct thread_data *td, struct fio_file *f)$/;"	z	function:unlock_file_all	typeref:struct:fio_file *	file:
f	gfio.c	/^	clickfunction f;$/;"	m	struct:button_spec	typeref:typename:clickfunction	file:
f	graph.c	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	z	function:graph_x_axis_unit_change_notify	typeref:typename:graph_axis_unit_change_callback	file:
f	graph.c	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	z	function:graph_y_axis_unit_change_notify	typeref:typename:graph_axis_unit_change_callback	file:
f	graph.h	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	z	prototype:graph_x_axis_unit_change_notify	typeref:typename:graph_axis_unit_change_callback	file:
f	graph.h	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	z	prototype:graph_y_axis_unit_change_notify	typeref:typename:graph_axis_unit_change_callback	file:
f	io_u.c	/^					    struct fio_file *f,$/;"	z	function:__get_next_rand_offset_zoned_abs	typeref:struct:fio_file *	file:
f	io_u.c	/^					 struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_pareto	typeref:struct:fio_file *	file:
f	io_u.c	/^					struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_gauss	typeref:struct:fio_file *	file:
f	io_u.c	/^					struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_zoned	typeref:struct:fio_file *	file:
f	io_u.c	/^				       struct fio_file *f, enum fio_ddir ddir,$/;"	z	function:__get_next_rand_offset_zipf	typeref:struct:fio_file *	file:
f	io_u.c	/^			      struct fio_file *f)$/;"	z	function:do_sync_file_range	typeref:struct:fio_file *	file:
f	io_u.c	/^static bool random_map_free(struct fio_file *f, const uint64_t block)$/;"	z	function:random_map_free	typeref:struct:fio_file *	file:
f	io_u.c	/^static int __get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:__get_next_rand_offset	typeref:struct:fio_file *	file:
f	io_u.c	/^static int get_next_rand_block(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_rand_block	typeref:struct:fio_file *	file:
f	io_u.c	/^static int get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_rand_offset	typeref:struct:fio_file *	file:
f	io_u.c	/^static int get_next_seq_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_seq_offset	typeref:struct:fio_file *	file:
f	io_u.c	/^static uint64_t last_block(struct thread_data *td, struct fio_file *f,$/;"	z	function:last_block	typeref:struct:fio_file *	file:
f	io_u.c	/^static void file_log_write_comp(const struct thread_data *td, struct fio_file *f,$/;"	z	function:file_log_write_comp	typeref:struct:fio_file *	file:
f	io_u.c	/^static void loop_cache_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:loop_cache_invalidate	typeref:struct:fio_file *	file:
f	io_u.c	/^void put_file_log(struct thread_data *td, struct fio_file *f)$/;"	z	function:put_file_log	typeref:struct:fio_file *	file:
f	ioengines.c	/^int td_io_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_close_file	typeref:struct:fio_file *	file:
f	ioengines.c	/^int td_io_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_get_file_size	typeref:struct:fio_file *	file:
f	ioengines.c	/^int td_io_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_open_file	typeref:struct:fio_file *	file:
f	ioengines.c	/^int td_io_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_unlink_file	typeref:struct:fio_file *	file:
f	iolog.c	/^static int inflate_gz_chunks(struct io_log *log, FILE *f)$/;"	z	function:inflate_gz_chunks	typeref:typename:FILE *	file:
f	iolog.c	/^static size_t inflate_chunk(struct iolog_compress *ic, int gz_hdr, FILE *f,$/;"	z	function:inflate_chunk	typeref:typename:FILE *	file:
f	iolog.c	/^static void *set_file_buffer(FILE *f)$/;"	z	function:set_file_buffer	typeref:typename:FILE *	file:
f	iolog.c	/^static void finish_chunk(z_stream *stream, FILE *f,$/;"	z	function:finish_chunk	typeref:typename:FILE *	file:
f	iolog.c	/^static void flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:flush_hist_samples	typeref:typename:FILE *	file:
f	iolog.c	/^void flush_samples(FILE *f, void *samples, uint64_t sample_size)$/;"	z	function:flush_samples	typeref:typename:FILE *	file:
f	iolog.c	/^void log_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:log_file	typeref:struct:fio_file *	file:
f	lib/ieee754.c	/^uint64_t pack754(long double f, unsigned bits, unsigned expbits)$/;"	z	function:pack754	typeref:typename:long double	file:
f	lib/ieee754.h	/^		double f;$/;"	m	union:fio_fp64::__anon13aa3979010a	typeref:typename:double
f	lib/ieee754.h	/^extern uint64_t pack754(long double f, unsigned bits, unsigned expbits);$/;"	z	prototype:pack754	typeref:typename:long double	file:
f	os/os-aix.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-aix.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-android.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-android.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-android.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:struct:fio_file *	file:
f	os/os-dragonfly.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-dragonfly.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-dragonfly.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os-dragonfly.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:struct:fio_file *	file:
f	os/os-freebsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-freebsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-freebsd.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os-freebsd.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:struct:fio_file *	file:
f	os/os-hpux.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-hpux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-hpux.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os-linux.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset,$/;"	z	function:fio_fallocate	typeref:struct:fio_file *	file:
f	os/os-linux.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-linux.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-linux.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:struct:fio_file *	file:
f	os/os-mac.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:struct:fio_file *	file:
f	os/os-mac.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-mac.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-mac.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os-mac.h	/^static inline int fio_set_odirect(struct fio_file *f)$/;"	z	function:fio_set_odirect	typeref:struct:fio_file *	file:
f	os/os-netbsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-netbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-openbsd.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-openbsd.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-solaris.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-solaris.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os-solaris.h	/^static inline int fio_set_odirect(struct fio_file *f)$/;"	z	function:fio_set_odirect	typeref:struct:fio_file *	file:
f	os/os-windows.h	/^static inline int blockdev_invalidate_cache(struct fio_file *f)$/;"	z	function:blockdev_invalidate_cache	typeref:struct:fio_file *	file:
f	os/os-windows.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	os/os-windows.h	/^static inline int chardev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:chardev_size	typeref:struct:fio_file *	file:
f	os/os.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:struct:fio_file *	file:
f	os/os.h	/^static inline int blockdev_size(struct fio_file *f, unsigned long long *bytes)$/;"	z	function:blockdev_size	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^				struct fio_file *f, uint64_t offset,$/;"	z	function:blkzoned_report_zones	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^				struct fio_file *f, uint64_t offset,$/;"	z	prototype:blkzoned_report_zones	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^			struct fio_file *f, enum zbd_zoned_model *model)$/;"	z	function:blkzoned_get_zoned_model	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^			struct fio_file *f, enum zbd_zoned_model *model);$/;"	z	prototype:blkzoned_get_zoned_model	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^extern int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:blkzoned_get_max_open_zones	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^extern int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:blkzoned_reset_wp	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^static inline int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_max_open_zones	typeref:struct:fio_file *	file:
f	oslib/blkzoned.h	/^static inline int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_reset_wp	typeref:struct:fio_file *	file:
f	oslib/linux-blkzoned.c	/^int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_max_open_zones	typeref:struct:fio_file *	file:
f	oslib/linux-blkzoned.c	/^int blkzoned_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_zoned_model	typeref:struct:fio_file *	file:
f	oslib/linux-blkzoned.c	/^int blkzoned_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_report_zones	typeref:struct:fio_file *	file:
f	oslib/linux-blkzoned.c	/^int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_reset_wp	typeref:struct:fio_file *	file:
f	t/dedupe.c	/^static int run_dedupe_threads(struct fio_file *f, uint64_t dev_size,$/;"	z	function:run_dedupe_threads	typeref:struct:fio_file *	file:
f	t/dedupe.c	/^static uint64_t get_size(struct fio_file *f, struct stat *sb)$/;"	z	function:get_size	typeref:struct:fio_file *	file:
f	t/io_uring.c	/^static int get_file_size(struct file *f)$/;"	z	function:get_file_size	typeref:struct:file *	file:
f	t/strided.py	/^            f = os.open(args.filename, os.O_RDONLY)$/;"	v
f	verify.c	/^				   struct fio_file *f, unsigned int *index)$/;"	z	function:__fill_file_completions	typeref:struct:fio_file *	file:
f	verify.c	/^		     const char *type, struct fio_file *f)$/;"	z	function:dump_buf	typeref:struct:fio_file *	file:
f	zbd.c	/^					const struct fio_file *f)$/;"	z	function:zbd_dec_and_reset_write_cnt	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^				      struct fio_file *f)$/;"	z	function:zbd_zone_align_file_sizes	typeref:struct:fio_file *	file:
f	zbd.c	/^				 const struct fio_file *f)$/;"	z	function:_zbd_reset_write_cnt	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^				const struct fio_file *f)$/;"	z	function:zbd_reset_write_cnt	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^				const struct fio_file *f, enum swd_action a)$/;"	z	function:zbd_process_swd	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static bool is_valid_offset(const struct fio_file *f, uint64_t offset)$/;"	z	function:is_valid_offset	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static bool zbd_is_seq_job(struct fio_file *f)$/;"	z	function:zbd_is_seq_job	typeref:struct:fio_file *	file:
f	zbd.c	/^static bool zbd_open_zone(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zbd_open_zone	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static bool zbd_zone_full(const struct fio_file *f, struct fio_zone_info *z,$/;"	z	function:zbd_zone_full	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static inline struct fio_zone_info *zbd_get_zone(const struct fio_file *f,$/;"	z	function:zbd_get_zone	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static inline unsigned int zbd_zone_idx(const struct fio_file *f,$/;"	z	function:zbd_zone_idx	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static int init_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:init_zone_info	typeref:struct:fio_file *	file:
f	zbd.c	/^static int parse_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:parse_zone_info	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_create_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_create_zone_info	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_get_max_open_zones	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_get_zoned_model	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_report_zones	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_wp	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_reset_zone(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_zone	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_reset_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_zones	typeref:struct:fio_file *	file:
f	zbd.c	/^static int zbd_set_max_open_zones(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_set_max_open_zones	typeref:struct:fio_file *	file:
f	zbd.c	/^static uint32_t pick_random_zone_idx(const struct fio_file *f,$/;"	z	function:pick_random_zone_idx	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static unsigned int zbd_offset_to_zone_idx(const struct fio_file *f,$/;"	z	function:zbd_offset_to_zone_idx	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static void zbd_check_swd(struct thread_data *td, const struct fio_file *f)$/;"	z	function:zbd_check_swd	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static void zbd_close_zone(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zbd_close_zone	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^static void zone_lock(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zone_lock	typeref:typename:const struct fio_file *	file:
f	zbd.c	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_file_reset	typeref:struct:fio_file *	file:
f	zbd.c	/^void zbd_free_zone_info(struct fio_file *f)$/;"	z	function:zbd_free_zone_info	typeref:struct:fio_file *	file:
f	zbd.c	/^zbd_offset_to_zone(const struct fio_file *f,  uint64_t offset)$/;"	z	function:zbd_offset_to_zone	typeref:typename:const struct fio_file *	file:
f	zbd.h	/^static inline void zbd_close_file(struct fio_file *f)$/;"	z	function:zbd_close_file	typeref:struct:fio_file *	file:
f	zbd.h	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:zbd_file_reset	typeref:struct:fio_file *	file:
f	zbd.h	/^void zbd_free_zone_info(struct fio_file *f);$/;"	z	prototype:zbd_free_zone_info	typeref:struct:fio_file *	file:
f_err	init.c	/^FILE *f_err = NULL;$/;"	v	typeref:typename:FILE *
f_err	t/debug.c	/^FILE *f_err;$/;"	v	typeref:typename:FILE *
f_out	init.c	/^FILE *f_out = NULL;$/;"	v	typeref:typename:FILE *
facility	os/windows/posix.c	/^void openlog(const char *ident, int logopt, int facility)$/;"	z	function:openlog	typeref:typename:int	file:
facility	os/windows/posix/include/syslog.h	/^void openlog(const char *ident, int logopt, int facility);$/;"	z	prototype:openlog	typeref:typename:int	file:
fadvise_advice	os/linux/io_uring.h	/^		__u32		fadvise_advice;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
fadvise_hint	thread_options.h	/^	uint32_t fadvise_hint;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
fadvise_hint	thread_options.h	/^	unsigned int fadvise_hint;$/;"	m	struct:thread_options	typeref:typename:unsigned int
fail	client.c	/^fail:$/;"	L	function:fio_send_file	file:
fail	init.c	/^fail:$/;"	L	function:ioengine_load	file:
fail	server.c	/^fail:$/;"	L	function:fio_server_get_verify_state	file:
fail	smalloc.c	/^fail:$/;"	L	function:__smalloc_pool	file:
failed	engines/glusterfs_async.c	/^failed:$/;"	L	function:fio_gf_async_queue	file:
failed	engines/rados.c	/^failed:$/;"	L	function:_fio_setup_rados_data	file:
failed	engines/rados.c	/^failed:$/;"	L	function:fio_rados_queue	file:
failed	engines/rbd.c	/^failed:$/;"	L	function:_fio_setup_rbd_data	file:
failed	engines/rbd.c	/^failed:$/;"	L	function:fio_rbd_init	file:
failed	engines/rbd.c	/^failed:$/;"	L	function:fio_rbd_queue	file:
failed	t/readonly.py	/^    failed = 0$/;"	v
failed	t/steadystate_tests.py	/^                                failed = failed + 1$/;"	v
failed	t/steadystate_tests.py	/^                            failed = failed + 1$/;"	v
failed	t/steadystate_tests.py	/^                        failed = failed + 1$/;"	v
failed	t/steadystate_tests.py	/^                    failed = failed + 1$/;"	v
failed	t/steadystate_tests.py	/^            failed = failed + 1$/;"	v
failed	t/steadystate_tests.py	/^    failed = 0$/;"	v
failed	t/strided.py	/^    failed = 0$/;"	v
failed_comp	engines/rados.c	/^failed_comp:$/;"	L	function:fio_rados_queue	file:
failed_comp	engines/rbd.c	/^failed_comp:$/;"	L	function:fio_rbd_queue	file:
failed_early	engines/rados.c	/^failed_early:$/;"	L	function:_fio_rados_connect	file:
failed_early	engines/rbd.c	/^failed_early:$/;"	L	function:_fio_rbd_connect	file:
failed_obj_create	engines/rados.c	/^failed_obj_create:$/;"	L	function:_fio_rados_connect	file:
failed_open	engines/rbd.c	/^failed_open:$/;"	L	function:_fio_rbd_connect	file:
failed_poll	engines/rbd.c	/^failed_poll:$/;"	L	function:_fio_rbd_connect	file:
failed_shutdown	engines/rados.c	/^failed_shutdown:$/;"	L	function:_fio_rados_connect	file:
failed_shutdown	engines/rbd.c	/^failed_shutdown:$/;"	L	function:_fio_rbd_connect	file:
failed_write_op	engines/rados.c	/^failed_write_op:$/;"	L	function:fio_rados_queue	file:
failure	engines/xnvme.c	/^failure:$/;"	L	function:_dev_open	file:
fakeargv	t/fuzz/fuzz_parseini.c	/^const char *const fakeargv[] = {(char *) "fuzz",$/;"	v	typeref:typename:const char * const[]
fallocate	helpers.c	/^int fallocate(int fd, int mode, off_t offset, off_t len)$/;"	f	typeref:typename:int
fallocate	helpers.h	/^extern int fallocate(int fd, int mode, off_t offset, off_t len);$/;"	p	typeref:typename:int
fallocate_file	filesetup.c	/^static void fallocate_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void	file:
fallocate_mode	thread_options.h	/^	enum fio_fallocate_mode fallocate_mode;$/;"	m	struct:thread_options	typeref:enum:fio_fallocate_mode
fallocate_mode	thread_options.h	/^	uint32_t fallocate_mode;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
false	lib/types.h	/^#define false	/;"	d
fast_test	t/time-test.c	/^static long long test_clock(int mode, int cycles_per_usec, int fast_test,$/;"	z	function:test_clock	typeref:typename:int	file:
fatal	configure	/^fatal() {$/;"	f
fatal	t/one-core-peak.sh	/^fatal() {$/;"	f
fc_data	engines/filecreate.c	/^struct fc_data {$/;"	s	file:
fc_data	engines/filedelete.c	/^struct fc_data {$/;"	s	file:
fc_data	engines/filestat.c	/^struct fc_data {$/;"	s	file:
fcntl	os/os-windows.h	/^int fcntl(int fildes, int cmd, ...);$/;"	p	typeref:typename:int
fcntl	os/windows/posix.c	/^int fcntl(int fildes, int cmd, ...)$/;"	f	typeref:typename:int
fd	client.c	/^static int read_data(int fd, void *data, size_t size)$/;"	z	function:read_data	typeref:typename:int	file:
fd	client.c	/^static int read_ini_data(int fd, void *data, size_t size)$/;"	z	function:read_ini_data	typeref:typename:int	file:
fd	client.c	/^static struct fio_client *find_client_by_fd(int fd)$/;"	z	function:find_client_by_fd	typeref:typename:int	file:
fd	client.c	/^static void sendfile_reply(int fd, struct cmd_sendfile_reply *rep,$/;"	z	function:sendfile_reply	typeref:typename:int	file:
fd	client.h	/^	int fd;$/;"	m	struct:fio_client	typeref:typename:int
fd	engines/gfapi.h	/^	glfs_fd_t *fd;$/;"	m	struct:gf_data	typeref:typename:glfs_fd_t *
fd	engines/glusterfs_async.c	/^static void gf_async_cb(glfs_fd_t * fd, ssize_t ret, struct glfs_stat *prestat,$/;"	z	function:gf_async_cb	typeref:typename:glfs_fd_t *	file:
fd	engines/ime.c	/^	int 			fd;		\/* File descriptor *\/$/;"	m	struct:imesio_req	typeref:typename:int	file:
fd	engines/net.c	/^static int poll_wait(struct thread_data *td, int fd, short events)$/;"	z	function:poll_wait	typeref:typename:int	file:
fd	engines/net.c	/^static int set_mss(struct thread_data *td, int fd)$/;"	z	function:set_mss	typeref:typename:int	file:
fd	engines/net.c	/^static int set_window_size(struct thread_data *td, int fd)$/;"	z	function:set_window_size	typeref:typename:int	file:
fd	engines/net.c	/^static int vmsplice_io_u(struct io_u *io_u, int fd, unsigned int len)$/;"	z	function:vmsplice_io_u	typeref:typename:int	file:
fd	engines/rbd.c	/^	int fd; \/* add for poll *\/$/;"	m	struct:rbd_data	typeref:typename:int	file:
fd	engines/sg.c	/^static int sg_fd_read(int fd, void *data, size_t size)$/;"	z	function:sg_fd_read	typeref:typename:int	file:
fd	file.h	/^	int fd;$/;"	m	struct:fio_file	typeref:typename:int
fd	helper_thread.c	/^int pipe_over_loopback(int fd[2])$/;"	z	function:pipe_over_loopback	typeref:typename:int[2]	file:
fd	helper_thread.c	/^static int make_nonblocking(int fd)$/;"	z	function:make_nonblocking	typeref:typename:int	file:
fd	helper_thread.c	/^static int read_from_pipe(int fd, void *buf, size_t len)$/;"	z	function:read_from_pipe	typeref:typename:int	file:
fd	helper_thread.c	/^static int write_to_pipe(int fd, const void *buf, size_t len)$/;"	z	function:write_to_pipe	typeref:typename:int	file:
fd	helper_thread.c	/^static uint8_t wait_for_action(int fd, unsigned int timeout_ms)$/;"	z	function:wait_for_action	typeref:typename:int	file:
fd	helpers.c	/^int fallocate(int fd, int mode, off_t offset, off_t len)$/;"	z	function:fallocate	typeref:typename:int	file:
fd	helpers.c	/^int posix_fadvise(int fd, off_t offset, off_t len, int advice)$/;"	z	function:posix_fadvise	typeref:typename:int	file:
fd	helpers.c	/^int posix_fallocate(int fd, off_t offset, off_t len)$/;"	z	function:posix_fallocate	typeref:typename:int	file:
fd	helpers.c	/^int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	function:sync_file_range	typeref:typename:int	file:
fd	helpers.h	/^extern int fallocate(int fd, int mode, off_t offset, off_t len);$/;"	z	prototype:fallocate	typeref:typename:int	file:
fd	helpers.h	/^extern int posix_fadvise(int fd, off_t offset, off_t len, int advice);$/;"	z	prototype:posix_fadvise	typeref:typename:int	file:
fd	helpers.h	/^extern int posix_fallocate(int fd, off_t offset, off_t len);$/;"	z	prototype:posix_fallocate	typeref:typename:int	file:
fd	helpers.h	/^extern int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	prototype:sync_file_range	typeref:typename:int	file:
fd	libfio.c	/^int fio_set_fd_nonblocking(int fd, const char *who)$/;"	z	function:fio_set_fd_nonblocking	typeref:typename:int	file:
fd	os/linux/io_uring.h	/^	__s32	fd;		\/* file descriptor to do IO on *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__s32
fd	os/os-linux.h	/^static inline ssize_t preadv2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:preadv2	typeref:typename:int	file:
fd	os/os-linux.h	/^static inline ssize_t pwritev2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:pwritev2	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_erase	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_bad	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_locked	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_lock	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_mark_bad	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_read	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_read_oob	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo)$/;"	z	function:mtd_regioninfo	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_torture	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_unlock	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	function:mtd_write	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_write_img	typeref:typename:int	file:
fd	oslib/libmtd.c	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_write_oob	typeref:typename:int	file:
fd	oslib/libmtd.c	/^static int do_oob_op(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:do_oob_op	typeref:typename:int	file:
fd	oslib/libmtd.c	/^static int legacy_auto_oob_layout(const struct mtd_dev_info *mtd, int fd,$/;"	z	function:legacy_auto_oob_layout	typeref:typename:int	file:
fd	oslib/libmtd.c	/^static int mtd_xlock(const struct mtd_dev_info *mtd, int fd, int eb, int req,$/;"	z	function:mtd_xlock	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_erase	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_bad	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_locked	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_lock	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_mark_bad	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_read	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_read_oob	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo);$/;"	z	prototype:mtd_regioninfo	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_torture	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_unlock	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	prototype:mtd_write	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_write_img	typeref:typename:int	file:
fd	oslib/libmtd.h	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_write_oob	typeref:typename:int	file:
fd	server.c	/^bool fio_server_poll_fd(int fd, short events, int timeout)$/;"	z	function:fio_server_poll_fd	typeref:typename:int	file:
fd	server.c	/^int fio_net_send_cmd(int fd, uint16_t opcode, const void *buf, off_t size,$/;"	z	function:fio_net_send_cmd	typeref:typename:int	file:
fd	server.h	/^extern bool fio_server_poll_fd(int fd, short events, int timeout);$/;"	z	prototype:fio_server_poll_fd	typeref:typename:int	file:
fd	t/btrace2fio.c	/^static int discard_pdu(struct fifo *fifo, int fd, struct blk_io_trace *t)$/;"	z	function:discard_pdu	typeref:typename:int	file:
fd	t/btrace2fio.c	/^static int refill_fifo(struct fifo *fifo, int fd)$/;"	z	function:refill_fifo	typeref:typename:int	file:
fd	t/btrace2fio.c	/^static int trace_fifo_get(struct fifo *fifo, int fd, void *buf,$/;"	z	function:trace_fifo_get	typeref:typename:int	file:
fd	t/dedupe.c	/^	int fd;$/;"	m	struct:worker_thread	typeref:typename:int	file:
fd	t/dedupe.c	/^static int __read_block(int fd, void *buf, off_t offset, size_t count)$/;"	z	function:__read_block	typeref:typename:int	file:
fd	t/dedupe.c	/^static int read_block(int fd, void *buf, off_t offset)$/;"	z	function:read_block	typeref:typename:int	file:
fd	t/dedupe.c	/^static unsigned int read_blocks(int fd, void *buf, off_t offset, size_t size)$/;"	z	function:read_blocks	typeref:typename:int	file:
fd	t/io_uring.c	/^	__s32	fd;$/;"	m	struct:io_uring_map_buffers	typeref:typename:__s32	file:
fd	t/io_uring.c	/^static void io_uring_probe(int fd)$/;"	z	function:io_uring_probe	typeref:typename:int	file:
fd	t/read-to-pipe-async.c	/^	int fd;$/;"	m	struct:work_item	typeref:typename:int	file:
fd_flags	engines/sg.c	/^	int *fd_flags;$/;"	m	struct:sgio_data	typeref:typename:int *	file:
fdatasync	os/os-windows.h	/^int fdatasync(int fildes);$/;"	p	typeref:typename:int
fdatasync	os/windows/posix.c	/^int fdatasync(int fildes)$/;"	f	typeref:typename:int
fdatasync_blocks	thread_options.h	/^	uint32_t fdatasync_blocks;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
fdatasync_blocks	thread_options.h	/^	unsigned int fdatasync_blocks;$/;"	m	struct:thread_options	typeref:typename:unsigned int
fdin	engines/net.c	/^static int splice_io_u(int fdin, int fdout, unsigned int len)$/;"	z	function:splice_io_u	typeref:typename:int	file:
fdout	engines/net.c	/^static int splice_io_u(int fdin, int fdout, unsigned int len)$/;"	z	function:splice_io_u	typeref:typename:int	file:
fds	engines/io_uring.c	/^	int *fds;$/;"	m	struct:ioring_data	typeref:typename:int *	file:
fds	engines/sg.c	/^static int pollin_events(struct pollfd *pfds, int fds)$/;"	z	function:pollin_events	typeref:typename:int	file:
fds	os/linux/io_uring.h	/^	__aligned_u64 \/* __s32 * *\/ fds;$/;"	m	struct:io_uring_files_update	typeref:typename:__aligned_u64
fds	os/windows/posix.c	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout)$/;"	z	function:poll	typeref:struct:pollfd[]	file:
fds	os/windows/posix/include/poll.h	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout);$/;"	z	prototype:poll	typeref:struct:pollfd[]	file:
fds	t/io_uring.c	/^	__s32 *fds;$/;"	m	struct:submitter	typeref:typename:__s32 *	file:
feature	os/os-linux.h	/^static inline bool os_cpu_has(cpu_features feature)$/;"	z	function:os_cpu_has	typeref:typename:cpu_features	file:
feature	os/os.h	/^static inline bool os_cpu_has(cpu_features feature)$/;"	z	function:os_cpu_has	typeref:typename:cpu_features	file:
feature_not_found	configure	/^feature_not_found() {$/;"	f
features	os/linux/io_uring.h	/^	__u32 features;$/;"	m	struct:io_uring_params	typeref:typename:__u32
ff	filelock.c	/^static void put_filelock(struct fio_filelock *ff)$/;"	z	function:put_filelock	typeref:struct:fio_filelock *	file:
ffi	server.c	/^static void fio_server_check_fork_item(struct fio_fork_item *ffi)$/;"	z	function:fio_server_check_fork_item	typeref:struct:fio_fork_item *	file:
ffi	server.c	/^static void fio_server_fork_item_done(struct fio_fork_item *ffi, bool stop)$/;"	z	function:fio_server_fork_item_done	typeref:struct:fio_fork_item *	file:
ffi_element	server.c	/^struct ffi_element {$/;"	s	file:
ffs	filelock.c	/^	struct fio_filelock ffs[MAX_FILELOCKS];$/;"	m	struct:filelock_data	typeref:struct:fio_filelock[]	file:
ffs64	lib/ffz.h	/^static inline int ffs64(uint64_t word)$/;"	f	typeref:typename:int
ffz	lib/ffz.h	/^#define ffz(/;"	d
ffz	lib/ffz.h	/^static inline int ffz(unsigned long bitmask)$/;"	f	typeref:typename:int
ffz64	lib/ffz.h	/^static inline int ffz64(uint64_t bitmask)$/;"	f	typeref:typename:int
fifo	blktrace.h	/^	struct fifo		*fifo;	\/\/ fifo queue for reading$/;"	m	struct:blktrace_cursor	typeref:struct:fifo *
fifo	fifo.c	/^unsigned int fifo_get(struct fifo *fifo, void *buf, unsigned int len)$/;"	z	function:fifo_get	typeref:struct:fifo *	file:
fifo	fifo.c	/^unsigned int fifo_put(struct fifo *fifo, void *buffer, unsigned int len)$/;"	z	function:fifo_put	typeref:struct:fifo *	file:
fifo	fifo.c	/^void fifo_free(struct fifo *fifo)$/;"	z	function:fifo_free	typeref:struct:fifo *	file:
fifo	fifo.h	/^static inline unsigned int fifo_len(struct fifo *fifo)$/;"	z	function:fifo_len	typeref:struct:fifo *	file:
fifo	fifo.h	/^static inline unsigned int fifo_room(struct fifo *fifo)$/;"	z	function:fifo_room	typeref:struct:fifo *	file:
fifo	fifo.h	/^struct fifo {$/;"	s
fifo	t/btrace2fio.c	/^static int discard_pdu(struct fifo *fifo, int fd, struct blk_io_trace *t)$/;"	z	function:discard_pdu	typeref:struct:fifo *	file:
fifo	t/btrace2fio.c	/^static int refill_fifo(struct fifo *fifo, int fd)$/;"	z	function:refill_fifo	typeref:struct:fifo *	file:
fifo	t/btrace2fio.c	/^static int trace_fifo_get(struct fifo *fifo, int fd, void *buf,$/;"	z	function:trace_fifo_get	typeref:struct:fifo *	file:
fifo_alloc	fifo.c	/^struct fifo *fifo_alloc(unsigned int size)$/;"	f	typeref:struct:fifo *
fifo_alloc	fifo.h	/^struct fifo *fifo_alloc(unsigned int);$/;"	p	typeref:struct:fifo *
fifo_free	fifo.c	/^void fifo_free(struct fifo *fifo)$/;"	f	typeref:typename:void
fifo_free	fifo.h	/^void fifo_free(struct fifo *);$/;"	p	typeref:typename:void
fifo_get	fifo.c	/^unsigned int fifo_get(struct fifo *fifo, void *buf, unsigned int len)$/;"	f	typeref:typename:unsigned int
fifo_get	fifo.h	/^unsigned int fifo_get(struct fifo *, void *, unsigned int);$/;"	p	typeref:typename:unsigned int
fifo_len	fifo.h	/^static inline unsigned int fifo_len(struct fifo *fifo)$/;"	f	typeref:typename:unsigned int
fifo_put	fifo.c	/^unsigned int fifo_put(struct fifo *fifo, void *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned int
fifo_put	fifo.h	/^unsigned int fifo_put(struct fifo *, void *, unsigned int);$/;"	p	typeref:typename:unsigned int
fifo_room	fifo.h	/^static inline unsigned int fifo_room(struct fifo *fifo)$/;"	f	typeref:typename:unsigned int
fildes	os/os-windows.h	/^int fcntl(int fildes, int cmd, ...);$/;"	z	prototype:fcntl	typeref:typename:int	file:
fildes	os/os-windows.h	/^int fdatasync(int fildes);$/;"	z	prototype:fdatasync	typeref:typename:int	file:
fildes	os/os-windows.h	/^int fsync(int fildes);$/;"	z	prototype:fsync	typeref:typename:int	file:
fildes	os/os-windows.h	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);$/;"	z	prototype:pread	typeref:typename:int	file:
fildes	os/os-windows.h	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	prototype:pwrite	typeref:typename:int	file:
fildes	os/windows/posix.c	/^int fcntl(int fildes, int cmd, ...)$/;"	z	function:fcntl	typeref:typename:int	file:
fildes	os/windows/posix.c	/^int fdatasync(int fildes)$/;"	z	function:fdatasync	typeref:typename:int	file:
fildes	os/windows/posix.c	/^int fsync(int fildes)$/;"	z	function:fsync	typeref:typename:int	file:
fildes	os/windows/posix.c	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset)$/;"	z	function:pread	typeref:typename:int	file:
fildes	os/windows/posix.c	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	function:pwrite	typeref:typename:int	file:
fildes	os/windows/posix.c	/^ssize_t readv(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:readv	typeref:typename:int	file:
fildes	os/windows/posix.c	/^ssize_t writev(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:writev	typeref:typename:int	file:
fildes	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:int	file:
fildes	os/windows/posix/include/sys/mman.h	/^		int fildes, off_t off);$/;"	z	prototype:mmap	typeref:typename:int	file:
fildes	os/windows/posix/include/sys/uio.h	/^ ssize_t readv(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:readv	typeref:typename:int	file:
fildes	os/windows/posix/include/sys/uio.h	/^ ssize_t writev(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:writev	typeref:typename:int	file:
file	backend.c	/^static int set_ioscheduler(struct thread_data *td, struct fio_file *file)$/;"	z	function:set_ioscheduler	typeref:struct:fio_file *	file:
file	client.h	/^	char *file;$/;"	m	struct:client_file	typeref:typename:char *
file	init.c	/^		char *file, int is_buf, int stonewall_flag, int type,$/;"	z	function:__parse_jobs_ini	typeref:typename:char *	file:
file	init.c	/^int parse_jobs_ini(char *file, int is_buf, int stonewall_flag, int type)$/;"	z	function:parse_jobs_ini	typeref:typename:char *	file:
file	io_u.h	/^	struct fio_file *file;$/;"	m	struct:io_u	typeref:struct:fio_file *
file	iolog.c	/^int iolog_file_inflate(const char *file)$/;"	z	function:iolog_file_inflate	typeref:typename:const char *	file:
file	iolog.h	/^		struct fio_file *file;$/;"	m	union:io_piece::__anona1301755070a	typeref:struct:fio_file *
file	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	z	function:yy_create_buffer	typeref:typename:FILE *	file:
file	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	z	function:yy_init_buffer	typeref:typename:FILE *	file:
file	lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );$/;"	z	prototype:yy_create_buffer	typeref:typename:FILE *	file:
file	lex.yy.c	/^static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );$/;"	z	prototype:yy_init_buffer	typeref:typename:FILE *	file:
file	os/windows/posix.c	/^void *dlopen(const char *file, int mode)$/;"	z	function:dlopen	typeref:typename:const char *	file:
file	os/windows/posix/include/dlfcn.h	/^void *dlopen(const char *file, int mode);$/;"	z	prototype:dlopen	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_data(const char *file, void *buf, int buf_len)$/;"	z	function:read_data	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_hex_int(const char *file, int *value)$/;"	z	function:read_hex_int	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_hex_ll(const char *file, long long *value)$/;"	z	function:read_hex_ll	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_major(const char *file, int *major, int *minor)$/;"	z	function:read_major	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_pos_int(const char *file, int *value)$/;"	z	function:read_pos_int	typeref:typename:const char *	file:
file	oslib/libmtd.c	/^static int read_pos_ll(const char *file, long long *value)$/;"	z	function:read_pos_ll	typeref:typename:const char *	file:
file	server.h	/^	uint8_t file[];$/;"	m	struct:cmd_load_file_pdu	typeref:typename:uint8_t[]
file	t/dedupe.c	/^static struct fio_file file;$/;"	v	typeref:struct:fio_file	file:
file	t/io_uring.c	/^struct file {$/;"	s	file:
file	t/read-to-pipe-async.c	/^static char *file;$/;"	v	typeref:typename:char *	file:
file	t/verify-state.c	/^static int show_file(const char *file)$/;"	z	function:show_file	typeref:typename:const char *	file:
file	y.tab.c	/^extern void yyrestart(FILE *file);$/;"	z	prototype:yyrestart	typeref:typename:FILE *	file:
file	zbd.c	/^static int zbd_init_zone_info(struct thread_data *td, struct fio_file *file)$/;"	z	function:zbd_init_zone_info	typeref:struct:fio_file *	file:
fileMappings	os/windows/posix.c	/^HANDLE fileMappings[1024];$/;"	v	typeref:typename:HANDLE[1024]
file_act	iolog.c	/^#define file_act(/;"	d	file:
file_action	iolog.h	/^	unsigned int file_action;$/;"	m	struct:io_piece	typeref:typename:unsigned int
file_add_recent	gfio.c	/^static void file_add_recent(struct gui *ui, const gchar *uri)$/;"	f	typeref:typename:void	file:
file_append	thread_options.h	/^	uint32_t file_append;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
file_append	thread_options.h	/^	unsigned int file_append;$/;"	m	struct:thread_options	typeref:typename:unsigned int
file_bloom	filehash.c	/^static struct bloom *file_bloom;$/;"	v	typeref:struct:bloom *	file:
file_bloom_exists	filehash.c	/^bool file_bloom_exists(const char *fname, bool set)$/;"	f	typeref:typename:bool
file_bloom_exists	filehash.h	/^extern bool file_bloom_exists(const char *, bool);$/;"	p	typeref:typename:bool
file_cache	blktrace.c	/^struct file_cache {$/;"	s	file:
file_close	gfio.c	/^static void file_close(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
file_close_shadow_fds	filesetup.c	/^static int file_close_shadow_fds(struct thread_data *td)$/;"	f	typeref:typename:int	file:
file_comp	verify-state.h	/^struct file_comp {$/;"	s
file_depth	t/io_uring.c	/^static unsigned file_depth(struct submitter *s)$/;"	f	typeref:typename:unsigned	file:
file_depths	t/io_uring.c	/^static void file_depths(char *buf)$/;"	f	typeref:typename:void	file:
file_hash	filehash.c	/^static struct flist_head *file_hash;$/;"	v	typeref:struct:flist_head *	file:
file_hash_exit	filehash.c	/^void file_hash_exit(void)$/;"	f	typeref:typename:void
file_hash_exit	filehash.h	/^extern void file_hash_exit(void);$/;"	p	typeref:typename:void
file_hash_init	filehash.c	/^void file_hash_init(void)$/;"	f	typeref:typename:void
file_hash_init	filehash.h	/^extern void file_hash_init(void);$/;"	p	typeref:typename:void
file_hash_size	filehash.c	/^static unsigned int file_hash_size = HASH_BUCKETS * sizeof(struct flist_head);$/;"	v	typeref:typename:unsigned int	file:
file_index	os/linux/io_uring.h	/^		__u32	file_index;$/;"	m	union:io_uring_sqe::__anon2bbba927050a	typeref:typename:__u32
file_invalidate_cache	file.h	/^extern int __must_check file_invalidate_cache(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
file_invalidate_cache	filesetup.c	/^int file_invalidate_cache(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
file_lock_mode	file.h	/^enum file_lock_mode {$/;"	g
file_lock_mode	thread_options.h	/^	enum file_lock_mode file_lock_mode;$/;"	m	struct:thread_options	typeref:enum:file_lock_mode
file_lock_mode	thread_options.h	/^	uint32_t file_lock_mode;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
file_locks	fio.h	/^	unsigned char *file_locks;$/;"	m	struct:thread_data	typeref:typename:unsigned char *
file_log_act	iolog.h	/^enum file_log_act {$/;"	g
file_log_act	iolog.h	/^extern void log_file(struct thread_data *, struct fio_file *, enum file_log_act);$/;"	z	prototype:log_file	typeref:meta:enum	file:
file_log_write_comp	io_u.c	/^static void file_log_write_comp(const struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:void	file:
file_lookup_open	file.h	/^extern int __must_check file_lookup_open(struct fio_file *f, int flags);$/;"	p	typeref:typename:int __must_check
file_lookup_open	filesetup.c	/^int file_lookup_open(struct fio_file *f, int flags)$/;"	f	typeref:typename:int
file_name	diskutil.c	/^static int get_device_numbers(char *file_name, int *maj, int *min)$/;"	z	function:get_device_numbers	typeref:typename:char *	file:
file_name	engines/libhdfs.c	/^static int get_chunck_name(char *dest, char *file_name, uint64_t chunk_id) {$/;"	z	function:get_chunck_name	typeref:typename:char *	file:
file_name	file.h	/^	char *file_name;$/;"	m	struct:fio_file	typeref:typename:char *
file_name	filesetup.c	/^struct file_name {$/;"	s	file:
file_name	oslib/linux-blkzoned.c	/^static char *blkzoned_get_sysfs_attr(const char *file_name, const char *attr)$/;"	z	function:blkzoned_get_sysfs_attr	typeref:typename:const char *	file:
file_new	gfio.c	/^static void file_new(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
file_offset	file.h	/^	uint64_t file_offset;$/;"	m	struct:fio_file	typeref:typename:uint64_t
file_open	gfio.c	/^static void file_open(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
file_open	gfio.c	/^static void file_open(GtkWidget *w, gpointer data);$/;"	p	typeref:typename:void	file:
file_randommap	io_ddir.h	/^#define file_randommap(/;"	d
file_save	gfio.c	/^static void file_save(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
file_service_file	fio.h	/^	struct fio_file *file_service_file;$/;"	m	struct:thread_data	typeref:struct:fio_file *
file_service_left	fio.h	/^	unsigned int file_service_left;$/;"	m	struct:thread_data	typeref:typename:unsigned int
file_service_nr	fio.h	/^	unsigned int file_service_nr;$/;"	m	struct:thread_data	typeref:typename:unsigned int
file_service_type	thread_options.h	/^	uint32_t file_service_type;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
file_service_type	thread_options.h	/^	unsigned int file_service_type;$/;"	m	struct:thread_options	typeref:typename:unsigned int
file_size	filesetup.c	/^static int file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
file_size_high	thread_options.h	/^	uint64_t file_size_high;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
file_size_high	thread_options.h	/^	unsigned long long file_size_high;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
file_size_low	thread_options.h	/^	uint64_t file_size_low;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
file_size_low	thread_options.h	/^	unsigned long long file_size_low;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
file_size_state	fio.h	/^	struct frand_state file_size_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
filelock_data	filelock.c	/^static struct filelock_data {$/;"	s	file:
filename	blktrace.c	/^bool init_blktrace_read(struct thread_data *td, const char *filename, int need_swap)$/;"	z	function:init_blktrace_read	typeref:typename:const char *	file:
filename	blktrace.c	/^bool is_blktrace(const char *filename, int *need_swap)$/;"	z	function:is_blktrace	typeref:typename:const char *	file:
filename	cgroup.c	/^			     const char *filename, unsigned int val,$/;"	z	function:write_int_to_file	typeref:typename:const char *	file:
filename	client.c	/^					const char *filename)$/;"	z	function:__fio_client_send_remote_ini	typeref:typename:const char *	file:
filename	client.c	/^				       const char *filename)$/;"	z	function:__fio_client_send_local_ini	typeref:typename:const char *	file:
filename	client.c	/^int fio_client_send_ini(struct fio_client *client, const char *filename,$/;"	z	function:fio_client_send_ini	typeref:typename:const char *	file:
filename	client.c	/^int fio_clients_send_ini(const char *filename)$/;"	z	function:fio_clients_send_ini	typeref:typename:const char *	file:
filename	diskutil.c	/^						 char *filename)$/;"	z	function:init_per_file_disk_util	typeref:typename:char *	file:
filename	engines/ime.c	/^static char *fio_set_ime_filename(char* filename)$/;"	z	function:fio_set_ime_filename	typeref:typename:char *	file:
filename	engines/pmemblk.c	/^fio_pmemblk_file_t fio_pmemblk_cache_lookup(const char *filename)$/;"	z	function:fio_pmemblk_cache_lookup	typeref:typename:const char *	file:
filename	filesetup.c	/^	char *filename;$/;"	m	struct:file_name	typeref:typename:char *	file:
filename	filesetup.c	/^bool exists_and_not_regfile(const char *filename)$/;"	z	function:exists_and_not_regfile	typeref:typename:const char *	file:
filename	iolog.c	/^	       const char *filename)$/;"	z	function:setup_log	typeref:typename:const char *	file:
filename	iolog.h	/^	char *filename;$/;"	m	struct:io_log	typeref:typename:char *
filename	t/btrace2fio.c	/^static char *filename;$/;"	v	typeref:typename:char *	file:
filename	t/dedupe.c	/^static int dedupe_check(const char *filename, uint64_t *nextents,$/;"	z	function:dedupe_check	typeref:typename:const char *	file:
filename	thread_options.h	/^	char *filename;$/;"	m	struct:thread_options	typeref:typename:char *
filename	thread_options.h	/^	uint8_t filename[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
filename_format	thread_options.h	/^	char *filename_format;$/;"	m	struct:thread_options	typeref:typename:char *
filename_format	thread_options.h	/^	uint8_t filename_format[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
fileno	blktrace.c	/^		      int fileno)$/;"	z	function:store_ipo	typeref:typename:int	file:
fileno	blktrace.c	/^	unsigned int fileno;$/;"	m	struct:file_cache	typeref:typename:unsigned int	file:
fileno	blktrace.c	/^static void trace_add_open_close_event(struct thread_data *td, int fileno, enum file_log_act act/;"	z	function:trace_add_open_close_event	typeref:typename:int	file:
fileno	file.h	/^	int fileno;$/;"	m	struct:fio_file	typeref:typename:int
fileno	iolog.h	/^		int fileno;$/;"	m	union:io_piece::__anona1301755070a	typeref:typename:int
fileno	t/io_uring.c	/^	int fileno;$/;"	m	struct:file	typeref:typename:int	file:
fileno	verify-state.h	/^	uint64_t fileno;$/;"	m	struct:file_comp	typeref:typename:uint64_t
filenum	init.c	/^			   const char *jobname, int jobnum, int filenum)$/;"	z	function:make_filename	typeref:typename:int	file:
files	client.h	/^	struct client_file *files;$/;"	m	struct:fio_client	typeref:struct:client_file *
files	engines/xnvme.c	/^	struct xnvme_fioe_fwrap files[];$/;"	m	struct:xnvme_fioe_data	typeref:struct:xnvme_fioe_fwrap[]	file:
files	fio.h	/^	struct fio_file **files;$/;"	m	struct:thread_data	typeref:struct:fio_file **
files	gfio.h	/^	GtkWidget *files;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
files	t/btrace2fio.c	/^	struct trace_file *files;$/;"	m	struct:btrace_pid	typeref:struct:trace_file *	file:
files	t/io_uring.c	/^	struct file files[MAX_FDS];$/;"	m	struct:submitter	typeref:struct:file[]	file:
files_index	fio.h	/^	unsigned int files_index;$/;"	m	struct:thread_data	typeref:typename:unsigned int
files_size	fio.h	/^	unsigned int files_size;$/;"	m	struct:thread_data	typeref:typename:unsigned int
filesetup_mem_free	file.h	/^extern void filesetup_mem_free(void);$/;"	p	typeref:typename:void
filesetup_mem_free	filesetup.c	/^void filesetup_mem_free(void)$/;"	f	typeref:typename:void
filesize	t/strided.py	/^            filesize = os.lseek(f, 0, os.SEEK_END)$/;"	v
filesize	t/strided.py	/^        filesize = statinfo.st_size$/;"	v
filestat_options	engines/filestat.c	/^struct filestat_options {$/;"	s	file:
filetype	file.h	/^	enum fio_filetype filetype;$/;"	m	struct:fio_file	typeref:enum:fio_filetype
fill_buffer_pattern	verify.c	/^void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len)$/;"	f	typeref:typename:void
fill_buffer_pattern	verify.h	/^extern void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len);$/;"	p	typeref:typename:void
fill_color_from_rgb	ghelpers.c	/^static void fill_color_from_rgb(GdkColor *c, gfloat r, gfloat g, gfloat b)$/;"	f	typeref:typename:void	file:
fill_crc16	verify.c	/^static void fill_crc16(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_crc32	verify.c	/^static void fill_crc32(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_crc32c	verify.c	/^static void fill_crc32c(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_crc64	verify.c	/^static void fill_crc64(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_crc7	verify.c	/^static void fill_crc7(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_def_thread	init.c	/^static int fill_def_thread(void)$/;"	f	typeref:typename:int	file:
fill_default_options	parse.c	/^void fill_default_options(void *data, const struct fio_option *options)$/;"	f	typeref:typename:void
fill_default_options	parse.h	/^extern void fill_default_options(void *, const struct fio_option *);$/;"	p	typeref:typename:void
fill_device	thread_options.h	/^	uint32_t fill_device;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
fill_device	thread_options.h	/^	unsigned int fill_device;$/;"	m	struct:thread_options	typeref:typename:unsigned int
fill_device_size	fio.h	/^	uint64_t fill_device_size;$/;"	m	struct:thread_data	typeref:typename:uint64_t
fill_file_completions	verify.c	/^static int fill_file_completions(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fill_hdr	verify.c	/^static void fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
fill_io_buffer	io_u.c	/^void fill_io_buffer(struct thread_data *td, void *buf, unsigned long long min_write,$/;"	f	typeref:typename:void
fill_io_buffer	io_u.h	/^extern void fill_io_buffer(struct thread_data *, void *, unsigned long long, unsigned long long)/;"	p	typeref:typename:void
fill_io_u	io_u.c	/^static int fill_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fill_md5	verify.c	/^static void fill_md5(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_pattern_headers	verify.c	/^static void fill_pattern_headers(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
fill_random_buf	lib/rand.c	/^uint64_t fill_random_buf(struct frand_state *fs, void *buf,$/;"	f	typeref:typename:uint64_t
fill_random_buf	lib/rand.h	/^extern uint64_t fill_random_buf(struct frand_state *, void *buf, unsigned int len);$/;"	p	typeref:typename:uint64_t
fill_random_buf_percentage	lib/rand.c	/^uint64_t fill_random_buf_percentage(struct frand_state *fs, void *buf,$/;"	f	typeref:typename:uint64_t
fill_random_buf_percentage	lib/rand.h	/^extern uint64_t fill_random_buf_percentage(struct frand_state *, void *, unsigned int, unsigned /;"	p	typeref:typename:uint64_t
fill_redzone	smalloc.c	/^static void fill_redzone(struct block_hdr *hdr)$/;"	f	typeref:typename:void	file:
fill_sha1	verify.c	/^static void fill_sha1(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha256	verify.c	/^static void fill_sha256(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha3	verify.c	/^static void fill_sha3(struct fio_sha3_ctx *sha3_ctx, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha3_224	verify.c	/^static void fill_sha3_224(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha3_256	verify.c	/^static void fill_sha3_256(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha3_384	verify.c	/^static void fill_sha3_384(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha3_512	verify.c	/^static void fill_sha3_512(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_sha512	verify.c	/^static void fill_sha512(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
fill_start_time	fio_time.h	/^extern void fill_start_time(struct timespec *);$/;"	p	typeref:typename:void
fill_start_time	time.c	/^void fill_start_time(struct timespec *t)$/;"	f	typeref:typename:void
fill_verify_pattern	verify.c	/^void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len,$/;"	f	typeref:typename:void
fill_verify_pattern	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	p	typeref:typename:void
fill_xxhash	verify.c	/^static void fill_xxhash(struct verify_header *hdr, void *p, unsigned int len)$/;"	f	typeref:typename:void	file:
filled	lib/pattern.c	/^				unsigned int *filled)$/;"	z	function:parse_number	typeref:typename:unsigned int *	file:
filled	lib/pattern.c	/^				unsigned int *filled)$/;"	z	function:parse_string	typeref:typename:unsigned int *	file:
filled	lib/pattern.c	/^				unsigned int out_len, unsigned int *filled,$/;"	z	function:parse_format	typeref:typename:unsigned int *	file:
filled	lib/pattern.c	/^			      unsigned int *filled)$/;"	z	function:parse_file	typeref:typename:unsigned int *	file:
filler	lib/ieee754.h	/^		uint8_t filler[16];$/;"	m	union:fio_fp64::__anon13aa3979010a	typeref:typename:uint8_t[16]
finalize_logs	iolog.h	/^extern void finalize_logs(struct thread_data *td, bool);$/;"	p	typeref:typename:void
finalize_logs	stat.c	/^void finalize_logs(struct thread_data *td, bool unit_logs)$/;"	f	typeref:typename:void
find_add_disk_slaves	diskutil.c	/^static void find_add_disk_slaves(struct thread_data *td, char *path,$/;"	f	typeref:typename:void	file:
find_best_index	smalloc.c	/^static unsigned int find_best_index(struct pool *pool)$/;"	f	typeref:typename:unsigned int	file:
find_block_dir	diskutil.c	/^static int find_block_dir(int majdev, int mindev, char *path, int link_ok)$/;"	f	typeref:typename:int	file:
find_cgroup_mnt	cgroup.c	/^static struct cgroup_mnt *find_cgroup_mnt(struct thread_data *td)$/;"	f	typeref:struct:cgroup_mnt *	file:
find_child	parse.c	/^static const struct fio_option *find_child(const struct fio_option *options,$/;"	f	typeref:typename:const struct fio_option *	file:
find_clat_prio_index	engines/cmdprio.c	/^static int find_clat_prio_index(unsigned int *all_prios, int nr_prios,$/;"	f	typeref:typename:int	file:
find_clat_prio_index	stat.c	/^static int find_clat_prio_index(struct thread_stat *dst, enum fio_ddir ddir,$/;"	f	typeref:typename:int	file:
find_client_by_fd	client.c	/^static struct fio_client *find_client_by_fd(int fd)$/;"	f	typeref:struct:fio_client *	file:
find_double_data	graph.c	/^static double find_double_data(struct graph *g, double_comparator cmp)$/;"	f	typeref:typename:double	file:
find_double_values	graph.c	/^static double find_double_values(struct graph_label *l, double_comparator cmp)$/;"	f	typeref:typename:double	file:
find_earliest_io	blktrace.c	/^static int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)$/;"	f	typeref:typename:int	file:
find_file	tools/plot/fio2gnuplot	/^def find_file(path, pattern):$/;"	f
find_handle	os/windows/posix/include/dirent.h	/^	HANDLE find_handle;$/;"	m	struct:dirent_ctx	typeref:typename:HANDLE
find_hash	gettime.c	/^static struct gtod_log *find_hash(void *caller)$/;"	f	typeref:struct:gtod_log *	file:
find_ioengine	ioengines.c	/^static struct ioengine_ops *find_ioengine(const char *name)$/;"	f	typeref:struct:ioengine_ops *	file:
find_lfsr	lib/lfsr.c	/^static uint8_t *find_lfsr(uint64_t size)$/;"	f	typeref:typename:uint8_t *	file:
find_max_data	graph.c	/^static double find_max_data(struct graph *g)$/;"	f	typeref:typename:double	file:
find_min_data	graph.c	/^static double find_min_data(struct graph *g)$/;"	f	typeref:typename:double	file:
find_next_opt	options.c	/^static struct fio_option *find_next_opt(struct fio_option *from,$/;"	f	typeref:struct:fio_option *	file:
find_next_zero	smalloc.c	/^static int find_next_zero(int word, int start)$/;"	f	typeref:typename:int	file:
find_option	options.h	/^extern struct fio_option *find_option(struct fio_option *, const char *);$/;"	p	typeref:struct:fio_option *
find_option	parse.c	/^struct fio_option *find_option(struct fio_option *options, const char *opt)$/;"	f	typeref:struct:fio_option *
find_option_c	options.h	/^find_option_c(const struct fio_option *, const char *);$/;"	p	typeref:typename:const struct fio_option *
find_option_c	parse.c	/^find_option_c(const struct fio_option *options, const char *opt)$/;"	f	typeref:typename:const struct fio_option *
find_profile	profile.c	/^struct profile_ops *find_profile(const char *profile)$/;"	f	typeref:struct:profile_ops *
find_profile	profile.h	/^struct profile_ops *find_profile(const char *);$/;"	p	typeref:struct:profile_ops *
find_seq	t/read-to-pipe-async.c	/^static struct work_item *find_seq(struct writer_thread *w, unsigned int seq)$/;"	f	typeref:struct:work_item *	file:
find_xy_value	graph.c	/^static double find_xy_value(struct graph *g, xy_value_extractor getvalue, double_comparator cmp)$/;"	f	typeref:typename:double	file:
finish	t/io_uring.c	/^	volatile int finish;$/;"	m	struct:submitter	typeref:typename:volatile int	file:
finish	t/io_uring.c	/^static volatile int finish;$/;"	v	typeref:typename:volatile int	file:
finish_chunk	iolog.c	/^static void finish_chunk(z_stream *stream, FILE *f,$/;"	f	typeref:typename:void	file:
finish_entry	server.c	/^static void finish_entry(struct sk_entry *entry)$/;"	f	typeref:typename:void	file:
finish_log	iolog.c	/^static int finish_log(struct thread_data *td, struct io_log *log, int trylock)$/;"	f	typeref:typename:int	file:
finish_template	tools/genfio	/^finish_template() {$/;"	f
fio	Makefile	/^fio: $(FIO_OBJS)$/;"	t
fio	fio.1	/^.TH fio 1 "August 2017" "User Manual"$/;"	t
fio - Flexible I/O tester rev. |version|	doc/fio_doc.rst	/^fio - Flexible I\/O tester rev. |version|$/;"	c
fio2gnuplot	tools/plot/fio2gnuplot.1	/^.TH fio2gnuplot 1 "August 2013"$/;"	t
fio_abort	backend.c	/^static volatile bool fio_abort;$/;"	v	typeref:typename:volatile bool	file:
fio_append_gz_chunks	server.c	/^static int fio_append_gz_chunks(struct sk_entry *first, struct io_log *log)$/;"	f	typeref:typename:int	file:
fio_append_iolog_gz	server.c	/^static int fio_append_iolog_gz(struct sk_entry *first, struct io_log *log)$/;"	f	typeref:typename:int	file:
fio_append_text_log	server.c	/^static int fio_append_text_log(struct sk_entry *first, struct io_log *log)$/;"	f	typeref:typename:int	file:
fio_arch_strings	libfio.c	/^static const char *fio_arch_strings[arch_nr] = {$/;"	v	typeref:typename:const char * []	file:
fio_backend	backend.c	/^int fio_backend(struct sk_out *sk_out)$/;"	f	typeref:typename:int
fio_backend	fio.h	/^extern int fio_backend(struct sk_out *);$/;"	p	typeref:typename:int
fio_backend_thread	server.c	/^static void *fio_backend_thread(void *data)$/;"	f	typeref:typename:void *	file:
fio_check_clients_timed_out	client.c	/^static int fio_check_clients_timed_out(void)$/;"	f	typeref:typename:int	file:
fio_check_options	init.c	/^extern int fio_check_options(struct thread_options *);$/;"	p	typeref:typename:int	file:
fio_client	client.h	/^struct fio_client {$/;"	s
fio_client_add	client.c	/^int fio_client_add(struct client_ops *ops, const char *hostname, void **cookie)$/;"	f	typeref:typename:int
fio_client_add	client.h	/^extern int fio_client_add(struct client_ops *, const char *, void **);$/;"	p	typeref:typename:int
fio_client_add_cmd_option	client.c	/^void fio_client_add_cmd_option(void *cookie, const char *opt)$/;"	f	typeref:typename:void
fio_client_add_cmd_option	client.h	/^extern void fio_client_add_cmd_option(void *, const char *);$/;"	p	typeref:typename:void
fio_client_add_explicit	client.c	/^struct fio_client *fio_client_add_explicit(struct client_ops *ops,$/;"	f	typeref:struct:fio_client *
fio_client_add_explicit	client.h	/^extern struct fio_client *fio_client_add_explicit(struct client_ops *, const char *, int, int);$/;"	p	typeref:struct:fio_client *
fio_client_add_hash	client.c	/^static void fio_client_add_hash(struct fio_client *client)$/;"	f	typeref:typename:void	file:
fio_client_add_ini_file	client.c	/^int fio_client_add_ini_file(void *cookie, const char *ini_file, bool remote)$/;"	f	typeref:typename:int
fio_client_add_ini_file	client.h	/^extern int fio_client_add_ini_file(void *, const char *, bool);$/;"	p	typeref:typename:int
fio_client_connect	client.c	/^int fio_client_connect(struct fio_client *client)$/;"	f	typeref:typename:int
fio_client_connect	client.h	/^extern int fio_client_connect(struct fio_client *);$/;"	p	typeref:typename:int
fio_client_connect_ip	client.c	/^static int fio_client_connect_ip(struct fio_client *client)$/;"	f	typeref:typename:int	file:
fio_client_connect_sock	client.c	/^static int fio_client_connect_sock(struct fio_client *client)$/;"	f	typeref:typename:int	file:
fio_client_dec_jobs_eta	client.c	/^static int fio_client_dec_jobs_eta(struct client_eta *eta, client_eta_op eta_fn)$/;"	f	typeref:typename:int	file:
fio_client_handle_iolog	client.c	/^static int fio_client_handle_iolog(struct fio_client *client,$/;"	f	typeref:typename:int	file:
fio_client_hash_init	client.c	/^static void fio_init fio_client_hash_init(void)$/;"	f	typeref:typename:void fio_init	file:
fio_client_json_fini	client.c	/^static void fio_client_json_fini(void)$/;"	f	typeref:typename:void	file:
fio_client_json_init	client.c	/^static void fio_client_json_init(void)$/;"	f	typeref:typename:void	file:
fio_client_ops	client.c	/^struct client_ops fio_client_ops = {$/;"	v	typeref:struct:client_ops
fio_client_remove_hash	client.c	/^static void fio_client_remove_hash(struct fio_client *client)$/;"	f	typeref:typename:void	file:
fio_client_send_cf	client.c	/^static int fio_client_send_cf(struct fio_client *client,$/;"	f	typeref:typename:int	file:
fio_client_send_ini	client.c	/^int fio_client_send_ini(struct fio_client *client, const char *filename,$/;"	f	typeref:typename:int
fio_client_send_ini	client.h	/^extern int fio_client_send_ini(struct fio_client *, const char *, bool);$/;"	p	typeref:typename:int
fio_client_sum_jobs_eta	client.c	/^void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je)$/;"	f	typeref:typename:void
fio_client_sum_jobs_eta	client.h	/^extern void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je);$/;"	p	typeref:typename:void
fio_client_terminate	client.c	/^int fio_client_terminate(struct fio_client *client)$/;"	f	typeref:typename:int
fio_client_terminate	client.h	/^extern int fio_client_terminate(struct fio_client *);$/;"	p	typeref:typename:int
fio_client_update_options	client.c	/^int fio_client_update_options(struct fio_client *client,$/;"	f	typeref:typename:int
fio_client_update_options	client.h	/^extern int fio_client_update_options(struct fio_client *, struct thread_options *, uint64_t *);$/;"	p	typeref:typename:int
fio_client_wait_for_reply	client.c	/^int fio_client_wait_for_reply(struct fio_client *client, uint64_t tag)$/;"	f	typeref:typename:int
fio_client_wait_for_reply	client.h	/^extern int fio_client_wait_for_reply(struct fio_client *, uint64_t);$/;"	p	typeref:typename:int
fio_clients_connect	client.c	/^int fio_clients_connect(void)$/;"	f	typeref:typename:int
fio_clients_connect	client.h	/^extern int fio_clients_connect(void);$/;"	p	typeref:typename:int
fio_clients_send_ini	client.c	/^int fio_clients_send_ini(const char *filename)$/;"	f	typeref:typename:int
fio_clients_send_ini	client.h	/^extern int fio_clients_send_ini(const char *);$/;"	p	typeref:typename:int
fio_clients_send_trigger	client.c	/^int fio_clients_send_trigger(const char *cmd)$/;"	f	typeref:typename:int
fio_clients_send_trigger	client.h	/^extern int fio_clients_send_trigger(const char *);$/;"	p	typeref:typename:int
fio_clients_terminate	client.c	/^static void fio_clients_terminate(void)$/;"	f	typeref:typename:void	file:
fio_clock_init	gettime.c	/^void fio_clock_init(void)$/;"	f	typeref:typename:void
fio_clock_init	gettime.h	/^extern void fio_clock_init(void);$/;"	p	typeref:typename:void
fio_clock_source	gettime.c	/^enum fio_cs fio_clock_source = FIO_PREFERRED_CLOCK_SOURCE;$/;"	v	typeref:enum:fio_cs
fio_clock_source_cb	options.c	/^static int fio_clock_source_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
fio_clock_source_inited	gettime.c	/^static enum fio_cs fio_clock_source_inited = CS_INVAL;$/;"	v	typeref:enum:fio_cs	file:
fio_clock_source_set	gettime.c	/^int fio_clock_source_set = 0;$/;"	v	typeref:typename:int
fio_cmd_ioengine_option_parse	fio.h	/^extern int fio_cmd_ioengine_option_parse(struct thread_data *, const char *, char *);$/;"	p	typeref:typename:int
fio_cmd_ioengine_option_parse	options.c	/^int fio_cmd_ioengine_option_parse(struct thread_data *td, const char *opt,$/;"	f	typeref:typename:int
fio_cmd_option_parse	fio.h	/^extern int fio_cmd_option_parse(struct thread_data *, const char *, char *);$/;"	p	typeref:typename:int
fio_cmd_option_parse	options.c	/^int fio_cmd_option_parse(struct thread_data *td, const char *opt, char *val)$/;"	f	typeref:typename:int
fio_cmdprio_bssplit_ddir	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_ddir(struct thread_options *to, void *cb_arg,$/;"	f	typeref:typename:int	file:
fio_cmdprio_bssplit_parse	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_parse(struct thread_data *td, const char *input,$/;"	f	typeref:typename:int	file:
fio_cmdprio_cleanup	engines/cmdprio.c	/^void fio_cmdprio_cleanup(struct cmdprio *cmdprio)$/;"	f	typeref:typename:void
fio_cmdprio_cleanup	engines/cmdprio.h	/^void fio_cmdprio_cleanup(struct cmdprio *cmdprio);$/;"	p	typeref:typename:void
fio_cmdprio_fill_bsprio	engines/cmdprio.c	/^static int fio_cmdprio_fill_bsprio(struct cmdprio_bsprio *bsprio,$/;"	f	typeref:typename:int	file:
fio_cmdprio_gen_perc	engines/cmdprio.c	/^static int fio_cmdprio_gen_perc(struct thread_data *td, struct cmdprio *cmdprio)$/;"	f	typeref:typename:int	file:
fio_cmdprio_generate_bsprio_desc	engines/cmdprio.c	/^fio_cmdprio_generate_bsprio_desc(struct cmdprio_bsprio_desc *bsprio_desc,$/;"	f	typeref:typename:int	file:
fio_cmdprio_init	engines/cmdprio.c	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	f	typeref:typename:int
fio_cmdprio_init	engines/cmdprio.h	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	p	typeref:typename:int
fio_cmdprio_parse_and_gen	engines/cmdprio.c	/^static int fio_cmdprio_parse_and_gen(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_cmdprio_parse_and_gen_bssplit	engines/cmdprio.c	/^static int fio_cmdprio_parse_and_gen_bssplit(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_cmdprio_percentage	engines/cmdprio.c	/^static int fio_cmdprio_percentage(struct cmdprio *cmdprio, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
fio_cmdprio_set_ioprio	engines/cmdprio.c	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	f	typeref:typename:bool
fio_cmdprio_set_ioprio	engines/cmdprio.h	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	p	typeref:typename:bool
fio_cpu_clear	os/os-dragonfly.h	/^static inline void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:void
fio_cpu_clear	os/os-freebsd.h	/^#define fio_cpu_clear(/;"	d
fio_cpu_clear	os/os-linux.h	/^#define fio_cpu_clear(/;"	d
fio_cpu_clear	os/os-solaris.h	/^#define fio_cpu_clear(/;"	d
fio_cpu_clear	os/os-windows.h	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu);$/;"	p	typeref:typename:void
fio_cpu_clear	os/os.h	/^#define fio_cpu_clear(/;"	d
fio_cpu_clear	os/windows/cpu-affinity.c	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:void
fio_cpu_count	os/os-dragonfly.h	/^#define fio_cpu_count(/;"	d
fio_cpu_count	os/os-freebsd.h	/^#define fio_cpu_count(/;"	d
fio_cpu_count	os/os-linux.h	/^#define fio_cpu_count(/;"	d
fio_cpu_count	os/os-solaris.h	/^static inline int fio_cpu_count(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpu_count	os/os-windows.h	/^int fio_cpu_count(os_cpu_mask_t *mask);$/;"	p	typeref:typename:int
fio_cpu_count	os/windows/cpu-affinity.c	/^int fio_cpu_count(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpu_isset	os/os-dragonfly.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:bool
fio_cpu_isset	os/os-freebsd.h	/^#define fio_cpu_isset(/;"	d
fio_cpu_isset	os/os-linux.h	/^#define fio_cpu_isset(/;"	d
fio_cpu_isset	os/os-solaris.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:bool
fio_cpu_isset	os/os-windows.h	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu);$/;"	p	typeref:typename:int
fio_cpu_isset	os/windows/cpu-affinity.c	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:int
fio_cpu_set	os/os-dragonfly.h	/^static inline void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:void
fio_cpu_set	os/os-freebsd.h	/^#define fio_cpu_set(/;"	d
fio_cpu_set	os/os-linux.h	/^#define fio_cpu_set(/;"	d
fio_cpu_set	os/os-solaris.h	/^#define fio_cpu_set(/;"	d
fio_cpu_set	os/os-windows.h	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu);$/;"	p	typeref:typename:void
fio_cpu_set	os/windows/cpu-affinity.c	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	f	typeref:typename:void
fio_cpuio_cleanup	engines/cpu.c	/^static void fio_cpuio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_cpuio_init	engines/cpu.c	/^static int fio_cpuio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_cpuio_open	engines/cpu.c	/^static int fio_cpuio_open(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_cpuio_queue	engines/cpu.c	/^static enum fio_q_status fio_cpuio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_cpuio_register	engines/cpu.c	/^static void fio_init fio_cpuio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_cpuio_unregister	engines/cpu.c	/^static void fio_exit fio_cpuio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_cpus_split	options.c	/^int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	f	typeref:typename:int
fio_cpus_split	os/os.h	/^extern int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu);$/;"	p	typeref:typename:int
fio_cpus_split	os/os.h	/^static inline int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/os-dragonfly.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/os-freebsd.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/os-linux.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/os-solaris.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/os-windows.h	/^int fio_cpuset_exit(os_cpu_mask_t *mask);$/;"	p	typeref:typename:int
fio_cpuset_exit	os/os.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_exit	os/windows/cpu-affinity.c	/^int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_init	os/os-dragonfly.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_init	os/os-freebsd.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_init	os/os-linux.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_init	os/os-solaris.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_cpuset_init	os/os-windows.h	/^int fio_cpuset_init(os_cpu_mask_t *mask);$/;"	p	typeref:typename:int
fio_cpuset_init	os/windows/cpu-affinity.c	/^int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_crc16	crc/crc16.c	/^unsigned short fio_crc16(const void *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned short
fio_crc16	crc/crc16.h	/^extern unsigned short fio_crc16(const void *buffer, unsigned int len);$/;"	p	typeref:typename:unsigned short
fio_crc32	crc/crc32.c	/^uint32_t fio_crc32(const void *buffer, unsigned long length)$/;"	f	typeref:typename:uint32_t
fio_crc32	crc/crc32.h	/^extern uint32_t fio_crc32(const void * const, unsigned long);$/;"	p	typeref:typename:uint32_t
fio_crc32c	crc/crc32c.h	/^static inline uint32_t fio_crc32c(unsigned char const *buf, unsigned long len)$/;"	f	typeref:typename:uint32_t
fio_crc64	crc/crc64.c	/^unsigned long long fio_crc64(const unsigned char *buffer, unsigned long length)$/;"	f	typeref:typename:unsigned long long
fio_crc64	crc/crc64.h	/^unsigned long long fio_crc64(const unsigned char *, unsigned long);$/;"	p	typeref:typename:unsigned long long
fio_crc7	crc/crc7.c	/^unsigned char fio_crc7(const unsigned char *buffer, unsigned int len)$/;"	f	typeref:typename:unsigned char
fio_crc7	crc/crc7.h	/^extern unsigned char fio_crc7(const unsigned char *buffer, unsigned int len);$/;"	p	typeref:typename:unsigned char
fio_crctest	crc/test.c	/^int fio_crctest(const char *type)$/;"	f	typeref:typename:int
fio_crctest	crc/test.h	/^int fio_crctest(const char *type);$/;"	p	typeref:typename:int
fio_cs	gettime.h	/^enum fio_cs {$/;"	g
fio_ddir	file.h	/^extern void lock_file(struct thread_data *, struct fio_file *, enum fio_ddir);$/;"	z	prototype:lock_file	typeref:meta:enum	file:
fio_ddir	io_ddir.h	/^enum fio_ddir {$/;"	g
fio_ddir	stat.h	/^extern int alloc_clat_prio_stat_ddir(struct thread_stat *, enum fio_ddir, int);$/;"	z	prototype:alloc_clat_prio_stat_ddir	typeref:meta:enum	file:
fio_ddir	stat.h	/^extern void add_agg_sample(union io_sample_data, enum fio_ddir, unsigned long long);$/;"	z	prototype:add_agg_sample	typeref:meta:enum	file:
fio_ddir	stat.h	/^extern void add_clat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_clat_sample	typeref:meta:enum	file:
fio_ddir	stat.h	/^extern void add_lat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_lat_sample	typeref:meta:enum	file:
fio_ddir	stat.h	/^extern void add_slat_sample(struct thread_data *, enum fio_ddir, unsigned long long,$/;"	z	prototype:add_slat_sample	typeref:meta:enum	file:
fio_debug	init.c	/^unsigned long fio_debug = 0;$/;"	v	typeref:typename:unsigned long
fio_debug	t/debug.c	/^unsigned long fio_debug = 0;$/;"	v	typeref:typename:unsigned long
fio_debug_jobno	init.c	/^unsigned int fio_debug_jobno = -1;$/;"	v	typeref:typename:unsigned int
fio_debug_jobp	init.c	/^unsigned int *fio_debug_jobp = NULL;$/;"	v	typeref:typename:unsigned int *
fio_devdax_close_file	engines/dev-dax.c	/^static int fio_devdax_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_devdax_data	engines/dev-dax.c	/^struct fio_devdax_data {$/;"	s	file:
fio_devdax_file	engines/dev-dax.c	/^static int fio_devdax_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
fio_devdax_get_file_size	engines/dev-dax.c	/^fio_devdax_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_devdax_init	engines/dev-dax.c	/^static int fio_devdax_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_devdax_open_file	engines/dev-dax.c	/^static int fio_devdax_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_devdax_prep	engines/dev-dax.c	/^static int fio_devdax_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_devdax_prep_full	engines/dev-dax.c	/^static int fio_devdax_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_devdax_prep_limited	engines/dev-dax.c	/^static int fio_devdax_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_devdax_queue	engines/dev-dax.c	/^static enum fio_q_status fio_devdax_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_devdax_register	engines/dev-dax.c	/^static void fio_init fio_devdax_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_devdax_unregister	engines/dev-dax.c	/^static void fio_exit fio_devdax_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_dfs_register	engines/dfs.c	/^static void fio_init fio_dfs_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_dfs_unregister	engines/dfs.c	/^static void fio_exit fio_dfs_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_did_warn	debug.h	/^static inline bool fio_did_warn(unsigned int mask)$/;"	f	typeref:typename:bool
fio_double_to_uint64	lib/ieee754.h	/^#define fio_double_to_uint64(/;"	d
fio_drain_client_text	client.c	/^static void fio_drain_client_text(struct fio_client *client)$/;"	f	typeref:typename:void	file:
fio_dump_gtod	gettime.c	/^static void fio_exit fio_dump_gtod(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_dump_options_free	options.c	/^void fio_dump_options_free(struct thread_data *td)$/;"	f	typeref:typename:void
fio_dump_options_free	options.h	/^void fio_dump_options_free(struct thread_data *);$/;"	p	typeref:typename:void
fio_e4defrag_cleanup	engines/e4defrag.c	/^static void fio_e4defrag_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_e4defrag_init	engines/e4defrag.c	/^static int fio_e4defrag_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_e4defrag_queue	engines/e4defrag.c	/^static enum fio_q_status fio_e4defrag_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_exec_cleanup	engines/exec.c	/^static void fio_exec_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_exec_init	engines/exec.c	/^static int fio_exec_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_exec_open	engines/exec.c	/^fio_exec_open(struct thread_data fio_unused * td,$/;"	f	typeref:typename:int	file:
fio_exec_queue	engines/exec.c	/^fio_exec_queue(struct thread_data *td, struct io_u fio_unused * io_u)$/;"	f	typeref:enum:fio_q_status	file:
fio_exec_register	engines/exec.c	/^static void fio_init fio_exec_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_exec_unregister	engines/exec.c	/^static void fio_exit fio_exec_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_exit	compiler/compiler.h	/^#define fio_exit	/;"	d
fio_fallocate	os/os-linux.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset,$/;"	f	typeref:typename:bool
fio_fallocate	os/os-mac.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	f	typeref:typename:bool
fio_fallocate	os/os.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	f	typeref:typename:bool
fio_fallocate_mode	file.h	/^enum fio_fallocate_mode {$/;"	g
fio_fallocate_queue	engines/falloc.c	/^static enum fio_q_status fio_fallocate_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_fallthrough	compiler/compiler.h	/^#define fio_fallthrough	/;"	d
fio_file	engines/xnvme.c	/^	struct fio_file *fio_file;$/;"	m	struct:xnvme_fioe_fwrap	typeref:struct:fio_file *	file:
fio_file	file.h	/^struct fio_file {$/;"	s
fio_file	tools/fiograph/fiograph.py	/^fio_file = None$/;"	v
fio_file_flags	file.h	/^enum fio_file_flags {$/;"	g
fio_file_free	file.h	/^extern void fio_file_free(struct fio_file *);$/;"	p	typeref:typename:void
fio_file_free	filesetup.c	/^void fio_file_free(struct fio_file *f)$/;"	f	typeref:typename:void
fio_file_fsync	backend.c	/^static int fio_file_fsync(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_file_hash_lock	filehash.c	/^void fio_file_hash_lock(void)$/;"	f	typeref:typename:void
fio_file_hash_lock	filehash.h	/^extern void fio_file_hash_lock(void);$/;"	p	typeref:typename:void
fio_file_hash_unlock	filehash.c	/^void fio_file_hash_unlock(void)$/;"	f	typeref:typename:void
fio_file_hash_unlock	filehash.h	/^extern void fio_file_hash_unlock(void);$/;"	p	typeref:typename:void
fio_file_reset	file.h	/^extern void fio_file_reset(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:void
fio_file_reset	filesetup.c	/^void fio_file_reset(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void
fio_filecreate_register	engines/filecreate.c	/^static void fio_init fio_filecreate_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_filecreate_unregister	engines/filecreate.c	/^static void fio_exit fio_filecreate_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_filedelete_register	engines/filedelete.c	/^static void fio_init fio_filedelete_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_filedelete_unregister	engines/filedelete.c	/^static void fio_exit fio_filedelete_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_filelock	filelock.c	/^struct fio_filelock {$/;"	s	file:
fio_filelock_exit	filelock.c	/^void fio_filelock_exit(void)$/;"	f	typeref:typename:void
fio_filelock_exit	filelock.h	/^extern void fio_filelock_exit(void);$/;"	p	typeref:typename:void
fio_filelock_init	filelock.c	/^int fio_filelock_init(void)$/;"	f	typeref:typename:int
fio_filelock_init	filelock.h	/^extern int fio_filelock_init(void);$/;"	p	typeref:typename:int
fio_files_done	file.h	/^extern bool fio_files_done(struct thread_data *);$/;"	p	typeref:typename:bool
fio_files_done	filesetup.c	/^bool fio_files_done(struct thread_data *td)$/;"	f	typeref:typename:bool
fio_filestat_register	engines/filestat.c	/^static void fio_init fio_filestat_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_filestat_unregister	engines/filestat.c	/^static void fio_exit fio_filestat_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_filetype	file.h	/^enum fio_filetype {$/;"	g
fio_fill_addr	engines/net.c	/^static int fio_fill_addr(struct thread_data *td, const char *host, int af,$/;"	f	typeref:typename:int	file:
fio_fill_default_options	fio.h	/^extern void fio_fill_default_options(struct thread_data *);$/;"	p	typeref:typename:void
fio_fill_default_options	options.c	/^void fio_fill_default_options(struct thread_data *td)$/;"	f	typeref:typename:void
fio_fill_issue_time	fio.h	/^static inline bool fio_fill_issue_time(struct thread_data *td)$/;"	f	typeref:typename:bool
fio_flow	flow.c	/^struct fio_flow {$/;"	s	file:
fio_fork_item	server.c	/^struct fio_fork_item {$/;"	s	file:
fio_fp64	lib/ieee754.h	/^typedef struct fio_fp64 {$/;"	s
fio_fp64_t	lib/ieee754.h	/^} fio_fp64_t;$/;"	t	typeref:struct:fio_fp64
fio_ftruncate_queue	engines/ftruncate.c	/^static enum fio_q_status fio_ftruncate_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_get_arch_string	fio.h	/^extern const char *fio_get_arch_string(int);$/;"	p	typeref:typename:const char *
fio_get_arch_string	libfio.c	/^const char *fio_get_arch_string(int nr)$/;"	f	typeref:typename:const char *
fio_get_client	client.c	/^struct fio_client *fio_get_client(struct fio_client *client)$/;"	f	typeref:struct:fio_client *
fio_get_client	client.h	/^extern struct fio_client *fio_get_client(struct fio_client *);$/;"	p	typeref:struct:fio_client *
fio_get_kb_base	options.c	/^unsigned int fio_get_kb_base(void *data)$/;"	f	typeref:typename:unsigned int
fio_get_kb_base	options.h	/^extern unsigned int fio_get_kb_base(void *);$/;"	p	typeref:typename:unsigned int
fio_get_mono_time	gettime.c	/^int fio_get_mono_time(struct timespec *ts)$/;"	f	typeref:typename:int
fio_get_mono_time	gettime.h	/^extern int fio_get_mono_time(struct timespec *);$/;"	p	typeref:typename:int
fio_get_os_string	fio.h	/^extern const char *fio_get_os_string(int);$/;"	p	typeref:typename:const char *
fio_get_os_string	libfio.c	/^const char *fio_get_os_string(int nr)$/;"	f	typeref:typename:const char *
fio_get_thread_affinity	os/os-aix.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-android.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-dragonfly.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-freebsd.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-hpux.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-linux.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-mac.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-netbsd.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-openbsd.h	/^#define fio_get_thread_affinity(/;"	d
fio_get_thread_affinity	os/os-solaris.h	/^#define fio_get_thread_affinity(/;"	d
fio_getaffinity	os/os-dragonfly.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_getaffinity	os/os-freebsd.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	f	typeref:typename:int
fio_getaffinity	os/os-linux.h	/^#define fio_getaffinity(/;"	d
fio_getaffinity	os/os-solaris.h	/^#define fio_getaffinity(/;"	d
fio_getaffinity	os/os-windows.h	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask);$/;"	p	typeref:typename:int
fio_getaffinity	os/os.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	f	typeref:typename:int
fio_getaffinity	os/windows/cpu-affinity.c	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	f	typeref:typename:int
fio_getrusage	lib/getrusage.c	/^int fio_getrusage(struct rusage *ru)$/;"	f	typeref:typename:int
fio_getrusage	lib/getrusage.h	/^extern int fio_getrusage(struct rusage *ru);$/;"	p	typeref:typename:int
fio_gettime	gettime.c	/^void fio_gettime(struct timespec *tp, void *caller)$/;"	f	typeref:typename:void
fio_gettime	gettime.h	/^extern void fio_gettime(struct timespec *, void *);$/;"	p	typeref:typename:void
fio_gettime	os/windows/posix.c	/^extern void fio_gettime(struct timespec *, void *);$/;"	p	typeref:typename:void	file:
fio_gettime_offload	gettime.h	/^static inline int fio_gettime_offload(struct timespec *ts)$/;"	f	typeref:typename:int
fio_gf_async_queue	engines/glusterfs_async.c	/^static enum fio_q_status fio_gf_async_queue(struct thread_data fio_unused * td,$/;"	f	typeref:enum:fio_q_status	file:
fio_gf_async_setup	engines/glusterfs_async.c	/^static int fio_gf_async_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_gf_cleanup	engines/gfapi.h	/^extern void fio_gf_cleanup(struct thread_data *td);$/;"	p	typeref:typename:void
fio_gf_cleanup	engines/glusterfs.c	/^void fio_gf_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void
fio_gf_close_file	engines/gfapi.h	/^extern int fio_gf_close_file(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:int
fio_gf_close_file	engines/glusterfs.c	/^int fio_gf_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_gf_event	engines/glusterfs_async.c	/^static struct io_u *fio_gf_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_gf_get_file_size	engines/gfapi.h	/^extern int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:int
fio_gf_get_file_size	engines/glusterfs.c	/^int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_gf_get_glfs	engines/glusterfs.c	/^static glfs_t *fio_gf_get_glfs(struct gf_options *opt,$/;"	f	typeref:typename:glfs_t *	file:
fio_gf_getevents	engines/glusterfs_async.c	/^static int fio_gf_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_gf_io_u_free	engines/glusterfs_async.c	/^static void fio_gf_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_gf_io_u_init	engines/glusterfs_async.c	/^static int fio_gf_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_gf_iou	engines/glusterfs_async.c	/^struct fio_gf_iou {$/;"	s	file:
fio_gf_new_fs	engines/glusterfs.c	/^static glfs_t *fio_gf_new_fs(char *volume, char *brick)$/;"	f	typeref:typename:glfs_t *	file:
fio_gf_open_file	engines/gfapi.h	/^extern int fio_gf_open_file(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:int
fio_gf_open_file	engines/glusterfs.c	/^int fio_gf_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_gf_prep	engines/glusterfs_sync.c	/^static int fio_gf_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_gf_put_glfs	engines/glusterfs.c	/^static void fio_gf_put_glfs(struct gf_options *opt, glfs_t *fs)$/;"	f	typeref:typename:void	file:
fio_gf_queue	engines/glusterfs_sync.c	/^static enum fio_q_status fio_gf_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
fio_gf_register	engines/glusterfs_async.c	/^static void fio_init fio_gf_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_gf_register	engines/glusterfs_sync.c	/^static void fio_init fio_gf_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_gf_setup	engines/gfapi.h	/^extern int fio_gf_setup(struct thread_data *td);$/;"	p	typeref:typename:int
fio_gf_setup	engines/glusterfs.c	/^int fio_gf_setup(struct thread_data *td)$/;"	f	typeref:typename:int
fio_gf_unlink_file	engines/gfapi.h	/^extern int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:int
fio_gf_unlink_file	engines/glusterfs.c	/^int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_gf_unregister	engines/glusterfs_async.c	/^static void fio_exit fio_gf_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_gf_unregister	engines/glusterfs_sync.c	/^static void fio_exit fio_gf_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_gtod_cpumask	gettime-thread.c	/^static os_cpu_mask_t fio_gtod_cpumask;$/;"	v	typeref:typename:os_cpu_mask_t	file:
fio_gtod_init	gettime-thread.c	/^void fio_gtod_init(void)$/;"	f	typeref:typename:void
fio_gtod_init	gettime.h	/^extern void fio_gtod_init(void);$/;"	p	typeref:typename:void
fio_gtod_offload	gettime-thread.c	/^int fio_gtod_offload = 0;$/;"	v	typeref:typename:int
fio_gtod_set_cpu	gettime-thread.c	/^void fio_gtod_set_cpu(unsigned int cpu)$/;"	f	typeref:typename:void
fio_gtod_set_cpu	gettime.h	/^extern void fio_gtod_set_cpu(unsigned int cpu);$/;"	p	typeref:typename:void
fio_gtod_update	gettime-thread.c	/^static void fio_gtod_update(void)$/;"	f	typeref:typename:void	file:
fio_handle_client	client.c	/^int fio_handle_client(struct fio_client *client)$/;"	f	typeref:typename:int
fio_handle_client	client.h	/^extern int fio_handle_client(struct fio_client *);$/;"	p	typeref:typename:int
fio_handle_clients	client.c	/^int fio_handle_clients(struct client_ops *ops)$/;"	f	typeref:typename:int
fio_handle_clients	client.h	/^extern int fio_handle_clients(struct client_ops *);$/;"	p	typeref:typename:int
fio_handle_server_arg	server.c	/^static int fio_handle_server_arg(void)$/;"	f	typeref:typename:int	file:
fio_hash_find	filelock.c	/^static struct fio_filelock *fio_hash_find(uint32_t hash)$/;"	f	typeref:struct:fio_filelock *	file:
fio_hash_get	filelock.c	/^static struct fio_filelock *fio_hash_get(uint32_t hash, int trylock)$/;"	f	typeref:struct:fio_filelock *	file:
fio_hdfsio_close_file	engines/libhdfs.c	/^int fio_hdfsio_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_hdfsio_init	engines/libhdfs.c	/^static int fio_hdfsio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_hdfsio_io_u_free	engines/libhdfs.c	/^static void fio_hdfsio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_hdfsio_io_u_init	engines/libhdfs.c	/^static int fio_hdfsio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_hdfsio_open_file	engines/libhdfs.c	/^int fio_hdfsio_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_hdfsio_prep	engines/libhdfs.c	/^static int fio_hdfsio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_hdfsio_queue	engines/libhdfs.c	/^static enum fio_q_status fio_hdfsio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_hdfsio_register	engines/libhdfs.c	/^static void fio_init fio_hdfsio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_hdfsio_setup	engines/libhdfs.c	/^static int fio_hdfsio_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_hdfsio_unregister	engines/libhdfs.c	/^static void fio_exit fio_hdfsio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_http_cleanup	engines/http.c	/^static void fio_http_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_http_event	engines/http.c	/^static struct io_u *fio_http_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_http_getevents	engines/http.c	/^int fio_http_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int
fio_http_invalidate	engines/http.c	/^static int fio_http_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_http_open	engines/http.c	/^static int fio_http_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_http_queue	engines/http.c	/^static enum fio_q_status fio_http_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_http_register	engines/http.c	/^static void fio_init fio_http_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_http_setup	engines/http.c	/^static int fio_http_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_http_unregister	engines/http.c	/^static void fio_exit fio_http_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_idle_prof_cleanup	idletime.c	/^void fio_idle_prof_cleanup(void)$/;"	f	typeref:typename:void
fio_idle_prof_cleanup	idletime.h	/^extern void fio_idle_prof_cleanup(void);$/;"	p	typeref:typename:void
fio_idle_prof_cpu_stat	idletime.c	/^static double fio_idle_prof_cpu_stat(int cpu)$/;"	f	typeref:typename:double	file:
fio_idle_prof_init	idletime.c	/^void fio_idle_prof_init(void)$/;"	f	typeref:typename:void
fio_idle_prof_init	idletime.h	/^extern void fio_idle_prof_init(void);$/;"	p	typeref:typename:void
fio_idle_prof_parse_opt	idletime.c	/^int fio_idle_prof_parse_opt(const char *args)$/;"	f	typeref:typename:int
fio_idle_prof_parse_opt	idletime.h	/^extern int fio_idle_prof_parse_opt(const char *);$/;"	p	typeref:typename:int
fio_idle_prof_start	idletime.c	/^void fio_idle_prof_start(void)$/;"	f	typeref:typename:void
fio_idle_prof_start	idletime.h	/^extern void fio_idle_prof_start(void);$/;"	p	typeref:typename:void
fio_idle_prof_stop	idletime.c	/^void fio_idle_prof_stop(void)$/;"	f	typeref:typename:void
fio_idle_prof_stop	idletime.h	/^extern void fio_idle_prof_stop(void);$/;"	p	typeref:typename:void
fio_ime_aio_can_append	engines/ime.c	/^static bool fio_ime_aio_can_append (struct ime_data *ime_d, struct io_u *io_u)$/;"	f	typeref:typename:bool	file:
fio_ime_aio_can_queue	engines/ime.c	/^static bool fio_ime_aio_can_queue (struct ime_data *ime_d, struct io_u *io_u)$/;"	f	typeref:typename:bool	file:
fio_ime_aio_clean	engines/ime.c	/^static void fio_ime_aio_clean(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_ime_aio_commit	engines/ime.c	/^static int fio_ime_aio_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_aio_complete_cb	engines/ime.c	/^void fio_ime_aio_complete_cb  (struct ime_aiocb *aiocb, int err,$/;"	f	typeref:typename:void
fio_ime_aio_enqueue	engines/ime.c	/^static void fio_ime_aio_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_ime_aio_getevents	engines/ime.c	/^static int fio_ime_aio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_ime_aio_init	engines/ime.c	/^static int fio_ime_aio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_aio_queue	engines/ime.c	/^static enum fio_q_status fio_ime_aio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_ime_close_file	engines/ime.c	/^static int fio_ime_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ime_engine_finalize	engines/ime.c	/^static void fio_ime_engine_finalize(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_ime_engine_init	engines/ime.c	/^static int fio_ime_engine_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_event	engines/ime.c	/^static struct io_u *fio_ime_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_ime_get_file_size	engines/ime.c	/^static int fio_ime_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ime_is_initialized	engines/ime.c	/^static bool fio_ime_is_initialized = false;$/;"	v	typeref:typename:bool	file:
fio_ime_open_file	engines/ime.c	/^static int fio_ime_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ime_psync_end	engines/ime.c	/^static int fio_ime_psync_end(struct thread_data *td, struct io_u *io_u, ssize_t ret)$/;"	f	typeref:typename:int	file:
fio_ime_psync_queue	engines/ime.c	/^static enum fio_q_status fio_ime_psync_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_ime_psyncv_can_queue	engines/ime.c	/^static bool fio_ime_psyncv_can_queue(struct ime_data *ime_d, struct io_u *io_u)$/;"	f	typeref:typename:bool	file:
fio_ime_psyncv_clean	engines/ime.c	/^static void fio_ime_psyncv_clean(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_ime_psyncv_commit	engines/ime.c	/^static int fio_ime_psyncv_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_psyncv_end	engines/ime.c	/^static int fio_ime_psyncv_end(struct thread_data *td, ssize_t bytes)$/;"	f	typeref:typename:int	file:
fio_ime_psyncv_enqueue	engines/ime.c	/^static void fio_ime_psyncv_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_ime_psyncv_getevents	engines/ime.c	/^static int fio_ime_psyncv_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_ime_psyncv_init	engines/ime.c	/^static int fio_ime_psyncv_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_psyncv_queue	engines/ime.c	/^static enum fio_q_status fio_ime_psyncv_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_ime_queue_commit	engines/ime.c	/^static void fio_ime_queue_commit (struct ime_data *ime_d, int iovcnt)$/;"	f	typeref:typename:void	file:
fio_ime_queue_incr	engines/ime.c	/^static void fio_ime_queue_incr (struct ime_data *ime_d)$/;"	f	typeref:typename:void	file:
fio_ime_queue_red	engines/ime.c	/^static void fio_ime_queue_red (struct ime_data *ime_d)$/;"	f	typeref:typename:void	file:
fio_ime_queue_reset	engines/ime.c	/^static void fio_ime_queue_reset (struct ime_data *ime_d)$/;"	f	typeref:typename:void	file:
fio_ime_register	engines/ime.c	/^static void fio_init fio_ime_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_ime_setup	engines/ime.c	/^static int fio_ime_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ime_unlink_file	engines/ime.c	/^static int fio_ime_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ime_unregister	engines/ime.c	/^static void fio_exit fio_ime_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_init	compiler/compiler.h	/^#define fio_init	/;"	d
fio_init_net_cmd	server.c	/^static void fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	f	typeref:typename:void	file:
fio_init_options	fio.h	/^extern int __must_check fio_init_options(void);$/;"	p	typeref:typename:int __must_check
fio_init_options	init.c	/^int fio_init_options(void)$/;"	f	typeref:typename:int
fio_init_server_connection	server.c	/^static int fio_init_server_connection(void)$/;"	f	typeref:typename:int	file:
fio_init_server_ip	server.c	/^static int fio_init_server_ip(void)$/;"	f	typeref:typename:int	file:
fio_init_server_sock	server.c	/^static int fio_init_server_sock(void)$/;"	f	typeref:typename:int	file:
fio_io_end	engines/sync.c	/^static int fio_io_end(struct thread_data *td, struct io_u *io_u, int ret)$/;"	f	typeref:typename:int	file:
fio_io_sync	backend.c	/^static bool fio_io_sync(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:bool	file:
fio_ioengine_flags	ioengines.h	/^enum fio_ioengine_flags {$/;"	g
fio_ioring_cleanup	engines/io_uring.c	/^static void fio_ioring_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_ioring_close_file	engines/io_uring.c	/^static int fio_ioring_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ioring_cmdprio_prep	engines/io_uring.c	/^static inline void fio_ioring_cmdprio_prep(struct thread_data *td,$/;"	f	typeref:typename:void	file:
fio_ioring_commit	engines/io_uring.c	/^static int fio_ioring_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ioring_cqring_reap	engines/io_uring.c	/^static int fio_ioring_cqring_reap(struct thread_data *td, unsigned int events,$/;"	f	typeref:typename:int	file:
fio_ioring_event	engines/io_uring.c	/^static struct io_u *fio_ioring_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_ioring_getevents	engines/io_uring.c	/^static int fio_ioring_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_ioring_init	engines/io_uring.c	/^static int fio_ioring_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ioring_io_u_init	engines/io_uring.c	/^static int fio_ioring_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_ioring_mmap	engines/io_uring.c	/^static int fio_ioring_mmap(struct ioring_data *ld, struct io_uring_params *p)$/;"	f	typeref:typename:int	file:
fio_ioring_open_file	engines/io_uring.c	/^static int fio_ioring_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_ioring_post_init	engines/io_uring.c	/^static int fio_ioring_post_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ioring_prep	engines/io_uring.c	/^static int fio_ioring_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_ioring_probe	engines/io_uring.c	/^static void fio_ioring_probe(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_ioring_queue	engines/io_uring.c	/^static enum fio_q_status fio_ioring_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_ioring_queue_init	engines/io_uring.c	/^static int fio_ioring_queue_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ioring_queued	engines/io_uring.c	/^static void fio_ioring_queued(struct thread_data *td, int start, int nr)$/;"	f	typeref:typename:void	file:
fio_ioring_register	engines/io_uring.c	/^static void fio_init fio_ioring_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_ioring_register_files	engines/io_uring.c	/^static int fio_ioring_register_files(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_ioring_sqpoll_cb	engines/io_uring.c	/^static int fio_ioring_sqpoll_cb(void *data, unsigned long long *val)$/;"	f	typeref:typename:int	file:
fio_ioring_unmap	engines/io_uring.c	/^static void fio_ioring_unmap(struct ioring_data *ld)$/;"	f	typeref:typename:void	file:
fio_ioring_unregister	engines/io_uring.c	/^static void fio_exit fio_ioring_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_iscsi_cleanup	engines/libiscsi.c	/^static void fio_iscsi_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_iscsi_cleanup_lun	engines/libiscsi.c	/^static void fio_iscsi_cleanup_lun(struct iscsi_lun *iscsi_lun) {$/;"	f	typeref:typename:void	file:
fio_iscsi_close_file	engines/libiscsi.c	/^static int fio_iscsi_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_iscsi_event	engines/libiscsi.c	/^static struct io_u *fio_iscsi_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_iscsi_getevents	engines/libiscsi.c	/^static int fio_iscsi_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_iscsi_init	engines/libiscsi.c	/^static int fio_iscsi_init(struct thread_data *td) {$/;"	f	typeref:typename:int	file:
fio_iscsi_open_file	engines/libiscsi.c	/^static int fio_iscsi_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_iscsi_prep	engines/libiscsi.c	/^static int fio_iscsi_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_iscsi_queue	engines/libiscsi.c	/^static enum fio_q_status fio_iscsi_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_iscsi_register	engines/libiscsi.c	/^static void fio_init fio_iscsi_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_iscsi_setup	engines/libiscsi.c	/^static int fio_iscsi_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_iscsi_setup_lun	engines/libiscsi.c	/^static int fio_iscsi_setup_lun(struct iscsi_info *iscsi_info,$/;"	f	typeref:typename:int	file:
fio_iscsi_unregister	engines/libiscsi.c	/^static void fio_exit fio_iscsi_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_jobs	tools/fiograph/fiograph.conf	/^[fio_jobs]$/;"	s
fio_keyword	options.c	/^struct fio_keyword {$/;"	s	file:
fio_keyword_replace	options.c	/^static char *fio_keyword_replace(char *opt)$/;"	f	typeref:typename:char *	file:
fio_keywords	options.c	/^static struct fio_keyword fio_keywords[] = {$/;"	v	typeref:struct:fio_keyword[]	file:
fio_keywords_exit	fio.h	/^extern void fio_keywords_exit(void);$/;"	p	typeref:typename:void
fio_keywords_exit	options.c	/^void fio_keywords_exit(void)$/;"	f	typeref:typename:void
fio_keywords_init	fio.h	/^extern void fio_keywords_init(void);$/;"	p	typeref:typename:void
fio_keywords_init	options.c	/^void fio_keywords_init(void)$/;"	f	typeref:typename:void
fio_lat	stat.h	/^enum fio_lat {$/;"	g
fio_lfsr	lib/lfsr.h	/^struct fio_lfsr {$/;"	s
fio_libaio_cancel	engines/libaio.c	/^static int fio_libaio_cancel(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_libaio_cleanup	engines/libaio.c	/^static void fio_libaio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_libaio_cmdprio_prep	engines/libaio.c	/^static inline void fio_libaio_cmdprio_prep(struct thread_data *td,$/;"	f	typeref:typename:void	file:
fio_libaio_commit	engines/libaio.c	/^static int fio_libaio_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libaio_commit	engines/libaio.c	/^static int fio_libaio_commit(struct thread_data *td);$/;"	p	typeref:typename:int	file:
fio_libaio_event	engines/libaio.c	/^static struct io_u *fio_libaio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_libaio_getevents	engines/libaio.c	/^static int fio_libaio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_libaio_init	engines/libaio.c	/^static int fio_libaio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libaio_init	engines/libaio.c	/^static int fio_libaio_init(struct thread_data *td);$/;"	p	typeref:typename:int	file:
fio_libaio_post_init	engines/libaio.c	/^static int fio_libaio_post_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libaio_prep	engines/libaio.c	/^static int fio_libaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_libaio_queue	engines/libaio.c	/^static enum fio_q_status fio_libaio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_libaio_queued	engines/libaio.c	/^static void fio_libaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	f	typeref:typename:void	file:
fio_libaio_register	engines/libaio.c	/^static void fio_init fio_libaio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_libaio_unregister	engines/libaio.c	/^static void fio_exit fio_libaio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_libcufile_cleanup	engines/libcufile.c	/^static void fio_libcufile_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_libcufile_close_file	engines/libcufile.c	/^static int fio_libcufile_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libcufile_data	engines/libcufile.c	/^struct fio_libcufile_data {$/;"	s	file:
fio_libcufile_find_gpu_id	engines/libcufile.c	/^static int fio_libcufile_find_gpu_id(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libcufile_get_cuda_error	engines/libcufile.c	/^static const char *fio_libcufile_get_cuda_error(CUfileError_t st)$/;"	f	typeref:typename:const char *	file:
fio_libcufile_init	engines/libcufile.c	/^static int fio_libcufile_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libcufile_iomem_alloc	engines/libcufile.c	/^static int fio_libcufile_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:int	file:
fio_libcufile_iomem_free	engines/libcufile.c	/^static void fio_libcufile_iomem_free(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_libcufile_open_file	engines/libcufile.c	/^static int fio_libcufile_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libcufile_post_read	engines/libcufile.c	/^static inline int fio_libcufile_post_read(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_libcufile_pre_write	engines/libcufile.c	/^static inline int fio_libcufile_pre_write(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_libcufile_queue	engines/libcufile.c	/^static enum fio_q_status fio_libcufile_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_libcufile_register	engines/libcufile.c	/^void fio_init fio_libcufile_register(void)$/;"	f	typeref:typename:void fio_init
fio_libcufile_unregister	engines/libcufile.c	/^void fio_exit fio_libcufile_unregister(void)$/;"	f	typeref:typename:void fio_exit
fio_libnfs_cleanup	engines/nfs.c	/^static void fio_libnfs_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_libnfs_close	engines/nfs.c	/^static int fio_libnfs_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libnfs_commit	engines/nfs.c	/^static int fio_libnfs_commit(struct thread_data *td) {$/;"	f	typeref:typename:int	file:
fio_libnfs_event	engines/nfs.c	/^static struct io_u *fio_libnfs_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_libnfs_getevents	engines/nfs.c	/^static int fio_libnfs_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_libnfs_open	engines/nfs.c	/^static int fio_libnfs_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libnfs_options	engines/nfs.c	/^struct fio_libnfs_options {$/;"	s	file:
fio_libnfs_queue	engines/nfs.c	/^static enum fio_q_status fio_libnfs_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_libnfs_setup	engines/nfs.c	/^static int fio_libnfs_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libpmem_close_file	engines/libpmem.c	/^static int fio_libpmem_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libpmem_data	engines/libpmem.c	/^struct fio_libpmem_data {$/;"	s	file:
fio_libpmem_file	engines/libpmem.c	/^static int fio_libpmem_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
fio_libpmem_init	engines/libpmem.c	/^static int fio_libpmem_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_libpmem_open_file	engines/libpmem.c	/^static int fio_libpmem_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_libpmem_prep	engines/libpmem.c	/^static int fio_libpmem_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_libpmem_queue	engines/libpmem.c	/^static enum fio_q_status fio_libpmem_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_libpmem_register	engines/libpmem.c	/^static void fio_init fio_libpmem_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_libpmem_unregister	engines/libpmem.c	/^static void fio_exit fio_libpmem_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_librpma_apm_register	engines/librpma_apm.c	/^static void fio_init fio_librpma_apm_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_librpma_apm_unregister	engines/librpma_apm.c	/^static void fio_exit fio_librpma_apm_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_librpma_gpspm_register	engines/librpma_gpspm.c	/^static void fio_init fio_librpma_gpspm_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_librpma_gpspm_unregister	engines/librpma_gpspm.c	/^static void fio_exit fio_librpma_gpspm_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_libzbc_register	engines/libzbc.c	/^static void fio_init fio_libzbc_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_libzbc_unregister	engines/libzbc.c	/^static void fio_exit fio_libzbc_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_load_dynamic_engines	ioengines.c	/^#define fio_load_dynamic_engines(/;"	d	file:
fio_load_dynamic_engines	ioengines.c	/^fio_load_dynamic_engines(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_local_clock_init	gettime.c	/^void fio_local_clock_init(void)$/;"	f	typeref:typename:void
fio_local_clock_init	gettime.h	/^extern void fio_local_clock_init(void);$/;"	p	typeref:typename:void
fio_lock_file	filelock.c	/^void fio_lock_file(const char *fname)$/;"	f	typeref:typename:void
fio_lock_file	filelock.h	/^extern void fio_lock_file(const char *);$/;"	p	typeref:typename:void
fio_madvise_file	engines/mmap.c	/^static bool fio_madvise_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:bool	file:
fio_mark_td_terminate	fio.h	/^extern void fio_mark_td_terminate(struct thread_data *);$/;"	p	typeref:typename:void
fio_mark_td_terminate	libfio.c	/^void fio_mark_td_terminate(struct thread_data *td)$/;"	f	typeref:typename:void
fio_md5_ctx	crc/md5.h	/^struct fio_md5_ctx {$/;"	s
fio_md5_final	crc/md5.c	/^void fio_md5_final(struct fio_md5_ctx *mctx)$/;"	f	typeref:typename:void
fio_md5_final	crc/md5.h	/^extern void fio_md5_final(struct fio_md5_ctx *);$/;"	p	typeref:typename:void
fio_md5_init	crc/md5.c	/^void fio_md5_init(struct fio_md5_ctx *mctx)$/;"	f	typeref:typename:void
fio_md5_init	crc/md5.h	/^extern void fio_md5_init(struct fio_md5_ctx *);$/;"	p	typeref:typename:void
fio_md5_update	crc/md5.c	/^void fio_md5_update(struct fio_md5_ctx *mctx, const uint8_t *data,$/;"	f	typeref:typename:void
fio_md5_update	crc/md5.h	/^extern void fio_md5_update(struct fio_md5_ctx *, const uint8_t *, unsigned int);$/;"	p	typeref:typename:void
fio_memalign	fio.h	/^static inline void *fio_memalign(size_t alignment, size_t size, bool shared)$/;"	f	typeref:typename:void *
fio_memcpy_test	lib/memcpy.c	/^int fio_memcpy_test(const char *type)$/;"	f	typeref:typename:int
fio_memcpy_test	lib/memcpy.h	/^int fio_memcpy_test(const char *type);$/;"	p	typeref:typename:int
fio_memfree	fio.h	/^static inline void fio_memfree(void *ptr, size_t size, bool shared)$/;"	f	typeref:typename:void
fio_memtype	thread_options.h	/^enum fio_memtype {$/;"	g
fio_mkdir	os/os-windows.h	/^static inline int fio_mkdir(const char *path, mode_t mode) {$/;"	f	typeref:typename:int
fio_mkdir	os/os.h	/^# define fio_mkdir(/;"	d
fio_mmap_data	engines/mmap.c	/^struct fio_mmap_data {$/;"	s	file:
fio_mmap_file	engines/mmap.c	/^static int fio_mmap_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
fio_mmap_get_shared	engines/mmap.c	/^static int fio_mmap_get_shared(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_mmapio_close_file	engines/mmap.c	/^static int fio_mmapio_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_mmapio_init	engines/mmap.c	/^static int fio_mmapio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_mmapio_open_file	engines/mmap.c	/^static int fio_mmapio_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_mmapio_prep	engines/mmap.c	/^static int fio_mmapio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_mmapio_prep_full	engines/mmap.c	/^static int fio_mmapio_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_mmapio_prep_limited	engines/mmap.c	/^static int fio_mmapio_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_mmapio_queue	engines/mmap.c	/^static enum fio_q_status fio_mmapio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_mmapio_register	engines/mmap.c	/^static void fio_init fio_mmapio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_mmapio_unregister	engines/mmap.c	/^static void fio_exit fio_mmapio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_monotonic_clocktest	gettime.c	/^int fio_monotonic_clocktest(int debug)$/;"	f	typeref:typename:int
fio_monotonic_clocktest	gettime.h	/^extern int fio_monotonic_clocktest(int debug);$/;"	p	typeref:typename:int
fio_mount	filesetup.c	/^struct fio_mount {$/;"	s	file:
fio_mtd_close_file	engines/mtd.c	/^static int fio_mtd_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_mtd_data	engines/mtd.c	/^struct fio_mtd_data {$/;"	s	file:
fio_mtd_get_file_size	engines/mtd.c	/^static int fio_mtd_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_mtd_is_bad	engines/mtd.c	/^static int fio_mtd_is_bad(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_mtd_maybe_mark_bad	engines/mtd.c	/^static int fio_mtd_maybe_mark_bad(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_mtd_open_file	engines/mtd.c	/^static int fio_mtd_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_mtd_options	engines/mtd.c	/^struct fio_mtd_options {$/;"	s	file:
fio_mtd_queue	engines/mtd.c	/^static enum fio_q_status fio_mtd_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_mtd_register	engines/mtd.c	/^static void fio_init fio_mtd_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_mtd_unregister	engines/mtd.c	/^static void fio_exit fio_mtd_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_nbd_register	engines/nbd.c	/^static void fio_init fio_nbd_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_nbd_unregister	engines/nbd.c	/^static void fio_exit fio_nbd_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_net_cmd	server.h	/^struct fio_net_cmd {$/;"	s
fio_net_cmd_crc	server.c	/^static void fio_net_cmd_crc(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
fio_net_cmd_crc_pdu	server.c	/^static void fio_net_cmd_crc_pdu(struct fio_net_cmd *cmd, const void *pdu)$/;"	f	typeref:typename:void	file:
fio_net_cmd_reply	server.h	/^struct fio_net_cmd_reply {$/;"	s
fio_net_port	server.c	/^int fio_net_port = FIO_NET_PORT;$/;"	v	typeref:typename:int
fio_net_prep_cmd	server.c	/^static struct sk_entry *fio_net_prep_cmd(uint16_t opcode, void *buf,$/;"	f	typeref:struct:sk_entry *	file:
fio_net_queue_cmd	server.c	/^static int fio_net_queue_cmd(uint16_t opcode, void *buf, off_t size,$/;"	f	typeref:typename:int	file:
fio_net_queue_entry	server.c	/^static void fio_net_queue_entry(struct sk_entry *entry)$/;"	f	typeref:typename:void	file:
fio_net_queue_quit	server.c	/^static int fio_net_queue_quit(void)$/;"	f	typeref:typename:int	file:
fio_net_queue_stop	server.c	/^static int fio_net_queue_stop(int error, int signal)$/;"	f	typeref:typename:int	file:
fio_net_recv_cmd	server.c	/^struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait)$/;"	f	typeref:struct:fio_net_cmd *
fio_net_recv_cmd	server.h	/^extern struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait);$/;"	p	typeref:struct:fio_net_cmd *
fio_net_send_ack	server.c	/^static int fio_net_send_ack(struct fio_net_cmd *cmd, int error, int signal)$/;"	f	typeref:typename:int	file:
fio_net_send_cmd	server.c	/^int fio_net_send_cmd(int fd, uint16_t opcode, const void *buf, off_t size,$/;"	f	typeref:typename:int
fio_net_send_cmd	server.h	/^extern int fio_net_send_cmd(int, uint16_t, const void *, off_t, uint64_t *, struct flist_head *)/;"	p	typeref:typename:int
fio_net_send_quit	server.c	/^int fio_net_send_quit(int sk)$/;"	f	typeref:typename:int
fio_net_send_quit	server.h	/^extern int fio_net_send_quit(int sk);$/;"	p	typeref:typename:int
fio_net_send_simple_cmd	server.c	/^int fio_net_send_simple_cmd(int sk, uint16_t opcode, uint64_t tag,$/;"	f	typeref:typename:int
fio_net_send_simple_cmd	server.h	/^extern int fio_net_send_simple_cmd(int, uint16_t, uint64_t, struct flist_head *);$/;"	p	typeref:typename:int
fio_net_send_simple_stack_cmd	server.c	/^static int fio_net_send_simple_stack_cmd(int sk, uint16_t opcode, uint64_t tag)$/;"	f	typeref:typename:int	file:
fio_netio_accept	engines/net.c	/^static int fio_netio_accept(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_cleanup	engines/net.c	/^static void fio_netio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_netio_close_file	engines/net.c	/^static int fio_netio_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_connect	engines/net.c	/^static int fio_netio_connect(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_init	engines/net.c	/^static int fio_netio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_netio_is_multicast	engines/net.c	/^static int fio_netio_is_multicast(const char *mcaddr)$/;"	f	typeref:typename:int	file:
fio_netio_open_file	engines/net.c	/^static int fio_netio_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_prep	engines/net.c	/^static int fio_netio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_netio_queue	engines/net.c	/^static enum fio_q_status fio_netio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_netio_recv	engines/net.c	/^static int fio_netio_recv(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_netio_register	engines/net.c	/^static void fio_init fio_netio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_netio_send	engines/net.c	/^static int fio_netio_send(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_netio_send_close	engines/net.c	/^static void fio_netio_send_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void	file:
fio_netio_send_open	engines/net.c	/^static int fio_netio_send_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_setup	engines/net.c	/^static int fio_netio_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_netio_setup_connect	engines/net.c	/^static int fio_netio_setup_connect(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_netio_setup_connect_inet	engines/net.c	/^static int fio_netio_setup_connect_inet(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_netio_setup_connect_unix	engines/net.c	/^static int fio_netio_setup_connect_unix(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_netio_setup_listen	engines/net.c	/^static int fio_netio_setup_listen(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_netio_setup_listen_inet	engines/net.c	/^static int fio_netio_setup_listen_inet(struct thread_data *td, short port)$/;"	f	typeref:typename:int	file:
fio_netio_setup_listen_unix	engines/net.c	/^static int fio_netio_setup_listen_unix(struct thread_data *td, const char *path)$/;"	f	typeref:typename:int	file:
fio_netio_setup_splice	engines/net.c	/^static int fio_netio_setup_splice(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_netio_splice_in	engines/net.c	/^static int fio_netio_splice_in(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_netio_splice_out	engines/net.c	/^static int fio_netio_splice_out(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_netio_terminate	engines/net.c	/^static void fio_netio_terminate(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_netio_udp_recv_open	engines/net.c	/^static int fio_netio_udp_recv_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_netio_unregister	engines/net.c	/^static void fio_exit fio_netio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_nfs_register	engines/nfs.c	/^static void fio_init fio_nfs_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_nfs_unregister	engines/nfs.c	/^static void fio_exit fio_nfs_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_null_cleanup	engines/null.c	/^static void fio_null_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_null_commit	engines/null.c	/^	int fio_null_commit(struct thread_data *td)$/;"	f	struct:NullData	typeref:typename:int	file:
fio_null_commit	engines/null.c	/^static int fio_null_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_null_event	engines/null.c	/^	io_u *fio_null_event(struct thread_data *, int event)$/;"	f	struct:NullData	typeref:typename:io_u *	file:
fio_null_event	engines/null.c	/^static struct io_u *fio_null_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_null_getevents	engines/null.c	/^	int fio_null_getevents(struct thread_data *, unsigned int min_events,$/;"	f	struct:NullData	typeref:typename:int	file:
fio_null_getevents	engines/null.c	/^static int fio_null_getevents(struct thread_data *td, unsigned int min_events,$/;"	f	typeref:typename:int	file:
fio_null_init	engines/null.c	/^static int fio_null_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_null_open	engines/null.c	/^	int fio_null_open(struct thread_data *, struct fio_file *f)$/;"	f	struct:NullData	typeref:typename:int	file:
fio_null_open	engines/null.c	/^static int fio_null_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_null_queue	engines/null.c	/^	fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	struct:NullData	typeref:typename:fio_q_status	file:
fio_null_queue	engines/null.c	/^static enum fio_q_status fio_null_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_null_queue	engines/null.c	/^static fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:fio_q_status	file:
fio_null_register	engines/null.c	/^static void fio_init fio_null_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_null_unregister	engines/null.c	/^static void fio_exit fio_null_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_opt_cat_groups	optgroup.c	/^static const struct opt_group fio_opt_cat_groups[] = {$/;"	v	typeref:typename:const struct opt_group[]	file:
fio_opt_groups	optgroup.c	/^static const struct opt_group fio_opt_groups[] = {$/;"	v	typeref:typename:const struct opt_group[]	file:
fio_opt_int_fn	parse.h	/^typedef int (fio_opt_int_fn)(void *, int *);$/;"	t	typeref:typename:int ()(void *,int *)
fio_opt_str_fn	parse.h	/^typedef int (fio_opt_str_fn)(void *, const char *);$/;"	t	typeref:typename:int ()(void *,const char *)
fio_opt_str_val_fn	parse.h	/^typedef int (fio_opt_str_val_fn)(void *, long long *);$/;"	t	typeref:typename:int ()(void *,long long *)
fio_opt_type	parse.h	/^enum fio_opt_type {$/;"	g
fio_option	parse.h	/^struct fio_option {$/;"	s
fio_option_dup_subs	fio.h	/^extern char *fio_option_dup_subs(const char *);$/;"	p	typeref:typename:char *
fio_option_dup_subs	options.c	/^char *fio_option_dup_subs(const char *opt)$/;"	f	typeref:typename:char *
fio_option_find	options.c	/^struct fio_option *fio_option_find(const char *name)$/;"	f	typeref:struct:fio_option *
fio_option_find	options.h	/^extern struct fio_option *fio_option_find(const char *);$/;"	p	typeref:struct:fio_option *
fio_option_is_set	options.h	/^#define fio_option_is_set(/;"	d
fio_option_mark_set	options.c	/^void fio_option_mark_set(struct thread_options *o, const struct fio_option *opt)$/;"	f	typeref:typename:void
fio_option_mark_set	options.h	/^extern void fio_option_mark_set(struct thread_options *,$/;"	p	typeref:typename:void
fio_options	options.c	/^struct fio_option fio_options[FIO_MAX_OPTS] = {$/;"	v	typeref:struct:fio_option[]
fio_options_dup_and_init	fio.h	/^extern void fio_options_dup_and_init(struct option *);$/;"	p	typeref:typename:void
fio_options_dup_and_init	options.c	/^void fio_options_dup_and_init(struct option *long_options)$/;"	f	typeref:typename:void
fio_options_fill_optstring	init.c	/^static void fio_options_fill_optstring(void)$/;"	f	typeref:typename:void	file:
fio_options_free	options.c	/^void fio_options_free(struct thread_data *td)$/;"	f	typeref:typename:void
fio_options_free	options.h	/^void fio_options_free(struct thread_data *);$/;"	p	typeref:typename:void
fio_options_mem_dupe	fio.h	/^extern void fio_options_mem_dupe(struct thread_data *);$/;"	p	typeref:typename:void
fio_options_mem_dupe	options.c	/^void fio_options_mem_dupe(struct thread_data *td)$/;"	f	typeref:typename:void
fio_options_parse	fio.h	/^extern int fio_options_parse(struct thread_data *, char **, int);$/;"	p	typeref:typename:int
fio_options_parse	options.c	/^int fio_options_parse(struct thread_data *td, char **opts, int num_opts)$/;"	f	typeref:typename:int
fio_options_set_ioengine_opts	fio.h	/^extern void fio_options_set_ioengine_opts(struct option *long_options, struct thread_data *td);$/;"	p	typeref:typename:void
fio_options_set_ioengine_opts	options.c	/^void fio_options_set_ioengine_opts(struct option *long_options,$/;"	f	typeref:typename:void
fio_os_strings	libfio.c	/^static const char *fio_os_strings[os_nr] = {$/;"	v	typeref:typename:const char * []	file:
fio_overlapped	engines/windowsaio.c	/^struct fio_overlapped {$/;"	s	file:
fio_path	t/readonly.py	/^        fio_path = args.fio$/;"	v
fio_pin_memory	fio.h	/^extern int __must_check fio_pin_memory(struct thread_data *);$/;"	p	typeref:typename:int __must_check
fio_pin_memory	memory.c	/^int fio_pin_memory(struct thread_data *td)$/;"	f	typeref:typename:int
fio_pmemblk_cache_insert	engines/pmemblk.c	/^static void fio_pmemblk_cache_insert(fio_pmemblk_file_t pmb)$/;"	f	typeref:typename:void	file:
fio_pmemblk_cache_lookup	engines/pmemblk.c	/^fio_pmemblk_file_t fio_pmemblk_cache_lookup(const char *filename)$/;"	f	typeref:typename:fio_pmemblk_file_t
fio_pmemblk_cache_remove	engines/pmemblk.c	/^static void fio_pmemblk_cache_remove(fio_pmemblk_file_t pmb)$/;"	f	typeref:typename:void	file:
fio_pmemblk_close_file	engines/pmemblk.c	/^static int fio_pmemblk_close_file(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_pmemblk_file	engines/pmemblk.c	/^struct fio_pmemblk_file {$/;"	s	file:
fio_pmemblk_file_t	engines/pmemblk.c	/^typedef struct fio_pmemblk_file *fio_pmemblk_file_t;$/;"	t	typeref:struct:fio_pmemblk_file *	file:
fio_pmemblk_get_file_size	engines/pmemblk.c	/^static int fio_pmemblk_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_pmemblk_open_file	engines/pmemblk.c	/^static int fio_pmemblk_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_pmemblk_queue	engines/pmemblk.c	/^static enum fio_q_status fio_pmemblk_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_pmemblk_register	engines/pmemblk.c	/^static void fio_init fio_pmemblk_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_pmemblk_unlink_file	engines/pmemblk.c	/^static int fio_pmemblk_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_pmemblk_unregister	engines/pmemblk.c	/^static void fio_exit fio_pmemblk_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_posixaio_cancel	engines/posixaio.c	/^static int fio_posixaio_cancel(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_posixaio_cleanup	engines/posixaio.c	/^static void fio_posixaio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_posixaio_event	engines/posixaio.c	/^static struct io_u *fio_posixaio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_posixaio_getevents	engines/posixaio.c	/^static int fio_posixaio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_posixaio_init	engines/posixaio.c	/^static int fio_posixaio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_posixaio_prep	engines/posixaio.c	/^static int fio_posixaio_prep(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_posixaio_queue	engines/posixaio.c	/^static enum fio_q_status fio_posixaio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_posixaio_register	engines/posixaio.c	/^static void fio_init fio_posixaio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_posixaio_unregister	engines/posixaio.c	/^static void fio_exit fio_posixaio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_psyncio_queue	engines/sync.c	/^static enum fio_q_status fio_psyncio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_put_client	client.c	/^void fio_put_client(struct fio_client *client)$/;"	f	typeref:typename:void
fio_put_client	client.h	/^extern void fio_put_client(struct fio_client *);$/;"	p	typeref:typename:void
fio_pvsyncio2_queue	engines/sync.c	/^static enum fio_q_status fio_pvsyncio2_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_pvsyncio_queue	engines/sync.c	/^static enum fio_q_status fio_pvsyncio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_q_status	ioengines.h	/^enum fio_q_status {$/;"	g
fio_rados_cleanup	engines/rados.c	/^static void fio_rados_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_rados_event	engines/rados.c	/^static struct io_u *fio_rados_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_rados_getevents	engines/rados.c	/^int fio_rados_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int
fio_rados_invalidate	engines/rados.c	/^static int fio_rados_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rados_io_u_free	engines/rados.c	/^static void fio_rados_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_rados_io_u_init	engines/rados.c	/^static int fio_rados_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_rados_iou	engines/rados.c	/^struct fio_rados_iou {$/;"	s	file:
fio_rados_open	engines/rados.c	/^static int fio_rados_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rados_queue	engines/rados.c	/^static enum fio_q_status fio_rados_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_rados_register	engines/rados.c	/^static void fio_init fio_rados_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_rados_setup	engines/rados.c	/^static int fio_rados_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rados_unregister	engines/rados.c	/^static void fio_exit fio_rados_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_rb_node	lib/rbtree.h	/^struct fio_rb_node$/;"	s
fio_rbd_cleanup	engines/rbd.c	/^static void fio_rbd_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_rbd_event	engines/rbd.c	/^static struct io_u *fio_rbd_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_rbd_getevents	engines/rbd.c	/^static int fio_rbd_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_rbd_init	engines/rbd.c	/^static int fio_rbd_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rbd_invalidate	engines/rbd.c	/^static int fio_rbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rbd_io_u_free	engines/rbd.c	/^static void fio_rbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_rbd_io_u_init	engines/rbd.c	/^static int fio_rbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_rbd_iou	engines/rbd.c	/^struct fio_rbd_iou {$/;"	s	file:
fio_rbd_open	engines/rbd.c	/^static int fio_rbd_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rbd_queue	engines/rbd.c	/^static enum fio_q_status fio_rbd_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_rbd_register	engines/rbd.c	/^static void fio_init fio_rbd_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_rbd_setup	engines/rbd.c	/^static int fio_rbd_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rbd_unregister	engines/rbd.c	/^static void fio_exit fio_rbd_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_rdmaio_accept	engines/rdma.c	/^static int fio_rdmaio_accept(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rdmaio_cleanup	engines/rdma.c	/^static void fio_rdmaio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_rdmaio_close_file	engines/rdma.c	/^static int fio_rdmaio_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rdmaio_commit	engines/rdma.c	/^static int fio_rdmaio_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_connect	engines/rdma.c	/^static int fio_rdmaio_connect(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rdmaio_event	engines/rdma.c	/^static struct io_u *fio_rdmaio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_rdmaio_getevents	engines/rdma.c	/^static int fio_rdmaio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_rdmaio_init	engines/rdma.c	/^static int fio_rdmaio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_open_file	engines/rdma.c	/^static int fio_rdmaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_rdmaio_post_init	engines/rdma.c	/^static int fio_rdmaio_post_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_prep	engines/rdma.c	/^static int fio_rdmaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_rdmaio_queue	engines/rdma.c	/^static enum fio_q_status fio_rdmaio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_rdmaio_queued	engines/rdma.c	/^static void fio_rdmaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	f	typeref:typename:void	file:
fio_rdmaio_recv	engines/rdma.c	/^static int fio_rdmaio_recv(struct thread_data *td, struct io_u **io_us,$/;"	f	typeref:typename:int	file:
fio_rdmaio_register	engines/rdma.c	/^static void fio_init fio_rdmaio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_rdmaio_send	engines/rdma.c	/^static int fio_rdmaio_send(struct thread_data *td, struct io_u **io_us,$/;"	f	typeref:typename:int	file:
fio_rdmaio_setup	engines/rdma.c	/^static int fio_rdmaio_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_setup_connect	engines/rdma.c	/^static int fio_rdmaio_setup_connect(struct thread_data *td, const char *host,$/;"	f	typeref:typename:int	file:
fio_rdmaio_setup_control_msg_buffers	engines/rdma.c	/^static int fio_rdmaio_setup_control_msg_buffers(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_setup_listen	engines/rdma.c	/^static int fio_rdmaio_setup_listen(struct thread_data *td, short port)$/;"	f	typeref:typename:int	file:
fio_rdmaio_setup_qp	engines/rdma.c	/^static int fio_rdmaio_setup_qp(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_rdmaio_unregister	engines/rdma.c	/^static void fio_exit fio_rdmaio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_recv_data	server.c	/^static int fio_recv_data(int sk, void *buf, unsigned int len, bool wait)$/;"	f	typeref:typename:int	file:
fio_ro_check	fio.h	/^static inline void fio_ro_check(const struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
fio_running_or_pending_io_threads	fio.h	/^extern int fio_running_or_pending_io_threads(void);$/;"	p	typeref:typename:int
fio_running_or_pending_io_threads	libfio.c	/^int fio_running_or_pending_io_threads(void)$/;"	f	typeref:typename:int
fio_rwlock	rwlock.h	/^struct fio_rwlock {$/;"	s
fio_rwlock_init	rwlock.c	/^struct fio_rwlock *fio_rwlock_init(void)$/;"	f	typeref:struct:fio_rwlock *
fio_rwlock_init	rwlock.h	/^extern struct fio_rwlock *fio_rwlock_init(void);$/;"	p	typeref:struct:fio_rwlock *
fio_rwlock_read	rwlock.c	/^void fio_rwlock_read(struct fio_rwlock *lock)$/;"	f	typeref:typename:void
fio_rwlock_read	rwlock.h	/^extern void fio_rwlock_read(struct fio_rwlock *);$/;"	p	typeref:typename:void
fio_rwlock_remove	rwlock.c	/^void fio_rwlock_remove(struct fio_rwlock *lock)$/;"	f	typeref:typename:void
fio_rwlock_remove	rwlock.h	/^extern void fio_rwlock_remove(struct fio_rwlock *);$/;"	p	typeref:typename:void
fio_rwlock_unlock	rwlock.c	/^void fio_rwlock_unlock(struct fio_rwlock *lock)$/;"	f	typeref:typename:void
fio_rwlock_unlock	rwlock.h	/^extern void fio_rwlock_unlock(struct fio_rwlock *);$/;"	p	typeref:typename:void
fio_rwlock_write	rwlock.c	/^void fio_rwlock_write(struct fio_rwlock *lock)$/;"	f	typeref:typename:void
fio_rwlock_write	rwlock.h	/^extern void fio_rwlock_write(struct fio_rwlock *);$/;"	p	typeref:typename:void
fio_sem	fio_sem.h	/^struct fio_sem {$/;"	s
fio_sem_down	fio_sem.c	/^void fio_sem_down(struct fio_sem *sem)$/;"	f	typeref:typename:void
fio_sem_down	fio_sem.h	/^extern void fio_sem_down(struct fio_sem *);$/;"	p	typeref:typename:void
fio_sem_down_timeout	fio_sem.c	/^int fio_sem_down_timeout(struct fio_sem *sem, unsigned int msecs)$/;"	f	typeref:typename:int
fio_sem_down_timeout	fio_sem.h	/^extern int fio_sem_down_timeout(struct fio_sem *, unsigned int);$/;"	p	typeref:typename:int
fio_sem_down_trylock	fio_sem.c	/^bool fio_sem_down_trylock(struct fio_sem *sem)$/;"	f	typeref:typename:bool
fio_sem_down_trylock	fio_sem.h	/^extern bool fio_sem_down_trylock(struct fio_sem *);$/;"	p	typeref:typename:bool
fio_sem_init	fio_sem.c	/^struct fio_sem *fio_sem_init(int value)$/;"	f	typeref:struct:fio_sem *
fio_sem_init	fio_sem.h	/^extern struct fio_sem *fio_sem_init(int);$/;"	p	typeref:struct:fio_sem *
fio_sem_remove	fio_sem.c	/^void fio_sem_remove(struct fio_sem *sem)$/;"	f	typeref:typename:void
fio_sem_remove	fio_sem.h	/^extern void fio_sem_remove(struct fio_sem *);$/;"	p	typeref:typename:void
fio_sem_up	fio_sem.c	/^void fio_sem_up(struct fio_sem *sem)$/;"	f	typeref:typename:void
fio_sem_up	fio_sem.h	/^extern void fio_sem_up(struct fio_sem *);$/;"	p	typeref:typename:void
fio_send_cmd_ext_pdu	server.c	/^static int fio_send_cmd_ext_pdu(int sk, uint16_t opcode, const void *buf,$/;"	f	typeref:typename:int	file:
fio_send_data	server.c	/^static int fio_send_data(int sk, const void *p, unsigned int len)$/;"	f	typeref:typename:int	file:
fio_send_file	client.c	/^static int fio_send_file(struct fio_client *client, struct cmd_sendfile *pdu,$/;"	f	typeref:typename:int	file:
fio_send_iolog	server.c	/^int fio_send_iolog(struct thread_data *td, struct io_log *log, const char *name)$/;"	f	typeref:typename:int
fio_send_iolog	server.h	/^extern int fio_send_iolog(struct thread_data *, struct io_log *, const char *);$/;"	p	typeref:typename:int
fio_sendv_data	server.c	/^static int fio_sendv_data(int sk, struct iovec *iov, int count)$/;"	f	typeref:typename:int	file:
fio_server	server.c	/^static int fio_server(void)$/;"	f	typeref:typename:int	file:
fio_server_add_conn_pid	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, HANDLE hProcess)$/;"	f	typeref:typename:void	file:
fio_server_add_conn_pid	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, pid_t pid)$/;"	f	typeref:typename:void	file:
fio_server_add_fork_item	server.c	/^static void fio_server_add_fork_item(pid_t pid, struct flist_head *list)$/;"	f	typeref:typename:void	file:
fio_server_add_fork_item	server.c	/^static void fio_server_add_fork_item(struct ffi_element *element, struct flist_head *list)$/;"	f	typeref:typename:void	file:
fio_server_add_job_pid	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pid_t pid)$/;"	f	typeref:typename:void	file:
fio_server_add_job_pid	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pthread_t thread)$/;"	f	typeref:typename:void	file:
fio_server_arg	server.c	/^static char *fio_server_arg;$/;"	v	typeref:typename:char *	file:
fio_server_check_conns	server.c	/^static void fio_server_check_conns(struct flist_head *conn_list)$/;"	f	typeref:typename:void	file:
fio_server_check_fork_item	server.c	/^static void fio_server_check_fork_item(struct fio_fork_item *ffi)$/;"	f	typeref:typename:void	file:
fio_server_check_fork_items	server.c	/^static void fio_server_check_fork_items(struct flist_head *list, bool stop)$/;"	f	typeref:typename:void	file:
fio_server_check_jobs	server.c	/^static void fio_server_check_jobs(struct flist_head *job_list)$/;"	f	typeref:typename:void	file:
fio_server_create_sk_key	server.c	/^int fio_server_create_sk_key(void)$/;"	f	typeref:typename:int
fio_server_create_sk_key	server.h	/^extern int fio_server_create_sk_key(void);$/;"	p	typeref:typename:int
fio_server_destroy_sk_key	server.c	/^void fio_server_destroy_sk_key(void)$/;"	f	typeref:typename:void
fio_server_destroy_sk_key	server.h	/^extern void fio_server_destroy_sk_key(void);$/;"	p	typeref:typename:void
fio_server_fork_item_done	server.c	/^static void fio_server_fork_item_done(struct fio_fork_item *ffi, bool stop)$/;"	f	typeref:typename:void	file:
fio_server_get_verify_state	server.c	/^int fio_server_get_verify_state(const char *name, int threadnumber,$/;"	f	typeref:typename:int
fio_server_get_verify_state	server.h	/^extern int fio_server_get_verify_state(const char *, int, void **);$/;"	p	typeref:typename:int
fio_server_got_signal	server.c	/^void fio_server_got_signal(int signal)$/;"	f	typeref:typename:void
fio_server_got_signal	server.h	/^extern void fio_server_got_signal(int);$/;"	p	typeref:typename:void
fio_server_internal_set	server.c	/^void fio_server_internal_set(const char *arg)$/;"	f	typeref:typename:void
fio_server_internal_set	server.h	/^extern void fio_server_internal_set(const char *);$/;"	p	typeref:typename:void
fio_server_op	server.c	/^const char *fio_server_op(unsigned int op)$/;"	f	typeref:typename:const char *
fio_server_op	server.h	/^extern const char *fio_server_op(unsigned int);$/;"	p	typeref:typename:const char *
fio_server_ops	server.c	/^static const char *fio_server_ops[FIO_NET_CMD_NR] = {$/;"	v	typeref:typename:const char * []	file:
fio_server_parse_host	server.c	/^int fio_server_parse_host(const char *host, int ipv6, struct in_addr *inp,$/;"	f	typeref:typename:int
fio_server_parse_host	server.h	/^extern int fio_server_parse_host(const char *, int, struct in_addr *, struct in6_addr *);$/;"	p	typeref:typename:int
fio_server_parse_string	server.c	/^int fio_server_parse_string(const char *str, char **ptr, bool *is_sock,$/;"	f	typeref:typename:int
fio_server_parse_string	server.h	/^extern int fio_server_parse_string(const char *, char **, bool *, int *, struct in_addr *, struc/;"	p	typeref:typename:int
fio_server_pipe_name	server.c	/^static char *fio_server_pipe_name  = NULL;$/;"	v	typeref:typename:char *	file:
fio_server_poll_fd	server.c	/^bool fio_server_poll_fd(int fd, short events, int timeout)$/;"	f	typeref:typename:bool
fio_server_poll_fd	server.h	/^extern bool fio_server_poll_fd(int fd, short events, int timeout);$/;"	p	typeref:typename:bool
fio_server_send_add_job	server.c	/^void fio_server_send_add_job(struct thread_data *td)$/;"	f	typeref:typename:void
fio_server_send_add_job	server.h	/^extern void fio_server_send_add_job(struct thread_data *);$/;"	p	typeref:typename:void
fio_server_send_du	server.c	/^void fio_server_send_du(void)$/;"	f	typeref:typename:void
fio_server_send_du	server.h	/^extern void fio_server_send_du(void);$/;"	p	typeref:typename:void
fio_server_send_gs	server.c	/^void fio_server_send_gs(struct group_run_stats *rs)$/;"	f	typeref:typename:void
fio_server_send_gs	server.h	/^extern void fio_server_send_gs(struct group_run_stats *);$/;"	p	typeref:typename:void
fio_server_send_job_options	server.c	/^void fio_server_send_job_options(struct flist_head *opt_list,$/;"	f	typeref:typename:void
fio_server_send_job_options	server.h	/^extern void fio_server_send_job_options(struct flist_head *, unsigned int);$/;"	p	typeref:typename:void
fio_server_send_start	server.c	/^void fio_server_send_start(struct thread_data *td)$/;"	f	typeref:typename:void
fio_server_send_start	server.h	/^extern void fio_server_send_start(struct thread_data *);$/;"	p	typeref:typename:void
fio_server_send_ts	server.c	/^void fio_server_send_ts(struct thread_stat *ts, struct group_run_stats *rs)$/;"	f	typeref:typename:void
fio_server_send_ts	server.h	/^extern void fio_server_send_ts(struct thread_stat *, struct group_run_stats *);$/;"	p	typeref:typename:void
fio_server_set_arg	server.c	/^void fio_server_set_arg(const char *arg)$/;"	f	typeref:typename:void
fio_server_set_arg	server.h	/^extern void fio_server_set_arg(const char *);$/;"	p	typeref:typename:void
fio_server_text_output	server.c	/^int fio_server_text_output(int level, const char *buf, size_t len)$/;"	f	typeref:typename:int
fio_server_text_output	server.h	/^extern int fio_server_text_output(int, const char *, size_t);$/;"	p	typeref:typename:int
fio_set_directio	file.h	/^extern int fio_set_directio(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int
fio_set_directio	filesetup.c	/^int fio_set_directio(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_set_fd_nonblocking	fio.h	/^extern int fio_set_fd_nonblocking(int, const char *);$/;"	p	typeref:typename:int
fio_set_fd_nonblocking	libfio.c	/^int fio_set_fd_nonblocking(int fd, const char *who)$/;"	f	typeref:typename:int
fio_set_ime_filename	engines/ime.c	/^static char *fio_set_ime_filename(char* filename)$/;"	f	typeref:typename:char *	file:
fio_set_odirect	os/os-mac.h	/^static inline int fio_set_odirect(struct fio_file *f)$/;"	f	typeref:typename:int
fio_set_odirect	os/os-solaris.h	/^static inline int fio_set_odirect(struct fio_file *f)$/;"	f	typeref:typename:int
fio_set_sched_idle	os/os-android.h	/^static inline int fio_set_sched_idle(void)$/;"	f	typeref:typename:int
fio_set_sched_idle	os/os-linux.h	/^static inline int fio_set_sched_idle(void)$/;"	f	typeref:typename:int
fio_set_sched_idle	os/os-windows.h	/^static inline int fio_set_sched_idle(void)$/;"	f	typeref:typename:int
fio_setaffinity	os/os-dragonfly.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t mask)$/;"	f	typeref:typename:int
fio_setaffinity	os/os-freebsd.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	f	typeref:typename:int
fio_setaffinity	os/os-linux.h	/^#define fio_setaffinity(/;"	d
fio_setaffinity	os/os-solaris.h	/^#define fio_setaffinity(/;"	d
fio_setaffinity	os/os-windows.h	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask);$/;"	p	typeref:typename:int
fio_setaffinity	os/os.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	f	typeref:typename:int
fio_setaffinity	os/windows/cpu-affinity.c	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	f	typeref:typename:int
fio_sgio_cleanup	engines/sg.c	/^static void fio_sgio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_sgio_close	engines/sg.c	/^int fio_sgio_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
fio_sgio_commit	engines/sg.c	/^static int fio_sgio_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_sgio_doio	engines/sg.c	/^static enum fio_q_status fio_sgio_doio(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_sgio_errdetails	engines/sg.c	/^static char *fio_sgio_errdetails(struct io_u *io_u)$/;"	f	typeref:typename:char *	file:
fio_sgio_event	engines/sg.c	/^static struct io_u *fio_sgio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_sgio_get_file_size	engines/sg.c	/^static int fio_sgio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_sgio_getevents	engines/sg.c	/^static int fio_sgio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_sgio_init	engines/sg.c	/^static int fio_sgio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_sgio_init	engines/sg.c	/^static int fio_sgio_init(struct thread_data fio_unused *td)$/;"	f	typeref:typename:int	file:
fio_sgio_ioctl_doio	engines/sg.c	/^static enum fio_q_status fio_sgio_ioctl_doio(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_sgio_open	engines/sg.c	/^static int fio_sgio_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_sgio_prep	engines/sg.c	/^static int fio_sgio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_sgio_queue	engines/sg.c	/^static enum fio_q_status fio_sgio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_sgio_read_capacity	engines/sg.c	/^static int fio_sgio_read_capacity(struct thread_data *td, unsigned int *bs,$/;"	f	typeref:typename:int	file:
fio_sgio_register	engines/sg.c	/^static void fio_init fio_sgio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_sgio_rw_doio	engines/sg.c	/^static enum fio_q_status fio_sgio_rw_doio(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_sgio_rw_lba	engines/sg.c	/^static void fio_sgio_rw_lba(struct sg_io_hdr *hdr, unsigned long long lba,$/;"	f	typeref:typename:void	file:
fio_sgio_stream_control	engines/sg.c	/^static int fio_sgio_stream_control(struct fio_file *f, bool open_stream, uint16_t *stream_id)$/;"	f	typeref:typename:int	file:
fio_sgio_type_check	engines/sg.c	/^static int fio_sgio_type_check(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_sgio_unmap_setup	engines/sg.c	/^static void fio_sgio_unmap_setup(struct sg_io_hdr *hdr, struct sgio_trim *st)$/;"	f	typeref:typename:void	file:
fio_sgio_unregister	engines/sg.c	/^static void fio_exit fio_sgio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_sha1_ctx	crc/sha1.h	/^struct fio_sha1_ctx {$/;"	s
fio_sha1_final	crc/sha1.c	/^void fio_sha1_final(struct fio_sha1_ctx *ctx)$/;"	f	typeref:typename:void
fio_sha1_final	crc/sha1.h	/^void fio_sha1_final(struct fio_sha1_ctx *);$/;"	p	typeref:typename:void
fio_sha1_init	crc/sha1.c	/^void fio_sha1_init(struct fio_sha1_ctx *ctx)$/;"	f	typeref:typename:void
fio_sha1_init	crc/sha1.h	/^void fio_sha1_init(struct fio_sha1_ctx *);$/;"	p	typeref:typename:void
fio_sha1_update	crc/sha1.c	/^void fio_sha1_update(struct fio_sha1_ctx *ctx, const void *data,$/;"	f	typeref:typename:void
fio_sha1_update	crc/sha1.h	/^void fio_sha1_update(struct fio_sha1_ctx *, const void *dataIn, unsigned long len);$/;"	p	typeref:typename:void
fio_sha256_ctx	crc/sha256.h	/^struct fio_sha256_ctx {$/;"	s
fio_sha256_final	crc/sha256.c	/^void fio_sha256_final(struct fio_sha256_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha256_final	crc/sha256.h	/^void fio_sha256_final(struct fio_sha256_ctx *);$/;"	p	typeref:typename:void
fio_sha256_init	crc/sha256.c	/^void fio_sha256_init(struct fio_sha256_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha256_init	crc/sha256.h	/^void fio_sha256_init(struct fio_sha256_ctx *);$/;"	p	typeref:typename:void
fio_sha256_update	crc/sha256.c	/^void fio_sha256_update(struct fio_sha256_ctx *sctx, const uint8_t *data,$/;"	f	typeref:typename:void
fio_sha256_update	crc/sha256.h	/^void fio_sha256_update(struct fio_sha256_ctx *, const uint8_t *, unsigned int);$/;"	p	typeref:typename:void
fio_sha3_224_init	crc/sha3.c	/^void fio_sha3_224_init(struct fio_sha3_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha3_224_init	crc/sha3.h	/^void fio_sha3_224_init(struct fio_sha3_ctx *sctx);$/;"	p	typeref:typename:void
fio_sha3_256_init	crc/sha3.c	/^void fio_sha3_256_init(struct fio_sha3_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha3_256_init	crc/sha3.h	/^void fio_sha3_256_init(struct fio_sha3_ctx *sctx);$/;"	p	typeref:typename:void
fio_sha3_384_init	crc/sha3.c	/^void fio_sha3_384_init(struct fio_sha3_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha3_384_init	crc/sha3.h	/^void fio_sha3_384_init(struct fio_sha3_ctx *sctx);$/;"	p	typeref:typename:void
fio_sha3_512_init	crc/sha3.c	/^void fio_sha3_512_init(struct fio_sha3_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha3_512_init	crc/sha3.h	/^void fio_sha3_512_init(struct fio_sha3_ctx *sctx);$/;"	p	typeref:typename:void
fio_sha3_ctx	crc/sha3.h	/^struct fio_sha3_ctx {$/;"	s
fio_sha3_final	crc/sha3.c	/^void fio_sha3_final(struct fio_sha3_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha3_final	crc/sha3.h	/^void fio_sha3_final(struct fio_sha3_ctx *sctx);$/;"	p	typeref:typename:void
fio_sha3_init	crc/sha3.c	/^static void fio_sha3_init(struct fio_sha3_ctx *sctx, unsigned int digest_sz)$/;"	f	typeref:typename:void	file:
fio_sha3_update	crc/sha3.c	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	f	typeref:typename:int
fio_sha3_update	crc/sha3.h	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	p	typeref:typename:int
fio_sha512_ctx	crc/sha512.h	/^struct fio_sha512_ctx {$/;"	s
fio_sha512_init	crc/sha512.c	/^void fio_sha512_init(struct fio_sha512_ctx *sctx)$/;"	f	typeref:typename:void
fio_sha512_init	crc/sha512.h	/^void fio_sha512_init(struct fio_sha512_ctx *);$/;"	p	typeref:typename:void
fio_sha512_update	crc/sha512.c	/^void fio_sha512_update(struct fio_sha512_ctx *sctx, const uint8_t *data,$/;"	f	typeref:typename:void
fio_sha512_update	crc/sha512.h	/^void fio_sha512_update(struct fio_sha512_ctx *, const uint8_t *, unsigned int);$/;"	p	typeref:typename:void
fio_show_ioengine_help	ioengines.c	/^int fio_show_ioengine_help(const char *engine)$/;"	f	typeref:typename:int
fio_show_ioengine_help	ioengines.h	/^extern int fio_show_ioengine_help(const char *engine);$/;"	p	typeref:typename:int
fio_show_option_help	fio.h	/^extern int fio_show_option_help(const char *);$/;"	p	typeref:typename:int
fio_show_option_help	options.c	/^int fio_show_option_help(const char *opt)$/;"	f	typeref:typename:int
fio_skeleton_cancel	engines/skeleton_external.c	/^static int fio_skeleton_cancel(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_skeleton_cleanup	engines/skeleton_external.c	/^static void fio_skeleton_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_skeleton_close	engines/skeleton_external.c	/^static int fio_skeleton_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_skeleton_event	engines/skeleton_external.c	/^static struct io_u *fio_skeleton_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_skeleton_get_max_open_zones	engines/skeleton_external.c	/^static int fio_skeleton_get_max_open_zones(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_skeleton_get_zoned_model	engines/skeleton_external.c	/^static int fio_skeleton_get_zoned_model(struct thread_data *td,$/;"	f	typeref:typename:int	file:
fio_skeleton_getevents	engines/skeleton_external.c	/^static int fio_skeleton_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_skeleton_init	engines/skeleton_external.c	/^static int fio_skeleton_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_skeleton_open	engines/skeleton_external.c	/^static int fio_skeleton_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_skeleton_options	engines/skeleton_external.c	/^struct fio_skeleton_options {$/;"	s	file:
fio_skeleton_prep	engines/skeleton_external.c	/^static int fio_skeleton_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_skeleton_queue	engines/skeleton_external.c	/^static enum fio_q_status fio_skeleton_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_skeleton_report_zones	engines/skeleton_external.c	/^static int fio_skeleton_report_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
fio_skeleton_reset_wp	engines/skeleton_external.c	/^static int fio_skeleton_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
fio_solarisaio_cancel	engines/solarisaio.c	/^static int fio_solarisaio_cancel(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_solarisaio_cleanup	engines/solarisaio.c	/^static void fio_solarisaio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_solarisaio_event	engines/solarisaio.c	/^static struct io_u *fio_solarisaio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_solarisaio_getevents	engines/solarisaio.c	/^static int fio_solarisaio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_solarisaio_init	engines/solarisaio.c	/^static int fio_solarisaio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_solarisaio_init_sigio	engines/solarisaio.c	/^static void fio_solarisaio_init_sigio(void)$/;"	f	typeref:typename:void	file:
fio_solarisaio_prep	engines/solarisaio.c	/^static int fio_solarisaio_prep(struct thread_data fio_unused *td,$/;"	f	typeref:typename:int	file:
fio_solarisaio_queue	engines/solarisaio.c	/^static enum fio_q_status fio_solarisaio_queue(struct thread_data fio_unused *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_solarisaio_register	engines/solarisaio.c	/^static void fio_init fio_solarisaio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_solarisaio_sigio	engines/solarisaio.c	/^static void fio_solarisaio_sigio(int sig)$/;"	f	typeref:typename:void	file:
fio_solarisaio_unregister	engines/solarisaio.c	/^static void fio_exit fio_solarisaio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_splice_read	engines/splice.c	/^static int fio_splice_read(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_splice_read_old	engines/splice.c	/^static int fio_splice_read_old(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_splice_write	engines/splice.c	/^static int fio_splice_write(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_spliceio_cleanup	engines/splice.c	/^static void fio_spliceio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_spliceio_init	engines/splice.c	/^static int fio_spliceio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_spliceio_queue	engines/splice.c	/^static enum fio_q_status fio_spliceio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_spliceio_register	engines/splice.c	/^static void fio_init fio_spliceio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_spliceio_unregister	engines/splice.c	/^static void fio_exit fio_spliceio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_split_prio_cmp	options.c	/^static int fio_split_prio_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
fio_start_all_clients	client.c	/^int fio_start_all_clients(void)$/;"	f	typeref:typename:int
fio_start_all_clients	client.h	/^extern int fio_start_all_clients(void);$/;"	p	typeref:typename:int
fio_start_client	client.c	/^int fio_start_client(struct fio_client *client)$/;"	f	typeref:typename:int
fio_start_client	client.h	/^extern int fio_start_client(struct fio_client *);$/;"	p	typeref:typename:int
fio_start_gtod_thread	gettime-thread.c	/^int fio_start_gtod_thread(void)$/;"	f	typeref:typename:int
fio_start_gtod_thread	gettime.h	/^extern int fio_start_gtod_thread(void);$/;"	p	typeref:typename:int
fio_start_server	server.c	/^int fio_start_server(char *pidfile)$/;"	f	typeref:typename:int
fio_start_server	server.h	/^extern int fio_start_server(char *);$/;"	p	typeref:typename:int
fio_swap16	os/os-android.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-dragonfly.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-freebsd.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-linux.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-mac.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-netbsd.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-openbsd.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-solaris.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os-windows.h	/^#define fio_swap16(/;"	d
fio_swap16	os/os.h	/^static inline uint16_t fio_swap16(uint16_t val)$/;"	f	typeref:typename:uint16_t
fio_swap32	os/os-android.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-dragonfly.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-freebsd.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-linux.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-mac.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-netbsd.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-openbsd.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-solaris.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os-windows.h	/^#define fio_swap32(/;"	d
fio_swap32	os/os.h	/^static inline uint32_t fio_swap32(uint32_t val)$/;"	f	typeref:typename:uint32_t
fio_swap64	os/os-android.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-dragonfly.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-freebsd.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-linux.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-mac.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-netbsd.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-openbsd.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-solaris.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os-windows.h	/^#define fio_swap64(/;"	d
fio_swap64	os/os.h	/^static inline uint64_t fio_swap64(uint64_t val)$/;"	f	typeref:typename:uint64_t
fio_syncio_prep	engines/sync.c	/^static int fio_syncio_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_syncio_queue	engines/sync.c	/^static enum fio_q_status fio_syncio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_syncio_register	engines/e4defrag.c	/^static void fio_init fio_syncio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_syncio_register	engines/falloc.c	/^static void fio_init fio_syncio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_syncio_register	engines/ftruncate.c	/^static void fio_init fio_syncio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_syncio_register	engines/sync.c	/^static void fio_init fio_syncio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_syncio_unregister	engines/e4defrag.c	/^static void fio_exit fio_syncio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_syncio_unregister	engines/falloc.c	/^static void fio_exit fio_syncio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_syncio_unregister	engines/ftruncate.c	/^static void fio_exit fio_syncio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_syncio_unregister	engines/sync.c	/^static void fio_exit fio_syncio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_terminate_threads	fio.h	/^extern void fio_terminate_threads(unsigned int, unsigned int);$/;"	p	typeref:typename:void
fio_terminate_threads	libfio.c	/^void fio_terminate_threads(unsigned int group_id, unsigned int terminate)$/;"	f	typeref:typename:void
fio_test_cconv	cconv.c	/^int fio_test_cconv(struct thread_options *__o)$/;"	f	typeref:typename:int
fio_test_cconv	thread_options.h	/^extern int fio_test_cconv(struct thread_options *);$/;"	p	typeref:typename:int
fio_time_init	fio_time.h	/^extern void fio_time_init(void);$/;"	p	typeref:typename:void
fio_time_init	time.c	/^void fio_time_init(void)$/;"	f	typeref:typename:void
fio_to_graphviz	tools/fiograph/fiograph.py	/^def fio_to_graphviz(filename, format):$/;"	f
fio_trylock_file	filelock.c	/^bool fio_trylock_file(const char *fname)$/;"	f	typeref:typename:bool
fio_trylock_file	filelock.h	/^extern bool fio_trylock_file(const char *);$/;"	p	typeref:typename:bool
fio_ts	gettime-thread.c	/^struct fio_ts *fio_ts;$/;"	v	typeref:struct:fio_ts *
fio_ts	gettime.h	/^extern struct fio_ts {$/;"	s
fio_ts	gettime.h	/^} *fio_ts;$/;"	v	typeref:struct:fio_ts *
fio_ts	t/debug.c	/^void *fio_ts;$/;"	v	typeref:typename:void *
fio_uint64_to_double	lib/ieee754.h	/^#define fio_uint64_to_double(/;"	d
fio_uint_to_kmg	fio.h	/^extern char *fio_uint_to_kmg(unsigned int val);$/;"	p	typeref:typename:char *
fio_unittest_add_suite	unittests/unittest.c	/^CU_ErrorCode fio_unittest_add_suite(const char *name, CU_InitializeFunc initfn,$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_add_suite	unittests/unittest.h	/^CU_ErrorCode fio_unittest_add_suite(const char*, CU_InitializeFunc,$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_entry	unittests/unittest.h	/^struct fio_unittest_entry {$/;"	s
fio_unittest_lib_memalign	unittests/lib/memalign.c	/^CU_ErrorCode fio_unittest_lib_memalign(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_lib_memalign	unittests/unittest.h	/^CU_ErrorCode fio_unittest_lib_memalign(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_lib_num2str	unittests/lib/num2str.c	/^CU_ErrorCode fio_unittest_lib_num2str(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_lib_num2str	unittests/unittest.h	/^CU_ErrorCode fio_unittest_lib_num2str(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_lib_strntol	unittests/lib/strntol.c	/^CU_ErrorCode fio_unittest_lib_strntol(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_lib_strntol	unittests/unittest.h	/^CU_ErrorCode fio_unittest_lib_strntol(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strcasestr	unittests/oslib/strcasestr.c	/^CU_ErrorCode fio_unittest_oslib_strcasestr(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strcasestr	unittests/unittest.h	/^CU_ErrorCode fio_unittest_oslib_strcasestr(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strlcat	unittests/oslib/strlcat.c	/^CU_ErrorCode fio_unittest_oslib_strlcat(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strlcat	unittests/unittest.h	/^CU_ErrorCode fio_unittest_oslib_strlcat(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strndup	unittests/oslib/strndup.c	/^CU_ErrorCode fio_unittest_oslib_strndup(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strndup	unittests/unittest.h	/^CU_ErrorCode fio_unittest_oslib_strndup(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strsep	unittests/oslib/strsep.c	/^CU_ErrorCode fio_unittest_oslib_strsep(void)$/;"	f	typeref:typename:CU_ErrorCode
fio_unittest_oslib_strsep	unittests/unittest.h	/^CU_ErrorCode fio_unittest_oslib_strsep(void);$/;"	p	typeref:typename:CU_ErrorCode
fio_unittest_register	unittests/unittest.c	/^static void fio_unittest_register(CU_ErrorCode (*fn)(void))$/;"	f	typeref:typename:void	file:
fio_unlikely	compiler/compiler.h	/^#define fio_unlikely(/;"	d
fio_unlock_file	filelock.c	/^void fio_unlock_file(const char *fname)$/;"	f	typeref:typename:void
fio_unlock_file	filelock.h	/^extern void fio_unlock_file(const char *);$/;"	p	typeref:typename:void
fio_unpin_memory	fio.h	/^extern void fio_unpin_memory(struct thread_data *);$/;"	p	typeref:typename:void
fio_unpin_memory	memory.c	/^void fio_unpin_memory(struct thread_data *td)$/;"	f	typeref:typename:void
fio_unused	compiler/compiler.h	/^#define fio_unused	/;"	d
fio_ver	gfio.h	/^	GtkWidget *fio_ver;$/;"	m	struct:probe_widget	typeref:typename:GtkWidget *
fio_verify_init	verify.c	/^void fio_verify_init(struct thread_data *td)$/;"	f	typeref:typename:void
fio_verify_init	verify.h	/^extern void fio_verify_init(struct thread_data *td);$/;"	p	typeref:typename:void
fio_verify_load_state	backend.c	/^static int fio_verify_load_state(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_version	doc/conf.py	/^def fio_version():$/;"	f
fio_version	server.h	/^	uint8_t fio_version[32];$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t[32]
fio_version_string	init.c	/^const char fio_version_string[] = FIO_VERSION;$/;"	v	typeref:typename:const char[]
fio_vsyncio_append	engines/sync.c	/^static int fio_vsyncio_append(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_vsyncio_cleanup	engines/sync.c	/^static void fio_vsyncio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_vsyncio_commit	engines/sync.c	/^static int fio_vsyncio_commit(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_vsyncio_end	engines/sync.c	/^static int fio_vsyncio_end(struct thread_data *td, ssize_t bytes)$/;"	f	typeref:typename:int	file:
fio_vsyncio_event	engines/sync.c	/^static struct io_u *fio_vsyncio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_vsyncio_getevents	engines/sync.c	/^static int fio_vsyncio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_vsyncio_init	engines/sync.c	/^static int fio_vsyncio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_vsyncio_queue	engines/sync.c	/^static enum fio_q_status fio_vsyncio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_vsyncio_set_iov	engines/sync.c	/^static void fio_vsyncio_set_iov(struct syncio_data *sd, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
fio_warned	init.c	/^unsigned int *fio_warned = NULL;$/;"	v	typeref:typename:unsigned int *
fio_windowaio_getevents_thread	engines/windowsaio.c	/^static int fio_windowaio_getevents_thread(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_windowsaio_cleanup	engines/windowsaio.c	/^static void fio_windowsaio_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
fio_windowsaio_close_file	engines/windowsaio.c	/^static int fio_windowsaio_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_windowsaio_event	engines/windowsaio.c	/^static struct io_u* fio_windowsaio_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
fio_windowsaio_getevents	engines/windowsaio.c	/^static int fio_windowsaio_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_windowsaio_getevents_nothread	engines/windowsaio.c	/^static int fio_windowsaio_getevents_nothread(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
fio_windowsaio_init	engines/windowsaio.c	/^static int fio_windowsaio_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fio_windowsaio_io_u_free	engines/windowsaio.c	/^static void fio_windowsaio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
fio_windowsaio_io_u_init	engines/windowsaio.c	/^static int fio_windowsaio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
fio_windowsaio_open_file	engines/windowsaio.c	/^static int fio_windowsaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
fio_windowsaio_queue	engines/windowsaio.c	/^static enum fio_q_status fio_windowsaio_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
fio_windowsaio_register	engines/windowsaio.c	/^static void fio_init fio_windowsaio_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_windowsaio_unregister	engines/windowsaio.c	/^static void fio_exit fio_windowsaio_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_writeout_logs	iolog.c	/^void fio_writeout_logs(bool unit_logs)$/;"	f	typeref:typename:void
fio_writeout_logs	iolog.h	/^extern void fio_writeout_logs(bool);$/;"	p	typeref:typename:void
fio_xnvme_register	engines/xnvme.c	/^static void fio_init fio_xnvme_register(void)$/;"	f	typeref:typename:void fio_init	file:
fio_xnvme_unregister	engines/xnvme.c	/^static void fio_exit fio_xnvme_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
fio_zone_info	zbd.h	/^struct fio_zone_info {$/;"	s
fio_zone_mode	thread_options.h	/^enum fio_zone_mode {$/;"	g
fiologparser_hist.py	tools/hist/fiologparser_hist.py.1	/^.TH fiologparser_hist.py 1 "August 18, 2016"$/;"	t
first	parse.c	/^			   void *data, int first, int more, int curr)$/;"	z	function:__handle_option	typeref:typename:int	file:
first	server.c	/^					struct sk_entry *first)$/;"	z	function:__fio_net_prep_tail	typeref:struct:sk_entry *	file:
first	server.c	/^				struct sk_entry *first)$/;"	z	function:__deflate_pdu_buffer	typeref:struct:sk_entry *	file:
first	server.c	/^static int __fio_append_iolog_gz(struct sk_entry *first, struct io_log *log,$/;"	z	function:__fio_append_iolog_gz	typeref:struct:sk_entry *	file:
first	server.c	/^static int __fio_append_iolog_gz_hist(struct sk_entry *first, struct io_log *log,$/;"	z	function:__fio_append_iolog_gz_hist	typeref:struct:sk_entry *	file:
first	server.c	/^static int fio_append_gz_chunks(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_gz_chunks	typeref:struct:sk_entry *	file:
first	server.c	/^static int fio_append_iolog_gz(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_iolog_gz	typeref:struct:sk_entry *	file:
first	server.c	/^static int fio_append_text_log(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_text_log	typeref:struct:sk_entry *	file:
first	server.c	/^static int send_vec_entry(struct sk_out *sk_out, struct sk_entry *first)$/;"	z	function:send_vec_entry	typeref:struct:sk_entry *	file:
first	stat.c	/^static void __sum_stat(struct io_stat *dst, struct io_stat *src, bool first)$/;"	z	function:__sum_stat	typeref:typename:bool	file:
first_error	fio.h	/^	int first_error;$/;"	m	struct:thread_data	typeref:typename:int
first_error	stat.h	/^	uint32_t first_error;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
first_io_u	engines/librpma_apm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	function:client_io_flush	typeref:struct:io_u *	file:
first_io_u	engines/librpma_apm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	prototype:client_io_flush	typeref:struct:io_u *	file:
first_io_u	engines/librpma_gpspm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	function:client_io_flush	typeref:struct:io_u *	file:
first_io_u	engines/librpma_gpspm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	prototype:client_io_flush	typeref:struct:io_u *	file:
first_set_cpu	os/os-windows.h	/^int first_set_cpu(os_cpu_mask_t *cpumask);$/;"	p	typeref:typename:int
first_set_cpu	os/windows/cpu-affinity.c	/^int first_set_cpu(os_cpu_mask_t *cpumask)$/;"	f	typeref:typename:int
first_ttime	t/btrace2fio.c	/^	uint64_t first_ttime[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:uint64_t[]	file:
first_ttime	t/btrace2fio.c	/^static uint64_t first_ttime = -1ULL;$/;"	v	typeref:typename:uint64_t	file:
first_write	file.h	/^	uint64_t first_write;$/;"	m	struct:fio_file	typeref:typename:uint64_t
fixed_block_size	init.c	/^static int fixed_block_size(struct thread_options *o)$/;"	f	typeref:typename:int	file:
fixed_ddir_to_op	engines/io_uring.c	/^static const int fixed_ddir_to_op[2] = {$/;"	v	typeref:typename:const int[2]	file:
fixed_fd	t/io_uring.c	/^	int fixed_fd;$/;"	m	struct:file	typeref:typename:int	file:
fixedbufs	engines/io_uring.c	/^	unsigned int fixedbufs;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
fixedbufs	t/io_uring.c	/^static int fixedbufs = 1;	\/* use fixed user buffers *\/$/;"	v	typeref:typename:int	file:
fixup_options	init.c	/^static int fixup_options(struct thread_data *td)$/;"	f	typeref:typename:int	file:
fl	lib/lfsr.c	/^int lfsr_init(struct fio_lfsr *fl, uint64_t nums, uint64_t seed,$/;"	z	function:lfsr_init	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.c	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off)$/;"	z	function:lfsr_next	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.c	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed)$/;"	z	function:lfsr_reset	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.c	/^static inline void __lfsr_next(struct fio_lfsr *fl, unsigned int spin)$/;"	z	function:__lfsr_next	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.c	/^static int prepare_spin(struct fio_lfsr *fl, unsigned int spin)$/;"	z	function:prepare_spin	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.h	/^int lfsr_init(struct fio_lfsr *fl, uint64_t size,$/;"	z	prototype:lfsr_init	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.h	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off);$/;"	z	prototype:lfsr_next	typeref:struct:fio_lfsr *	file:
fl	lib/lfsr.h	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed);$/;"	z	prototype:lfsr_reset	typeref:struct:fio_lfsr *	file:
flag	oslib/getopt.h	/^	int *flag;$/;"	m	struct:option	typeref:typename:int *
flags	engines/io_uring.c	/^			 unsigned int min_complete, unsigned int flags)$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
flags	engines/io_uring.c	/^	unsigned *flags;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
flags	engines/librpma_fio.h	/^		struct io_u *io_u, int flags)$/;"	z	function:librpma_fio_client_io_read	typeref:typename:int	file:
flags	engines/pmemblk.c	/^static fio_pmemblk_file_t pmb_open(const char *pathspec, int flags)$/;"	z	function:pmb_open	typeref:typename:int	file:
flags	file.h	/^	enum fio_file_flags flags;$/;"	m	struct:fio_file	typeref:enum:fio_file_flags
flags	file.h	/^extern int __must_check file_lookup_open(struct fio_file *f, int flags);$/;"	z	prototype:file_lookup_open	typeref:typename:int	file:
flags	filesetup.c	/^int file_lookup_open(struct fio_file *f, int flags)$/;"	z	function:file_lookup_open	typeref:typename:int	file:
flags	fio.h	/^				       enum fio_ioengine_flags flags)$/;"	z	function:td_ioengine_flagged	typeref:enum:fio_ioengine_flags	file:
flags	fio.h	/^	unsigned long long flags;$/;"	m	struct:thread_data	typeref:typename:unsigned long long
flags	fio.h	/^static inline void td_flags_clear(struct thread_data *td, unsigned int *flags,$/;"	z	function:td_flags_clear	typeref:typename:unsigned int *	file:
flags	fio.h	/^static inline void td_flags_set(struct thread_data *td, unsigned int *flags,$/;"	z	function:td_flags_set	typeref:typename:unsigned int *	file:
flags	ghelpers.c	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	function:tree_view_column	typeref:typename:unsigned int	file:
flags	ghelpers.h	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	prototype:tree_view_column	typeref:typename:unsigned int	file:
flags	graph.c	/^	unsigned int flags;$/;"	m	struct:graph_value	typeref:typename:unsigned int	file:
flags	helpers.c	/^		    unsigned int flags)$/;"	z	function:sync_file_range	typeref:typename:unsigned int	file:
flags	helpers.h	/^					unsigned int flags);$/;"	z	prototype:sync_file_range	typeref:typename:unsigned int	file:
flags	io_u.h	/^	unsigned int flags;$/;"	m	struct:io_u	typeref:typename:unsigned int
flags	ioengines.h	/^	int flags;$/;"	m	struct:ioengine_ops	typeref:typename:int
flags	iolog.h	/^	unsigned int flags;$/;"	m	struct:io_piece	typeref:typename:unsigned int
flags	os/linux/io_uring.h	/^	__u16 flags;	\/* IO_URING_OP_* flags *\/$/;"	m	struct:io_uring_probe_op	typeref:typename:__u16
flags	os/linux/io_uring.h	/^	__u32	flags;$/;"	m	struct:io_uring_cqe	typeref:typename:__u32
flags	os/linux/io_uring.h	/^	__u32 flags;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
flags	os/linux/io_uring.h	/^	__u32 flags;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
flags	os/linux/io_uring.h	/^	__u32 flags;$/;"	m	struct:io_uring_params	typeref:typename:__u32
flags	os/linux/io_uring.h	/^	__u8	flags;		\/* IOSQE_ flags *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__u8
flags	os/os-linux.h	/^			       off_t offset, unsigned int flags)$/;"	z	function:pwritev2	typeref:typename:unsigned int	file:
flags	os/os-linux.h	/^			      off_t offset, unsigned int flags)$/;"	z	function:preadv2	typeref:typename:unsigned int	file:
flags	os/windows/posix.c	/^int msync(void *addr, size_t len, int flags)$/;"	z	function:msync	typeref:typename:int	file:
flags	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:int	file:
flags	os/windows/posix/include/sys/mman.h	/^int msync(void *addr, size_t len, int flags);$/;"	z	prototype:msync	typeref:typename:int	file:
flags	os/windows/posix/include/sys/mman.h	/^void *mmap(void *addr, size_t len, int prot, int flags,$/;"	z	prototype:mmap	typeref:typename:int	file:
flags	oslib/linux-blkzoned.c	/^	__u32	flags;$/;"	m	struct:blk_zone_report_v2	typeref:typename:__u32	file:
flags	oslib/statx.c	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	function:statx	typeref:typename:int	file:
flags	oslib/statx.h	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	prototype:statx	typeref:typename:int	file:
flags	profile.h	/^	int flags;$/;"	m	struct:profile_ops	typeref:typename:int
flags	server.c	/^					 int flags)$/;"	z	function:fio_net_prep_cmd	typeref:typename:int	file:
flags	server.c	/^				off_t size, uint64_t tag, uint32_t flags)$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:uint32_t	file:
flags	server.c	/^			     uint64_t *tagptr, int flags)$/;"	z	function:fio_net_queue_cmd	typeref:typename:int	file:
flags	server.c	/^			    unsigned int *flags)$/;"	z	function:entry_set_flags	typeref:typename:unsigned int *	file:
flags	server.c	/^	int flags;		\/* SK_F_* *\/$/;"	m	struct:sk_entry	typeref:typename:int	file:
flags	server.h	/^	uint32_t flags;		\/* modifier flags *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint32_t
flags	server.h	/^	uint64_t flags;$/;"	m	struct:cmd_client_probe_pdu	typeref:typename:uint64_t
flags	server.h	/^	uint64_t flags;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint64_t
flags	t/io_uring.c	/^			  unsigned int min_complete, unsigned int flags)$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
flags	t/io_uring.c	/^	__u32	flags;$/;"	m	struct:io_uring_map_buffers	typeref:typename:__u32	file:
flags	t/io_uring.c	/^	unsigned *flags;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
flags	workqueue.h	/^	unsigned int flags;$/;"	m	struct:submit_worker	typeref:typename:unsigned int
fld	filelock.c	/^} *fld;$/;"	v	typeref:struct:filelock_data *
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	typeref:typename:int16_t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	typeref:typename:short int	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	typeref:typename:int	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	typeref:typename:int32_t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	typeref:typename:int8_t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	typeref:typename:signed char	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	typeref:typename:uint16_t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	typeref:typename:unsigned short int	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	typeref:typename:uint32_t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	typeref:typename:unsigned int	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	typeref:typename:uint8_t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	typeref:typename:unsigned char	file:
flist_add	flist.h	/^static inline void flist_add(struct flist_head *new_entry,$/;"	f	typeref:typename:void
flist_add_tail	flist.h	/^static inline void flist_add_tail(struct flist_head *new_entry,$/;"	f	typeref:typename:void
flist_del	flist.h	/^static inline void flist_del(struct flist_head *entry)$/;"	f	typeref:typename:void
flist_del_init	flist.h	/^static inline void flist_del_init(struct flist_head *entry)$/;"	f	typeref:typename:void
flist_empty	flist.h	/^static inline int flist_empty(const struct flist_head *head)$/;"	f	typeref:typename:int
flist_entry	flist.h	/^#define flist_entry(/;"	d
flist_first_entry	flist.h	/^#define flist_first_entry(/;"	d
flist_for_each	flist.h	/^#define flist_for_each(/;"	d
flist_for_each_safe	flist.h	/^#define flist_for_each_safe(/;"	d
flist_head	flist.h	/^struct flist_head {$/;"	s
flist_last_entry	flist.h	/^#define flist_last_entry(/;"	d
flist_sort	flist.h	/^extern void flist_sort(void *priv, struct flist_head *head,$/;"	p	typeref:typename:void
flist_sort	lib/flist_sort.c	/^void flist_sort(void *priv, struct flist_head *head,$/;"	f	typeref:typename:void
flist_splice	flist.h	/^static inline void flist_splice(const struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_init	flist.h	/^static inline void flist_splice_init(struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_tail	flist.h	/^static inline void flist_splice_tail(struct flist_head *list,$/;"	f	typeref:typename:void
flist_splice_tail_init	flist.h	/^static inline void flist_splice_tail_init(struct flist_head *list,$/;"	f	typeref:typename:void
float_number	json.h	/^		double float_number;$/;"	m	union:json_value::__anon078191b5010a	typeref:typename:double
flow	fio.h	/^	struct fio_flow *flow;$/;"	m	struct:thread_data	typeref:struct:fio_flow *
flow	flow.c	/^static void flow_put(struct fio_flow *flow, unsigned long flow_counter,$/;"	z	function:flow_put	typeref:struct:fio_flow *	file:
flow	thread_options.h	/^	uint32_t flow;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
flow	thread_options.h	/^	unsigned int flow;$/;"	m	struct:thread_options	typeref:typename:unsigned int
flow_counter	fio.h	/^	unsigned long long flow_counter;$/;"	m	struct:thread_data	typeref:typename:unsigned long long
flow_counter	flow.c	/^	unsigned long flow_counter;$/;"	m	struct:fio_flow	typeref:typename:unsigned long	file:
flow_counter	flow.c	/^static void flow_put(struct fio_flow *flow, unsigned long flow_counter,$/;"	z	function:flow_put	typeref:typename:unsigned long	file:
flow_exit	flow.c	/^void flow_exit(void)$/;"	f	typeref:typename:void
flow_exit	flow.h	/^void flow_exit(void);$/;"	p	typeref:typename:void
flow_exit_job	flow.c	/^void flow_exit_job(struct thread_data *td)$/;"	f	typeref:typename:void
flow_exit_job	flow.h	/^void flow_exit_job(struct thread_data *td);$/;"	p	typeref:typename:void
flow_get	flow.c	/^static struct fio_flow *flow_get(unsigned int id)$/;"	f	typeref:struct:fio_flow *	file:
flow_id	thread_options.h	/^	int flow_id;$/;"	m	struct:thread_options	typeref:typename:int
flow_id	thread_options.h	/^	int32_t flow_id;$/;"	m	struct:thread_options_pack	typeref:typename:int32_t
flow_init	flow.c	/^void flow_init(void)$/;"	f	typeref:typename:void
flow_init	flow.h	/^void flow_init(void);$/;"	p	typeref:typename:void
flow_init_job	flow.c	/^void flow_init_job(struct thread_data *td)$/;"	f	typeref:typename:void
flow_init_job	flow.h	/^void flow_init_job(struct thread_data *td);$/;"	p	typeref:typename:void
flow_list	flow.c	/^static struct flist_head *flow_list;$/;"	v	typeref:struct:flist_head *	file:
flow_lock	flow.c	/^static struct fio_sem *flow_lock;$/;"	v	typeref:struct:fio_sem *	file:
flow_put	flow.c	/^static void flow_put(struct fio_flow *flow, unsigned long flow_counter,$/;"	f	typeref:typename:void	file:
flow_sleep	thread_options.h	/^	uint32_t flow_sleep;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
flow_sleep	thread_options.h	/^	unsigned int flow_sleep;$/;"	m	struct:thread_options	typeref:typename:unsigned int
flow_threshold_exceeded	flow.c	/^int flow_threshold_exceeded(struct thread_data *td)$/;"	f	typeref:typename:int
flow_threshold_exceeded	flow.h	/^int flow_threshold_exceeded(struct thread_data *td);$/;"	p	typeref:typename:int
flush	engines/librpma_fio.h	/^	librpma_fio_flush_t flush;$/;"	m	struct:librpma_fio_client_data	typeref:typename:librpma_fio_flush_t
flush	engines/nfs.c	/^static int nfs_event_loop(struct thread_data *td, bool flush) {$/;"	z	function:nfs_event_loop	typeref:typename:bool	file:
flush_cond	workqueue.h	/^	pthread_cond_t flush_cond;$/;"	m	struct:workqueue	typeref:typename:pthread_cond_t
flush_hist_samples	iolog.c	/^static void flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	f	typeref:typename:void	file:
flush_lock	workqueue.h	/^	pthread_mutex_t flush_lock;$/;"	m	struct:workqueue	typeref:typename:pthread_mutex_t
flush_log	iolog.c	/^void flush_log(struct io_log *log, bool do_append)$/;"	f	typeref:typename:void
flush_log	iolog.h	/^extern void flush_log(struct io_log *, bool);$/;"	p	typeref:typename:void
flush_samples	iolog.c	/^void flush_samples(FILE *f, void *samples, uint64_t sample_size)$/;"	f	typeref:typename:void
flush_samples	iolog.h	/^extern void flush_samples(FILE *, void *, uint64_t);$/;"	p	typeref:typename:void
fmd	engines/mtd.c	/^				  struct fio_mtd_data *fmd,$/;"	z	function:fio_mtd_maybe_mark_bad	typeref:struct:fio_mtd_data *	file:
fmd	engines/mtd.c	/^			  struct fio_mtd_data *fmd,$/;"	z	function:fio_mtd_is_bad	typeref:struct:fio_mtd_data *	file:
fmix32	crc/murmur3.c	/^static inline uint32_t fmix32(uint32_t h)$/;"	f	typeref:typename:uint32_t	file:
fmt	lib/pattern.c	/^				struct pattern_fmt *fmt, unsigned int fmt_sz)$/;"	z	function:parse_format	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.c	/^			   struct pattern_fmt *fmt,$/;"	z	function:parse_and_fill_pattern	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.c	/^			 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	function:paste_format_inplace	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.c	/^		 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	function:paste_format	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.h	/^			   struct pattern_fmt *fmt,$/;"	z	prototype:parse_and_fill_pattern	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.h	/^			 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	prototype:paste_format_inplace	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.h	/^		 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	prototype:paste_format	typeref:struct:pattern_fmt *	file:
fmt	lib/pattern.h	/^	const char  *fmt;$/;"	m	struct:pattern_fmt_desc	typeref:typename:const char *
fmt	log.c	/^size_t log_valist(const char *fmt, va_list args)$/;"	z	function:log_valist	typeref:typename:const char *	file:
fmt	log.c	/^void log_prevalist(int type, const char *fmt, va_list args)$/;"	z	function:log_prevalist	typeref:typename:const char *	file:
fmt	oslib/asprintf.c	/^int asprintf(char **strp, const char *fmt, ...)$/;"	z	function:asprintf	typeref:typename:const char *	file:
fmt	oslib/asprintf.c	/^int vasprintf(char **strp, const char *fmt, va_list ap)$/;"	z	function:vasprintf	typeref:typename:const char *	file:
fmt	oslib/asprintf.h	/^int asprintf(char **strp, const char *fmt, ...);$/;"	z	prototype:asprintf	typeref:typename:const char *	file:
fmt	oslib/asprintf.h	/^int vasprintf(char **strp, const char *fmt, va_list ap);$/;"	z	prototype:vasprintf	typeref:typename:const char *	file:
fmt	oslib/libmtd_xalloc.h	/^static int xasprintf(char **strp, const char *fmt, ...)$/;"	z	function:xasprintf	typeref:typename:const char *	file:
fmt_desc	lib/pattern.c	/^				const struct pattern_fmt_desc *fmt_desc,$/;"	z	function:parse_format	typeref:typename:const struct pattern_fmt_desc *	file:
fmt_desc	lib/pattern.c	/^			   const struct pattern_fmt_desc *fmt_desc,$/;"	z	function:parse_and_fill_pattern	typeref:typename:const struct pattern_fmt_desc *	file:
fmt_desc	lib/pattern.h	/^			   const struct pattern_fmt_desc *fmt_desc,$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:const struct pattern_fmt_desc *	file:
fmt_desc	options.c	/^static const struct pattern_fmt_desc fmt_desc[] = {$/;"	v	typeref:typename:const struct pattern_fmt_desc[]	file:
fmt_float_list	tools/hist/fiologparser_hist.py	/^def fmt_float_list(ctx, num=1):$/;"	f
fmt_sz	lib/pattern.c	/^				struct pattern_fmt *fmt, unsigned int fmt_sz)$/;"	z	function:parse_format	typeref:typename:unsigned int	file:
fmt_sz	lib/pattern.c	/^			 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	function:paste_format_inplace	typeref:typename:unsigned int	file:
fmt_sz	lib/pattern.c	/^		 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	function:paste_format	typeref:typename:unsigned int	file:
fmt_sz	lib/pattern.h	/^			 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	prototype:paste_format_inplace	typeref:typename:unsigned int	file:
fmt_sz	lib/pattern.h	/^		 struct pattern_fmt *fmt, unsigned int fmt_sz,$/;"	z	prototype:paste_format	typeref:typename:unsigned int	file:
fmt_sz_out	lib/pattern.c	/^			   unsigned int *fmt_sz_out)$/;"	z	function:parse_and_fill_pattern	typeref:typename:unsigned int *	file:
fmt_sz_out	lib/pattern.h	/^			   unsigned int *fmt_sz_out);$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:unsigned int *	file:
fn	crc/test.c	/^	void (*fn)(struct test_type *, void *, size_t);$/;"	m	struct:test_type	typeref:typename:void (*)(struct test_type *,void *,size_t)	file:
fn	iolog.c	/^	int (*fn)(struct thread_data *, int, bool);$/;"	m	struct:log_type	typeref:typename:int (*)(struct thread_data *,int,bool)	file:
fn	lib/bloom.c	/^	uint32_t (*fn)(const void *, uint32_t, uint32_t);$/;"	m	struct:bloom_hash	typeref:typename:uint32_t (*)(const void *,uint32_t,uint32_t)	file:
fn	lib/memalign.c	/^void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn)$/;"	z	function:__fio_memalign	typeref:typename:malloc_fn	file:
fn	lib/memalign.c	/^void __fio_memfree(void *ptr, size_t size, free_fn fn)$/;"	z	function:__fio_memfree	typeref:typename:free_fn	file:
fn	lib/memalign.h	/^extern void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn);$/;"	z	prototype:__fio_memalign	typeref:typename:malloc_fn	file:
fn	lib/memalign.h	/^extern void __fio_memfree(void *ptr, size_t size, free_fn fn);$/;"	z	prototype:__fio_memfree	typeref:typename:free_fn	file:
fn	lib/memcpy.c	/^	void (*fn)(struct memcpy_test *);$/;"	m	struct:memcpy_type	typeref:typename:void (*)(struct memcpy_test *)	file:
fn	options.c	/^		    split_parse_fn *fn, void *eo, bool data)$/;"	z	function:str_split_parse	typeref:typename:split_parse_fn *	file:
fn	thread_options.h	/^			   split_parse_fn *fn, void *eo, bool data);$/;"	z	prototype:str_split_parse	typeref:typename:split_parse_fn *	file:
fn	unittests/unittest.c	/^static void fio_unittest_register(CU_ErrorCode (*fn)(void))$/;"	z	function:fio_unittest_register	typeref:typename:CU_ErrorCode (*)(void)	file:
fn	unittests/unittest.h	/^	CU_TestFunc fn;$/;"	m	struct:fio_unittest_entry	typeref:typename:CU_TestFunc
fn	workqueue.h	/^	workqueue_work_fn *fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_work_fn *
fname	blktrace.h	/^static inline bool init_blktrace_read(struct thread_data *td, const char *fname,$/;"	z	function:init_blktrace_read	typeref:typename:const char *	file:
fname	blktrace.h	/^static inline bool is_blktrace(const char *fname, int *need_swap)$/;"	z	function:is_blktrace	typeref:typename:const char *	file:
fname	filehash.c	/^bool file_bloom_exists(const char *fname, bool set)$/;"	z	function:file_bloom_exists	typeref:typename:const char *	file:
fname	filelock.c	/^bool fio_trylock_file(const char *fname)$/;"	z	function:fio_trylock_file	typeref:typename:const char *	file:
fname	filelock.c	/^static bool __fio_lock_file(const char *fname, int trylock)$/;"	z	function:__fio_lock_file	typeref:typename:const char *	file:
fname	filelock.c	/^void fio_lock_file(const char *fname)$/;"	z	function:fio_lock_file	typeref:typename:const char *	file:
fname	filelock.c	/^void fio_unlock_file(const char *fname)$/;"	z	function:fio_unlock_file	typeref:typename:const char *	file:
fname	filesetup.c	/^int add_file(struct thread_data *td, const char *fname, int numjob, int inc)$/;"	z	function:add_file	typeref:typename:const char *	file:
fname	filesetup.c	/^int add_file_exclusive(struct thread_data *td, const char *fname)$/;"	z	function:add_file_exclusive	typeref:typename:const char *	file:
fname	filesetup.c	/^int get_fileno(struct thread_data *td, const char *fname)$/;"	z	function:get_fileno	typeref:typename:const char *	file:
fname	filesetup.c	/^static bool __is_already_allocated(const char *fname, bool set)$/;"	z	function:__is_already_allocated	typeref:typename:const char *	file:
fname	filesetup.c	/^static bool create_work_dirs(struct thread_data *td, const char *fname)$/;"	z	function:create_work_dirs	typeref:typename:const char *	file:
fname	filesetup.c	/^static bool is_already_allocated(const char *fname)$/;"	z	function:is_already_allocated	typeref:typename:const char *	file:
fname	filesetup.c	/^static void set_already_allocated(const char *fname)$/;"	z	function:set_already_allocated	typeref:typename:const char *	file:
fname	iolog.c	/^static bool init_iolog_read(struct thread_data *td, char *fname)$/;"	z	function:init_iolog_read	typeref:typename:char *	file:
fname	t/btrace2fio.c	/^static int load_blktrace(const char *fname, int need_swap)$/;"	z	function:load_blktrace	typeref:typename:const char *	file:
fncn	tools/hist/fiologparser_hist.py	/^    fncn = lambda z: list([z\/2**x if z % 2**x == 0 else -10 for x in coarses])$/;"	f	function:guess_max_from_bins	file:
fnv	crc/fnv.c	/^uint64_t fnv(const void *buf, uint32_t len, uint64_t hval)$/;"	f	typeref:typename:uint64_t
fnv	crc/fnv.h	/^uint64_t fnv(const void *, uint32_t, uint64_t);$/;"	p	typeref:typename:uint64_t
font	cairo_text_helpers.c	/^static void draw_aligned_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_aligned_text	typeref:typename:const char *	file:
font	cairo_text_helpers.c	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_centered_text	typeref:typename:const char *	file:
font	cairo_text_helpers.c	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	z	function:draw_left_justified_text	typeref:typename:const char *	file:
font	cairo_text_helpers.c	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	z	function:draw_right_justified_text	typeref:typename:const char *	file:
font	cairo_text_helpers.c	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	function:draw_vertical_centered_text	typeref:typename:const char *	file:
font	cairo_text_helpers.h	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	prototype:draw_centered_text	typeref:typename:const char *	file:
font	cairo_text_helpers.h	/^void draw_left_justified_text(cairo_t *cr, const char *font,$/;"	z	prototype:draw_left_justified_text	typeref:typename:const char *	file:
font	cairo_text_helpers.h	/^void draw_right_justified_text(cairo_t *cr, const char *font,$/;"	z	prototype:draw_right_justified_text	typeref:typename:const char *	file:
font	cairo_text_helpers.h	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:const char *	file:
font	graph.c	/^	const char *font;$/;"	m	struct:graph	typeref:typename:const char *	file:
font	graph.c	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font)$/;"	z	function:graph_new	typeref:typename:const char *	file:
font	graph.c	/^void graph_set_font(struct graph *g, const char *font)$/;"	z	function:graph_set_font	typeref:typename:const char *	file:
font	graph.h	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font);$/;"	z	prototype:graph_new	typeref:typename:const char *	file:
font	graph.h	/^void graph_set_font(struct graph *g, const char *font);$/;"	z	prototype:graph_set_font	typeref:typename:const char *	file:
fontsize	cairo_text_helpers.c	/^					double y, double fontsize,$/;"	z	function:draw_vertical_centered_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.c	/^				double fontsize, const char *text)$/;"	z	function:draw_left_justified_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.c	/^				double fontsize, const char *text)$/;"	z	function:draw_right_justified_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.c	/^			       double fontsize, const char *text)$/;"	z	function:draw_centered_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.c	/^			       double fontsize, const char *text, int alignment)$/;"	z	function:draw_aligned_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.h	/^					double y, double fontsize,$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.h	/^				double fontsize, const char *text);$/;"	z	prototype:draw_left_justified_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.h	/^				double fontsize, const char *text);$/;"	z	prototype:draw_right_justified_text	typeref:typename:double	file:
fontsize	cairo_text_helpers.h	/^			       double fontsize, const char *text);$/;"	z	prototype:draw_centered_text	typeref:typename:double	file:
for_each_file	fio.h	/^#define for_each_file(/;"	d
for_each_rw_ddir	io_ddir.h	/^#define for_each_rw_ddir(/;"	d
for_each_td	fio.h	/^#define for_each_td(/;"	d
for_write	verify.c	/^			   int for_write)$/;"	z	function:open_state_file	typeref:typename:int	file:
force	eta.c	/^bool calc_thread_status(struct jobs_eta *je, int force)$/;"	z	function:calc_thread_status	typeref:typename:int	file:
force	eta.c	/^struct jobs_eta *get_jobs_eta(bool force, size_t *size)$/;"	z	function:get_jobs_eta	typeref:typename:bool	file:
force	stat.h	/^extern bool calc_thread_status(struct jobs_eta *je, int force);$/;"	z	prototype:calc_thread_status	typeref:typename:int	file:
force	stat.h	/^extern struct jobs_eta *get_jobs_eta(bool force, size_t *size);$/;"	z	prototype:get_jobs_eta	typeref:typename:bool	file:
force_async	engines/io_uring.c	/^	unsigned int force_async;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
fork	os/os-windows.h	/^int fork(void);$/;"	p	typeref:typename:int
fork	os/windows/posix.c	/^int fork(void)$/;"	f	typeref:typename:int
fork_data	backend.c	/^struct fork_data {$/;"	s	file:
format	gerror.c	/^void gfio_report_error(struct gui_entry *ge, const char *format, ...)$/;"	z	function:gfio_report_error	typeref:typename:const char *	file:
format	gerror.h	/^extern void gfio_report_error(struct gui_entry *ge, const char *format, ...);$/;"	z	prototype:gfio_report_error	typeref:typename:const char *	file:
format	lib/nowarn_snprintf.h	/^static inline int nowarn_snprintf(char *str, size_t size, const char *format,$/;"	z	function:nowarn_snprintf	typeref:typename:const char *	file:
format	log.c	/^size_t __log_buf(struct buf_output *buf, const char *format, ...)$/;"	z	function:__log_buf	typeref:typename:const char *	file:
format	log.c	/^ssize_t log_err(const char *format, ...)$/;"	z	function:log_err	typeref:typename:const char *	file:
format	log.c	/^ssize_t log_info(const char *format, ...)$/;"	z	function:log_info	typeref:typename:const char *	file:
format	log.h	/^extern size_t __log_buf(struct buf_output *, const char *format, ...) __attribute__ ((__format__/;"	z	prototype:__log_buf	typeref:typename:const char *	file:
format	log.h	/^extern ssize_t log_err(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)));$/;"	z	prototype:log_err	typeref:typename:const char *	file:
format	log.h	/^extern ssize_t log_info(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)))/;"	z	prototype:log_info	typeref:typename:const char *	file:
format	profiles/act.c	/^static int act_add_opt(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)));$/;"	z	prototype:act_add_opt	typeref:typename:const char *	file:
format	t/log.c	/^size_t log_err(const char *format, ...)$/;"	z	function:log_err	typeref:typename:const char *	file:
format	t/log.c	/^size_t log_info(const char *format, ...)$/;"	z	function:log_info	typeref:typename:const char *	file:
found	lib/axmap.c	/^found:$/;"	L	function:axmap_find_first_free	file:
found_candidate_zone	zbd.c	/^found_candidate_zone:$/;"	L	function:zbd_convert_to_open_zone	file:
fp	blktrace.c	/^static int write_trace(FILE *fp, struct blk_io_trace *t)$/;"	z	function:write_trace	typeref:typename:FILE *	file:
fp	engines/libhdfs.c	/^	hdfsFile fp;$/;"	m	struct:hdfsio_data	typeref:typename:hdfsFile	file:
fpre_keyword	init.c	/^static struct fpre_keyword {$/;"	s	file:
fpre_keywords	init.c	/^} fpre_keywords[] = {$/;"	v	typeref:struct:fpre_keyword[]
frand_copy	lib/rand.h	/^static inline void frand_copy(struct frand_state *dst, struct frand_state *src)$/;"	f	typeref:typename:void
frand_state	lib/rand.h	/^struct frand_state {$/;"	s
free	iolog.c	/^	bool free;$/;"	m	struct:iolog_flush_data	typeref:typename:bool	file:
free	y.tab.c	/^void free (void *); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	typeref:typename:void	file:
free_already_allocated	filesetup.c	/^static void free_already_allocated(void)$/;"	f	typeref:typename:void	file:
free_axmap	lib/axmap.c	/^free_axmap:$/;"	L	function:axmap_new	file:
free_blocks	smalloc.c	/^	size_t free_blocks;		\/* free blocks *\/$/;"	m	struct:pool	typeref:typename:size_t	file:
free_chunk	iolog.c	/^static void free_chunk(struct iolog_compress *ic)$/;"	f	typeref:typename:void	file:
free_clat_prio_stats	stat.c	/^void free_clat_prio_stats(struct thread_stat *ts)$/;"	f	typeref:typename:void
free_clat_prio_stats	stat.h	/^extern void free_clat_prio_stats(struct thread_stat *);$/;"	p	typeref:typename:void
free_cond	fio.h	/^	pthread_cond_t free_cond;$/;"	m	struct:thread_data	typeref:typename:pthread_cond_t
free_cpu_affinity	idletime.c	/^static void free_cpu_affinity(struct idle_prof_thread *ipt)$/;"	f	typeref:typename:void	file:
free_disk_util	backend.c	/^static void free_disk_util(void)$/;"	f	typeref:typename:void	file:
free_event_buffer_index	engines/nfs.c	/^	int free_event_buffer_index; \/* next free buffer *\/$/;"	m	struct:fio_libnfs_options	typeref:typename:int	file:
free_file_completion_logging	backend.c	/^static void free_file_completion_logging(struct thread_data *td)$/;"	f	typeref:typename:void	file:
free_fn	lib/memalign.h	/^typedef void (*free_fn)(void*);$/;"	t	typeref:typename:void (*)(void *)
free_fname	verify.c	/^free_fname:$/;"	L	function:dump_buf	file:
free_io_mem	fio.h	/^extern void free_io_mem(struct thread_data *);$/;"	p	typeref:typename:void
free_io_mem	memory.c	/^void free_io_mem(struct thread_data *td)$/;"	f	typeref:typename:void
free_ioengine	ioengines.c	/^void free_ioengine(struct thread_data *td)$/;"	f	typeref:typename:void
free_ioengine	ioengines.h	/^extern void free_ioengine(struct thread_data *);$/;"	p	typeref:typename:void
free_levels	lib/axmap.c	/^free_levels:$/;"	L	function:axmap_new	file:
free_list	filelock.c	/^	struct flist_head free_list;$/;"	m	struct:filelock_data	typeref:struct:flist_head	file:
free_log	iolog.c	/^void free_log(struct io_log *log)$/;"	f	typeref:typename:void
free_log	iolog.h	/^extern void free_log(struct io_log *);$/;"	p	typeref:typename:void
free_mem_cudamalloc	memory.c	/^static void free_mem_cudamalloc(struct thread_data *td)$/;"	f	typeref:typename:void	file:
free_mem_malloc	memory.c	/^static void free_mem_malloc(struct thread_data *td)$/;"	f	typeref:typename:void	file:
free_mem_mmap	memory.c	/^static void free_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:void	file:
free_mem_shm	memory.c	/^static void free_mem_shm(struct thread_data *td)$/;"	f	typeref:typename:void	file:
free_p	t/btrace2fio.c	/^static void free_p(struct btrace_pid *p)$/;"	f	typeref:typename:void	file:
free_ptr	verify.c	/^free_ptr:$/;"	L	function:dump_buf	file:
free_release_files	file.h	/^extern void free_release_files(struct thread_data *);$/;"	p	typeref:typename:void
free_release_files	filesetup.c	/^void free_release_files(struct thread_data *td)$/;"	f	typeref:typename:void
free_reply	server.c	/^static void free_reply(uint64_t tag)$/;"	f	typeref:typename:void	file:
free_shm	init.c	/^static void free_shm(void)$/;"	f	typeref:typename:void	file:
free_tests	lib/memcpy.c	/^static void free_tests(void)$/;"	f	typeref:typename:void	file:
free_thread_options_to_cpu	cconv.c	/^static void free_thread_options_to_cpu(struct thread_options *o)$/;"	f	typeref:typename:void	file:
free_threads_shm	fio.h	/^extern void free_threads_shm(void);$/;"	p	typeref:typename:void
free_threads_shm	init.c	/^void free_threads_shm(void)$/;"	f	typeref:typename:void
free_worker	workqueue.c	/^static void free_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	f	typeref:typename:void	file:
free_worker_fn	workqueue.h	/^	workqueue_free_worker_fn *free_worker_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_free_worker_fn *
fri_check_complete	engines/rbd.c	/^static inline int fri_check_complete(struct rbd_data *rbd, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
from	options.c	/^static struct fio_option *find_next_opt(struct fio_option *from,$/;"	z	function:find_next_opt	typeref:struct:fio_option *	file:
from_verify	backend.c	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	function:io_queue_event	typeref:typename:int	file:
from_verify	fio.h	/^		   enum fio_ddir ddir, uint64_t *bytes_issued, int from_verify,$/;"	z	prototype:io_queue_event	typeref:typename:int	file:
fs	engines/gfapi.h	/^	glfs_t *fs;$/;"	m	struct:gf_data	typeref:typename:glfs_t *
fs	engines/glusterfs.c	/^	glfs_t			*fs;$/;"	m	struct:glfs_info	typeref:typename:glfs_t *	file:
fs	engines/glusterfs.c	/^static void fio_gf_put_glfs(struct gf_options *opt, glfs_t *fs)$/;"	z	function:fio_gf_put_glfs	typeref:typename:glfs_t *	file:
fs	engines/libhdfs.c	/^	hdfsFS fs;$/;"	m	struct:hdfsio_data	typeref:typename:hdfsFS	file:
fs	engines/sg.c	/^			  struct io_u *io_u, int fs)$/;"	z	function:sgio_hdr_init	typeref:typename:int	file:
fs	lib/rand.c	/^uint64_t fill_random_buf(struct frand_state *fs, void *buf,$/;"	z	function:fill_random_buf	typeref:struct:frand_state *	file:
fs	lib/rand.c	/^uint64_t fill_random_buf_percentage(struct frand_state *fs, void *buf,$/;"	z	function:fill_random_buf_percentage	typeref:struct:frand_state *	file:
fs	lib/rand.h	/^static inline uint64_t __get_next_seed(struct frand_state *fs)$/;"	z	function:__get_next_seed	typeref:struct:frand_state *	file:
fsync	os/os-windows.h	/^int fsync(int fildes);$/;"	p	typeref:typename:int
fsync	os/windows/posix.c	/^int fsync(int fildes)$/;"	f	typeref:typename:int
fsync_blocks	thread_options.h	/^	uint32_t fsync_blocks;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
fsync_blocks	thread_options.h	/^	unsigned int fsync_blocks;$/;"	m	struct:thread_options	typeref:typename:unsigned int
fsync_flags	os/linux/io_uring.h	/^		__u32		fsync_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
fsync_on_close	thread_options.h	/^	uint32_t fsync_on_close;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
fsync_on_close	thread_options.h	/^	unsigned int fsync_on_close;$/;"	m	struct:thread_options	typeref:typename:unsigned int
fulldevice	t/sgunmap-perf.py	/^def fulldevice(fio, dev, ioengine='psync', rw='trim', bs='1M'):$/;"	f
fulltest	Makefile	/^fulltest:$/;"	t
func	helper_thread.c	/^	int		(*func)(void);$/;"	m	struct:interval_timer	typeref:typename:int (*)(void)	file:
func	lib/axmap.c	/^			  bool (*func)(struct axmap_level *, uint64_t, unsigned int,$/;"	z	function:axmap_handler	typeref:typename:bool (*)(struct axmap_level *,uint64_t,unsigned int,void *)	file:
func	lib/axmap.c	/^	bool (*func)(struct axmap_level *, uint64_t, unsigned int, void *))$/;"	z	function:axmap_handler_topdown	typeref:typename:bool (*)(struct axmap_level *,uint64_t,unsigned int,void *)	file:
func	smalloc.c	/^		       int (*func)(unsigned int *map, unsigned int mask))$/;"	z	function:blocks_iter	typeref:typename:int (*)(unsigned int * map,unsigned int mask)	file:
fwrap	engines/xnvme.c	/^static void _dev_close(struct thread_data *td, struct xnvme_fioe_fwrap *fwrap)$/;"	z	function:_dev_close	typeref:struct:xnvme_fioe_fwrap *	file:
g	gfio.c	/^static void __update_graph_settings(struct gfio_graphs *g)$/;"	z	function:__update_graph_settings	typeref:struct:gfio_graphs *	file:
g	gfio.c	/^static void draw_graph(struct graph *g, cairo_t *cr)$/;"	z	function:draw_graph	typeref:struct:graph *	file:
g	gfio.c	/^static void gfio_clear_graph_data(struct gfio_graphs *g)$/;"	z	function:gfio_clear_graph_data	typeref:struct:gfio_graphs *	file:
g	gfio.c	/^static void setup_graphs(struct gfio_graphs *g)$/;"	z	function:setup_graphs	typeref:struct:gfio_graphs *	file:
g	ghelpers.c	/^					gfloat r, gfloat g, gfloat b)$/;"	z	function:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
g	ghelpers.c	/^static void fill_color_from_rgb(GdkColor *c, gfloat r, gfloat g, gfloat b)$/;"	z	function:fill_color_from_rgb	typeref:typename:gfloat	file:
g	ghelpers.h	/^					gfloat r, gfloat g, gfloat b);$/;"	z	prototype:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
g	goptions.c	/^static void gopt_str_val_set_val(struct gopt_str_val *g, unsigned long long val)$/;"	z	function:gopt_str_val_set_val	typeref:struct:gopt_str_val *	file:
g	graph.c	/^	double r, g, b;$/;"	m	struct:graph_label	typeref:typename:double	file:
g	graph.c	/^const char *graph_find_tooltip(struct graph *g, int ix, int iy)$/;"	z	function:graph_find_tooltip	typeref:struct:graph *	file:
g	graph.c	/^int graph_contains_xy(struct graph *g, int x, int y)$/;"	z	function:graph_contains_xy	typeref:struct:graph *	file:
g	graph.c	/^int graph_has_tooltips(struct graph *g)$/;"	z	function:graph_has_tooltips	typeref:struct:graph *	file:
g	graph.c	/^static double find_double_data(struct graph *g, double_comparator cmp)$/;"	z	function:find_double_data	typeref:struct:graph *	file:
g	graph.c	/^static double find_max_data(struct graph *g)$/;"	z	function:find_max_data	typeref:struct:graph *	file:
g	graph.c	/^static double find_min_data(struct graph *g)$/;"	z	function:find_min_data	typeref:struct:graph *	file:
g	graph.c	/^static double find_xy_value(struct graph *g, xy_value_extractor getvalue, double_comparator cmp)$/;"	z	function:find_xy_value	typeref:struct:graph *	file:
g	graph.c	/^static double graph_draw_y_ticks(struct graph *g, cairo_t *cr,$/;"	z	function:graph_draw_y_ticks	typeref:struct:graph *	file:
g	graph.c	/^static int count_labels(struct graph *g)$/;"	z	function:count_labels	typeref:struct:graph *	file:
g	graph.c	/^static void graph_draw_common(struct graph *g, cairo_t *cr, double *x1,$/;"	z	function:graph_draw_common	typeref:struct:graph *	file:
g	graph.c	/^static void graph_draw_x_ticks(struct graph *g, cairo_t *cr,$/;"	z	function:graph_draw_x_ticks	typeref:struct:graph *	file:
g	graph.c	/^static void graph_free_labels(struct graph *g)$/;"	z	function:graph_free_labels	typeref:struct:graph *	file:
g	graph.c	/^void graph_add_extra_space(struct graph *g, double left_percent,$/;"	z	function:graph_add_extra_space	typeref:struct:graph *	file:
g	graph.c	/^void graph_clear_values(struct graph *g)$/;"	z	function:graph_clear_values	typeref:struct:graph *	file:
g	graph.c	/^void graph_set_base_offset(struct graph *g, unsigned int base_offset)$/;"	z	function:graph_set_base_offset	typeref:struct:graph *	file:
g	graph.c	/^void graph_set_font(struct graph *g, const char *font)$/;"	z	function:graph_set_font	typeref:struct:graph *	file:
g	graph.c	/^void graph_set_graph_all_zeroes(struct graph *g, unsigned int set)$/;"	z	function:graph_set_graph_all_zeroes	typeref:struct:graph *	file:
g	graph.c	/^void graph_set_position(struct graph *g, double xoffset, double yoffset)$/;"	z	function:graph_set_position	typeref:struct:graph *	file:
g	graph.c	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim)$/;"	z	function:graph_set_size	typeref:struct:graph *	file:
g	graph.c	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	z	function:graph_x_axis_unit_change_notify	typeref:struct:graph *	file:
g	graph.c	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	z	function:graph_y_axis_unit_change_notify	typeref:struct:graph *	file:
g	graph.c	/^void line_graph_draw(struct graph *g, cairo_t *cr)$/;"	z	function:line_graph_draw	typeref:struct:graph *	file:
g	graph.c	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit)$/;"	z	function:line_graph_set_data_count_limit	typeref:struct:graph *	file:
g	graph.h	/^extern const char *graph_find_tooltip(struct graph *g, int x, int y);$/;"	z	prototype:graph_find_tooltip	typeref:struct:graph *	file:
g	graph.h	/^extern int graph_has_tooltips(struct graph *g);$/;"	z	prototype:graph_has_tooltips	typeref:struct:graph *	file:
g	graph.h	/^extern void graph_clear_values(struct graph *g);$/;"	z	prototype:graph_clear_values	typeref:struct:graph *	file:
g	graph.h	/^extern void graph_set_base_offset(struct graph *g, unsigned int base_offset);$/;"	z	prototype:graph_set_base_offset	typeref:struct:graph *	file:
g	graph.h	/^extern void graph_set_graph_all_zeroes(struct graph *g, unsigned int set);$/;"	z	prototype:graph_set_graph_all_zeroes	typeref:struct:graph *	file:
g	graph.h	/^graph_label_t graph_add_label(struct graph *g, const char *label);$/;"	z	prototype:graph_add_label	typeref:struct:graph *	file:
g	graph.h	/^int graph_add_data(struct graph *g, graph_label_t label, const double value);$/;"	z	prototype:graph_add_data	typeref:struct:graph *	file:
g	graph.h	/^int graph_add_xy_data(struct graph *g, graph_label_t label,$/;"	z	prototype:graph_add_xy_data	typeref:struct:graph *	file:
g	graph.h	/^void bar_graph_draw(struct graph *g, cairo_t *cr);$/;"	z	prototype:bar_graph_draw	typeref:struct:graph *	file:
g	graph.h	/^void graph_add_extra_space(struct graph *g, double left_percent, double right_percent,$/;"	z	prototype:graph_add_extra_space	typeref:struct:graph *	file:
g	graph.h	/^void graph_set_color(struct graph *g, graph_label_t label,$/;"	z	prototype:graph_set_color	typeref:struct:graph *	file:
g	graph.h	/^void graph_set_font(struct graph *g, const char *font);$/;"	z	prototype:graph_set_font	typeref:struct:graph *	file:
g	graph.h	/^void graph_set_position(struct graph *g, double xoffset, double yoffset);$/;"	z	prototype:graph_set_position	typeref:struct:graph *	file:
g	graph.h	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim);$/;"	z	prototype:graph_set_size	typeref:struct:graph *	file:
g	graph.h	/^void graph_title(struct graph *g, const char *title);$/;"	z	prototype:graph_title	typeref:struct:graph *	file:
g	graph.h	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	z	prototype:graph_x_axis_unit_change_notify	typeref:struct:graph *	file:
g	graph.h	/^void graph_x_title(struct graph *g, const char *title);$/;"	z	prototype:graph_x_title	typeref:struct:graph *	file:
g	graph.h	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	z	prototype:graph_y_axis_unit_change_notify	typeref:struct:graph *	file:
g	graph.h	/^void graph_y_title(struct graph *g, const char *title);$/;"	z	prototype:graph_y_title	typeref:struct:graph *	file:
g	graph.h	/^void line_graph_draw(struct graph *g, cairo_t *cr);$/;"	z	prototype:line_graph_draw	typeref:struct:graph *	file:
g	graph.h	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit);$/;"	z	prototype:line_graph_set_data_count_limit	typeref:struct:graph *	file:
g_serialize	engines/xnvme.c	/^static pthread_mutex_t g_serialize = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
g_widgets	goptions.c	/^	struct gopt_frame_widget g_widgets[__FIO_OPT_G_NR];$/;"	m	struct:gopt_job_view	typeref:struct:gopt_frame_widget[]	file:
gauss	file.h	/^		struct gauss_state gauss;$/;"	m	union:fio_file::__anonfd762ebb050a	typeref:struct:gauss_state
gauss_dev	fio.h	/^		double gauss_dev;$/;"	m	union:thread_data::__anon0f7035d90a0a	typeref:typename:double
gauss_dev	lib/gauss.c	/^static int gauss_dev(struct gauss_state *gs)$/;"	f	typeref:typename:int	file:
gauss_dev	thread_options.h	/^	fio_fp64_t gauss_dev;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
gauss_dev	thread_options.h	/^	fio_fp64_t gauss_dev;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
gauss_disable_hash	lib/gauss.c	/^void gauss_disable_hash(struct gauss_state *gs)$/;"	f	typeref:typename:void
gauss_disable_hash	lib/gauss.h	/^void gauss_disable_hash(struct gauss_state *gs);$/;"	p	typeref:typename:void
gauss_init	lib/gauss.c	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	f	typeref:typename:void
gauss_init	lib/gauss.h	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	p	typeref:typename:void
gauss_next	lib/gauss.c	/^unsigned long long gauss_next(struct gauss_state *gs)$/;"	f	typeref:typename:unsigned long long
gauss_next	lib/gauss.h	/^unsigned long long gauss_next(struct gauss_state *gs);$/;"	p	typeref:typename:unsigned long long
gauss_state	lib/gauss.h	/^struct gauss_state {$/;"	s
gc	gclient.c	/^				 struct gfio_client *gc, struct cmd_du_pdu *p)$/;"	z	function:__gfio_disk_util_show	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static int gfio_disk_util_show(struct gfio_client *gc)$/;"	z	function:gfio_disk_util_show	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static struct thread_options *gfio_client_add_job(struct gfio_client *gc,$/;"	z	function:gfio_client_add_job	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static void __gfio_display_end_results(GtkWidget *win, struct gfio_client *gc,$/;"	z	function:__gfio_display_end_results	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static void gfio_add_end_results(struct gfio_client *gc, struct thread_stat *ts,$/;"	z	function:gfio_add_end_results	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static void gfio_show_clat_percentiles(struct gfio_client *gc,$/;"	z	function:gfio_show_clat_percentiles	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static void gfio_show_ddir_status(struct gfio_client *gc, GtkWidget *mbox,$/;"	z	function:gfio_show_ddir_status	typeref:struct:gfio_client *	file:
gc	gclient.c	/^static void gfio_show_latency_buckets(struct gfio_client *gc, GtkWidget *vbox,$/;"	z	function:gfio_show_latency_buckets	typeref:struct:gfio_client *	file:
gc	gclient.c	/^void gfio_display_end_results(struct gfio_client *gc)$/;"	z	function:gfio_display_end_results	typeref:struct:gfio_client *	file:
gc	gfio.c	/^static void gfio_set_client(struct gfio_client *gc, struct fio_client *client)$/;"	z	function:gfio_set_client	typeref:struct:gfio_client *	file:
gc	goptions.c	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc)$/;"	z	function:gopt_get_options_window	typeref:struct:gfio_client *	file:
gc	goptions.h	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc);$/;"	z	prototype:gopt_get_options_window	typeref:struct:gfio_client *	file:
gcd	init.c	/^static unsigned int gcd(unsigned int m, unsigned int n)$/;"	f	typeref:typename:unsigned int	file:
gclient.o	Makefile	/^gclient.o: gclient.c gclient.h$/;"	t
gcompat.o	Makefile	/^gcompat.o: gcompat.c gcompat.h$/;"	t
ge	gclient.c	/^static GtkWidget *get_results_menubar(GtkWidget *window, struct gui_entry *ge)$/;"	z	function:get_results_menubar	typeref:struct:gui_entry *	file:
ge	gclient.c	/^static GtkWidget *get_results_window(struct gui_entry *ge)$/;"	z	function:get_results_window	typeref:struct:gui_entry *	file:
ge	gclient.c	/^static GtkWidget *gfio_disk_util_get_vbox(struct gui_entry *ge)$/;"	z	function:gfio_disk_util_get_vbox	typeref:struct:gui_entry *	file:
ge	gclient.c	/^static void gfio_update_thread_status(struct gui_entry *ge,$/;"	z	function:gfio_update_thread_status	typeref:struct:gui_entry *	file:
ge	gerror.c	/^static void report_error(struct gui_entry *ge, GError *error)$/;"	z	function:report_error	typeref:struct:gui_entry *	file:
ge	gerror.c	/^void gfio_report_error(struct gui_entry *ge, const char *format, ...)$/;"	z	function:gfio_report_error	typeref:struct:gui_entry *	file:
ge	gerror.h	/^extern void gfio_report_error(struct gui_entry *ge, const char *format, ...);$/;"	z	prototype:gfio_report_error	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static GtkWidget *new_client_page(struct gui_entry *ge)$/;"	z	function:new_client_page	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static GtkWidget *new_client_page(struct gui_entry *ge);$/;"	z	prototype:new_client_page	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static int do_file_open(struct gui_entry *ge, const gchar *uri)$/;"	z	function:do_file_open	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static int get_connection_details(struct gui_entry *ge)$/;"	z	function:get_connection_details	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static int send_job_file(struct gui_entry *ge)$/;"	z	function:send_job_file	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static void add_buttons(struct gui_entry *ge, struct button_spec *buttonlist,$/;"	z	function:add_buttons	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static void ge_destroy(struct gui_entry *ge)$/;"	z	function:ge_destroy	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static void gfio_client_added(struct gui_entry *ge, struct fio_client *client)$/;"	z	function:gfio_client_added	typeref:struct:gui_entry *	file:
ge	gfio.c	/^static void update_button_states(struct gui *ui, struct gui_entry *ge)$/;"	z	function:update_button_states	typeref:struct:gui_entry *	file:
ge	gfio.c	/^void clear_ge_ui_info(struct gui_entry *ge)$/;"	z	function:clear_ge_ui_info	typeref:struct:gui_entry *	file:
ge	gfio.c	/^void gfio_set_state(struct gui_entry *ge, unsigned int state)$/;"	z	function:gfio_set_state	typeref:struct:gui_entry *	file:
ge	gfio.h	/^	struct gui_entry *ge;$/;"	m	struct:gfio_client	typeref:struct:gui_entry *
ge	gfio.h	/^extern void clear_ge_ui_info(struct gui_entry *ge);$/;"	z	prototype:clear_ge_ui_info	typeref:struct:gui_entry *	file:
ge	gfio.h	/^extern void gfio_set_state(struct gui_entry *ge, unsigned int state);$/;"	z	prototype:gfio_set_state	typeref:struct:gui_entry *	file:
ge	printing.c	/^void gfio_print_results(struct gui_entry *ge)$/;"	z	function:gfio_print_results	typeref:struct:gui_entry *	file:
ge	printing.h	/^void gfio_print_results(struct gui_entry *ge);$/;"	z	prototype:gfio_print_results	typeref:struct:gui_entry *	file:
ge_destroy	gfio.c	/^static void ge_destroy(struct gui_entry *ge)$/;"	f	typeref:typename:void	file:
ge_hash	gfio.h	/^	GHashTable *ge_hash;$/;"	m	struct:gui	typeref:typename:GHashTable *
ge_update_settings_fn	gfio.c	/^static void ge_update_settings_fn(gpointer key, gpointer value, gpointer data)$/;"	f	typeref:typename:void	file:
ge_widget_destroy	gfio.c	/^static void ge_widget_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gen_eta_str	eta.c	/^static int gen_eta_str(struct jobs_eta *je, char *p, size_t left,$/;"	f	typeref:typename:int	file:
gen_fio	tools/genfio	/^gen_fio() {$/;"	f
gen_log_name	init.c	/^static void gen_log_name(char *name, size_t size, const char *logtype,$/;"	f	typeref:typename:void	file:
gen_mixed_ddir_stats_from_ts	stat.c	/^static struct thread_stat *gen_mixed_ddir_stats_from_ts(struct thread_stat *ts)$/;"	f	typeref:struct:thread_stat *	file:
gen_output_columns	tools/hist/fiologparser_hist.py	/^def gen_output_columns(ctx):$/;"	f
gen_para_fio	tools/genfio	/^gen_para_fio() {$/;"	f
gen_para_suite	tools/genfio	/^gen_para_suite() {$/;"	f
gen_seq_fio	tools/genfio	/^gen_seq_fio() {$/;"	f
gen_seq_suite	tools/genfio	/^gen_seq_suite() {$/;"	f
gen_template	tools/genfio	/^gen_template() {$/;"	f
generate_gnuplot_math_script	tools/plot/fio2gnuplot	/^def generate_gnuplot_math_script(title,gnuplot_output_filename,mode,average,gnuplot_output_dir,g/;"	f
generate_gnuplot_script	tools/plot/fio2gnuplot	/^def generate_gnuplot_script(fio_data_file,title,gnuplot_output_filename,gnuplot_output_dir,mode,/;"	f
generic_close_file	file.h	/^extern int __must_check generic_close_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
generic_close_file	filesetup.c	/^int generic_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	f	typeref:typename:int
generic_get_file_size	file.h	/^extern int __must_check generic_get_file_size(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
generic_get_file_size	filesetup.c	/^int generic_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
generic_open_file	file.h	/^extern int __must_check generic_open_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
generic_open_file	filesetup.c	/^int generic_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
generic_prepopulate_file	file.h	/^extern int __must_check generic_prepopulate_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
generic_prepopulate_file	filesetup.c	/^int generic_prepopulate_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
genesis	time.c	/^static struct timespec genesis;$/;"	v	typeref:struct:timespec	file:
geo	engines/xnvme.c	/^	const struct xnvme_geo *geo;$/;"	m	struct:xnvme_fioe_fwrap	typeref:typename:const struct xnvme_geo *	file:
gerror.o	Makefile	/^gerror.o: gerror.c gerror.h$/;"	t
get	engines/null.c	/^	static NullData *get(struct thread_data *td)$/;"	f	struct:NullData	typeref:typename:NullData *	file:
get_act_ref	profiles/act.c	/^static void get_act_ref(void)$/;"	f	typeref:typename:void	file:
get_all_io_list	verify-state.h	/^extern struct all_io_list *get_all_io_list(int, size_t *);$/;"	p	typeref:struct:all_io_list *
get_all_io_list	verify.c	/^struct all_io_list *get_all_io_list(int save_mask, size_t *sz)$/;"	f	typeref:struct:all_io_list *
get_buf_state	io_u.c	/^static struct frand_state *get_buf_state(struct thread_data *td)$/;"	f	typeref:struct:frand_state *	file:
get_button_tooltip	gfio.c	/^static const char *get_button_tooltip(struct button_spec *s, int sensitive)$/;"	f	typeref:typename:const char *	file:
get_cgroup_root	cgroup.c	/^static char *get_cgroup_root(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	f	typeref:typename:char *	file:
get_chunck_name	engines/libhdfs.c	/^static int get_chunck_name(char *dest, char *file_name, uint64_t chunk_id) {$/;"	f	typeref:typename:int	file:
get_cluster_color	tools/fiograph/fiograph.py	/^def get_cluster_color(keyword='fio_jobs', default_color='gray92'):$/;"	f
get_cluster_style	tools/fiograph/fiograph.py	/^def get_cluster_style(keyword='fio_jobs'):$/;"	f
get_config_option	tools/fiograph/fiograph.py	/^def get_config_option(section_name, option_name, default=None):$/;"	f
get_connection_details	gfio.c	/^static int get_connection_details(struct gui_entry *ge)$/;"	f	typeref:typename:int	file:
get_contribution	tools/fiologparser.py	/^    def get_contribution(self, start, end):$/;"	m	class:Sample
get_cpu_clock	arch/arch-aarch64.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_cpu_clock	arch/arch-ia64.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_cpu_clock	arch/arch-ppc.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_cpu_clock	arch/arch-s390.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_cpu_clock	arch/arch-x86.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_cpu_clock	arch/arch-x86_64.h	/^static inline unsigned long long get_cpu_clock(void)$/;"	f	typeref:typename:unsigned long long
get_csvfile	tools/fio_jsonplus_clat2csv	/^def get_csvfile(dest, jobnum):$/;"	f
get_cur_log	stat.c	/^static struct io_logs *get_cur_log(struct io_log *iolog)$/;"	f	typeref:struct:io_logs *	file:
get_cycles_per_msec	gettime.c	/^static unsigned long get_cycles_per_msec(void)$/;"	f	typeref:typename:unsigned long	file:
get_device_numbers	diskutil.c	/^static int get_device_numbers(char *file_name, int *maj, int *min)$/;"	f	typeref:typename:int	file:
get_file	file.h	/^extern void get_file(struct fio_file *);$/;"	p	typeref:typename:void
get_file	filesetup.c	/^void get_file(struct fio_file *f)$/;"	f	typeref:typename:void
get_file	t/run-fio-tests.py	/^    def get_file(cls, filename):$/;"	m	class:FioJobTest
get_file_size	engines/filecreate.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
get_file_size	filesetup.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
get_file_size	ioengines.h	/^	int (*get_file_size)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
get_file_size	t/io_uring.c	/^static int get_file_size(struct file *f)$/;"	f	typeref:typename:int	file:
get_file_sizes	filesetup.c	/^static int get_file_sizes(struct thread_data *td)$/;"	f	typeref:typename:int	file:
get_file_type	filesetup.c	/^static void get_file_type(struct fio_file *f)$/;"	f	typeref:typename:void	file:
get_filelock	filelock.c	/^static struct fio_filelock *get_filelock(int trylock, int *retry)$/;"	f	typeref:struct:fio_filelock *	file:
get_filename_from_uri	gfio.c	/^static gchar *get_filename_from_uri(const gchar *uri)$/;"	f	typeref:typename:gchar *	file:
get_fileno	file.h	/^extern int get_fileno(struct thread_data *, const char *);$/;"	p	typeref:typename:int
get_fileno	filesetup.c	/^int get_fileno(struct thread_data *td, const char *fname)$/;"	f	typeref:typename:int
get_fs_free_counts	filesetup.c	/^static unsigned long long get_fs_free_counts(struct thread_data *td)$/;"	f	typeref:typename:unsigned long long	file:
get_fs_free_size	os/os-android.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-dragonfly.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-freebsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-linux.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-netbsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-openbsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os-solaris.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_fs_free_size	os/os.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	f	typeref:typename:unsigned long long
get_ftime	tools/fiologparser.py	/^def get_ftime(series):$/;"	f
get_ge_from_cur_tab	gfio.c	/^static struct gui_entry *get_ge_from_cur_tab(struct gui *ui)$/;"	f	typeref:struct:gui_entry *	file:
get_ge_from_page	gfio.c	/^static struct gui_entry *get_ge_from_page(struct gui *ui, gint cur_page,$/;"	f	typeref:struct:gui_entry *	file:
get_global_options	fio.h	/^extern struct thread_data *get_global_options(void);$/;"	p	typeref:struct:thread_data *
get_global_options	init.c	/^struct thread_data *get_global_options(void)$/;"	f	typeref:struct:thread_data *
get_hdr_inc	verify.c	/^static unsigned int get_hdr_inc(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:unsigned int	file:
get_header	tools/fiograph/fiograph.py	/^def get_header(keyword='fio_jobs'):$/;"	f
get_header_color	tools/fiograph/fiograph.py	/^def get_header_color(keyword='fio_jobs', default_color='black'):$/;"	f
get_index	lib/prio_tree.c	/^static void get_index(const struct prio_tree_node *node,$/;"	f	typeref:typename:void	file:
get_io_ticks	diskutil.c	/^static int get_io_ticks(struct disk_util *du, struct disk_util_stat *dus)$/;"	f	typeref:typename:int	file:
get_io_u	io_u.c	/^struct io_u *get_io_u(struct thread_data *td)$/;"	f	typeref:struct:io_u *
get_io_u	io_u.h	/^extern struct io_u *get_io_u(struct thread_data *);$/;"	p	typeref:struct:io_u *
get_io_u_index	engines/librpma_fio.h	/^	librpma_fio_get_io_u_index_t get_io_u_index;$/;"	m	struct:librpma_fio_client_data	typeref:typename:librpma_fio_get_io_u_index_t
get_ioengine	engines/null.c	/^void get_ioengine(struct ioengine_ops **ioengine_ptr)$/;"	f	typeref:typename:void
get_ioengine_t	ioengines.h	/^typedef void (*get_ioengine_t)(struct ioengine_ops **);$/;"	t	typeref:typename:void (*)(struct ioengine_ops **)
get_jobs_eta	eta.c	/^struct jobs_eta *get_jobs_eta(bool force, size_t *size)$/;"	f	typeref:struct:jobs_eta *
get_jobs_eta	stat.h	/^extern struct jobs_eta *get_jobs_eta(bool force, size_t *size);$/;"	p	typeref:struct:jobs_eta *
get_json	t/latency_percentiles.py	/^    def get_json(self):$/;"	m	class:FioLatTest
get_max_open_zones	ioengines.h	/^	int (*get_max_open_zones)(struct thread_data *, struct fio_file *,$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *,unsigned int *)
get_max_str_idx	options.c	/^int get_max_str_idx(char *input)$/;"	f	typeref:typename:int
get_max_str_idx	options.h	/^int get_max_str_idx(char *input);$/;"	p	typeref:typename:int
get_menubar_menu	gfio.c	/^static GtkWidget *get_menubar_menu(GtkWidget *window, GtkUIManager *ui_manager,$/;"	f	typeref:typename:GtkWidget *	file:
get_min	tools/hist/fiologparser_hist.py	/^def get_min(fps, arrs):$/;"	f
get_mult_bytes	parse.c	/^static unsigned long long get_mult_bytes(const char *str, int len, void *data,$/;"	f	typeref:typename:unsigned long long	file:
get_mult_time	parse.c	/^static unsigned long long get_mult_time(const char *str, int len,$/;"	f	typeref:typename:unsigned long long	file:
get_my_addr_str	server.c	/^static int get_my_addr_str(int sk)$/;"	f	typeref:typename:int	file:
get_name_by_idx	options.c	/^char* get_name_by_idx(char *input, int index)$/;"	f	typeref:typename:char *
get_name_by_idx	options.h	/^char* get_name_by_idx(char *input, int index);$/;"	p	typeref:typename:char *
get_new_chunk	iolog.c	/^static struct iolog_compress *get_new_chunk(unsigned int seq)$/;"	f	typeref:struct:iolog_compress *	file:
get_new_client	client.c	/^static struct fio_client *get_new_client(void)$/;"	f	typeref:struct:fio_client *	file:
get_new_ge_with_tab	gfio.c	/^static struct gui_entry *get_new_ge_with_tab(struct gui *ui, const char *name)$/;"	f	typeref:struct:gui_entry *	file:
get_new_job	init.c	/^static struct thread_data *get_new_job(bool global, struct thread_data *parent,$/;"	f	typeref:struct:thread_data *	file:
get_new_log	stat.c	/^static struct io_logs *get_new_log(struct io_log *iolog)$/;"	f	typeref:struct:io_logs *	file:
get_next_block	io_u.c	/^static int get_next_block(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
get_next_buflen	io_u.c	/^static unsigned long long get_next_buflen(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:unsigned long long	file:
get_next_channel_event	engines/rdma.c	/^static int get_next_channel_event(struct thread_data *td,$/;"	f	typeref:typename:int	file:
get_next_file	io_u.c	/^static struct fio_file *get_next_file(struct thread_data *td)$/;"	f	typeref:struct:fio_file *	file:
get_next_file_rand	io_u.c	/^static struct fio_file *get_next_file_rand(struct thread_data *td,$/;"	f	typeref:struct:fio_file *	file:
get_next_file_rr	io_u.c	/^static struct fio_file *get_next_file_rr(struct thread_data *td, int goodf,$/;"	f	typeref:struct:fio_file *	file:
get_next_offset	io_u.c	/^static int get_next_offset(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
get_next_rand_block	io_u.c	/^static int get_next_rand_block(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
get_next_rand_offset	io_u.c	/^static int get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
get_next_seq_offset	io_u.c	/^static int get_next_seq_offset(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
get_next_str	options.c	/^char *get_next_str(char **ptr)$/;"	f	typeref:typename:char *
get_next_str	options.h	/^char *get_next_str(char **ptr);$/;"	p	typeref:typename:char *
get_next_trim	trim.c	/^bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool
get_next_trim	trim.h	/^extern bool __must_check get_next_trim(struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:typename:bool __must_check
get_next_trim	trim.h	/^static inline bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool
get_next_verify	verify.c	/^int get_next_verify(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
get_next_verify	verify.h	/^extern int __must_check get_next_verify(struct thread_data *td, struct io_u *);$/;"	p	typeref:typename:int __must_check
get_nr_prios_with_samples	stat.c	/^static int get_nr_prios_with_samples(struct thread_stat *ts, enum fio_ddir ddir)$/;"	f	typeref:typename:int	file:
get_nsec	t/time-test.c	/^static unsigned long long get_nsec(int mode, unsigned long long t)$/;"	f	typeref:typename:unsigned long long	file:
get_opt_postfix	options.c	/^static char *get_opt_postfix(const char *str)$/;"	f	typeref:typename:char *	file:
get_option	parse.c	/^get_option(char *opt, const struct fio_option *options, char **post)$/;"	f	typeref:typename:const struct fio_option *	file:
get_pctiles	tools/hist/fio-histo-log-pctiles.py	/^def get_pctiles(buckets, wanted, time_ranges):$/;"	f
get_rand_ddir	io_u.c	/^static inline enum fio_ddir get_rand_ddir(struct thread_data *td)$/;"	f	typeref:enum:fio_ddir	file:
get_rand_file_size	file.h	/^extern unsigned long long get_rand_file_size(struct thread_data *td);$/;"	p	typeref:typename:unsigned long long
get_rand_file_size	filesetup.c	/^unsigned long long get_rand_file_size(struct thread_data *td)$/;"	f	typeref:typename:unsigned long long
get_results_menubar	gclient.c	/^static GtkWidget *get_results_menubar(GtkWidget *window, struct gui_entry *ge)$/;"	f	typeref:typename:GtkWidget *	file:
get_results_window	gclient.c	/^static GtkWidget *get_results_window(struct gui_entry *ge)$/;"	f	typeref:typename:GtkWidget *	file:
get_rw_ddir	io_u.c	/^static enum fio_ddir get_rw_ddir(struct thread_data *td)$/;"	f	typeref:enum:fio_ddir	file:
get_sample	iolog.h	/^static inline struct io_sample *get_sample(struct io_log *iolog,$/;"	f	typeref:struct:io_sample *
get_samples	tools/fiologparser.py	/^    def get_samples(self, start, end):$/;"	m	class:TimeSeries
get_samples	tools/hist/fio-histo-log-pctiles.py	/^def get_samples(buckets):$/;"	f
get_scrolled_window	ghelpers.c	/^GtkWidget *get_scrolled_window(gint border_width)$/;"	f	typeref:typename:GtkWidget *
get_scrolled_window	ghelpers.h	/^GtkWidget *get_scrolled_window(gint border_width);$/;"	p	typeref:typename:GtkWidget *
get_section_option	tools/fiograph/fiograph.py	/^def get_section_option(section_name, option_name, default=None):$/;"	f
get_shape	tools/fiograph/fiograph.py	/^def get_shape(keyword='fio_jobs'):$/;"	f
get_shape_color	tools/fiograph/fiograph.py	/^def get_shape_color(keyword='fio_jobs', default_color='black'):$/;"	f
get_size	t/dedupe.c	/^static uint64_t get_size(struct fio_file *f, struct stat *sb)$/;"	f	typeref:typename:uint64_t	file:
get_specific_options	tools/fiograph/fiograph.py	/^def get_specific_options(engine):$/;"	f
get_start_offset	file.h	/^extern uint64_t get_start_offset(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:uint64_t
get_start_offset	filesetup.c	/^uint64_t get_start_offset(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:uint64_t
get_style	tools/fiograph/fiograph.py	/^def get_style(keyword='fio_jobs'):$/;"	f
get_submit_worker	workqueue.c	/^static struct submit_worker *get_submit_worker(struct workqueue *wq)$/;"	f	typeref:struct:submit_worker *	file:
get_submitter	t/io_uring.c	/^static struct submitter *get_submitter(int offset)$/;"	f	typeref:struct:submitter *	file:
get_sys_block_dir	t/one-core-peak.sh	/^get_sys_block_dir() {$/;"	f
get_terse	t/latency_percentiles.py	/^    def get_terse(self):$/;"	m	class:FioLatTest
get_test_mask	crc/test.c	/^static unsigned int get_test_mask(const char *type)$/;"	f	typeref:typename:unsigned int	file:
get_test_mask	lib/memcpy.c	/^static unsigned int get_test_mask(const char *type)$/;"	f	typeref:typename:unsigned int	file:
get_text_color	tools/fiograph/fiograph.py	/^def get_text_color(keyword='fio_jobs', default_color='black'):$/;"	f
get_time_intervals	tools/hist/fio-histo-log-pctiles.py	/^def get_time_intervals(time_quantum, min_timestamp_ms, max_timestamp_ms):$/;"	f
get_value	tools/fiologparser.py	/^    def get_value(self, start, end):$/;"	m	class:TimeSeries
get_work	t/dedupe.c	/^static int get_work(uint64_t *offset, uint64_t *size)$/;"	f	typeref:typename:int	file:
get_zoned_model	ioengines.h	/^	int (*get_zoned_model)(struct thread_data *td,$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data * td,struct fio_file * f,enum zbd_zoned_model *)
geterrno_from_win_error	engines/windowsaio.c	/^int geterrno_from_win_error (DWORD code, int deferrno);$/;"	p	typeref:typename:int	file:
geteuid	os/os-windows.h	/^uid_t geteuid(void);$/;"	p	typeref:typename:uid_t
geteuid	os/windows/posix.c	/^uid_t geteuid(void)$/;"	f	typeref:typename:uid_t
getevents	ioengines.h	/^	int (*getevents)(struct thread_data *, unsigned int, unsigned int, const struct timespec *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,unsigned int,unsigned int,const struct timespec *)
getopt_long_only	oslib/getopt.h	/^int getopt_long_only(int, char *const *, const char *, const struct option *, int *);$/;"	p	typeref:typename:int
getopt_long_only	oslib/getopt_long.c	/^int getopt_long_only(int argc, char *const *argv, const char *optstring,$/;"	f	typeref:typename:int
getopt_private_state	oslib/getopt_long.c	/^static struct getopt_private_state {$/;"	s	file:
getrusage	os/windows/posix.c	/^int getrusage(int who, struct rusage *r_usage)$/;"	f	typeref:typename:int
getrusage	os/windows/posix/include/sys/resource.h	/^int getrusage(int who, struct rusage *r_usage);$/;"	p	typeref:typename:int
gettext	doc/Makefile	/^gettext:$/;"	t
gettid	os/os-dragonfly.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-freebsd.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-linux.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-mac.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-netbsd.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-openbsd.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-solaris.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os-windows.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	os/os.h	/^static inline int gettid(void)$/;"	f	typeref:typename:int
gettid	t/io_uring.c	/^static int gettid(void)$/;"	f	typeref:typename:int	file:
gettimeofday	os/windows/posix.c	/^int gettimeofday(struct timeval *restrict tp, void *restrict tzp)$/;"	f	typeref:typename:int
getvalue	graph.c	/^static double find_xy_value(struct graph *g, xy_value_extractor getvalue, double_comparator cmp)$/;"	z	function:find_xy_value	typeref:typename:xy_value_extractor	file:
getx	graph.c	/^static double getx(struct graph_value *v)$/;"	f	typeref:typename:double	file:
gety	graph.c	/^static double gety(struct graph_value *v)$/;"	f	typeref:typename:double	file:
gf_async_cb	engines/glusterfs_async.c	/^static void gf_async_cb(glfs_fd_t * fd, ssize_t ret, struct glfs_stat *prestat,$/;"	f	typeref:typename:void	file:
gf_brick	engines/gfapi.h	/^	char *gf_brick;$/;"	m	struct:gf_options	typeref:typename:char *
gf_data	engines/gfapi.h	/^struct gf_data {$/;"	s
gf_options	engines/gfapi.h	/^struct gf_options {$/;"	s
gf_single_instance	engines/gfapi.h	/^	int gf_single_instance;$/;"	m	struct:gf_options	typeref:typename:int
gf_vol	engines/gfapi.h	/^	char *gf_vol;$/;"	m	struct:gf_options	typeref:typename:char *
gfapi_options	engines/glusterfs.c	/^struct fio_option gfapi_options[] = {$/;"	v	typeref:struct:fio_option[]
gfio	Makefile	/^gfio: $(GFIO_OBJS)$/;"	t
gfio.o	Makefile	/^gfio.o: gfio.c ghelpers.c$/;"	t
gfio_add_end_results	gclient.c	/^static void gfio_add_end_results(struct gfio_client *gc, struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
gfio_add_job_op	gclient.c	/^static void gfio_add_job_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_add_sc_depths_tree	gclient.c	/^static void gfio_add_sc_depths_tree(GtkListStore *model,$/;"	f	typeref:typename:void	file:
gfio_add_total_depths_tree	gclient.c	/^static void gfio_add_total_depths_tree(GtkListStore *model,$/;"	f	typeref:typename:void	file:
gfio_clear_graph_data	gfio.c	/^static void gfio_clear_graph_data(struct gfio_graphs *g)$/;"	f	typeref:typename:void	file:
gfio_client	gfio.h	/^struct gfio_client {$/;"	s
gfio_client_add_job	gclient.c	/^static struct thread_options *gfio_client_add_job(struct gfio_client *gc,$/;"	f	typeref:struct:thread_options *	file:
gfio_client_added	gfio.c	/^static void gfio_client_added(struct gui_entry *ge, struct fio_client *client)$/;"	f	typeref:typename:void	file:
gfio_client_job_start	gclient.c	/^static void gfio_client_job_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_client_ops	gclient.c	/^struct client_ops gfio_client_ops = {$/;"	v	typeref:struct:client_ops
gfio_client_options	gfio.h	/^struct gfio_client_options {$/;"	s
gfio_client_removed	gclient.c	/^static void gfio_client_removed(struct fio_client *client)$/;"	f	typeref:typename:void	file:
gfio_client_start	gclient.c	/^static void gfio_client_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_client_stop	gclient.c	/^static void gfio_client_stop(struct fio_client *client)$/;"	f	typeref:typename:void	file:
gfio_client_timed_out	gclient.c	/^static void gfio_client_timed_out(struct fio_client *client)$/;"	f	typeref:typename:void	file:
gfio_color_lightyellow	gfio.c	/^GdkColor gfio_color_lightyellow;$/;"	v	typeref:typename:GdkColor
gfio_color_white	gfio.c	/^GdkColor gfio_color_white;$/;"	v	typeref:typename:GdkColor
gfio_disk_util_get_vbox	gclient.c	/^static GtkWidget *gfio_disk_util_get_vbox(struct gui_entry *ge)$/;"	f	typeref:typename:GtkWidget *	file:
gfio_disk_util_op	gclient.c	/^static void gfio_disk_util_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_disk_util_show	gclient.c	/^static int gfio_disk_util_show(struct gfio_client *gc)$/;"	f	typeref:typename:int	file:
gfio_display_end_results	gclient.c	/^void gfio_display_end_results(struct gfio_client *gc)$/;"	f	typeref:typename:void
gfio_display_end_results	gclient.h	/^extern void gfio_display_end_results(struct gfio_client *);$/;"	p	typeref:typename:void
gfio_display_ts	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
gfio_display_ts	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	p	typeref:typename:void	file:
gfio_graph_font	gfio.c	/^const char *gfio_graph_font = GRAPH_DEFAULT_FONT;$/;"	v	typeref:typename:const char *
gfio_graph_limit	gfio.c	/^static unsigned int gfio_graph_limit = 100;$/;"	v	typeref:typename:unsigned int	file:
gfio_graphs	gfio.h	/^struct gfio_graphs {$/;"	s
gfio_group_stats_op	gclient.c	/^static void gfio_group_stats_op(struct fio_client *client,$/;"	f	typeref:typename:void	file:
gfio_output_clat_percentiles	gclient.c	/^static GtkWidget *gfio_output_clat_percentiles(unsigned long long *ovals,$/;"	f	typeref:typename:GtkWidget *	file:
gfio_output_lat_buckets	gclient.c	/^static GtkWidget *gfio_output_lat_buckets(double *lat, const char **labels,$/;"	f	typeref:typename:GtkWidget *	file:
gfio_print_results	printing.c	/^void gfio_print_results(struct gui_entry *ge)$/;"	f	typeref:typename:void
gfio_print_results	printing.h	/^void gfio_print_results(struct gui_entry *ge);$/;"	p	typeref:typename:void
gfio_probe_op	gclient.c	/^static void gfio_probe_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_quit	gfio.c	/^static void gfio_quit(struct gui *ui)$/;"	f	typeref:typename:void	file:
gfio_quit_op	gclient.c	/^static void gfio_quit_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_report_error	gerror.c	/^void gfio_report_error(struct gui_entry *ge, const char *format, ...)$/;"	f	typeref:typename:void
gfio_report_error	gerror.h	/^extern void gfio_report_error(struct gui_entry *ge, const char *format, ...);$/;"	p	typeref:typename:void
gfio_report_info	gerror.c	/^void gfio_report_info(struct gui *ui, const char *title, const char *message)$/;"	f	typeref:typename:void
gfio_report_info	gerror.h	/^extern void gfio_report_info(struct gui *ui, const char *title, const char *message);$/;"	p	typeref:typename:void
gfio_server_running	gfio.c	/^static bool gfio_server_running;$/;"	v	typeref:typename:bool	file:
gfio_set_client	gfio.c	/^static void gfio_set_client(struct gfio_client *gc, struct fio_client *client)$/;"	f	typeref:typename:void	file:
gfio_set_state	gfio.c	/^void gfio_set_state(struct gui_entry *ge, unsigned int state)$/;"	f	typeref:typename:void
gfio_set_state	gfio.h	/^extern void gfio_set_state(struct gui_entry *ge, unsigned int state);$/;"	p	typeref:typename:void
gfio_show_clat_percentiles	gclient.c	/^static void gfio_show_clat_percentiles(struct gfio_client *gc,$/;"	f	typeref:typename:void	file:
gfio_show_cpu_usage	gclient.c	/^static void gfio_show_cpu_usage(GtkWidget *vbox, struct thread_stat *ts)$/;"	f	typeref:typename:void	file:
gfio_show_ddir_status	gclient.c	/^static void gfio_show_ddir_status(struct gfio_client *gc, GtkWidget *mbox,$/;"	f	typeref:typename:void	file:
gfio_show_io_depths	gclient.c	/^static void gfio_show_io_depths(GtkWidget *vbox, struct thread_stat *ts)$/;"	f	typeref:typename:void	file:
gfio_show_lat	gclient.c	/^static void gfio_show_lat(GtkWidget *vbox, const char *name, unsigned long long min,$/;"	f	typeref:typename:void	file:
gfio_show_latency_buckets	gclient.c	/^static void gfio_show_latency_buckets(struct gfio_client *gc, GtkWidget *vbox,$/;"	f	typeref:typename:void	file:
gfio_start_server	gfio.c	/^static void gfio_start_server(struct gui *ui)$/;"	f	typeref:typename:void	file:
gfio_text_op	gclient.c	/^static void gfio_text_op(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
gfio_thread_status_op	gclient.c	/^static void gfio_thread_status_op(struct fio_client *client,$/;"	f	typeref:typename:void	file:
gfio_ui_setup	gfio.c	/^void gfio_ui_setup(GtkSettings *settings, GtkWidget *menubar,$/;"	f	typeref:typename:void
gfio_ui_setup_log	gfio.c	/^static void gfio_ui_setup_log(struct gui *ui)$/;"	f	typeref:typename:void	file:
gfio_update_all_eta	gclient.c	/^static void gfio_update_all_eta(struct jobs_eta *je)$/;"	f	typeref:typename:void	file:
gfio_update_client_eta	gclient.c	/^static void gfio_update_client_eta(struct fio_client *client, struct jobs_eta *je)$/;"	f	typeref:typename:void	file:
gfio_update_job_op	gclient.c	/^static void gfio_update_job_op(struct fio_client *client,$/;"	f	typeref:typename:void	file:
gfio_update_thread_status	gclient.c	/^static void gfio_update_thread_status(struct gui_entry *ge,$/;"	f	typeref:typename:void	file:
gfio_update_thread_status_all	gclient.c	/^static void gfio_update_thread_status_all(struct gui *ui, char *status_message,$/;"	f	typeref:typename:void	file:
gfio_view_log	gfio.c	/^void gfio_view_log(struct gui *ui)$/;"	f	typeref:typename:void
gfio_view_log	gfio.h	/^extern void gfio_view_log(struct gui *ui);$/;"	p	typeref:typename:void
gg	gfio.c	/^static void setup_bandwidth_graph(struct gfio_graphs *gg)$/;"	z	function:setup_bandwidth_graph	typeref:struct:gfio_graphs *	file:
gg	gfio.c	/^static void setup_iops_graph(struct gfio_graphs *gg)$/;"	z	function:setup_iops_graph	typeref:struct:gfio_graphs *	file:
ghelpers.o	Makefile	/^ghelpers.o: ghelpers.c ghelpers.h$/;"	t
gib_size	t/genzipf.c	/^static unsigned long gib_size = 500;$/;"	v	typeref:typename:unsigned long	file:
gid	os/os-windows.h	/^int setgid(gid_t gid);$/;"	z	prototype:setgid	typeref:typename:gid_t	file:
gid	os/windows/posix.c	/^int setgid(gid_t gid)$/;"	z	function:setgid	typeref:typename:gid_t	file:
gid	os/windows/posix/include/sys/shm.h	/^	gid_t    gid;    \/* owner's group ID *\/$/;"	m	struct:ipc_perm	typeref:typename:gid_t
gid	server.c	/^				 unsigned int gid)$/;"	z	function:fio_server_send_job_options	typeref:typename:unsigned int	file:
gid	thread_options.h	/^	uint32_t gid;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
gid	thread_options.h	/^	unsigned int gid;$/;"	m	struct:thread_options	typeref:typename:unsigned int
gid_t	os/windows/posix/include/sys/shm.h	/^typedef int gid_t;$/;"	t	typeref:typename:int
gjv	goptions.c	/^	struct gopt_job_view *gjv;$/;"	m	struct:gopt	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static GtkWidget *gopt_get_group_frame(struct gopt_job_view *gjv,$/;"	z	function:gopt_get_group_frame	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static int gopt_handle_changed_options(struct gopt_job_view *gjv)$/;"	z	function:gopt_handle_changed_options	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_bool(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_bool	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_combo_int(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_combo_int	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_combo_str(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_combo_str	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_int(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_int	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_int_range(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_int_range	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_str_multi(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_str_multi	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_str_store(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_str_store	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_str_val(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_str_val	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt *gopt_new_ullong(struct gopt_job_view *gjv,$/;"	z	function:gopt_new_ullong	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt_combo *__gopt_new_combo(struct gopt_job_view *gjv,$/;"	z	function:__gopt_new_combo	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static struct gopt_int *__gopt_new_int(struct gopt_job_view *gjv,$/;"	z	function:__gopt_new_int	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_add_group_tabs(GtkWidget *notebook, struct gopt_job_view *gjv)$/;"	z	function:gopt_add_group_tabs	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_add_option(struct gopt_job_view *gjv, GtkWidget *hbox,$/;"	z	function:gopt_add_option	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_add_options(struct gopt_job_view *gjv,$/;"	z	function:gopt_add_options	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_dialog_update_apply_button(struct gopt_job_view *gjv)$/;"	z	function:gopt_dialog_update_apply_button	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_bool_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_bool_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_combo_int_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_combo_int_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_combo_str_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_combo_str_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_int_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_int_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_option_dialog(struct gopt_job_view *gjv)$/;"	z	function:gopt_handle_option_dialog	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_range_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_range_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_str_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_str_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_str_multi_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_str_multi_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_handle_str_val_changed(struct gopt_job_view *gjv,$/;"	z	function:gopt_handle_str_val_changed	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_mark_index(struct gopt_job_view *gjv, struct gopt *gopt,$/;"	z	function:gopt_mark_index	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_report_update_status(struct gopt_job_view *gjv)$/;"	z	function:gopt_report_update_status	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_set_children_visible(struct gopt_job_view *gjv,$/;"	z	function:gopt_set_children_visible	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_set_option(struct gopt_job_view *gjv, struct fio_option *o,$/;"	z	function:gopt_set_option	typeref:struct:gopt_job_view *	file:
gjv	goptions.c	/^static void gopt_set_options(struct gopt_job_view *gjv,$/;"	z	function:gopt_set_options	typeref:struct:gopt_job_view *	file:
glfs_info	engines/glusterfs.c	/^struct glfs_info {$/;"	s	file:
glfs_lock	engines/glusterfs.c	/^static pthread_mutex_t glfs_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
global	init.c	/^static struct thread_data *get_new_job(bool global, struct thread_data *parent,$/;"	z	function:get_new_job	typeref:typename:bool	file:
global	server.h	/^	uint16_t global;$/;"	m	struct:cmd_job_option	typeref:typename:uint16_t
global_dedup	dedupe.c	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedup)$/;"	z	function:init_dedupe_working_set_seeds	typeref:typename:bool	file:
global_dedupe	dedupe.h	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedupe);$/;"	z	prototype:init_dedupe_working_set_seeds	typeref:typename:bool	file:
good_crc	verify.c	/^	void *good_crc;$/;"	m	struct:vcont	typeref:typename:void *	file:
goodf	io_u.c	/^					   enum fio_file_flags goodf,$/;"	z	function:get_next_file_rand	typeref:enum:fio_file_flags	file:
goodf	io_u.c	/^static struct fio_file *get_next_file_rr(struct thread_data *td, int goodf,$/;"	z	function:get_next_file_rr	typeref:typename:int	file:
gopt	goptions.c	/^			    struct gopt *gopt, struct thread_options *to)$/;"	z	function:gopt_set_option	typeref:struct:gopt *	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_bool	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_combo	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_int	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_range	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_str	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_str_multi	typeref:struct:gopt	file:
gopt	goptions.c	/^	struct gopt gopt;$/;"	m	struct:gopt_str_val	typeref:struct:gopt	file:
gopt	goptions.c	/^static void gopt_changed(struct gopt *gopt)$/;"	z	function:gopt_changed	typeref:struct:gopt *	file:
gopt	goptions.c	/^static void gopt_handle_changed(struct gopt *gopt)$/;"	z	function:gopt_handle_changed	typeref:struct:gopt *	file:
gopt	goptions.c	/^static void gopt_mark_index(struct gopt_job_view *gjv, struct gopt *gopt,$/;"	z	function:gopt_mark_index	typeref:struct:gopt *	file:
gopt	goptions.c	/^struct gopt {$/;"	s	file:
gopt_add_group_tab	goptions.c	/^static GtkWidget *gopt_add_group_tab(GtkWidget *notebook,$/;"	f	typeref:typename:GtkWidget *	file:
gopt_add_group_tabs	goptions.c	/^static void gopt_add_group_tabs(GtkWidget *notebook, struct gopt_job_view *gjv)$/;"	f	typeref:typename:void	file:
gopt_add_option	goptions.c	/^static void gopt_add_option(struct gopt_job_view *gjv, GtkWidget *hbox,$/;"	f	typeref:typename:void	file:
gopt_add_options	goptions.c	/^static void gopt_add_options(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_add_tab	goptions.c	/^static GtkWidget *gopt_add_tab(GtkWidget *notebook, const char *name)$/;"	f	typeref:typename:GtkWidget *	file:
gopt_bool	goptions.c	/^struct gopt_bool {$/;"	s	file:
gopt_bool_destroy	goptions.c	/^static void gopt_bool_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_bool_set_val	goptions.c	/^static void gopt_bool_set_val(struct gopt_bool *b, unsigned int val)$/;"	f	typeref:typename:void	file:
gopt_bool_toggled	goptions.c	/^static void gopt_bool_toggled(GtkToggleButton *button, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_changed	goptions.c	/^static void gopt_changed(struct gopt *gopt)$/;"	f	typeref:typename:void	file:
gopt_combo	goptions.c	/^struct gopt_combo {$/;"	s	file:
gopt_combo_changed	goptions.c	/^static void gopt_combo_changed(GtkComboBox *box, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_combo_destroy	goptions.c	/^static void gopt_combo_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_combo_int_set_val	goptions.c	/^static void gopt_combo_int_set_val(struct gopt_combo *c, unsigned int ip)$/;"	f	typeref:typename:void	file:
gopt_combo_str_set_val	goptions.c	/^static void gopt_combo_str_set_val(struct gopt_combo *c, const char *text)$/;"	f	typeref:typename:void	file:
gopt_dep_tree	goptions.c	/^static GNode *gopt_dep_tree;$/;"	v	typeref:typename:GNode *	file:
gopt_dialog_cancel	goptions.c	/^static gint gopt_dialog_cancel(gint response)$/;"	f	typeref:typename:gint	file:
gopt_dialog_done	goptions.c	/^static gint gopt_dialog_done(gint response)$/;"	f	typeref:typename:gint	file:
gopt_dialog_update_apply_button	goptions.c	/^static void gopt_dialog_update_apply_button(struct gopt_job_view *gjv)$/;"	f	typeref:typename:void	file:
gopt_exit	goptions.c	/^void gopt_exit(void)$/;"	f	typeref:typename:void
gopt_exit	goptions.h	/^void gopt_exit(void);$/;"	p	typeref:typename:void
gopt_frame_widget	goptions.c	/^struct gopt_frame_widget {$/;"	s	file:
gopt_get_group_frame	goptions.c	/^static GtkWidget *gopt_get_group_frame(struct gopt_job_view *gjv,$/;"	f	typeref:typename:GtkWidget *	file:
gopt_get_options_window	goptions.c	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc)$/;"	f	typeref:typename:void
gopt_get_options_window	goptions.h	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc);$/;"	p	typeref:typename:void
gopt_handle_bool_changed	goptions.c	/^static void gopt_handle_bool_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_changed	goptions.c	/^static void gopt_handle_changed(struct gopt *gopt)$/;"	f	typeref:typename:void	file:
gopt_handle_changed_options	goptions.c	/^static int gopt_handle_changed_options(struct gopt_job_view *gjv)$/;"	f	typeref:typename:int	file:
gopt_handle_combo_int_changed	goptions.c	/^static void gopt_handle_combo_int_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_combo_str_changed	goptions.c	/^static void gopt_handle_combo_str_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_int_changed	goptions.c	/^static void gopt_handle_int_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_option_dialog	goptions.c	/^static void gopt_handle_option_dialog(struct gopt_job_view *gjv)$/;"	f	typeref:typename:void	file:
gopt_handle_range_changed	goptions.c	/^static void gopt_handle_range_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_str_changed	goptions.c	/^static void gopt_handle_str_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_str_multi_changed	goptions.c	/^static void gopt_handle_str_multi_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_handle_str_val_changed	goptions.c	/^static void gopt_handle_str_val_changed(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_init	goptions.c	/^void gopt_init(void)$/;"	f	typeref:typename:void
gopt_init	goptions.h	/^void gopt_init(void);$/;"	p	typeref:typename:void
gopt_int	goptions.c	/^struct gopt_int {$/;"	s	file:
gopt_int_changed	goptions.c	/^static void gopt_int_changed(GtkSpinButton *spin, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_int_destroy	goptions.c	/^static void gopt_int_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_int_range_set_val	goptions.c	/^static void gopt_int_range_set_val(struct gopt_range *r, unsigned int *vals)$/;"	f	typeref:typename:void	file:
gopt_int_set_val	goptions.c	/^static void gopt_int_set_val(struct gopt_int *i, unsigned long long p)$/;"	f	typeref:typename:void	file:
gopt_job_changed	goptions.c	/^static void gopt_job_changed(GtkComboBox *box, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_job_view	goptions.c	/^struct gopt_job_view {$/;"	s	file:
gopt_mark_index	goptions.c	/^static void gopt_mark_index(struct gopt_job_view *gjv, struct gopt *gopt,$/;"	f	typeref:typename:void	file:
gopt_new_bool	goptions.c	/^static struct gopt *gopt_new_bool(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_combo_int	goptions.c	/^static struct gopt *gopt_new_combo_int(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_combo_str	goptions.c	/^static struct gopt *gopt_new_combo_str(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_int	goptions.c	/^static struct gopt *gopt_new_int(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_int_range	goptions.c	/^static struct gopt *gopt_new_int_range(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_str_multi	goptions.c	/^static struct gopt *gopt_new_str_multi(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_str_store	goptions.c	/^static struct gopt *gopt_new_str_store(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_str_val	goptions.c	/^static struct gopt *gopt_new_str_val(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_new_ullong	goptions.c	/^static struct gopt *gopt_new_ullong(struct gopt_job_view *gjv,$/;"	f	typeref:struct:gopt *	file:
gopt_range	goptions.c	/^struct gopt_range {$/;"	s	file:
gopt_range_destroy	goptions.c	/^static void gopt_range_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_report_update_status	goptions.c	/^static void gopt_report_update_status(struct gopt_job_view *gjv)$/;"	f	typeref:typename:void	file:
gopt_set_children_visible	goptions.c	/^static void gopt_set_children_visible(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_set_option	goptions.c	/^static void gopt_set_option(struct gopt_job_view *gjv, struct fio_option *o,$/;"	f	typeref:typename:void	file:
gopt_set_options	goptions.c	/^static void gopt_set_options(struct gopt_job_view *gjv,$/;"	f	typeref:typename:void	file:
gopt_str	goptions.c	/^struct gopt_str {$/;"	s	file:
gopt_str_changed	goptions.c	/^static void gopt_str_changed(GtkEntry *entry, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_destroy	goptions.c	/^static void gopt_str_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_multi	goptions.c	/^struct gopt_str_multi {$/;"	s	file:
gopt_str_multi_destroy	goptions.c	/^static void gopt_str_multi_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_multi_set_val	goptions.c	/^static void gopt_str_multi_set_val(struct gopt_str_multi *m, int val)$/;"	f	typeref:typename:void	file:
gopt_str_multi_toggled	goptions.c	/^static void gopt_str_multi_toggled(GtkToggleButton *button, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_store_set_val	goptions.c	/^static void gopt_str_store_set_val(struct gopt_str *s, const char *text)$/;"	f	typeref:typename:void	file:
gopt_str_val	goptions.c	/^struct gopt_str_val {$/;"	s	file:
gopt_str_val_changed	goptions.c	/^static void gopt_str_val_changed(GtkSpinButton *spin, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_val_destroy	goptions.c	/^static void gopt_str_val_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
gopt_str_val_set_val	goptions.c	/^static void gopt_str_val_set_val(struct gopt_str_val *g, unsigned long long val)$/;"	f	typeref:typename:void	file:
gopt_str_val_spin_wrapped	goptions.c	/^static void gopt_str_val_spin_wrapped(GtkSpinButton *spin, gpointer data)$/;"	f	typeref:typename:void	file:
goptions.o	Makefile	/^goptions.o: goptions.c goptions.h$/;"	t
gopts	goptions.c	/^	struct gopt *gopts[FIO_MAX_OPTS];$/;"	m	struct:gopt_job_view	typeref:struct:gopt * []	file:
gpspm_flush_request__descriptor	engines/librpma_gpspm_flush.pb-c.c	/^const ProtobufCMessageDescriptor gpspm_flush_request__descriptor =$/;"	v	typeref:typename:const ProtobufCMessageDescriptor
gpspm_flush_request__field_descriptors	engines/librpma_gpspm_flush.pb-c.c	/^static const ProtobufCFieldDescriptor gpspm_flush_request__field_descriptors[3] =$/;"	v	typeref:typename:const ProtobufCFieldDescriptor[3]	file:
gpspm_flush_request__field_indices_by_name	engines/librpma_gpspm_flush.pb-c.c	/^static const unsigned gpspm_flush_request__field_indices_by_name[] = {$/;"	v	typeref:typename:const unsigned[]	file:
gpspm_flush_request__free_unpacked	engines/librpma_gpspm_flush.pb-c.c	/^void   gpspm_flush_request__free_unpacked$/;"	f	typeref:typename:void
gpspm_flush_request__free_unpacked	engines/librpma_gpspm_flush.pb-c.h	/^void   gpspm_flush_request__free_unpacked$/;"	p	typeref:typename:void
gpspm_flush_request__get_packed_size	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_request__get_packed_size$/;"	f	typeref:typename:size_t
gpspm_flush_request__get_packed_size	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_request__get_packed_size$/;"	p	typeref:typename:size_t
gpspm_flush_request__init	engines/librpma_gpspm_flush.pb-c.c	/^void   gpspm_flush_request__init$/;"	f	typeref:typename:void
gpspm_flush_request__init	engines/librpma_gpspm_flush.pb-c.h	/^void   gpspm_flush_request__init$/;"	p	typeref:typename:void
gpspm_flush_request__number_ranges	engines/librpma_gpspm_flush.pb-c.c	/^static const ProtobufCIntRange gpspm_flush_request__number_ranges[1 + 1] =$/;"	v	typeref:typename:const ProtobufCIntRange[]	file:
gpspm_flush_request__pack	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_request__pack$/;"	f	typeref:typename:size_t
gpspm_flush_request__pack	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_request__pack$/;"	p	typeref:typename:size_t
gpspm_flush_request__pack_to_buffer	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_request__pack_to_buffer$/;"	f	typeref:typename:size_t
gpspm_flush_request__pack_to_buffer	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_request__pack_to_buffer$/;"	p	typeref:typename:size_t
gpspm_flush_request__unpack	engines/librpma_gpspm_flush.pb-c.c	/^       gpspm_flush_request__unpack$/;"	f	typeref:typename:GPSPMFlushRequest *
gpspm_flush_request__unpack	engines/librpma_gpspm_flush.pb-c.h	/^       gpspm_flush_request__unpack$/;"	p	typeref:typename:GPSPMFlushRequest *
gpspm_flush_response__descriptor	engines/librpma_gpspm_flush.pb-c.c	/^const ProtobufCMessageDescriptor gpspm_flush_response__descriptor =$/;"	v	typeref:typename:const ProtobufCMessageDescriptor
gpspm_flush_response__field_descriptors	engines/librpma_gpspm_flush.pb-c.c	/^static const ProtobufCFieldDescriptor gpspm_flush_response__field_descriptors[1] =$/;"	v	typeref:typename:const ProtobufCFieldDescriptor[1]	file:
gpspm_flush_response__field_indices_by_name	engines/librpma_gpspm_flush.pb-c.c	/^static const unsigned gpspm_flush_response__field_indices_by_name[] = {$/;"	v	typeref:typename:const unsigned[]	file:
gpspm_flush_response__free_unpacked	engines/librpma_gpspm_flush.pb-c.c	/^void   gpspm_flush_response__free_unpacked$/;"	f	typeref:typename:void
gpspm_flush_response__free_unpacked	engines/librpma_gpspm_flush.pb-c.h	/^void   gpspm_flush_response__free_unpacked$/;"	p	typeref:typename:void
gpspm_flush_response__get_packed_size	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_response__get_packed_size$/;"	f	typeref:typename:size_t
gpspm_flush_response__get_packed_size	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_response__get_packed_size$/;"	p	typeref:typename:size_t
gpspm_flush_response__init	engines/librpma_gpspm_flush.pb-c.c	/^void   gpspm_flush_response__init$/;"	f	typeref:typename:void
gpspm_flush_response__init	engines/librpma_gpspm_flush.pb-c.h	/^void   gpspm_flush_response__init$/;"	p	typeref:typename:void
gpspm_flush_response__number_ranges	engines/librpma_gpspm_flush.pb-c.c	/^static const ProtobufCIntRange gpspm_flush_response__number_ranges[1 + 1] =$/;"	v	typeref:typename:const ProtobufCIntRange[]	file:
gpspm_flush_response__pack	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_response__pack$/;"	f	typeref:typename:size_t
gpspm_flush_response__pack	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_response__pack$/;"	p	typeref:typename:size_t
gpspm_flush_response__pack_to_buffer	engines/librpma_gpspm_flush.pb-c.c	/^size_t gpspm_flush_response__pack_to_buffer$/;"	f	typeref:typename:size_t
gpspm_flush_response__pack_to_buffer	engines/librpma_gpspm_flush.pb-c.h	/^size_t gpspm_flush_response__pack_to_buffer$/;"	p	typeref:typename:size_t
gpspm_flush_response__unpack	engines/librpma_gpspm_flush.pb-c.c	/^       gpspm_flush_response__unpack$/;"	f	typeref:typename:GPSPMFlushResponse *
gpspm_flush_response__unpack	engines/librpma_gpspm_flush.pb-c.h	/^       gpspm_flush_response__unpack$/;"	p	typeref:typename:GPSPMFlushResponse *
gpu_dev_cnt	fio.h	/^	int gpu_dev_cnt;$/;"	m	struct:thread_data	typeref:typename:int
gpu_dev_id	fio.h	/^	int gpu_dev_id;$/;"	m	struct:thread_data	typeref:typename:int
gpu_dev_id	thread_options.h	/^	uint32_t gpu_dev_id;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
gpu_dev_id	thread_options.h	/^	unsigned int gpu_dev_id;$/;"	m	struct:thread_options	typeref:typename:unsigned int
gpu_ids	engines/libcufile.c	/^	char               *gpu_ids;       \/* colon-separated list of GPU ids,$/;"	m	struct:libcufile_options	typeref:typename:char *	file:
gpu_offset	engines/libcufile.c	/^					  size_t gpu_offset)$/;"	z	function:fio_libcufile_post_read	typeref:typename:size_t	file:
gpu_offset	engines/libcufile.c	/^					  size_t gpu_offset)$/;"	z	function:fio_libcufile_pre_write	typeref:typename:size_t	file:
gr	graph.c	/^void graph_set_color(struct graph *gr, graph_label_t label, double red,$/;"	z	function:graph_set_color	typeref:struct:graph *	file:
grace_time	engines/exec.c	/^	int grace_time;$/;"	m	struct:exec_options	typeref:typename:int	file:
graph	graph.c	/^struct graph {$/;"	s	file:
graph.o	Makefile	/^graph.o: graph.c graph.h$/;"	t
graph_add_data	graph.c	/^int graph_add_data(struct graph *bg, graph_label_t label, const double value)$/;"	f	typeref:typename:int
graph_add_data	graph.h	/^int graph_add_data(struct graph *g, graph_label_t label, const double value);$/;"	p	typeref:typename:int
graph_add_extra_space	graph.c	/^void graph_add_extra_space(struct graph *g, double left_percent,$/;"	f	typeref:typename:void
graph_add_extra_space	graph.h	/^void graph_add_extra_space(struct graph *g, double left_percent, double right_percent,$/;"	p	typeref:typename:void
graph_add_label	graph.c	/^graph_label_t graph_add_label(struct graph *bg, const char *label)$/;"	f	typeref:typename:graph_label_t
graph_add_label	graph.h	/^graph_label_t graph_add_label(struct graph *g, const char *label);$/;"	p	typeref:typename:graph_label_t
graph_add_xy_data	graph.c	/^int graph_add_xy_data(struct graph *bg, graph_label_t label,$/;"	f	typeref:typename:int
graph_add_xy_data	graph.h	/^int graph_add_xy_data(struct graph *g, graph_label_t label,$/;"	p	typeref:typename:int
graph_axis_unit_change_callback	graph.h	/^typedef void (*graph_axis_unit_change_callback)(struct graph *g, int power_of_ten);$/;"	t	typeref:typename:void (*)(struct graph * g,int power_of_ten)
graph_clear_values	graph.c	/^void graph_clear_values(struct graph *g)$/;"	f	typeref:typename:void
graph_clear_values	graph.h	/^extern void graph_clear_values(struct graph *g);$/;"	p	typeref:typename:void
graph_contains_xy	graph.c	/^int graph_contains_xy(struct graph *g, int x, int y)$/;"	f	typeref:typename:int
graph_contains_xy	graph.h	/^extern int graph_contains_xy(struct graph *p, int x, int y);$/;"	p	typeref:typename:int
graph_draw_common	graph.c	/^static void graph_draw_common(struct graph *g, cairo_t *cr, double *x1,$/;"	f	typeref:typename:void	file:
graph_draw_x_ticks	graph.c	/^static void graph_draw_x_ticks(struct graph *g, cairo_t *cr,$/;"	f	typeref:typename:void	file:
graph_draw_y_ticks	graph.c	/^static double graph_draw_y_ticks(struct graph *g, cairo_t *cr,$/;"	f	typeref:typename:double	file:
graph_find_label	graph.c	/^static struct graph_label *graph_find_label(struct graph *bg,$/;"	f	typeref:struct:graph_label *	file:
graph_find_tooltip	graph.c	/^const char *graph_find_tooltip(struct graph *g, int ix, int iy)$/;"	f	typeref:typename:const char *
graph_find_tooltip	graph.h	/^extern const char *graph_find_tooltip(struct graph *g, int x, int y);$/;"	p	typeref:typename:const char *
graph_free	graph.c	/^void graph_free(struct graph *bg)$/;"	f	typeref:typename:void
graph_free	graph.h	/^void graph_free(struct graph *bg);$/;"	p	typeref:typename:void
graph_free_labels	graph.c	/^static void graph_free_labels(struct graph *g)$/;"	f	typeref:typename:void	file:
graph_free_values	graph.c	/^static void graph_free_values(struct graph_label *l)$/;"	f	typeref:typename:void	file:
graph_has_tooltips	graph.c	/^int graph_has_tooltips(struct graph *g)$/;"	f	typeref:typename:int
graph_has_tooltips	graph.h	/^extern int graph_has_tooltips(struct graph *g);$/;"	p	typeref:typename:int
graph_label	graph.c	/^struct graph_label {$/;"	s	file:
graph_label_add_value	graph.c	/^static void graph_label_add_value(struct graph_label *i, void *value,$/;"	f	typeref:typename:void	file:
graph_label_t	graph.h	/^typedef struct graph_label * graph_label_t;$/;"	t	typeref:struct:graph_label *
graph_new	graph.c	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font)$/;"	f	typeref:struct:graph *
graph_new	graph.h	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font);$/;"	p	typeref:struct:graph *
graph_nonzero_y	graph.c	/^static int graph_nonzero_y(struct graph_label *l)$/;"	f	typeref:typename:int	file:
graph_set_base_offset	graph.c	/^void graph_set_base_offset(struct graph *g, unsigned int base_offset)$/;"	f	typeref:typename:void
graph_set_base_offset	graph.h	/^extern void graph_set_base_offset(struct graph *g, unsigned int base_offset);$/;"	p	typeref:typename:void
graph_set_color	graph.c	/^void graph_set_color(struct graph *gr, graph_label_t label, double red,$/;"	f	typeref:typename:void
graph_set_color	graph.h	/^void graph_set_color(struct graph *g, graph_label_t label,$/;"	p	typeref:typename:void
graph_set_font	graph.c	/^void graph_set_font(struct graph *g, const char *font)$/;"	f	typeref:typename:void
graph_set_font	graph.h	/^void graph_set_font(struct graph *g, const char *font);$/;"	p	typeref:typename:void
graph_set_graph_all_zeroes	graph.c	/^void graph_set_graph_all_zeroes(struct graph *g, unsigned int set)$/;"	f	typeref:typename:void
graph_set_graph_all_zeroes	graph.h	/^extern void graph_set_graph_all_zeroes(struct graph *g, unsigned int set);$/;"	p	typeref:typename:void
graph_set_position	graph.c	/^void graph_set_position(struct graph *g, double xoffset, double yoffset)$/;"	f	typeref:typename:void
graph_set_position	graph.h	/^void graph_set_position(struct graph *g, double xoffset, double yoffset);$/;"	p	typeref:typename:void
graph_set_size	graph.c	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim)$/;"	f	typeref:typename:void
graph_set_size	graph.h	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim);$/;"	p	typeref:typename:void
graph_title	graph.c	/^void graph_title(struct graph *bg, const char *title)$/;"	f	typeref:typename:void
graph_title	graph.h	/^void graph_title(struct graph *g, const char *title);$/;"	p	typeref:typename:void
graph_tooltip	gfio.c	/^static gboolean graph_tooltip(GtkWidget *w, gint x, gint y,$/;"	f	typeref:typename:gboolean	file:
graph_value	graph.c	/^struct graph_value {$/;"	s	file:
graph_value_drop	graph.c	/^static void graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	f	typeref:typename:void	file:
graph_x_axis_unit_change_notify	graph.c	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	f	typeref:typename:void
graph_x_axis_unit_change_notify	graph.h	/^void graph_x_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	p	typeref:typename:void
graph_x_title	graph.c	/^void graph_x_title(struct graph *bg, const char *title)$/;"	f	typeref:typename:void
graph_x_title	graph.h	/^void graph_x_title(struct graph *g, const char *title);$/;"	p	typeref:typename:void
graph_y_axis_unit_change_notify	graph.c	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f)$/;"	f	typeref:typename:void
graph_y_axis_unit_change_notify	graph.h	/^void graph_y_axis_unit_change_notify(struct graph *g, graph_axis_unit_change_callback f);$/;"	p	typeref:typename:void
graph_y_title	graph.c	/^void graph_y_title(struct graph *bg, const char *title)$/;"	f	typeref:typename:void
graph_y_title	graph.h	/^void graph_y_title(struct graph *g, const char *title);$/;"	p	typeref:typename:void
graphs	gfio.h	/^	struct gfio_graphs graphs;$/;"	m	struct:gui	typeref:struct:gfio_graphs
graphs	gfio.h	/^	struct gfio_graphs graphs;$/;"	m	struct:gui_entry	typeref:struct:gfio_graphs
green	graph.c	/^		     double green, double blue)$/;"	z	function:graph_set_color	typeref:typename:double	file:
green	graph.h	/^		double red, double green, double blue);$/;"	z	prototype:graph_set_color	typeref:typename:double	file:
group	parse.h	/^	uint64_t group;			\/* who to group with *\/$/;"	m	struct:fio_option	typeref:typename:uint64_t
group_from_mask	optgroup.c	/^static const struct opt_group *group_from_mask(const struct opt_group *ogs,$/;"	f	typeref:typename:const struct opt_group *	file:
group_id	libfio.c	/^void fio_terminate_threads(unsigned int group_id, unsigned int terminate)$/;"	z	function:fio_terminate_threads	typeref:typename:unsigned int	file:
group_reporting	thread_options.h	/^	uint32_t group_reporting;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
group_reporting	thread_options.h	/^	unsigned int group_reporting;$/;"	m	struct:thread_options	typeref:typename:unsigned int
group_run_stats	stat.h	/^struct group_run_stats {$/;"	s
group_stats	client.h	/^	client_cmd_op		*group_stats;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
groupid	backend.c	/^int groupid = 0;$/;"	v	typeref:typename:int
groupid	client.h	/^	uint32_t groupid;$/;"	m	struct:fio_client	typeref:typename:uint32_t
groupid	fio.h	/^	unsigned int groupid;$/;"	m	struct:thread_data	typeref:typename:unsigned int
groupid	server.h	/^	uint32_t groupid;$/;"	m	struct:cmd_add_job_pdu	typeref:typename:uint32_t
groupid	server.h	/^	uint32_t groupid;$/;"	m	struct:cmd_job_option	typeref:typename:uint32_t
groupid	stat.h	/^	uint32_t groupid;$/;"	m	struct:group_run_stats	typeref:typename:uint32_t
groupid	stat.h	/^	uint32_t groupid;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
groupmask	goptions.c	/^				       GtkWidget *box, uint64_t groupmask)$/;"	z	function:gopt_get_group_frame	typeref:typename:uint64_t	file:
grow_clat_prio_stat	stat.c	/^static int grow_clat_prio_stat(struct thread_stat *dst, enum fio_ddir ddir)$/;"	f	typeref:typename:int	file:
gs	gfio.h	/^	struct group_run_stats gs;$/;"	m	struct:end_results	typeref:struct:group_run_stats
gs	lib/gauss.c	/^static int gauss_dev(struct gauss_state *gs)$/;"	z	function:gauss_dev	typeref:struct:gauss_state *	file:
gs	lib/gauss.c	/^unsigned long long gauss_next(struct gauss_state *gs)$/;"	z	function:gauss_next	typeref:struct:gauss_state *	file:
gs	lib/gauss.c	/^void gauss_disable_hash(struct gauss_state *gs)$/;"	z	function:gauss_disable_hash	typeref:struct:gauss_state *	file:
gs	lib/gauss.c	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	function:gauss_init	typeref:struct:gauss_state *	file:
gs	lib/gauss.h	/^unsigned long long gauss_next(struct gauss_state *gs);$/;"	z	prototype:gauss_next	typeref:struct:gauss_state *	file:
gs	lib/gauss.h	/^void gauss_disable_hash(struct gauss_state *gs);$/;"	z	prototype:gauss_disable_hash	typeref:struct:gauss_state *	file:
gs	lib/gauss.h	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	prototype:gauss_init	typeref:struct:gauss_state *	file:
gs	stat.c	/^void init_group_run_stat(struct group_run_stats *gs)$/;"	z	function:init_group_run_stat	typeref:struct:group_run_stats *	file:
gs	stat.h	/^extern void init_group_run_stat(struct group_run_stats *gs);$/;"	z	prototype:init_group_run_stat	typeref:struct:group_run_stats *	file:
gtk_combo_box_text_append_text	gcompat.c	/^void gtk_combo_box_text_append_text(GtkComboBoxText *combo_box,$/;"	f	typeref:typename:void
gtk_combo_box_text_append_text	gcompat.h	/^void gtk_combo_box_text_append_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	p	typeref:typename:void
gtk_combo_box_text_get_active_text	gcompat.c	/^gchar *gtk_combo_box_text_get_active_text(GtkComboBoxText *combo_box)$/;"	f	typeref:typename:gchar *
gtk_combo_box_text_get_active_text	gcompat.h	/^gchar *gtk_combo_box_text_get_active_text(GtkComboBoxText *combo_box);$/;"	p	typeref:typename:gchar *
gtk_combo_box_text_insert_text	gcompat.c	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position,$/;"	f	typeref:typename:void
gtk_combo_box_text_insert_text	gcompat.h	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position, const gchar *text/;"	p	typeref:typename:void
gtk_combo_box_text_new	gcompat.c	/^GtkWidget *gtk_combo_box_text_new(void)$/;"	f	typeref:typename:GtkWidget *
gtk_combo_box_text_new	gcompat.h	/^GtkWidget *gtk_combo_box_text_new(void);$/;"	p	typeref:typename:GtkWidget *
gtk_combo_box_text_new_with_entry	gcompat.h	/^GtkWidget *gtk_combo_box_text_new_with_entry(void);$/;"	p	typeref:typename:GtkWidget *
gtk_combo_box_text_prepend_text	gcompat.c	/^void gtk_combo_box_text_prepend_text(GtkComboBoxText *combo_box,$/;"	f	typeref:typename:void
gtk_combo_box_text_prepend_text	gcompat.h	/^void gtk_combo_box_text_prepend_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	p	typeref:typename:void
gtk_combo_box_text_remove	gcompat.h	/^void gtk_combo_box_text_remove(GtkComboBoxText *combo_box, gint position);$/;"	p	typeref:typename:void
gtk_dialog_get_content_area	gcompat.h	/^static inline GtkWidget *gtk_dialog_get_content_area(GtkDialog *dialog)$/;"	f	typeref:typename:GtkWidget *
gtk_widget_get_allocated_height	gcompat.c	/^guint gtk_widget_get_allocated_height(GtkWidget *w)$/;"	f	typeref:typename:guint
gtk_widget_get_allocated_height	gcompat.h	/^guint gtk_widget_get_allocated_height(GtkWidget *w);$/;"	p	typeref:typename:guint
gtk_widget_get_allocated_width	gcompat.c	/^guint gtk_widget_get_allocated_width(GtkWidget *w)$/;"	f	typeref:typename:guint
gtk_widget_get_allocated_width	gcompat.h	/^guint gtk_widget_get_allocated_width(GtkWidget *w);$/;"	p	typeref:typename:guint
gtk_widget_get_window	gcompat.h	/^static inline GdkWindow *gtk_widget_get_window(GtkWidget *w)$/;"	f	typeref:typename:GdkWindow *
gtk_widget_set_can_focus	gcompat.c	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus)$/;"	f	typeref:typename:void
gtk_widget_set_can_focus	gcompat.h	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus);$/;"	p	typeref:typename:void
gtod_cpu	thread_options.h	/^	uint32_t gtod_cpu;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
gtod_cpu	thread_options.h	/^	unsigned int gtod_cpu;$/;"	m	struct:thread_options	typeref:typename:unsigned int
gtod_cpu_data	gettime-thread.c	/^struct gtod_cpu_data {$/;"	s	file:
gtod_cpu_verify	options.c	/^static int gtod_cpu_verify(const struct fio_option *o, void *data)$/;"	f	typeref:typename:int	file:
gtod_init	gettime.c	/^static void fio_init gtod_init(void)$/;"	f	typeref:typename:void fio_init	file:
gtod_inited	gettime.c	/^static int gtod_inited;$/;"	v	typeref:typename:int	file:
gtod_log	gettime.c	/^struct gtod_log {$/;"	s	file:
gtod_log_caller	gettime.c	/^static void gtod_log_caller(void *caller)$/;"	f	typeref:typename:void	file:
gtod_reduce	io_u.c	/^static inline bool gtod_reduce(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
gtod_reduce	thread_options.h	/^	uint32_t gtod_reduce;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
gtod_reduce	thread_options.h	/^	unsigned int gtod_reduce;$/;"	m	struct:thread_options	typeref:typename:unsigned int
gtod_thread	gettime-thread.c	/^static pthread_t gtod_thread;$/;"	v	typeref:typename:pthread_t	file:
gtod_thread_main	gettime-thread.c	/^static void *gtod_thread_main(void *data)$/;"	f	typeref:typename:void *	file:
guess_max_from_bins	tools/hist/fiologparser_hist.py	/^def guess_max_from_bins(ctx, hist_cols):$/;"	f
gui	gfio.h	/^struct gui {$/;"	s
gui_data	parse.h	/^	void *gui_data;$/;"	m	struct:fio_option	typeref:typename:void *
gui_entry	gfio.h	/^struct gui_entry {$/;"	s
gz_hdr	iolog.c	/^static int z_stream_init(z_stream *stream, int gz_hdr)$/;"	z	function:z_stream_init	typeref:typename:int	file:
gz_hdr	iolog.c	/^static size_t inflate_chunk(struct iolog_compress *ic, int gz_hdr, FILE *f,$/;"	z	function:inflate_chunk	typeref:typename:int	file:
gz_init_worker	iolog.c	/^static int gz_init_worker(struct submit_worker *sw)$/;"	f	typeref:typename:int	file:
gz_work	iolog.c	/^static int gz_work(struct iolog_flush_data *data)$/;"	f	typeref:typename:int	file:
gz_work_async	iolog.c	/^static int gz_work_async(struct submit_worker *sw, struct workqueue_work *work)$/;"	f	typeref:typename:int	file:
h	crc/murmur3.c	/^static inline uint32_t fmix32(uint32_t h)$/;"	z	function:fmix32	typeref:typename:uint32_t	file:
h	lib/zipf.c	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	function:pareto_init	typeref:typename:double	file:
h	lib/zipf.h	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	prototype:pareto_init	typeref:typename:double	file:
h1	crc/murmur3.c	/^			     const uint32_t c2, uint32_t h1)$/;"	z	function:murmur3_tail	typeref:typename:uint32_t	file:
hFile	file.h	/^	HANDLE hFile;$/;"	m	struct:fio_file	typeref:typename:HANDLE
hProcess	server.c	/^		HANDLE hProcess;$/;"	m	union:ffi_element::__anon0e7c93ed020a	typeref:typename:HANDLE	file:
hProcess	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, HANDLE hProcess)$/;"	z	function:fio_server_add_conn_pid	typeref:typename:HANDLE	file:
hProcess	server.h	/^	HANDLE hProcess;		\/* process handle of handle_connection_process*\/$/;"	m	struct:sk_out	typeref:typename:HANDLE
h_index	lib/prio_tree.c	/^		unsigned long *r_index, unsigned long *h_index)$/;"	z	function:prio_tree_left	typeref:typename:unsigned long *	file:
h_index	lib/prio_tree.c	/^		unsigned long *r_index, unsigned long *h_index)$/;"	z	function:prio_tree_right	typeref:typename:unsigned long *	file:
h_index	lib/prio_tree.c	/^		unsigned long r_index, unsigned long h_index)$/;"	z	function:overlap	typeref:typename:unsigned long	file:
h_index	lib/prio_tree.h	/^		struct prio_tree_root *root, uint64_t r_index, uint64_t h_index)$/;"	z	function:prio_tree_iter_init	typeref:typename:uint64_t	file:
h_index	lib/prio_tree.h	/^	uint64_t		h_index;$/;"	m	struct:prio_tree_iter	typeref:typename:uint64_t
handle	engines/http.c	/^static int _curl_trace(CURL *handle, curl_infotype type,$/;"	z	function:_curl_trace	typeref:typename:CURL *	file:
handle	os/windows/posix.c	/^int dlclose(void *handle)$/;"	z	function:dlclose	typeref:typename:void *	file:
handle	os/windows/posix.c	/^void *dlsym(void *handle, const char *name)$/;"	z	function:dlsym	typeref:typename:void *	file:
handle	os/windows/posix/include/dlfcn.h	/^int dlclose(void *handle);$/;"	z	prototype:dlclose	typeref:typename:void *	file:
handle	os/windows/posix/include/dlfcn.h	/^void *dlsym(void *restrict handle, const char *restrict name);$/;"	z	prototype:dlsym	typeref:typename:void * 	file:
handle_cmd_timeout	client.c	/^static int handle_cmd_timeout(struct fio_client *client,$/;"	f	typeref:typename:int	file:
handle_command	server.c	/^static int handle_command(struct sk_out *sk_out, struct flist_head *job_list,$/;"	f	typeref:typename:int	file:
handle_connection	server.c	/^static int handle_connection(struct sk_out *sk_out)$/;"	f	typeref:typename:int	file:
handle_connection_process	server.c	/^static int handle_connection_process(void)$/;"	f	typeref:typename:int	file:
handle_du	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_du	client.c	/^static void handle_du(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_eta	client.c	/^static void handle_eta(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_gs	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_gs	client.c	/^static void handle_gs(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_job_cmd	server.c	/^static int handle_job_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_job_opt	client.c	/^static void handle_job_opt(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_jobline_cmd	server.c	/^static int handle_jobline_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_list	workqueue.c	/^static void handle_list(struct submit_worker *sw, struct flist_head *list)$/;"	f	typeref:typename:void	file:
handle_load_file_cmd	server.c	/^static int handle_load_file_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_option	parse.c	/^static int handle_option(const struct fio_option *o, const char *__ptr,$/;"	f	typeref:typename:int	file:
handle_probe	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_probe	client.c	/^static void handle_probe(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_probe_cmd	server.c	/^static int handle_probe_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_queue_trace	t/btrace2fio.c	/^static int handle_queue_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	f	typeref:typename:int	file:
handle_run_cmd	server.c	/^static int handle_run_cmd(struct sk_out *sk_out, struct flist_head *job_list,$/;"	f	typeref:typename:int	file:
handle_send_eta_cmd	server.c	/^static int handle_send_eta_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_sk_entry	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry)$/;"	f	typeref:typename:int	file:
handle_sk_entry	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry);$/;"	p	typeref:typename:int	file:
handle_start	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_start	client.c	/^static void handle_start(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_stop	client.c	/^static void handle_stop(struct fio_client *client)$/;"	f	typeref:typename:void	file:
handle_stop	client.c	/^static void handle_stop(struct fio_client *client);$/;"	p	typeref:typename:void	file:
handle_text	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_text	client.c	/^static void handle_text(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_thinktime	backend.c	/^static void handle_thinktime(struct thread_data *td, enum fio_ddir ddir,$/;"	f	typeref:typename:void	file:
handle_trace	t/btrace2fio.c	/^static int handle_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	f	typeref:typename:int	file:
handle_trace_discard	blktrace.c	/^static bool handle_trace_discard(struct thread_data *td,$/;"	f	typeref:typename:bool	file:
handle_trace_discard	t/btrace2fio.c	/^static int handle_trace_discard(struct blk_io_trace *t, struct btrace_pid *p)$/;"	f	typeref:typename:int	file:
handle_trace_flush	blktrace.c	/^static bool handle_trace_flush(struct thread_data *td, struct blk_io_trace *t,$/;"	f	typeref:typename:bool	file:
handle_trace_fs	blktrace.c	/^static bool handle_trace_fs(struct thread_data *td, struct blk_io_trace *t,$/;"	f	typeref:typename:bool	file:
handle_trace_fs	t/btrace2fio.c	/^static int handle_trace_fs(struct blk_io_trace *t, struct btrace_pid *p)$/;"	f	typeref:typename:int	file:
handle_trace_notify	blktrace.c	/^static bool handle_trace_notify(struct blk_io_trace *t)$/;"	f	typeref:typename:bool	file:
handle_trace_notify	t/btrace2fio.c	/^static int handle_trace_notify(struct blk_io_trace *t)$/;"	f	typeref:typename:int	file:
handle_trigger_cmd	server.c	/^static int handle_trigger_cmd(struct fio_net_cmd *cmd, struct flist_head *job_list)$/;"	f	typeref:typename:int	file:
handle_ts	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:void	file:
handle_ts	client.c	/^static void handle_ts(struct fio_client *client, struct fio_net_cmd *cmd);$/;"	p	typeref:typename:void	file:
handle_update_job_cmd	server.c	/^static int handle_update_job_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
handle_xmits	server.c	/^static int handle_xmits(struct sk_out *sk_out)$/;"	f	typeref:typename:int	file:
handler_running	gfio.h	/^	int handler_running;$/;"	m	struct:gui	typeref:typename:int
hardlink_flags	os/linux/io_uring.h	/^		__u32		hardlink_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
has	configure	/^has() {$/;"	f
has_arg	oslib/getopt.h	/^	int has_arg;$/;"	m	struct:option	typeref:typename:int
has_dval	y.tab.c	/^		int has_dval;$/;"	m	struct:valtype::parser_value_type	typeref:typename:int	file:
has_dval	y.tab.c	/^	int has_dval;$/;"	m	struct:parser_value_type	typeref:typename:int	file:
has_dval	y.tab.h	/^		int has_dval;$/;"	m	struct:valtype::parser_value_type	typeref:typename:int
has_error	lex.yy.c	/^		int *has_error, int *units_specified, const char *msg);$/;"	z	prototype:yyerror	typeref:typename:int *	file:
has_error	y.tab.c	/^		__attribute__((unused)) int *has_error,$/;"	z	function:yyerror	typeref:typename:int *	file:
has_error	y.tab.c	/^		__attribute__((unused)) int *has_error,$/;"	z	prototype:yyerror	typeref:typename:int *	file:
has_error	y.tab.c	/^		int has_error;$/;"	m	struct:valtype::parser_value_type	typeref:typename:int	file:
has_error	y.tab.c	/^	int has_error;$/;"	m	struct:parser_value_type	typeref:typename:int	file:
has_error	y.tab.c	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:int *	file:
has_error	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:int *	file:
has_error	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:int *	file:
has_error	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:int *	file:
has_error	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:int *	file:
has_error	y.tab.c	/^yyparse (long long *result, double *dresult, int *has_error, int *units_specified)$/;"	z	function:yyparse	typeref:typename:int *	file:
has_error	y.tab.h	/^		int has_error;$/;"	m	struct:valtype::parser_value_type	typeref:typename:int
has_error	y.tab.h	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:int *	file:
has_max_open_zones	t/zbd/test-zbd-support	/^has_max_open_zones() {$/;"	f
has_wp	zbd.h	/^	unsigned int		has_wp:1;$/;"	m	struct:fio_zone_info	typeref:typename:unsigned int:1
has_zlib	server.c	/^static unsigned int has_zlib = 0;$/;"	v	typeref:typename:unsigned int	file:
has_zlib	server.c	/^static unsigned int has_zlib = 1;$/;"	v	typeref:typename:unsigned int	file:
has_zones	zone-dist.c	/^static bool has_zones(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
hash	crc/md5.c	/^static void md5_transform(uint32_t *hash, uint32_t const *in)$/;"	z	function:md5_transform	typeref:typename:uint32_t *	file:
hash	crc/md5.h	/^	uint32_t *hash;$/;"	m	struct:fio_md5_ctx	typeref:typename:uint32_t *
hash	filehash.c	/^static unsigned short hash(const char *name)$/;"	f	typeref:typename:unsigned short	file:
hash	filelock.c	/^	uint32_t hash;$/;"	m	struct:fio_filelock	typeref:typename:uint32_t	file:
hash	filelock.c	/^static struct fio_filelock *fio_hash_find(uint32_t hash)$/;"	z	function:fio_hash_find	typeref:typename:uint32_t	file:
hash	filelock.c	/^static struct fio_filelock *fio_hash_get(uint32_t hash, int trylock)$/;"	z	function:fio_hash_get	typeref:typename:uint32_t	file:
hash	gettime.c	/^static struct flist_head hash[HASH_SIZE];$/;"	v	typeref:struct:flist_head[]	file:
hash	t/dedupe.c	/^	uint32_t hash[MD5_HASH_WORDS];$/;"	m	struct:chunk	typeref:typename:uint32_t[]	file:
hash	t/dedupe.c	/^	uint32_t hash[MD5_HASH_WORDS];$/;"	m	struct:item	typeref:typename:uint32_t[]	file:
hash	t/dedupe.c	/^static void crc_buf(void *buf, uint32_t *hash)$/;"	z	function:crc_buf	typeref:typename:uint32_t *	file:
hash	t/genzipf.c	/^static struct flist_head *hash;$/;"	v	typeref:struct:flist_head *	file:
hash	verify.h	/^	uint32_t hash;$/;"	m	struct:vhdr_xxhash	typeref:typename:uint32_t
hash_bits	t/genzipf.c	/^static unsigned long hash_bits = 24;$/;"	v	typeref:typename:unsigned long	file:
hash_insert	t/genzipf.c	/^static void hash_insert(struct node *n, unsigned long long val)$/;"	f	typeref:typename:void	file:
hash_list	client.h	/^	struct flist_head hash_list;$/;"	m	struct:fio_client	typeref:struct:flist_head
hash_list	file.h	/^	struct flist_head hash_list;$/;"	m	struct:fio_file	typeref:struct:flist_head
hash_list	t/btrace2fio.c	/^	struct flist_head hash_list;$/;"	m	struct:btrace_pid	typeref:struct:flist_head	file:
hash_lock	filehash.c	/^static struct fio_sem *hash_lock;$/;"	v	typeref:struct:fio_sem *	file:
hash_long	hash.h	/^static inline unsigned long hash_long(unsigned long val, unsigned int bits)$/;"	f	typeref:typename:unsigned long
hash_lookup	t/genzipf.c	/^static struct node *hash_lookup(unsigned long long val)$/;"	f	typeref:struct:node *	file:
hash_ptr	hash.h	/^static inline unsigned long hash_ptr(void *ptr, unsigned int bits)$/;"	f	typeref:typename:unsigned long
hash_size	t/genzipf.c	/^static unsigned long hash_size = 1 << 24;$/;"	v	typeref:typename:unsigned long	file:
hashes	lib/bloom.c	/^static struct bloom_hash hashes[] = {$/;"	v	typeref:struct:bloom_hash[]	file:
hashv	t/genzipf.c	/^static unsigned int hashv(unsigned long long val)$/;"	f	typeref:typename:unsigned int	file:
haystack	oslib/strcasestr.h	/^char *strcasestr(const char *haystack, const char *needle);$/;"	z	prototype:strcasestr	typeref:typename:const char *	file:
hbox	ghelpers.c	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval)$/;"	z	function:create_spinbutton	typeref:typename:GtkWidget *	file:
hbox	ghelpers.h	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval);$/;"	z	prototype:create_spinbutton	typeref:typename:GtkWidget *	file:
hbox	goptions.c	/^static void gopt_add_option(struct gopt_job_view *gjv, GtkWidget *hbox,$/;"	z	function:gopt_add_option	typeref:typename:GtkWidget *	file:
hdfsio_data	engines/libhdfs.c	/^struct hdfsio_data {$/;"	s	file:
hdfsio_options	engines/libhdfs.c	/^struct hdfsio_options {$/;"	s	file:
hdr	engines/sg.c	/^static void fio_sgio_rw_lba(struct sg_io_hdr *hdr, unsigned long long lba,$/;"	z	function:fio_sgio_rw_lba	typeref:struct:sg_io_hdr *	file:
hdr	engines/sg.c	/^static void fio_sgio_unmap_setup(struct sg_io_hdr *hdr, struct sgio_trim *st)$/;"	z	function:fio_sgio_unmap_setup	typeref:struct:sg_io_hdr *	file:
hdr	engines/sg.c	/^static void sgio_hdr_init(struct sgio_data *sd, struct sg_io_hdr *hdr,$/;"	z	function:sgio_hdr_init	typeref:struct:sg_io_hdr *	file:
hdr	io_u.h	/^		struct sg_io_hdr hdr;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:struct:sg_io_hdr
hdr	oslib/linux-blkzoned.c	/^static uint64_t zone_capacity(struct blk_zone_report *hdr,$/;"	z	function:zone_capacity	typeref:struct:blk_zone_report *	file:
hdr	smalloc.c	/^static void *postred_ptr(struct block_hdr *hdr)$/;"	z	function:postred_ptr	typeref:struct:block_hdr *	file:
hdr	smalloc.c	/^static void fill_redzone(struct block_hdr *hdr)$/;"	z	function:fill_redzone	typeref:struct:block_hdr *	file:
hdr	smalloc.c	/^static void sfree_check_redzone(struct block_hdr *hdr)$/;"	z	function:sfree_check_redzone	typeref:struct:block_hdr *	file:
hdr	verify.c	/^				    struct verify_header *hdr)$/;"	z	function:hdr_size	typeref:struct:verify_header *	file:
hdr	verify.c	/^			 struct verify_header *hdr, unsigned int hdr_num,$/;"	z	function:verify_header	typeref:struct:verify_header *	file:
hdr	verify.c	/^			 struct verify_header *hdr, unsigned int header_num,$/;"	z	function:populate_hdr	typeref:struct:verify_header *	file:
hdr	verify.c	/^			 struct verify_header *hdr, unsigned int header_num,$/;"	z	prototype:populate_hdr	typeref:struct:verify_header *	file:
hdr	verify.c	/^		       struct verify_header *hdr, unsigned int header_num,$/;"	z	function:__fill_hdr	typeref:struct:verify_header *	file:
hdr	verify.c	/^		       struct verify_header *hdr, unsigned int header_num,$/;"	z	prototype:__fill_hdr	typeref:struct:verify_header *	file:
hdr	verify.c	/^		     struct verify_header *hdr, unsigned int header_num,$/;"	z	function:fill_hdr	typeref:struct:verify_header *	file:
hdr	verify.c	/^int verify_state_hdr(struct verify_state_hdr *hdr, struct thread_io_list *s)$/;"	z	function:verify_state_hdr	typeref:struct:verify_state_hdr *	file:
hdr	verify.c	/^static inline void *io_u_verify_off(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:io_u_verify_off	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_crc16(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc16	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_crc32(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc32	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_crc32c(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc32c	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_crc64(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc64	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_crc7(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc7	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_md5(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_md5	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_pattern(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_pattern	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha1(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha1	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha256(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha256	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha3(struct verify_header *hdr, struct vcont *vc,$/;"	z	function:verify_io_u_sha3	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha3_224(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_224	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha3_256(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_256	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha3_384(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_384	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha3_512(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_512	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_sha512(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha512	typeref:struct:verify_header *	file:
hdr	verify.c	/^static int verify_io_u_xxhash(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_xxhash	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void *hdr_priv(struct verify_header *hdr)$/;"	z	function:hdr_priv	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void __dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:__dump_verify_buffers	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:dump_verify_buffers	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_crc16(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc16	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_crc32(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_crc32c(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32c	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_crc64(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc64	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_crc7(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc7	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_md5(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_md5	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha1(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha1	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha256	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha3_224(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_224	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha3_256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_256	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha3_384(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_384	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha3_512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_512	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_sha512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha512	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void fill_xxhash(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_xxhash	typeref:struct:verify_header *	file:
hdr	verify.c	/^static void log_verify_failure(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:log_verify_failure	typeref:struct:verify_header *	file:
hdr_len	verify.c	/^			 unsigned int hdr_len)$/;"	z	function:verify_header	typeref:typename:unsigned int	file:
hdr_num	verify.c	/^			 struct verify_header *hdr, unsigned int hdr_num,$/;"	z	function:verify_header	typeref:typename:unsigned int	file:
hdr_num	verify.c	/^	unsigned int hdr_num;$/;"	m	struct:vcont	typeref:typename:unsigned int	file:
hdr_priv	verify.c	/^static void *hdr_priv(struct verify_header *hdr)$/;"	f	typeref:typename:void *	file:
hdr_size	verify.c	/^static inline unsigned int hdr_size(struct thread_data *td,$/;"	f	typeref:typename:unsigned int	file:
head	engines/ime.c	/^	unsigned int head;			\/* index used to append *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
head	engines/io_uring.c	/^	unsigned *head;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
head	engines/io_uring.c	/^	unsigned *head;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
head	engines/libaio.c	/^	unsigned head;$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
head	engines/libaio.c	/^	unsigned int head;$/;"	m	struct:libaio_data	typeref:typename:unsigned int	file:
head	flist.h	/^					  struct flist_head *head)$/;"	z	function:flist_splice_tail_init	typeref:struct:flist_head *	file:
head	flist.h	/^				     struct flist_head *head)$/;"	z	function:flist_splice_tail	typeref:struct:flist_head *	file:
head	flist.h	/^				    struct flist_head *head)$/;"	z	function:flist_splice_init	typeref:struct:flist_head *	file:
head	flist.h	/^				  struct flist_head *head)$/;"	z	function:flist_add_tail	typeref:struct:flist_head *	file:
head	flist.h	/^				struct flist_head *head)$/;"	z	function:flist_splice	typeref:struct:flist_head *	file:
head	flist.h	/^                             struct flist_head *head)$/;"	z	function:flist_add	typeref:struct:flist_head *	file:
head	flist.h	/^extern void flist_sort(void *priv, struct flist_head *head,$/;"	z	prototype:flist_sort	typeref:struct:flist_head *	file:
head	flist.h	/^static inline int flist_empty(const struct flist_head *head)$/;"	z	function:flist_empty	typeref:typename:const struct flist_head *	file:
head	io_u_queue.h	/^	unsigned int head;$/;"	m	struct:io_u_ring	typeref:typename:unsigned int
head	lib/flist_sort.c	/^				struct flist_head *head,$/;"	z	function:merge_and_restore_back_links	typeref:struct:flist_head *	file:
head	lib/flist_sort.c	/^void flist_sort(void *priv, struct flist_head *head,$/;"	z	function:flist_sort	typeref:struct:flist_head *	file:
head	os/linux/io_uring.h	/^	__u32 head;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
head	os/linux/io_uring.h	/^	__u32 head;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
head	stat.c	/^				       struct flist_head *head)$/;"	z	function:json_object_add_disk_utils	typeref:struct:flist_head *	file:
head	steadystate.h	/^	unsigned int head;$/;"	m	struct:steadystate_data	typeref:typename:unsigned int
head	t/io_uring.c	/^	unsigned *head;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
head	t/io_uring.c	/^	unsigned *head;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
header	tools/fiograph/fiograph.conf	/^header=<<B><font color="{}"> {} <\/font><\/B> >$/;"	k	section:fio_jobs
header_color	tools/fiograph/fiograph.conf	/^header_color=black$/;"	k	section:fio_jobs
header_len	verify.c	/^			 unsigned int header_len)$/;"	z	function:populate_hdr	typeref:typename:unsigned int	file:
header_len	verify.c	/^			 unsigned int header_len);$/;"	z	prototype:populate_hdr	typeref:typename:unsigned int	file:
header_len	verify.c	/^		       unsigned int header_len, uint64_t rand_seed)$/;"	z	function:__fill_hdr	typeref:typename:unsigned int	file:
header_len	verify.c	/^		       unsigned int header_len, uint64_t rand_seed);$/;"	z	prototype:__fill_hdr	typeref:typename:unsigned int	file:
header_len	verify.c	/^		     unsigned int header_len, uint64_t rand_seed)$/;"	z	function:fill_hdr	typeref:typename:unsigned int	file:
header_length	engines/libaio.c	/^	unsigned header_length;	\/** size of aio_ring *\/$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
header_num	verify.c	/^			 struct verify_header *hdr, unsigned int header_num,$/;"	z	function:populate_hdr	typeref:typename:unsigned int	file:
header_num	verify.c	/^			 struct verify_header *hdr, unsigned int header_num,$/;"	z	prototype:populate_hdr	typeref:typename:unsigned int	file:
header_num	verify.c	/^		       struct verify_header *hdr, unsigned int header_num,$/;"	z	function:__fill_hdr	typeref:typename:unsigned int	file:
header_num	verify.c	/^		       struct verify_header *hdr, unsigned int header_num,$/;"	z	prototype:__fill_hdr	typeref:typename:unsigned int	file:
header_num	verify.c	/^		     struct verify_header *hdr, unsigned int header_num,$/;"	z	function:fill_hdr	typeref:typename:unsigned int	file:
heap	lib/prio_tree.c	/^		      unsigned long *radix, unsigned long *heap)$/;"	z	function:get_index	typeref:typename:unsigned long *	file:
height	printing.c	/^	gdouble width, height, xdpi, ydpi;$/;"	m	struct:printing_parameters	typeref:typename:gdouble	file:
help	debug.h	/^	const char *help;$/;"	m	struct:debug_level	typeref:typename:const char *
help	doc/Makefile	/^help:$/;"	t
help	options.c	/^void add_opt_posval(const char *optname, const char *ival, const char *help)$/;"	z	function:add_opt_posval	typeref:typename:const char *	file:
help	parse.h	/^	const char *help;		\/* help text for option *\/$/;"	m	struct:fio_option	typeref:typename:const char *
help	parse.h	/^	const char *help;		\/* help text for sub option *\/$/;"	m	struct:value_pair	typeref:typename:const char *
helper_data	helper_thread.c	/^static struct helper_data {$/;"	s	file:
helper_data	helper_thread.c	/^} *helper_data;$/;"	v	typeref:struct:helper_data *
helper_do_stat	helper_thread.c	/^void helper_do_stat(void)$/;"	f	typeref:typename:void
helper_do_stat	helper_thread.h	/^extern void helper_do_stat(void);$/;"	p	typeref:typename:void
helper_reset	helper_thread.c	/^void helper_reset(void)$/;"	f	typeref:typename:void
helper_reset	helper_thread.h	/^extern void helper_reset(void);$/;"	p	typeref:typename:void
helper_should_exit	helper_thread.c	/^bool helper_should_exit(void)$/;"	f	typeref:typename:bool
helper_should_exit	helper_thread.h	/^extern bool helper_should_exit(void);$/;"	p	typeref:typename:bool
helper_thread_create	helper_thread.c	/^int helper_thread_create(struct fio_sem *startup_sem, struct sk_out *sk_out)$/;"	f	typeref:typename:int
helper_thread_create	helper_thread.h	/^extern int helper_thread_create(struct fio_sem *, struct sk_out *);$/;"	p	typeref:typename:int
helper_thread_destroy	helper_thread.c	/^void helper_thread_destroy(void)$/;"	f	typeref:typename:void
helper_thread_destroy	helper_thread.h	/^extern void helper_thread_destroy(void);$/;"	p	typeref:typename:void
helper_thread_exit	helper_thread.c	/^void helper_thread_exit(void)$/;"	f	typeref:typename:void
helper_thread_exit	helper_thread.h	/^extern void helper_thread_exit(void);$/;"	p	typeref:typename:void
helper_thread_main	helper_thread.c	/^static void *helper_thread_main(void *data)$/;"	f	typeref:typename:void *	file:
hentry	gfio.c	/^	GtkWidget *hentry;$/;"	m	struct:connection_widgets	typeref:typename:GtkWidget *	file:
hexdump	verify.c	/^static void hexdump(void *buffer, int len)$/;"	f	typeref:typename:void	file:
hide	graph.c	/^	int hide;$/;"	m	struct:graph_label	typeref:typename:int	file:
hide	parse.h	/^	int hide;			\/* hide if parent isn't set *\/$/;"	m	struct:fio_option	typeref:typename:int
hide_on_set	parse.h	/^	int hide_on_set;		\/* hide on set, not on unset *\/$/;"	m	struct:fio_option	typeref:typename:int
highest_mtd_num	oslib/libmtd.h	/^	int highest_mtd_num;$/;"	m	struct:mtd_info	typeref:typename:int
hint	t/one-core-peak.sh	/^hint() {$/;"	f
hipri	engines/io_uring.c	/^	unsigned int hipri;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
hipri	engines/sg.c	/^	unsigned int hipri;$/;"	m	struct:sg_options	typeref:typename:unsigned int	file:
hipri	engines/sync.c	/^	unsigned int hipri;$/;"	m	struct:psyncv2_options	typeref:typename:unsigned int	file:
hipri	engines/xnvme.c	/^	unsigned int hipri;$/;"	m	struct:xnvme_fioe_options	typeref:typename:unsigned int	file:
hipri_percentage	engines/sync.c	/^	unsigned int hipri_percentage;$/;"	m	struct:psyncv2_options	typeref:typename:unsigned int	file:
hist_coarseness	client.c	/^static void client_flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:client_flush_hist_samples	typeref:typename:int	file:
hist_coarseness	iolog.c	/^static void flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:flush_hist_samples	typeref:typename:int	file:
hist_coarseness	iolog.h	/^	int hist_coarseness;$/;"	m	struct:log_params	typeref:typename:int
hist_coarseness	iolog.h	/^	unsigned int hist_coarseness;$/;"	m	struct:io_log	typeref:typename:unsigned int
hist_last	iolog.h	/^	unsigned long hist_last;$/;"	m	struct:io_hist	typeref:typename:unsigned long
hist_log_file	thread_options.h	/^	char *hist_log_file;$/;"	m	struct:thread_options	typeref:typename:char *
hist_log_file	thread_options.h	/^	uint8_t hist_log_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
hist_msec	iolog.h	/^	unsigned long hist_msec;$/;"	m	struct:io_log	typeref:typename:unsigned long
hist_msec	iolog.h	/^	unsigned long hist_msec;$/;"	m	struct:log_params	typeref:typename:unsigned long
hist_sum	iolog.c	/^uint64_t hist_sum(int j, int stride, uint64_t *io_u_plat,$/;"	f	typeref:typename:uint64_t
hist_sum	iolog.h	/^extern uint64_t hist_sum(int, int, uint64_t *, uint64_t *);$/;"	p	typeref:typename:uint64_t
hist_window	iolog.h	/^	struct io_hist hist_window[DDIR_RWDIR_CNT];$/;"	m	struct:io_log	typeref:struct:io_hist[]
histogram_generator	tools/hist/fiologparser_hist.py	/^def histogram_generator(ctx, fps, sz):$/;"	f
hits	t/genzipf.c	/^	unsigned long hits;$/;"	m	struct:node	typeref:typename:unsigned long	file:
hjob	os/os-windows.h	/^HANDLE windows_handle_connection(HANDLE hjob, int sk);$/;"	z	prototype:windows_handle_connection	typeref:typename:HANDLE	file:
hjob	os/windows/posix.c	/^HANDLE windows_handle_connection(HANDLE hjob, int sk)$/;"	z	function:windows_handle_connection	typeref:typename:HANDLE	file:
hjob	os/windows/posix.c	/^static BOOL windows_create_process(PROCESS_INFORMATION *pi, const char *args, HANDLE *hjob)$/;"	z	function:windows_create_process	typeref:typename:HANDLE *	file:
hjob	server.c	/^static HANDLE hjob = INVALID_HANDLE_VALUE;$/;"	v	typeref:typename:HANDLE	file:
host	engines/http.c	/^	char *host;$/;"	m	struct:http_options	typeref:typename:char *	file:
host	engines/libhdfs.c	/^	char *host;$/;"	m	struct:hdfsio_options	typeref:typename:char *	file:
host	engines/net.c	/^					const char *host, unsigned short port)$/;"	z	function:fio_netio_setup_connect_inet	typeref:typename:const char *	file:
host	engines/net.c	/^static int fio_fill_addr(struct thread_data *td, const char *host, int af,$/;"	z	function:fio_fill_addr	typeref:typename:const char *	file:
host	engines/rdma.c	/^	char host[64];$/;"	m	struct:rdmaio_data	typeref:typename:char[64]	file:
host	engines/rdma.c	/^static int aton(struct thread_data *td, const char *host,$/;"	z	function:aton	typeref:typename:const char *	file:
host	engines/rdma.c	/^static int fio_rdmaio_setup_connect(struct thread_data *td, const char *host,$/;"	z	function:fio_rdmaio_setup_connect	typeref:typename:const char *	file:
host	gfio.h	/^	char *host;$/;"	m	struct:gui_entry	typeref:typename:char *
host	server.c	/^int fio_server_parse_host(const char *host, int ipv6, struct in_addr *inp,$/;"	z	function:fio_server_parse_host	typeref:typename:const char *	file:
hostname	client.c	/^					   const char *hostname, int type,$/;"	z	function:fio_client_add_explicit	typeref:typename:const char *	file:
hostname	client.c	/^int fio_client_add(struct client_ops *ops, const char *hostname, void **cookie)$/;"	z	function:fio_client_add	typeref:typename:const char *	file:
hostname	client.h	/^	char *hostname;$/;"	m	struct:fio_client	typeref:typename:char *
hostname	gfio.h	/^	GtkWidget *hostname;$/;"	m	struct:probe_widget	typeref:typename:GtkWidget *
hostname	server.h	/^	uint8_t hostname[64];$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t[64]
hostname_cb	gfio.c	/^static void hostname_cb(GtkEntry *entry, gpointer data)$/;"	f	typeref:typename:void	file:
hpipe	os/windows/posix.c	/^static bool monitor_process_till_connect(PROCESS_INFORMATION *pi, HANDLE *hpipe)$/;"	z	function:monitor_process_till_connect	typeref:typename:HANDLE *	file:
html	doc/Makefile	/^html:$/;"	t
html_theme	doc/conf.py	/^html_theme = 'alabaster'$/;"	v
htmlhelp	doc/Makefile	/^htmlhelp:$/;"	t
htmlhelp_basename	doc/conf.py	/^htmlhelp_basename = 'fiodoc'$/;"	v
http_LIBS	Makefile	/^  http_LIBS = -lcurl -lssl -lcrypto$/;"	m
http_SRCS	Makefile	/^  http_SRCS = engines\/http.c$/;"	m
http_curl_stream	engines/http.c	/^struct http_curl_stream {$/;"	s	file:
http_data	engines/http.c	/^struct http_data {$/;"	s	file:
http_options	engines/http.c	/^struct http_options {$/;"	s	file:
https	engines/http.c	/^	unsigned int https;$/;"	m	struct:http_options	typeref:typename:unsigned int	file:
hugepage_size	thread_options.h	/^	uint32_t hugepage_size;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
hugepage_size	thread_options.h	/^	unsigned int hugepage_size;$/;"	m	struct:thread_options	typeref:typename:unsigned int
hval	crc/fnv.c	/^uint64_t fnv(const void *buf, uint32_t len, uint64_t hval)$/;"	z	function:fnv	typeref:typename:uint64_t	file:
hweight32	lib/hweight.c	/^unsigned int hweight32(uint32_t w)$/;"	f	typeref:typename:unsigned int
hweight32	lib/hweight.h	/^unsigned int hweight32(uint32_t w);$/;"	p	typeref:typename:unsigned int
hweight64	lib/hweight.c	/^unsigned int hweight64(uint64_t w)$/;"	f	typeref:typename:unsigned int
hweight64	lib/hweight.h	/^unsigned int hweight64(uint64_t w);$/;"	p	typeref:typename:unsigned int
hweight8	lib/hweight.c	/^unsigned int hweight8(uint8_t w)$/;"	f	typeref:typename:unsigned int
hweight8	lib/hweight.h	/^unsigned int hweight8(uint8_t w);$/;"	p	typeref:typename:unsigned int
i	blktrace.c	/^static void merge_finish_file(struct blktrace_cursor *bcs, int i, int *nr_logs)$/;"	z	function:merge_finish_file	typeref:typename:int	file:
i	engines/libiscsi.c	/^			       char *initiator, struct fio_file *f, int i)$/;"	z	function:fio_iscsi_setup_lun	typeref:typename:int	file:
i	goptions.c	/^				    struct gopt_int *i, struct fio_option *o)$/;"	z	function:gopt_handle_int_changed	typeref:struct:gopt_int *	file:
i	goptions.c	/^static void gopt_int_set_val(struct gopt_int *i, unsigned long long p)$/;"	z	function:gopt_int_set_val	typeref:struct:gopt_int *	file:
i	graph.c	/^static void graph_label_add_value(struct graph_label *i, void *value,$/;"	z	function:graph_label_add_value	typeref:struct:graph_label *	file:
i	lib/ieee754.c	/^long double unpack754(uint64_t i, unsigned bits, unsigned expbits)$/;"	z	function:unpack754	typeref:typename:uint64_t	file:
i	lib/ieee754.h	/^		uint64_t i;$/;"	m	union:fio_fp64::__anon13aa3979010a	typeref:typename:uint64_t
i	lib/ieee754.h	/^extern long double unpack754(uint64_t i, unsigned bits, unsigned expbits);$/;"	z	prototype:unpack754	typeref:typename:uint64_t	file:
i	options.c	/^			      int i, int option_type)$/;"	z	function:options_to_lopts	typeref:typename:int	file:
i	t/btrace2fio.c	/^static void __inflight_add(struct inflight *i)$/;"	z	function:__inflight_add	typeref:struct:inflight *	file:
i	t/btrace2fio.c	/^static void inflight_merge(struct inflight *i, int rw, unsigned int size)$/;"	z	function:inflight_merge	typeref:struct:inflight *	file:
i	t/btrace2fio.c	/^static void inflight_remove(struct inflight *i)$/;"	z	function:inflight_remove	typeref:struct:inflight *	file:
i	t/dedupe.c	/^static int col_check(struct chunk *c, struct item *i)$/;"	z	function:col_check	typeref:struct:item *	file:
i	t/dedupe.c	/^static int insert_chunk(struct item *i, uint64_t *unique_capacity,$/;"	z	function:insert_chunk	typeref:struct:item *	file:
i	t/dedupe.c	/^static void add_item(struct chunk *c, struct item *i)$/;"	z	function:add_item	typeref:struct:item *	file:
i	zbd.c	/^static int ilog2(uint64_t i)$/;"	z	function:ilog2	typeref:typename:uint64_t	file:
ia64_popcnt	arch/arch-ia64.h	/^#define ia64_popcnt(/;"	d
ic	iolog.c	/^static size_t inflate_chunk(struct iolog_compress *ic, int gz_hdr, FILE *f,$/;"	z	function:inflate_chunk	typeref:struct:iolog_compress *	file:
ic	iolog.c	/^static void free_chunk(struct iolog_compress *ic)$/;"	z	function:free_chunk	typeref:struct:iolog_compress *	file:
icd	io_u.c	/^				  struct io_completion_data *icd,$/;"	z	function:account_io_completion	typeref:struct:io_completion_data *	file:
icd	io_u.c	/^			  struct io_completion_data *icd)$/;"	z	function:ios_completed	typeref:struct:io_completion_data *	file:
icd	io_u.c	/^			 struct io_completion_data *icd)$/;"	z	function:io_completed	typeref:struct:io_completion_data *	file:
icd	io_u.c	/^static void init_icd(struct thread_data *td, struct io_completion_data *icd,$/;"	z	function:init_icd	typeref:struct:io_completion_data *	file:
icd	io_u.c	/^static void lat_fatal(struct thread_data *td, struct io_u *io_u, struct io_completion_data *icd,$/;"	z	function:lat_fatal	typeref:struct:io_completion_data *	file:
id	engines/libaio.c	/^	unsigned id;		 \/** kernel internal index number *\/$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
id	flow.c	/^	unsigned int id;$/;"	m	struct:fio_flow	typeref:typename:unsigned int	file:
id	flow.c	/^static struct fio_flow *flow_get(unsigned int id)$/;"	z	function:flow_get	typeref:typename:unsigned int	file:
ident	os/windows/posix.c	/^void openlog(const char *ident, int logopt, int facility)$/;"	z	function:openlog	typeref:typename:const char *	file:
ident	os/windows/posix/include/syslog.h	/^void openlog(const char *ident, int logopt, int facility);$/;"	z	prototype:openlog	typeref:typename:const char *	file:
idle_prof_common	idletime.h	/^struct idle_prof_common {$/;"	s
idle_prof_done	idletime.c	/^idle_prof_done:$/;"	L	function:idle_prof_thread_fn	file:
idle_prof_thread	idletime.h	/^struct idle_prof_thread {$/;"	s
idle_prof_thread_fn	idletime.c	/^static void *idle_prof_thread_fn(void *data)$/;"	f	typeref:typename:void *	file:
idleness	idletime.h	/^	double idleness;$/;"	m	struct:idle_prof_thread	typeref:typename:double
idx	engines/sync.c	/^				int idx)$/;"	z	function:fio_vsyncio_set_iov	typeref:typename:int	file:
idx	goptions.c	/^					   unsigned int idx, int type)$/;"	z	function:__gopt_new_combo	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       struct fio_option *o, unsigned int idx)$/;"	z	function:gopt_new_str_multi	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       unsigned int idx)$/;"	z	function:gopt_new_combo_int	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       unsigned int idx)$/;"	z	function:gopt_new_combo_str	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       unsigned int idx)$/;"	z	function:gopt_new_int_range	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       unsigned int idx)$/;"	z	function:gopt_new_str_store	typeref:typename:unsigned int	file:
idx	goptions.c	/^				       unsigned long long *p, unsigned int idx)$/;"	z	function:__gopt_new_int	typeref:typename:unsigned int	file:
idx	goptions.c	/^				     unsigned long long *p, unsigned int idx)$/;"	z	function:gopt_new_str_val	typeref:typename:unsigned int	file:
idx	goptions.c	/^				    unsigned int idx)$/;"	z	function:gopt_new_ullong	typeref:typename:unsigned int	file:
idx	goptions.c	/^				  unsigned int idx)$/;"	z	function:gopt_new_bool	typeref:typename:unsigned int	file:
idx	goptions.c	/^				 unsigned int idx)$/;"	z	function:gopt_new_int	typeref:typename:unsigned int	file:
idx	goptions.c	/^			    unsigned int idx, int type)$/;"	z	function:gopt_mark_index	typeref:typename:unsigned int	file:
idx	io_u.c	/^				  const enum fio_ddir idx, unsigned int bytes)$/;"	z	function:account_io_completion	typeref:typename:const enum fio_ddir	file:
idx	smalloc.c	/^			 unsigned int idx, size_t nr_blocks)$/;"	z	function:clear_blocks	typeref:typename:unsigned int	file:
idx	smalloc.c	/^		       unsigned int idx, size_t nr_blocks)$/;"	z	function:blocks_free	typeref:typename:unsigned int	file:
idx	smalloc.c	/^		       unsigned int idx, size_t nr_blocks)$/;"	z	function:set_blocks	typeref:typename:unsigned int	file:
idx	smalloc.c	/^		       unsigned int idx, size_t nr_blocks,$/;"	z	function:blocks_iter	typeref:typename:unsigned int	file:
idx	stat.c	/^					int *idx)$/;"	z	function:alloc_or_get_clat_prio_index	typeref:typename:int *	file:
idx	stat.c	/^static unsigned long long plat_idx_to_val(unsigned int idx)$/;"	z	function:plat_idx_to_val	typeref:typename:unsigned int	file:
idx	t/io_uring.c	/^static unsigned long plat_idx_to_val(unsigned int idx)$/;"	z	function:plat_idx_to_val	typeref:typename:unsigned int	file:
idx	t/read-to-pipe-async.c	/^static unsigned int plat_idx_to_val(unsigned int idx)$/;"	z	function:plat_idx_to_val	typeref:typename:unsigned int	file:
ignore	t/btrace2fio.c	/^	int ignore;$/;"	m	struct:btrace_pid	typeref:typename:int	file:
ignore_error	thread_options.h	/^	int *ignore_error[ERROR_TYPE_CNT];$/;"	m	struct:thread_options	typeref:typename:int * []
ignore_error	thread_options.h	/^	uint32_t ignore_error[ERROR_TYPE_CNT][ERROR_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[][]
ignore_error_nr	thread_options.h	/^	uint32_t ignore_error_nr[ERROR_TYPE_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
ignore_error_nr	thread_options.h	/^	unsigned int ignore_error_nr[ERROR_TYPE_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
ignore_error_type	options.c	/^static int ignore_error_type(struct thread_data *td, enum error_type_bit etype,$/;"	f	typeref:typename:int	file:
ignore_zone_limits	thread_options.h	/^	uint32_t ignore_zone_limits;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ignore_zone_limits	thread_options.h	/^	unsigned int ignore_zone_limits;$/;"	m	struct:thread_options	typeref:typename:unsigned int
il	options.c	/^static int str_buffer_compress_cb(void *data, unsigned long long *il)$/;"	z	function:str_buffer_compress_cb	typeref:typename:unsigned long long *	file:
il	options.c	/^static int str_dedupe_cb(void *data, unsigned long long *il)$/;"	z	function:str_dedupe_cb	typeref:typename:unsigned long long *	file:
il	options.c	/^static int str_gtod_reduce_cb(void *data, int *il)$/;"	z	function:str_gtod_reduce_cb	typeref:typename:int *	file:
ilog2	zbd.c	/^static int ilog2(uint64_t i)$/;"	f	typeref:typename:int	file:
image	engines/rbd.c	/^	rbd_image_t image;$/;"	m	struct:rbd_data	typeref:typename:rbd_image_t	file:
ime_d	engines/ime.c	/^static bool fio_ime_aio_can_append (struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_can_append	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static bool fio_ime_aio_can_queue (struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_can_queue	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static bool fio_ime_psyncv_can_queue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_psyncv_can_queue	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_aio_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_enqueue	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_psyncv_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_psyncv_enqueue	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_queue_commit (struct ime_data *ime_d, int iovcnt)$/;"	z	function:fio_ime_queue_commit	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_queue_incr (struct ime_data *ime_d)$/;"	z	function:fio_ime_queue_incr	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_queue_red (struct ime_data *ime_d)$/;"	z	function:fio_ime_queue_red	typeref:struct:ime_data *	file:
ime_d	engines/ime.c	/^static void fio_ime_queue_reset (struct ime_data *ime_d)$/;"	z	function:fio_ime_queue_reset	typeref:struct:ime_data *	file:
ime_data	engines/ime.c	/^struct ime_data {$/;"	s	file:
imeaio_req	engines/ime.c	/^struct imeaio_req {$/;"	s	file:
imesio_req	engines/ime.c	/^struct imesio_req {$/;"	s	file:
img_name	oslib/libmtd.c	/^		  const char *img_name)$/;"	z	function:mtd_write_img	typeref:typename:const char *	file:
img_name	oslib/libmtd.h	/^		  const char *img_name);$/;"	z	prototype:mtd_write_img	typeref:typename:const char *	file:
impl_	engines/null.c	/^	struct null_data *impl_;$/;"	m	struct:NullData	typeref:struct:null_data *	file:
implicit_cmdprio	engines/cmdprio.c	/^				   int implicit_cmdprio, int start, int end)$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:typename:int	file:
implicit_cmdprio	engines/cmdprio.c	/^				 int implicit_cmdprio)$/;"	z	function:fio_cmdprio_generate_bsprio_desc	typeref:typename:int	file:
implied_units	exp/test-expression-parser.c	/^					  double *dval, double implied_units, int is_time);$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:double	file:
implied_units	parse.c	/^					  double *dval, double implied_units,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:double	file:
implied_units	y.tab.c	/^					double implied_units, int is_time)$/;"	z	function:evaluate_arithmetic_expression	typeref:typename:double	file:
in	crc/md5.c	/^static void md5_transform(uint32_t *hash, uint32_t const *in)$/;"	z	function:md5_transform	typeref:typename:uint32_t const *	file:
in	fifo.h	/^	unsigned int in;	\/* data is added at offset (in % size) *\/$/;"	m	struct:fifo	typeref:typename:unsigned int
in	lib/pattern.c	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	z	function:parse_and_fill_pattern	typeref:typename:const char *	file:
in	lib/pattern.c	/^static const char *parse_format(const char *in, char *out, unsigned int parsed,$/;"	z	function:parse_format	typeref:typename:const char *	file:
in	lib/pattern.h	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:const char *	file:
in_addr_t	os/windows/posix/include/arpa/inet.h	/^typedef int in_addr_t;$/;"	t	typeref:typename:int
in_flight_overlap	backend.c	/^bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u)$/;"	f	typeref:typename:bool
in_flight_overlap	fio.h	/^extern bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u);$/;"	p	typeref:typename:bool
in_job_switch	goptions.c	/^	int in_job_switch;$/;"	m	struct:gopt_job_view	typeref:typename:int	file:
in_len	lib/pattern.c	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	z	function:parse_and_fill_pattern	typeref:typename:unsigned int	file:
in_len	lib/pattern.h	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:unsigned int	file:
in_port_t	os/windows/posix/include/sys/un.h	/^typedef int in_port_t;$/;"	t	typeref:typename:int
in_ramp_time	fio_time.h	/^extern bool in_ramp_time(struct thread_data *);$/;"	p	typeref:typename:bool
in_ramp_time	time.c	/^bool in_ramp_time(struct thread_data *td)$/;"	f	typeref:typename:bool
inc	filesetup.c	/^int add_file(struct thread_data *td, const char *fname, int numjob, int inc)$/;"	z	function:add_file	typeref:typename:int	file:
inc_caller	gettime.c	/^static void inc_caller(void *caller)$/;"	f	typeref:typename:void	file:
incompat_features	engines/libaio.c	/^	unsigned incompat_features;$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
incr	os/os-windows.h	/^int nice(int incr);$/;"	z	prototype:nice	typeref:typename:int	file:
incr	os/windows/posix.c	/^int nice(int incr)$/;"	z	function:nice	typeref:typename:int	file:
index	ghelpers.c	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	function:tree_view_column	typeref:typename:int	file:
index	ghelpers.c	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index)$/;"	z	function:multitext_set_entry	typeref:typename:unsigned int	file:
index	ghelpers.c	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	z	function:multitext_update_entry	typeref:typename:unsigned int	file:
index	ghelpers.h	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	prototype:tree_view_column	typeref:typename:int	file:
index	ghelpers.h	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index);$/;"	z	prototype:multitext_set_entry	typeref:typename:unsigned int	file:
index	ghelpers.h	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	z	prototype:multitext_update_entry	typeref:typename:unsigned int	file:
index	io_u.h	/^		unsigned int index;$/;"	m	union:io_u::__anon04db5ec7020a	typeref:typename:unsigned int
index	options.c	/^char* get_name_by_idx(char *input, int index)$/;"	z	function:get_name_by_idx	typeref:typename:int	file:
index	options.c	/^int set_name_idx(char *target, size_t tlen, char *input, int index,$/;"	z	function:set_name_idx	typeref:typename:int	file:
index	options.h	/^char* get_name_by_idx(char *input, int index);$/;"	z	prototype:get_name_by_idx	typeref:typename:int	file:
index	t/io_uring.c	/^	int index;$/;"	m	struct:submitter	typeref:typename:int	file:
index	t/io_uring.c	/^static void init_io(struct submitter *s, unsigned index)$/;"	z	function:init_io	typeref:typename:unsigned	file:
index	t/readonly.py	/^        index = index + 1$/;"	v
index	t/readonly.py	/^    index = 1$/;"	v
index	t/strided.py	/^        index = index + 1$/;"	v
index	t/strided.py	/^    index = 1$/;"	v
index	verify-state.h	/^	uint64_t index;$/;"	m	struct:thread_io_list	typeref:typename:uint64_t
index	verify.c	/^				   struct fio_file *f, unsigned int *index)$/;"	z	function:__fill_file_completions	typeref:typename:unsigned int *	file:
index	verify.c	/^				 struct thread_io_list *s, unsigned int *index)$/;"	z	function:fill_file_completions	typeref:typename:unsigned int *	file:
index	workqueue.c	/^static int start_worker(struct workqueue *wq, unsigned int index,$/;"	z	function:start_worker	typeref:typename:unsigned int	file:
index	workqueue.h	/^	unsigned int index;$/;"	m	struct:submit_worker	typeref:typename:unsigned int
index_bits	lib/prio_tree.h	/^	unsigned short 		index_bits;$/;"	m	struct:prio_tree_root	typeref:typename:unsigned short
index_bits_to_maxindex	lib/prio_tree.c	/^static unsigned long index_bits_to_maxindex[BITS_PER_LONG];$/;"	v	typeref:typename:unsigned long[]	file:
inet_aton	os/windows/posix.h	/^extern int inet_aton(const char *, struct in_addr *);$/;"	p	typeref:typename:int
inet_aton	oslib/inet_aton.c	/^int inet_aton(const char *cp, struct in_addr *inp)$/;"	f	typeref:typename:int
inet_aton	oslib/inet_aton.h	/^int inet_aton(const char *cp, struct in_addr *inp);$/;"	p	typeref:typename:int
inet_network	os/windows/posix.c	/^in_addr_t inet_network(const char *cp)$/;"	f	typeref:typename:in_addr_t
inet_network	os/windows/posix/include/arpa/inet.h	/^in_addr_t inet_network(const char *cp);$/;"	p	typeref:typename:in_addr_t
inflate_chunk	iolog.c	/^static size_t inflate_chunk(struct iolog_compress *ic, int gz_hdr, FILE *f,$/;"	f	typeref:typename:size_t	file:
inflate_chunk_iter	iolog.c	/^struct inflate_chunk_iter {$/;"	s	file:
inflate_gz_chunks	iolog.c	/^static int inflate_gz_chunks(struct io_log *log, FILE *f)$/;"	f	typeref:typename:int	file:
inflight	t/btrace2fio.c	/^	int inflight;$/;"	m	struct:btrace_out	typeref:typename:int	file:
inflight	t/btrace2fio.c	/^struct inflight {$/;"	s	file:
inflight	t/io_uring.c	/^	int inflight;$/;"	m	struct:submitter	typeref:typename:int	file:
inflight_add	t/btrace2fio.c	/^static void inflight_add(struct btrace_pid *p, uint64_t sector, uint32_t len)$/;"	f	typeref:typename:void	file:
inflight_find	t/btrace2fio.c	/^static struct inflight *inflight_find(uint64_t sector)$/;"	f	typeref:struct:inflight *	file:
inflight_hash	t/btrace2fio.c	/^static struct flist_head inflight_hash[INFLIGHT_HASH_SIZE];$/;"	v	typeref:struct:flist_head[]	file:
inflight_merge	t/btrace2fio.c	/^static void inflight_merge(struct inflight *i, int rw, unsigned int size)$/;"	f	typeref:typename:void	file:
inflight_remove	t/btrace2fio.c	/^static void inflight_remove(struct inflight *i)$/;"	f	typeref:typename:void	file:
info	doc/Makefile	/^info:$/;"	t
info	engines/mtd.c	/^	struct mtd_dev_info info;$/;"	m	struct:fio_mtd_data	typeref:struct:mtd_dev_info	file:
info	gfio.c	/^				   guint info, guint time, gpointer *data)$/;"	z	function:drag_and_drop_received	typeref:typename:guint	file:
info	oslib/libmtd.c	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info)$/;"	z	function:mtd_get_info	typeref:struct:mtd_info *	file:
info	oslib/libmtd.h	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info);$/;"	z	prototype:mtd_get_info	typeref:struct:mtd_info *	file:
info	oslib/libmtd_int.h	/^int legacy_mtd_get_info(struct mtd_info *info);$/;"	z	prototype:legacy_mtd_get_info	typeref:struct:mtd_info *	file:
info	oslib/libmtd_legacy.c	/^int legacy_mtd_get_info(struct mtd_info *info)$/;"	z	function:legacy_mtd_get_info	typeref:struct:mtd_info *	file:
info	t/one-core-peak.sh	/^info() {$/;"	f
ini_file	client.c	/^int fio_client_add_ini_file(void *cookie, const char *ini_file, bool remote)$/;"	z	function:fio_client_add_ini_file	typeref:typename:const char *	file:
ini_file	init.c	/^static char **ini_file;$/;"	v	typeref:typename:char **	file:
init	engines/filecreate.c	/^static int init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
init	engines/filedelete.c	/^static int init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
init	engines/filestat.c	/^static int init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
init	ioengines.h	/^	int (*init)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *)
init.o	Makefile	/^init.o: init.c FIO-VERSION-FILE$/;"	t
init_blktrace_read	blktrace.c	/^bool init_blktrace_read(struct thread_data *td, const char *filename, int need_swap)$/;"	f	typeref:typename:bool
init_blktrace_read	blktrace.h	/^bool init_blktrace_read(struct thread_data *, const char *, int);$/;"	p	typeref:typename:bool
init_blktrace_read	blktrace.h	/^static inline bool init_blktrace_read(struct thread_data *td, const char *fname,$/;"	f	typeref:typename:bool
init_cmdprio_values	engines/cmdprio.c	/^static int init_cmdprio_values(struct cmdprio_values *values,$/;"	f	typeref:typename:int	file:
init_dedupe_working_set_seeds	dedupe.c	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedup)$/;"	f	typeref:typename:int
init_dedupe_working_set_seeds	dedupe.h	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedupe);$/;"	p	typeref:typename:int
init_disk_util	diskutil.c	/^void init_disk_util(struct thread_data *td)$/;"	f	typeref:typename:void
init_disk_util	diskutil.h	/^#define init_disk_util(/;"	d
init_disk_util	diskutil.h	/^extern void init_disk_util(struct thread_data *);$/;"	p	typeref:typename:void
init_file_completion_logging	backend.c	/^static int init_file_completion_logging(struct thread_data *td,$/;"	f	typeref:typename:int	file:
init_flags	init.c	/^static void init_flags(struct thread_data *td)$/;"	f	typeref:typename:void	file:
init_global_dedupe_working_set_seeds	dedupe.c	/^int init_global_dedupe_working_set_seeds(void)$/;"	f	typeref:typename:int
init_global_dedupe_working_set_seeds	dedupe.h	/^int init_global_dedupe_working_set_seeds(void);$/;"	p	typeref:typename:int
init_group_run_stat	stat.c	/^void init_group_run_stat(struct group_run_stats *gs)$/;"	f	typeref:typename:void
init_group_run_stat	stat.h	/^extern void init_group_run_stat(struct group_run_stats *gs);$/;"	p	typeref:typename:void
init_icd	io_u.c	/^static void init_icd(struct thread_data *td, struct io_completion_data *icd,$/;"	f	typeref:typename:void	file:
init_io	t/io_uring.c	/^static void init_io(struct submitter *s, unsigned index)$/;"	f	typeref:typename:void	file:
init_io_u	backend.c	/^static int init_io_u(struct thread_data *td)$/;"	f	typeref:typename:int	file:
init_io_u_buffers	backend.c	/^int init_io_u_buffers(struct thread_data *td)$/;"	f	typeref:typename:int
init_io_u_buffers	iolog.h	/^extern int init_io_u_buffers(struct thread_data *);$/;"	p	typeref:typename:int
init_iolog	iolog.c	/^bool init_iolog(struct thread_data *td)$/;"	f	typeref:typename:bool
init_iolog	iolog.h	/^extern bool __must_check init_iolog(struct thread_data *td);$/;"	p	typeref:typename:bool __must_check
init_iolog_read	iolog.c	/^static bool init_iolog_read(struct thread_data *td, char *fname)$/;"	f	typeref:typename:bool	file:
init_iolog_write	iolog.c	/^static bool init_iolog_write(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
init_ipo	iolog.h	/^static inline void init_ipo(struct io_piece *ipo)$/;"	f	typeref:typename:void
init_lock	idletime.h	/^	pthread_mutex_t init_lock;$/;"	m	struct:idle_prof_thread	typeref:typename:pthread_mutex_t
init_merge_param_list	blktrace.c	/^static int init_merge_param_list(fio_fp64_t *vals, struct blktrace_cursor *bcs,$/;"	f	typeref:typename:int	file:
init_per_file_disk_util	diskutil.c	/^static struct disk_util *init_per_file_disk_util(struct thread_data *td,$/;"	f	typeref:struct:disk_util *	file:
init_per_prio_stats	stat.c	/^static void init_per_prio_stats(struct thread_stat *threadstats, int nr_ts)$/;"	f	typeref:typename:void	file:
init_rand	lib/rand.c	/^void init_rand(struct frand_state *state, bool use64)$/;"	f	typeref:typename:void
init_rand	lib/rand.h	/^extern void init_rand(struct frand_state *, bool);$/;"	p	typeref:typename:void
init_rand_distribution	filesetup.c	/^static bool init_rand_distribution(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
init_rand_file_service	init.c	/^static void init_rand_file_service(struct thread_data *td)$/;"	f	typeref:typename:void	file:
init_rand_seed	lib/rand.c	/^void init_rand_seed(struct frand_state *state, uint64_t seed, bool use64)$/;"	f	typeref:typename:void
init_rand_seed	lib/rand.h	/^extern void init_rand_seed(struct frand_state *, uint64_t seed, bool);$/;"	p	typeref:typename:void
init_random_map	file.h	/^extern bool init_random_map(struct thread_data *);$/;"	p	typeref:typename:bool
init_random_map	filesetup.c	/^bool init_random_map(struct thread_data *td)$/;"	f	typeref:typename:bool
init_random_seeds	os/os-windows.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	f	typeref:typename:int
init_random_seeds	os/os.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	f	typeref:typename:int
init_thinktime	backend.c	/^static void init_thinktime(struct thread_data *td)$/;"	f	typeref:typename:void	file:
init_thread	t/read-to-pipe-async.c	/^static void init_thread(struct thread_data *thread)$/;"	f	typeref:typename:void	file:
init_thread_stat	stat.c	/^void init_thread_stat(struct thread_stat *ts)$/;"	f	typeref:typename:void
init_thread_stat	stat.h	/^extern void init_thread_stat(struct thread_stat *ts);$/;"	p	typeref:typename:void
init_thread_stat_min_vals	stat.c	/^void init_thread_stat_min_vals(struct thread_stat *ts)$/;"	f	typeref:typename:void
init_thread_stat_min_vals	stat.h	/^extern void init_thread_stat_min_vals(struct thread_stat *ts);$/;"	p	typeref:typename:void
init_ts_clat_prio	engines/cmdprio.c	/^static int init_ts_clat_prio(struct thread_stat *ts, enum fio_ddir ddir,$/;"	f	typeref:typename:int	file:
init_ui	gfio.c	/^static void init_ui(int *argc, char **argv[], struct gui *ui)$/;"	f	typeref:typename:void	file:
init_worker_fn	workqueue.h	/^	workqueue_init_worker_fn *init_worker_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_init_worker_fn *
init_zone_info	zbd.c	/^static int init_zone_info(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
initfn	unittests/unittest.c	/^CU_ErrorCode fio_unittest_add_suite(const char *name, CU_InitializeFunc initfn,$/;"	z	function:fio_unittest_add_suite	typeref:typename:CU_InitializeFunc	file:
initialize_fio	fio.h	/^extern int initialize_fio(char *envp[]);$/;"	p	typeref:typename:int
initialize_fio	libfio.c	/^int initialize_fio(char *envp[])$/;"	f	typeref:typename:int
initialized	t/fuzz/fuzz_parseini.c	/^static int initialized = 0;$/;"	v	typeref:typename:int	file:
initiator	engines/libiscsi.c	/^			       char *initiator, struct fio_file *f, int i)$/;"	z	function:fio_iscsi_setup_lun	typeref:typename:char *	file:
initiator	engines/libiscsi.c	/^	char	*initiator;$/;"	m	struct:iscsi_options	typeref:typename:char *	file:
initval	hash.h	/^static inline uint32_t jhash(const void *key, uint32_t length, uint32_t initval)$/;"	z	function:jhash	typeref:typename:uint32_t	file:
inline_log	iolog.h	/^static inline bool inline_log(struct io_log *log)$/;"	f	typeref:typename:bool
inp	oslib/inet_aton.c	/^int inet_aton(const char *cp, struct in_addr *inp)$/;"	z	function:inet_aton	typeref:struct:in_addr *	file:
inp	oslib/inet_aton.h	/^int inet_aton(const char *cp, struct in_addr *inp);$/;"	z	prototype:inet_aton	typeref:struct:in_addr *	file:
inp	server.c	/^			    int *port, struct in_addr *inp,$/;"	z	function:fio_server_parse_string	typeref:struct:in_addr *	file:
inp	server.c	/^int fio_server_parse_host(const char *host, int ipv6, struct in_addr *inp,$/;"	z	function:fio_server_parse_host	typeref:struct:in_addr *	file:
inp6	server.c	/^			    struct in6_addr *inp6, int *ipv6)$/;"	z	function:fio_server_parse_string	typeref:struct:in6_addr *	file:
inp6	server.c	/^			  struct in6_addr *inp6)$/;"	z	function:fio_server_parse_host	typeref:struct:in6_addr *	file:
inplace	engines/e4defrag.c	/^	unsigned int inplace;$/;"	m	struct:e4defrag_options	typeref:typename:unsigned int	file:
input	crc/sha256.c	/^static inline void LOAD_OP(int I, uint32_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:const uint8_t *	file:
input	crc/sha256.c	/^static void sha256_transform(uint32_t *state, const uint8_t *input)$/;"	z	function:sha256_transform	typeref:typename:const uint8_t *	file:
input	crc/sha512.c	/^static inline void LOAD_OP(int I, uint64_t *W, const uint8_t *input)$/;"	z	function:LOAD_OP	typeref:typename:const uint8_t *	file:
input	crc/sha512.c	/^static void sha512_transform(uint64_t *state, uint64_t *W, const uint8_t *input)$/;"	z	function:sha512_transform	typeref:typename:const uint8_t *	file:
input	crc/xxhash.c	/^XXH_errorcode XXH32_update (void* state_in, const void* input, int len)$/;"	z	function:XXH32_update	typeref:typename:const void *	file:
input	crc/xxhash.c	/^static XXH_errorcode XXH32_update_endian (void* state_in, const void* input, int len, XXH_endian/;"	z	function:XXH32_update_endian	typeref:typename:const void *	file:
input	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	z	function:XXH32_endian_align	typeref:typename:const void *	file:
input	crc/xxhash.c	/^uint32_t XXH32(const void* input, uint32_t len, uint32_t seed)$/;"	z	function:XXH32	typeref:typename:const void *	file:
input	crc/xxhash.h	/^XXH_errorcode XXH32_update (void* state, const void* input, int len);$/;"	z	prototype:XXH32_update	typeref:typename:const void *	file:
input	crc/xxhash.h	/^uint32_t XXH32 (const void* input, uint32_t len, uint32_t seed);$/;"	z	prototype:XXH32	typeref:typename:const void *	file:
input	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_parse(struct thread_data *td, const char *input,$/;"	z	function:fio_cmdprio_bssplit_parse	typeref:typename:const char *	file:
input	engines/net.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	z	function:str_hostname_cb	typeref:typename:const char *	file:
input	engines/net.c	/^static int str_hostname_cb(void *data, const char *input);$/;"	z	prototype:str_hostname_cb	typeref:typename:const char *	file:
input	engines/rdma.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	z	function:str_hostname_cb	typeref:typename:const char *	file:
input	lex.yy.c	/^static int __attribute__((unused)) input(void);$/;"	p	typeref:typename:int	file:
input	lex.yy.c	/^static int input ( void );$/;"	p	typeref:typename:int	file:
input	options.c	/^			    const char *input)$/;"	z	function:set_cpus_allowed	typeref:typename:const char *	file:
input	options.c	/^char* get_name_by_idx(char *input, int index)$/;"	z	function:get_name_by_idx	typeref:typename:char *	file:
input	options.c	/^int get_max_str_idx(char *input)$/;"	z	function:get_max_str_idx	typeref:typename:char *	file:
input	options.c	/^int set_name_idx(char *target, size_t tlen, char *input, int index,$/;"	z	function:set_name_idx	typeref:typename:char *	file:
input	options.c	/^static int parse_zoned_distribution(struct thread_data *td, const char *input,$/;"	z	function:parse_zoned_distribution	typeref:typename:const char *	file:
input	options.c	/^static int str_bssplit_cb(void *data, const char *input)$/;"	z	function:str_bssplit_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_buffer_pattern_cb(void *data, const char *input)$/;"	z	function:str_buffer_pattern_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_cpus_allowed_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_filename_cb(void *data, const char *input)$/;"	z	function:str_filename_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_ignore_error_cb(void *data, const char *input)$/;"	z	function:str_ignore_error_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_log_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_log_cpus_allowed_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_numa_cpunodes_cb(void *data, char *input)$/;"	z	function:str_numa_cpunodes_cb	typeref:typename:char *	file:
input	options.c	/^static int str_numa_mpol_cb(void *data, char *input)$/;"	z	function:str_numa_mpol_cb	typeref:typename:char *	file:
input	options.c	/^static int str_replay_skip_cb(void *data, const char *input)$/;"	z	function:str_replay_skip_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_verify_cpus_allowed_cb(void *data, const char *input)$/;"	z	function:str_verify_cpus_allowed_cb	typeref:typename:const char *	file:
input	options.c	/^static int str_verify_pattern_cb(void *data, const char *input)$/;"	z	function:str_verify_pattern_cb	typeref:typename:const char *	file:
input	options.h	/^char* get_name_by_idx(char *input, int index);$/;"	z	prototype:get_name_by_idx	typeref:typename:char *	file:
input	options.h	/^int get_max_str_idx(char *input);$/;"	z	prototype:get_max_str_idx	typeref:typename:char *	file:
input	parse.c	/^int parse_option(char *opt, const char *input, const struct fio_option *options,$/;"	z	function:parse_option	typeref:typename:const char *	file:
input_file	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	z	function:yyrestart	typeref:typename:FILE *	file:
input_file	lex.yy.c	/^void yyrestart ( FILE *input_file  );$/;"	z	prototype:yyrestart	typeref:typename:FILE *	file:
insert_chunk	t/dedupe.c	/^static int insert_chunk(struct item *i, uint64_t *unique_capacity,$/;"	f	typeref:typename:int	file:
insert_chunks	t/dedupe.c	/^static int insert_chunks(struct item *items, unsigned int nitems,$/;"	f	typeref:typename:int	file:
install	Makefile	/^install: $(PROGS) $(SCRIPTS) $(ENGS_OBJS) tools\/plot\/fio2gnuplot.1 FORCE$/;"	t
install_linux	ci/actions-install.sh	/^install_linux() {$/;"	f
install_macos	ci/actions-install.sh	/^install_macos() {$/;"	f
install_ubuntu	ci/actions-install.sh	/^install_ubuntu() {$/;"	f
int	HOWTO.rst	/^.. _int:$/;"	T	section:Parameter types
int_mask	smalloc.c	/^static const int int_mask = sizeof(int) - 1;$/;"	v	typeref:typename:const int	file:
integer_number	json.h	/^		long long integer_number;$/;"	m	union:json_value::__anon078191b5010a	typeref:typename:long long
interval	parse.h	/^	unsigned int interval;		\/* client hint for suitable interval *\/$/;"	m	struct:fio_option	typeref:typename:unsigned int
interval_ms	helper_thread.c	/^	uint32_t	interval_ms;$/;"	m	struct:interval_timer	typeref:typename:uint32_t	file:
interval_timer	helper_thread.c	/^struct interval_timer {$/;"	s	file:
intfc	engines/net.c	/^	char *intfc;$/;"	m	struct:netio_options	typeref:typename:char *	file:
intval	lex.yy.c	/^		int rc, intval;$/;"	v	typeref:typename:int
inv_mask	optgroup.c	/^					       uint64_t inv_mask)$/;"	z	function:group_from_mask	typeref:typename:uint64_t	file:
inv_opt	parse.h	/^	struct fio_option *inv_opt;	\/* cached lookup *\/$/;"	m	struct:fio_option	typeref:struct:fio_option *
invalidate	ioengines.h	/^	int (*invalidate)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
invalidate_cache	thread_options.h	/^	uint32_t invalidate_cache;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
invalidate_cache	thread_options.h	/^	unsigned int invalidate_cache;$/;"	m	struct:thread_options	typeref:typename:unsigned int
invalidate_profile_options	options.c	/^void invalidate_profile_options(const char *prof_name)$/;"	f	typeref:typename:void
invalidate_profile_options	options.h	/^void invalidate_profile_options(const char *);$/;"	p	typeref:typename:void
inverse	parse.h	/^	const char *inverse;		\/* if set, apply opposite action to this option *\/$/;"	m	struct:fio_option	typeref:typename:const char *
io	iolog.h	/^				      struct io_sample *io,$/;"	z	function:io_sample_set_ddir	typeref:struct:io_sample *	file:
io	tools/plot/samples/Makefile	/^io: setup$/;"	t
ioCP	file.h	/^	HANDLE ioCP;$/;"	m	struct:fio_file	typeref:typename:HANDLE
io_act	iolog.c	/^#define io_act(/;"	d	file:
io_axmap	file.h	/^		struct axmap *io_axmap;$/;"	m	union:fio_file::__anonfd762ebb040a	typeref:struct:axmap *
io_blocks	fio.h	/^	uint64_t io_blocks[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
io_bytes	eta.c	/^		      unsigned long long *io_bytes,$/;"	z	function:calc_rate	typeref:typename:unsigned long long *	file:
io_bytes	fio.h	/^	uint64_t io_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
io_bytes	stat.h	/^	uint64_t io_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_bytes_exceeded	backend.c	/^static bool io_bytes_exceeded(struct thread_data *td, uint64_t *this_bytes)$/;"	f	typeref:typename:bool	file:
io_complete	engines/glusterfs_async.c	/^	int io_complete;$/;"	m	struct:fio_gf_iou	typeref:typename:int	file:
io_complete	engines/rbd.c	/^	int io_complete;$/;"	m	struct:fio_rbd_iou	typeref:typename:int	file:
io_complete	engines/windowsaio.c	/^	BOOL io_complete;$/;"	m	struct:fio_overlapped	typeref:typename:BOOL	file:
io_complete_bytes_exceeded	backend.c	/^static bool io_complete_bytes_exceeded(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
io_completed	io_u.c	/^static void io_completed(struct thread_data *td, struct io_u **io_u_ptr,$/;"	f	typeref:typename:void	file:
io_completion_data	io_u.c	/^struct io_completion_data {$/;"	s	file:
io_cq_ring	engines/io_uring.c	/^struct io_cq_ring {$/;"	s	file:
io_cq_ring	t/io_uring.c	/^struct io_cq_ring {$/;"	s	file:
io_cqring_offsets	os/linux/io_uring.h	/^struct io_cqring_offsets {$/;"	s
io_ctx	engines/rados.c	/^	rados_ioctx_t io_ctx;$/;"	m	struct:rados_data	typeref:typename:rados_ioctx_t	file:
io_ctx	engines/rbd.c	/^	rados_ioctx_t io_ctx;$/;"	m	struct:rbd_data	typeref:typename:rados_ioctx_t	file:
io_ddir_name	io_ddir.h	/^static inline const char *io_ddir_name(enum fio_ddir ddir)$/;"	f	typeref:typename:const char *
io_hist	iolog.h	/^struct io_hist {$/;"	s
io_hist_len	fio.h	/^	unsigned long io_hist_len;$/;"	m	struct:thread_data	typeref:typename:unsigned long
io_hist_list	fio.h	/^	struct flist_head io_hist_list;$/;"	m	struct:thread_data	typeref:struct:flist_head
io_hist_tree	fio.h	/^	struct rb_root io_hist_tree;$/;"	m	struct:thread_data	typeref:struct:rb_root
io_in_polling	backend.c	/^static inline bool io_in_polling(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
io_iops	eta.c	/^		      unsigned long long *io_iops,$/;"	z	function:calc_iops	typeref:typename:unsigned long long *	file:
io_issue_bytes	fio.h	/^	uint64_t io_issue_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
io_issue_bytes_exceeded	backend.c	/^static bool io_issue_bytes_exceeded(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
io_issues	fio.h	/^	uint64_t io_issues[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
io_list_next	verify-state.h	/^static inline struct thread_io_list *io_list_next(struct thread_io_list *s)$/;"	f	typeref:struct:thread_io_list *
io_log	iolog.h	/^struct io_log {$/;"	s
io_log_blktrace	fio.h	/^	unsigned int io_log_blktrace;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_log_blktrace_swap	fio.h	/^	unsigned int io_log_blktrace_swap;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_log_checkmark	fio.h	/^	unsigned int io_log_checkmark;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_log_current	fio.h	/^	unsigned int io_log_current;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_log_highmark	fio.h	/^	unsigned int io_log_highmark;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_log_highmark_time	fio.h	/^	struct timespec io_log_highmark_time;$/;"	m	struct:thread_data	typeref:struct:timespec
io_log_last_ttime	fio.h	/^	unsigned long long io_log_last_ttime;$/;"	m	struct:thread_data	typeref:typename:unsigned long long
io_log_list	fio.h	/^	struct flist_head io_log_list;$/;"	m	struct:thread_data	typeref:struct:flist_head
io_log_rfile	fio.h	/^	FILE *io_log_rfile;$/;"	m	struct:thread_data	typeref:typename:FILE *
io_log_start_time	fio.h	/^	struct timespec io_log_start_time;$/;"	m	struct:thread_data	typeref:struct:timespec
io_log_version	fio.h	/^	unsigned int io_log_version;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_logs	iolog.h	/^	struct flist_head io_logs;$/;"	m	struct:io_log	typeref:struct:flist_head
io_logs	iolog.h	/^struct io_logs {$/;"	s
io_ops	fio.h	/^	struct ioengine_ops *io_ops;$/;"	m	struct:thread_data	typeref:struct:ioengine_ops *
io_ops	profile.h	/^	struct prof_io_ops *io_ops;$/;"	m	struct:profile_ops	typeref:struct:prof_io_ops *
io_ops_data	fio.h	/^	void *io_ops_data;$/;"	m	struct:thread_data	typeref:typename:void *
io_ops_init	fio.h	/^	int io_ops_init;$/;"	m	struct:thread_data	typeref:typename:int
io_piece	iolog.h	/^struct io_piece {$/;"	s
io_queue_event	backend.c	/^int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	f	typeref:typename:int
io_queue_event	fio.h	/^extern int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	p	typeref:typename:int
io_sample	iolog.h	/^struct io_sample {$/;"	s
io_sample_data	iolog.h	/^union io_sample_data {$/;"	u
io_sample_data	stat.h	/^extern void add_agg_sample(union io_sample_data, enum fio_ddir, unsigned long long);$/;"	z	prototype:add_agg_sample	typeref:meta:union	file:
io_sample_ddir	iolog.h	/^#define io_sample_ddir(/;"	d
io_sample_offset	iolog.h	/^struct io_sample_offset {$/;"	s
io_sample_set_ddir	iolog.h	/^static inline void io_sample_set_ddir(struct io_log *log,$/;"	f	typeref:typename:void
io_seen	engines/rbd.c	/^	int io_seen;$/;"	m	struct:fio_rbd_iou	typeref:typename:int	file:
io_size	file.h	/^	uint64_t io_size;$/;"	m	struct:fio_file	typeref:typename:uint64_t
io_size	thread_options.h	/^	uint64_t io_size;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
io_size	thread_options.h	/^	unsigned long long io_size;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
io_size_nz	thread_options.h	/^	uint32_t io_size_nz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
io_size_nz	thread_options.h	/^	unsigned int io_size_nz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
io_size_percent	thread_options.h	/^	uint32_t io_size_percent;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
io_size_percent	thread_options.h	/^	unsigned int io_size_percent;$/;"	m	struct:thread_options	typeref:typename:unsigned int
io_skip_bytes	fio.h	/^	uint64_t io_skip_bytes;$/;"	m	struct:thread_data	typeref:typename:uint64_t
io_sq_ring	engines/io_uring.c	/^struct io_sq_ring {$/;"	s	file:
io_sq_ring	t/io_uring.c	/^struct io_sq_ring {$/;"	s	file:
io_sqring_offsets	os/linux/io_uring.h	/^struct io_sqring_offsets {$/;"	s
io_stat	iolog.h	/^struct io_stat {$/;"	s
io_stat	stat.c	/^				      struct io_stat *io_stat,$/;"	z	function:clat_prio_stat_add_samples	typeref:struct:io_stat *	file:
io_submit_mode	thread_options.h	/^	uint32_t io_submit_mode;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
io_submit_mode	thread_options.h	/^	unsigned int io_submit_mode;$/;"	m	struct:thread_options	typeref:typename:unsigned int
io_ticks	diskutil.h	/^	uint64_t io_ticks;$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t
io_ticks	diskutil.h	/^	uint64_t io_ticks;$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t
io_u	backend.c	/^bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u)$/;"	z	function:in_flight_overlap	typeref:struct:io_u *	file:
io_u	backend.c	/^int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	function:io_queue_event	typeref:struct:io_u *	file:
io_u	backend.c	/^static enum fio_q_status io_u_submit(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_submit	typeref:struct:io_u *	file:
io_u	engines/cmdprio.c	/^			    struct io_u *io_u)$/;"	z	function:fio_cmdprio_set_ioprio	typeref:struct:io_u *	file:
io_u	engines/cmdprio.c	/^static int fio_cmdprio_percentage(struct cmdprio *cmdprio, struct io_u *io_u,$/;"	z	function:fio_cmdprio_percentage	typeref:struct:io_u *	file:
io_u	engines/cmdprio.h	/^			    struct io_u *io_u);$/;"	z	prototype:fio_cmdprio_set_ioprio	typeref:struct:io_u *	file:
io_u	engines/cpu.c	/^					 struct io_u fio_unused *io_u)$/;"	z	function:fio_cpuio_queue	typeref:struct:io_u fio_unused *	file:
io_u	engines/dev-dax.c	/^					  struct io_u *io_u)$/;"	z	function:fio_devdax_queue	typeref:struct:io_u *	file:
io_u	engines/dev-dax.c	/^static int fio_devdax_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep	typeref:struct:io_u *	file:
io_u	engines/dev-dax.c	/^static int fio_devdax_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep_full	typeref:struct:io_u *	file:
io_u	engines/dev-dax.c	/^static int fio_devdax_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep_limited	typeref:struct:io_u *	file:
io_u	engines/dfs.c	/^					struct io_u *io_u)$/;"	z	function:daos_fio_queue	typeref:struct:io_u *	file:
io_u	engines/dfs.c	/^	struct io_u	*io_u;$/;"	m	struct:daos_iou	typeref:struct:io_u *	file:
io_u	engines/dfs.c	/^static int daos_fio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:daos_fio_io_u_init	typeref:struct:io_u *	file:
io_u	engines/dfs.c	/^static int daos_fio_prep(struct thread_data fio_unused *td, struct io_u *io_u)$/;"	z	function:daos_fio_prep	typeref:struct:io_u *	file:
io_u	engines/dfs.c	/^static void daos_fio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:daos_fio_io_u_free	typeref:struct:io_u *	file:
io_u	engines/e4defrag.c	/^					    struct io_u *io_u)$/;"	z	function:fio_e4defrag_queue	typeref:struct:io_u *	file:
io_u	engines/exec.c	/^fio_exec_queue(struct thread_data *td, struct io_u fio_unused * io_u)$/;"	z	function:fio_exec_queue	typeref:struct:io_u fio_unused *	file:
io_u	engines/falloc.c	/^					     struct io_u *io_u)$/;"	z	function:fio_fallocate_queue	typeref:struct:io_u *	file:
io_u	engines/filecreate.c	/^				  struct io_u fio_unused *io_u)$/;"	z	function:queue_io	typeref:struct:io_u fio_unused *	file:
io_u	engines/filedelete.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	z	function:queue_io	typeref:struct:io_u fio_unused *	file:
io_u	engines/filestat.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	z	function:queue_io	typeref:struct:io_u fio_unused *	file:
io_u	engines/ftruncate.c	/^					     struct io_u *io_u)$/;"	z	function:fio_ftruncate_queue	typeref:struct:io_u *	file:
io_u	engines/glusterfs_async.c	/^					    struct io_u *io_u)$/;"	z	function:fio_gf_async_queue	typeref:struct:io_u *	file:
io_u	engines/glusterfs_async.c	/^	struct io_u *io_u;$/;"	m	struct:fio_gf_iou	typeref:struct:io_u *	file:
io_u	engines/glusterfs_async.c	/^static int fio_gf_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_io_u_init	typeref:struct:io_u *	file:
io_u	engines/glusterfs_async.c	/^static void fio_gf_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_io_u_free	typeref:struct:io_u *	file:
io_u	engines/glusterfs_sync.c	/^static enum fio_q_status fio_gf_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_queue	typeref:struct:io_u *	file:
io_u	engines/glusterfs_sync.c	/^static int fio_gf_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_prep	typeref:struct:io_u *	file:
io_u	engines/http.c	/^					 struct io_u *io_u)$/;"	z	function:fio_http_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^					   struct io_u *io_u)$/;"	z	function:fio_ime_psync_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^		struct io_u *io_u)$/;"	z	function:fio_ime_aio_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^	struct io_u *io_u)$/;"	z	function:fio_ime_psyncv_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static bool fio_ime_aio_can_append (struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_can_append	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static bool fio_ime_aio_can_queue (struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_can_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static bool fio_ime_psyncv_can_queue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_psyncv_can_queue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static int fio_ime_psync_end(struct thread_data *td, struct io_u *io_u, ssize_t ret)$/;"	z	function:fio_ime_psync_end	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static void fio_ime_aio_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_aio_enqueue	typeref:struct:io_u *	file:
io_u	engines/ime.c	/^static void fio_ime_psyncv_enqueue(struct ime_data *ime_d, struct io_u *io_u)$/;"	z	function:fio_ime_psyncv_enqueue	typeref:struct:io_u *	file:
io_u	engines/io_uring.c	/^					   struct io_u *io_u)$/;"	z	function:fio_ioring_cmdprio_prep	typeref:struct:io_u *	file:
io_u	engines/io_uring.c	/^					  struct io_u *io_u)$/;"	z	function:fio_ioring_queue	typeref:struct:io_u *	file:
io_u	engines/io_uring.c	/^static int fio_ioring_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ioring_io_u_init	typeref:struct:io_u *	file:
io_u	engines/io_uring.c	/^static int fio_ioring_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ioring_prep	typeref:struct:io_u *	file:
io_u	engines/libaio.c	/^					   struct io_u *io_u)$/;"	z	function:fio_libaio_cmdprio_prep	typeref:struct:io_u *	file:
io_u	engines/libaio.c	/^					  struct io_u *io_u)$/;"	z	function:fio_libaio_queue	typeref:struct:io_u *	file:
io_u	engines/libaio.c	/^static int fio_libaio_cancel(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libaio_cancel	typeref:struct:io_u *	file:
io_u	engines/libaio.c	/^static int fio_libaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libaio_prep	typeref:struct:io_u *	file:
io_u	engines/libcufile.c	/^					     struct io_u *io_u)$/;"	z	function:fio_libcufile_queue	typeref:struct:io_u *	file:
io_u	engines/libcufile.c	/^					  struct io_u *io_u,$/;"	z	function:fio_libcufile_post_read	typeref:struct:io_u *	file:
io_u	engines/libcufile.c	/^					  struct io_u *io_u,$/;"	z	function:fio_libcufile_pre_write	typeref:struct:io_u *	file:
io_u	engines/libhdfs.c	/^					  struct io_u *io_u)$/;"	z	function:fio_hdfsio_queue	typeref:struct:io_u *	file:
io_u	engines/libhdfs.c	/^static int fio_hdfsio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_io_u_init	typeref:struct:io_u *	file:
io_u	engines/libhdfs.c	/^static int fio_hdfsio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_prep	typeref:struct:io_u *	file:
io_u	engines/libhdfs.c	/^static void fio_hdfsio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_io_u_free	typeref:struct:io_u *	file:
io_u	engines/libiscsi.c	/^					 struct io_u *io_u)$/;"	z	function:fio_iscsi_queue	typeref:struct:io_u *	file:
io_u	engines/libiscsi.c	/^	struct io_u		*io_u;$/;"	m	struct:iscsi_task	typeref:struct:io_u *	file:
io_u	engines/libiscsi.c	/^static int fio_iscsi_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_iscsi_prep	typeref:struct:io_u *	file:
io_u	engines/libpmem.c	/^					   struct io_u *io_u)$/;"	z	function:fio_libpmem_queue	typeref:struct:io_u *	file:
io_u	engines/libpmem.c	/^static int fio_libpmem_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libpmem_prep	typeref:struct:io_u *	file:
io_u	engines/librpma_apm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:server_queue	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.c	/^		struct io_u *io_u)$/;"	z	function:client_queue_sync	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.c	/^		struct io_u *io_u)$/;"	z	function:librpma_fio_client_queue	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.c	/^char *librpma_fio_client_errdetails(struct io_u *io_u)$/;"	z	function:librpma_fio_client_errdetails	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.h	/^		struct io_u *io_u)$/;"	z	function:librpma_fio_client_io_write	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.h	/^		struct io_u *io_u);$/;"	z	prototype:librpma_fio_client_queue	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.h	/^		struct io_u *io_u, int flags)$/;"	z	function:librpma_fio_client_io_read	typeref:struct:io_u *	file:
io_u	engines/librpma_fio.h	/^char *librpma_fio_client_errdetails(struct io_u *io_u);$/;"	z	prototype:librpma_fio_client_errdetails	typeref:struct:io_u *	file:
io_u	engines/librpma_gpspm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:server_queue	typeref:struct:io_u *	file:
io_u	engines/libzbc.c	/^ssize_t libzbc_rw(struct thread_data *td, struct io_u *io_u)$/;"	z	function:libzbc_rw	typeref:struct:io_u *	file:
io_u	engines/libzbc.c	/^static enum fio_q_status libzbc_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:libzbc_queue	typeref:struct:io_u *	file:
io_u	engines/mmap.c	/^					  struct io_u *io_u)$/;"	z	function:fio_mmapio_queue	typeref:struct:io_u *	file:
io_u	engines/mmap.c	/^static int fio_mmapio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep	typeref:struct:io_u *	file:
io_u	engines/mmap.c	/^static int fio_mmapio_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep_full	typeref:struct:io_u *	file:
io_u	engines/mmap.c	/^static int fio_mmapio_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep_limited	typeref:struct:io_u *	file:
io_u	engines/mtd.c	/^				       struct io_u *io_u)$/;"	z	function:fio_mtd_queue	typeref:struct:io_u *	file:
io_u	engines/mtd.c	/^				  struct io_u *io_u, int eb)$/;"	z	function:fio_mtd_maybe_mark_bad	typeref:struct:io_u *	file:
io_u	engines/mtd.c	/^			  struct io_u *io_u, int eb)$/;"	z	function:fio_mtd_is_bad	typeref:struct:io_u *	file:
io_u	engines/nbd.c	/^				   struct io_u *io_u)$/;"	z	function:nbd_queue	typeref:struct:io_u *	file:
io_u	engines/nbd.c	/^static int nbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:nbd_io_u_init	typeref:struct:io_u *	file:
io_u	engines/nbd.c	/^static void nbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:nbd_io_u_free	typeref:struct:io_u *	file:
io_u	engines/net.c	/^					   struct io_u *io_u,$/;"	z	function:__fio_netio_queue	typeref:struct:io_u *	file:
io_u	engines/net.c	/^					 struct io_u *io_u)$/;"	z	function:fio_netio_queue	typeref:struct:io_u *	file:
io_u	engines/net.c	/^			   struct io_u *io_u)$/;"	z	function:verify_udp_seq	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int fio_netio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_prep	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int fio_netio_recv(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_recv	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int fio_netio_send(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_send	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int fio_netio_splice_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_splice_in	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int fio_netio_splice_out(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_splice_out	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int is_close_msg(struct io_u *io_u, int len)$/;"	z	function:is_close_msg	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int splice_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:splice_in	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int splice_out(struct thread_data *td, struct io_u *io_u,$/;"	z	function:splice_out	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int vmsplice_io_u(struct io_u *io_u, int fd, unsigned int len)$/;"	z	function:vmsplice_io_u	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int vmsplice_io_u_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:vmsplice_io_u_in	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static int vmsplice_io_u_out(struct thread_data *td, struct io_u *io_u,$/;"	z	function:vmsplice_io_u_out	typeref:struct:io_u *	file:
io_u	engines/net.c	/^static void store_udp_seq(struct netio_data *nd, struct io_u *io_u)$/;"	z	function:store_udp_seq	typeref:struct:io_u *	file:
io_u	engines/nfs.c	/^					    struct io_u *io_u)$/;"	z	function:fio_libnfs_queue	typeref:struct:io_u *	file:
io_u	engines/nfs.c	/^static int queue_read(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	z	function:queue_read	typeref:struct:io_u *	file:
io_u	engines/nfs.c	/^static int queue_write(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	z	function:queue_write	typeref:struct:io_u *	file:
io_u	engines/null.c	/^					struct io_u *io_u)$/;"	z	function:fio_null_queue	typeref:struct:io_u *	file:
io_u	engines/null.c	/^				    struct null_data *nd, struct io_u *io_u)$/;"	z	function:null_queue	typeref:struct:io_u *	file:
io_u	engines/null.c	/^	fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:NullData::fio_null_queue	typeref:struct:io_u *	file:
io_u	engines/null.c	/^static fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_null_queue	typeref:struct:io_u *	file:
io_u	engines/pmemblk.c	/^					   struct io_u *io_u)$/;"	z	function:fio_pmemblk_queue	typeref:struct:io_u *	file:
io_u	engines/posixaio.c	/^					    struct io_u *io_u)$/;"	z	function:fio_posixaio_queue	typeref:struct:io_u *	file:
io_u	engines/posixaio.c	/^			       struct io_u *io_u)$/;"	z	function:fio_posixaio_cancel	typeref:struct:io_u *	file:
io_u	engines/posixaio.c	/^			     struct io_u *io_u)$/;"	z	function:fio_posixaio_prep	typeref:struct:io_u *	file:
io_u	engines/rados.c	/^					 struct io_u *io_u)$/;"	z	function:fio_rados_queue	typeref:struct:io_u *	file:
io_u	engines/rados.c	/^	struct io_u *io_u;$/;"	m	struct:fio_rados_iou	typeref:struct:io_u *	file:
io_u	engines/rados.c	/^static int fio_rados_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rados_io_u_init	typeref:struct:io_u *	file:
io_u	engines/rados.c	/^static void fio_rados_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rados_io_u_free	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^				       struct io_u *io_u)$/;"	z	function:fio_rbd_queue	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^	struct io_u *io_u;$/;"	m	struct:fio_rbd_iou	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^static inline int fri_check_complete(struct rbd_data *rbd, struct io_u *io_u,$/;"	z	function:fri_check_complete	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^static inline int rbd_io_u_seen(struct io_u *io_u)$/;"	z	function:rbd_io_u_seen	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^static int fio_rbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rbd_io_u_init	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^static void fio_rbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rbd_io_u_free	typeref:struct:io_u *	file:
io_u	engines/rbd.c	/^static void rbd_io_u_wait_complete(struct io_u *io_u)$/;"	z	function:rbd_io_u_wait_complete	typeref:struct:io_u *	file:
io_u	engines/rdma.c	/^					  struct io_u *io_u)$/;"	z	function:fio_rdmaio_queue	typeref:struct:io_u *	file:
io_u	engines/rdma.c	/^static int fio_rdmaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rdmaio_prep	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^					     struct io_u *io_u)$/;"	z	function:fio_sgio_ioctl_doio	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^					  struct io_u *io_u, int do_sync)$/;"	z	function:fio_sgio_rw_doio	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^					struct io_u *io_u)$/;"	z	function:fio_sgio_queue	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^				       struct io_u *io_u, int do_sync)$/;"	z	function:fio_sgio_doio	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^			  struct io_u *io_u, int fs)$/;"	z	function:sgio_hdr_init	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^static char *fio_sgio_errdetails(struct io_u *io_u)$/;"	z	function:fio_sgio_errdetails	typeref:struct:io_u *	file:
io_u	engines/sg.c	/^static int fio_sgio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_sgio_prep	typeref:struct:io_u *	file:
io_u	engines/skeleton_external.c	/^					    struct io_u *io_u)$/;"	z	function:fio_skeleton_queue	typeref:struct:io_u *	file:
io_u	engines/skeleton_external.c	/^static int fio_skeleton_cancel(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_skeleton_cancel	typeref:struct:io_u *	file:
io_u	engines/skeleton_external.c	/^static int fio_skeleton_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_skeleton_prep	typeref:struct:io_u *	file:
io_u	engines/solarisaio.c	/^			       struct io_u *io_u)$/;"	z	function:fio_solarisaio_cancel	typeref:struct:io_u *	file:
io_u	engines/solarisaio.c	/^			      struct io_u *io_u)$/;"	z	function:fio_solarisaio_queue	typeref:struct:io_u *	file:
io_u	engines/solarisaio.c	/^			    struct io_u *io_u)$/;"	z	function:fio_solarisaio_prep	typeref:struct:io_u *	file:
io_u	engines/splice.c	/^					    struct io_u *io_u)$/;"	z	function:fio_spliceio_queue	typeref:struct:io_u *	file:
io_u	engines/splice.c	/^static int fio_splice_read(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_read	typeref:struct:io_u *	file:
io_u	engines/splice.c	/^static int fio_splice_read_old(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_read_old	typeref:struct:io_u *	file:
io_u	engines/splice.c	/^static int fio_splice_write(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_write	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^					     struct io_u *io_u)$/;"	z	function:fio_pvsyncio2_queue	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^					    struct io_u *io_u)$/;"	z	function:fio_pvsyncio_queue	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^					   struct io_u *io_u)$/;"	z	function:fio_psyncio_queue	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^					   struct io_u *io_u)$/;"	z	function:fio_vsyncio_queue	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^					  struct io_u *io_u)$/;"	z	function:fio_syncio_queue	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^static int fio_io_end(struct thread_data *td, struct io_u *io_u, int ret)$/;"	z	function:fio_io_end	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^static int fio_syncio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_syncio_prep	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^static int fio_vsyncio_append(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_vsyncio_append	typeref:struct:io_u *	file:
io_u	engines/sync.c	/^static void fio_vsyncio_set_iov(struct syncio_data *sd, struct io_u *io_u,$/;"	z	function:fio_vsyncio_set_iov	typeref:struct:io_u *	file:
io_u	engines/windowsaio.c	/^					      struct io_u *io_u)$/;"	z	function:fio_windowsaio_queue	typeref:struct:io_u *	file:
io_u	engines/windowsaio.c	/^	struct io_u *io_u;$/;"	m	struct:fio_overlapped	typeref:struct:io_u *	file:
io_u	engines/windowsaio.c	/^static int fio_windowsaio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_windowsaio_io_u_init	typeref:struct:io_u *	file:
io_u	engines/windowsaio.c	/^static void fio_windowsaio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_windowsaio_io_u_free	typeref:struct:io_u *	file:
io_u	engines/xnvme.c	/^static enum fio_q_status xnvme_fioe_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_queue	typeref:struct:io_u *	file:
io_u	engines/xnvme.c	/^static int xnvme_fioe_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_io_u_init	typeref:struct:io_u *	file:
io_u	engines/xnvme.c	/^static void xnvme_fioe_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_io_u_free	typeref:struct:io_u *	file:
io_u	fio.h	/^extern bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u);$/;"	z	prototype:in_flight_overlap	typeref:struct:io_u *	file:
io_u	fio.h	/^extern int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	prototype:io_queue_event	typeref:struct:io_u *	file:
io_u	fio.h	/^static inline void fio_ro_check(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ro_check	typeref:struct:io_u *	file:
io_u	io_u.c	/^int do_io_u_sync(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:do_io_u_sync	typeref:struct:io_u *	file:
io_u	io_u.c	/^int do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:do_io_u_trim	typeref:struct:io_u *	file:
io_u	io_u.c	/^int io_u_sync_complete(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_sync_complete	typeref:struct:io_u *	file:
io_u	io_u.c	/^static bool check_get_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:check_get_trim	typeref:struct:io_u *	file:
io_u	io_u.c	/^static bool check_get_verify(struct thread_data *td, struct io_u *io_u)$/;"	z	function:check_get_verify	typeref:struct:io_u *	file:
io_u	io_u.c	/^static inline bool io_u_fits(struct thread_data *td, struct io_u *io_u,$/;"	z	function:io_u_fits	typeref:struct:io_u *	file:
io_u	io_u.c	/^static int fill_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fill_io_u	typeref:struct:io_u *	file:
io_u	io_u.c	/^static int get_next_block(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_block	typeref:struct:io_u *	file:
io_u	io_u.c	/^static int get_next_offset(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_offset	typeref:struct:io_u *	file:
io_u	io_u.c	/^static long set_io_u_file(struct thread_data *td, struct io_u *io_u)$/;"	z	function:set_io_u_file	typeref:struct:io_u *	file:
io_u	io_u.c	/^static uint64_t mark_random_map(struct thread_data *td, struct io_u *io_u,$/;"	z	function:mark_random_map	typeref:struct:io_u *	file:
io_u	io_u.c	/^static unsigned long long get_next_buflen(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_buflen	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void __io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	z	function:__io_u_log_error	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void account_io_completion(struct thread_data *td, struct io_u *io_u,$/;"	z	function:account_io_completion	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void lat_fatal(struct thread_data *td, struct io_u *io_u, struct io_completion_data *icd,$/;"	z	function:lat_fatal	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void set_rw_ddir(struct thread_data *td, struct io_u *io_u)$/;"	z	function:set_rw_ddir	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void setup_strided_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	z	function:setup_strided_zone_mode	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void small_content_scramble(struct io_u *io_u)$/;"	z	function:small_content_scramble	typeref:struct:io_u *	file:
io_u	io_u.c	/^static void trim_block_info(struct thread_data *td, struct io_u *io_u)$/;"	z	function:trim_block_info	typeref:struct:io_u *	file:
io_u	io_u.c	/^void clear_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:clear_io_u	typeref:struct:io_u *	file:
io_u	io_u.c	/^void io_u_fill_buffer(struct thread_data *td, struct io_u *io_u,$/;"	z	function:io_u_fill_buffer	typeref:struct:io_u *	file:
io_u	io_u.c	/^void io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_log_error	typeref:struct:io_u *	file:
io_u	io_u.c	/^void io_u_queued(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_queued	typeref:struct:io_u *	file:
io_u	io_u.c	/^void put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:put_io_u	typeref:struct:io_u *	file:
io_u	io_u.c	/^void requeue_io_u(struct thread_data *td, struct io_u **io_u)$/;"	z	function:requeue_io_u	typeref:struct:io_u **	file:
io_u	io_u.h	/^static inline enum fio_ddir acct_ddir(struct io_u *io_u)$/;"	z	function:acct_ddir	typeref:struct:io_u *	file:
io_u	io_u.h	/^static inline void dprint_io_u(struct io_u *io_u, const char *p)$/;"	z	function:dprint_io_u	typeref:struct:io_u *	file:
io_u	io_u.h	/^struct io_u {$/;"	s
io_u	io_u_queue.h	/^static inline void io_u_qpush(struct io_u_queue *q, struct io_u *io_u)$/;"	z	function:io_u_qpush	typeref:struct:io_u *	file:
io_u	io_u_queue.h	/^static inline void io_u_rpush(struct io_u_ring *r, struct io_u *io_u)$/;"	z	function:io_u_rpush	typeref:struct:io_u *	file:
io_u	ioengines.c	/^enum fio_q_status td_io_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:td_io_queue	typeref:struct:io_u *	file:
io_u	ioengines.c	/^int td_io_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:td_io_prep	typeref:struct:io_u *	file:
io_u	iolog.c	/^int read_iolog_get(struct thread_data *td, struct io_u *io_u)$/;"	z	function:read_iolog_get	typeref:struct:io_u *	file:
io_u	iolog.c	/^void log_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	z	function:log_io_piece	typeref:struct:io_u *	file:
io_u	iolog.c	/^void log_io_u(const struct thread_data *td, const struct io_u *io_u)$/;"	z	function:log_io_u	typeref:typename:const struct io_u *	file:
io_u	iolog.c	/^void trim_io_piece(const struct io_u *io_u)$/;"	z	function:trim_io_piece	typeref:typename:const struct io_u *	file:
io_u	iolog.c	/^void unlog_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	z	function:unlog_io_piece	typeref:struct:io_u *	file:
io_u	rate-submit.c	/^static void check_overlap(struct io_u *io_u)$/;"	z	function:check_overlap	typeref:struct:io_u *	file:
io_u	stat.c	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_block_info	typeref:struct:io_u *	file:
io_u	stat.c	/^void add_bw_sample(struct thread_data *td, struct io_u *io_u,$/;"	z	function:add_bw_sample	typeref:struct:io_u *	file:
io_u	stat.c	/^void add_iops_sample(struct thread_data *td, struct io_u *io_u,$/;"	z	function:add_iops_sample	typeref:struct:io_u *	file:
io_u	stat.h	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:io_u_block_info	typeref:struct:io_u *	file:
io_u	trim.c	/^bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_trim	typeref:struct:io_u *	file:
io_u	trim.c	/^bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_should_trim	typeref:struct:io_u *	file:
io_u	trim.h	/^extern bool __must_check get_next_trim(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:get_next_trim	typeref:struct:io_u *	file:
io_u	trim.h	/^extern bool io_u_should_trim(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:io_u_should_trim	typeref:struct:io_u *	file:
io_u	trim.h	/^static inline bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_trim	typeref:struct:io_u *	file:
io_u	trim.h	/^static inline bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_should_trim	typeref:struct:io_u *	file:
io_u	verify.c	/^			 struct io_u *io_u, uint64_t seed, int use_seed)$/;"	z	function:fill_verify_pattern	typeref:struct:io_u *	file:
io_u	verify.c	/^	struct io_u *io_u;$/;"	m	struct:vcont	typeref:struct:io_u *	file:
io_u	verify.c	/^int get_next_verify(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_verify	typeref:struct:io_u *	file:
io_u	verify.c	/^int verify_state_should_stop(struct thread_data *td, struct io_u *io_u)$/;"	z	function:verify_state_should_stop	typeref:struct:io_u *	file:
io_u	verify.c	/^static int verify_header(struct io_u *io_u, struct thread_data *td,$/;"	z	function:verify_header	typeref:struct:io_u *	file:
io_u	verify.c	/^static int verify_trimmed_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:verify_trimmed_io_u	typeref:struct:io_u *	file:
io_u	verify.c	/^static unsigned int get_hdr_inc(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_hdr_inc	typeref:struct:io_u *	file:
io_u	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:__fill_hdr	typeref:struct:io_u *	file:
io_u	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:__fill_hdr	typeref:struct:io_u *	file:
io_u	verify.c	/^static void fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:fill_hdr	typeref:struct:io_u *	file:
io_u	verify.c	/^static void fill_pattern_headers(struct thread_data *td, struct io_u *io_u,$/;"	z	function:fill_pattern_headers	typeref:struct:io_u *	file:
io_u	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:populate_hdr	typeref:struct:io_u *	file:
io_u	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:populate_hdr	typeref:struct:io_u *	file:
io_u	verify.c	/^void populate_verify_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:populate_verify_io_u	typeref:struct:io_u *	file:
io_u	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:struct:io_u *	file:
io_u	zbd.c	/^						      struct io_u *io_u)$/;"	z	function:zbd_convert_to_open_zone	typeref:struct:io_u *	file:
io_u	zbd.c	/^						    struct io_u *io_u,$/;"	z	function:zbd_replay_write_order	typeref:struct:io_u *	file:
io_u	zbd.c	/^				     const struct io_u *io_u)$/;"	z	function:pick_random_zone_idx	typeref:typename:const struct io_u *	file:
io_u	zbd.c	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	z	function:zbd_adjust_ddir	typeref:struct:io_u *	file:
io_u	zbd.c	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_adjust_block	typeref:struct:io_u *	file:
io_u	zbd.c	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_do_io_u_trim	typeref:struct:io_u *	file:
io_u	zbd.c	/^static void zbd_end_zone_io(struct thread_data *td, const struct io_u *io_u,$/;"	z	function:zbd_end_zone_io	typeref:typename:const struct io_u *	file:
io_u	zbd.c	/^static void zbd_put_io(struct thread_data *td, const struct io_u *io_u)$/;"	z	function:zbd_put_io	typeref:typename:const struct io_u *	file:
io_u	zbd.c	/^static void zbd_queue_io(struct thread_data *td, struct io_u *io_u, int q,$/;"	z	function:zbd_queue_io	typeref:struct:io_u *	file:
io_u	zbd.c	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	z	function:setup_zbd_zone_mode	typeref:struct:io_u *	file:
io_u	zbd.c	/^zbd_find_zone(struct thread_data *td, struct io_u *io_u, uint64_t min_bytes,$/;"	z	function:zbd_find_zone	typeref:struct:io_u *	file:
io_u	zbd.h	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:zbd_adjust_ddir	typeref:struct:io_u *	file:
io_u	zbd.h	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:zbd_adjust_block	typeref:struct:io_u *	file:
io_u	zbd.h	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:zbd_do_io_u_trim	typeref:struct:io_u *	file:
io_u	zbd.h	/^static inline void zbd_put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_put_io_u	typeref:struct:io_u *	file:
io_u	zbd.h	/^static inline void zbd_queue_io_u(struct thread_data *td, struct io_u *io_u,$/;"	z	function:zbd_queue_io_u	typeref:struct:io_u *	file:
io_u	zbd.h	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:setup_zbd_zone_mode	typeref:struct:io_u *	file:
io_u_accept	zbd.h	/^	io_u_accept	= 0,$/;"	e	enum:io_u_action
io_u_action	zbd.h	/^enum io_u_action {$/;"	g
io_u_all	fio.h	/^	struct io_u_queue io_u_all;$/;"	m	struct:thread_data	typeref:struct:io_u_queue
io_u_block_info	stat.c	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:uint32_t *
io_u_block_info	stat.h	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:typename:uint32_t *
io_u_clear	io_u.h	/^#define io_u_clear(/;"	d
io_u_complete	stat.h	/^	uint64_t io_u_complete[FIO_IO_U_MAP_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_completed	zbd.h	/^	io_u_completed  = 2,$/;"	e	enum:io_u_action
io_u_completed_nr	engines/librpma_fio.h	/^	int io_u_completed_nr;$/;"	m	struct:librpma_fio_client_data	typeref:typename:int
io_u_completed_nr	engines/rdma.c	/^	int io_u_completed_nr;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
io_u_dist	stat.c	/^void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist)$/;"	z	function:stat_calc_dist	typeref:typename:double *	file:
io_u_dist	stat.h	/^extern void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist);$/;"	z	prototype:stat_calc_dist	typeref:typename:double *	file:
io_u_eof	zbd.h	/^	io_u_eof	= 1,$/;"	e	enum:io_u_action
io_u_fill_buffer	io_u.c	/^void io_u_fill_buffer(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void
io_u_fill_buffer	io_u.h	/^extern void io_u_fill_buffer(struct thread_data *td, struct io_u *, unsigned long long, unsigned/;"	p	typeref:typename:void
io_u_fits	io_u.c	/^static inline bool io_u_fits(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:bool	file:
io_u_flight_nr	engines/librpma_fio.h	/^	int io_u_flight_nr;$/;"	m	struct:librpma_fio_client_data	typeref:typename:int
io_u_flight_nr	engines/rdma.c	/^	int io_u_flight_nr;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
io_u_free	ioengines.h	/^	void (*io_u_free)(struct thread_data *, struct io_u *);$/;"	m	struct:ioengine_ops	typeref:typename:void (*)(struct thread_data *,struct io_u *)
io_u_freelist	fio.h	/^	struct io_u_queue io_u_freelist;$/;"	m	struct:thread_data	typeref:struct:io_u_queue
io_u_in_flight	fio.h	/^	unsigned int io_u_in_flight;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_u_index	engines/io_uring.c	/^	struct io_u **io_u_index;$/;"	m	struct:ioring_data	typeref:struct:io_u **	file:
io_u_index	engines/libaio.c	/^	struct io_u **io_u_index;$/;"	m	struct:libaio_data	typeref:struct:io_u **	file:
io_u_index	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	z	function:client_get_io_u_index	typeref:typename:unsigned int *	file:
io_u_index	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	z	prototype:client_get_io_u_index	typeref:typename:unsigned int *	file:
io_u_index	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	z	function:client_get_io_u_index	typeref:typename:unsigned int *	file:
io_u_index	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	z	prototype:client_get_io_u_index	typeref:typename:unsigned int *	file:
io_u_init	ioengines.h	/^	int (*io_u_init)(struct thread_data *, struct io_u *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct io_u *)
io_u_lat	profile.h	/^	int (*io_u_lat)(struct thread_data *, uint64_t);$/;"	m	struct:prof_io_ops	typeref:typename:int (*)(struct thread_data *,uint64_t)
io_u_lat	stat.c	/^static bool show_lat(double *io_u_lat, int nr, const char **ranges,$/;"	z	function:show_lat	typeref:typename:double *	file:
io_u_lat	stat.c	/^void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_m	typeref:typename:double *	file:
io_u_lat	stat.c	/^void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_n	typeref:typename:double *	file:
io_u_lat	stat.c	/^void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_u	typeref:typename:double *	file:
io_u_lat	stat.h	/^extern void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_m	typeref:typename:double *	file:
io_u_lat	stat.h	/^extern void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_n	typeref:typename:double *	file:
io_u_lat	stat.h	/^extern void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_u	typeref:typename:double *	file:
io_u_lat_m	stat.c	/^static void show_lat_m(double *io_u_lat_m, struct buf_output *out)$/;"	z	function:show_lat_m	typeref:typename:double *	file:
io_u_lat_m	stat.h	/^	uint64_t io_u_lat_m[FIO_IO_U_LAT_M_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_lat_n	stat.c	/^static void show_lat_n(double *io_u_lat_n, struct buf_output *out)$/;"	z	function:show_lat_n	typeref:typename:double *	file:
io_u_lat_n	stat.h	/^	uint64_t io_u_lat_n[FIO_IO_U_LAT_N_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_lat_u	stat.c	/^static void show_lat_u(double *io_u_lat_u, struct buf_output *out)$/;"	z	function:show_lat_u	typeref:typename:double *	file:
io_u_lat_u	stat.c	/^static void stat_calc_lat_nu(struct thread_stat *ts, double *io_u_lat_u)$/;"	z	function:stat_calc_lat_nu	typeref:typename:double *	file:
io_u_lat_u	stat.h	/^	uint64_t io_u_lat_u[FIO_IO_U_LAT_U_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_lock	fio.h	/^	pthread_mutex_t io_u_lock;$/;"	m	struct:thread_data	typeref:typename:pthread_mutex_t
io_u_log_error	io_u.c	/^void io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
io_u_log_error	io_u.h	/^extern void io_u_log_error(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
io_u_map	stat.h	/^	uint64_t io_u_map[FIO_IO_U_MAP_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_mark_complete	io_u.c	/^void io_u_mark_complete(struct thread_data *td, unsigned int nr)$/;"	f	typeref:typename:void
io_u_mark_complete	io_u.h	/^void io_u_mark_complete(struct thread_data *, unsigned int);$/;"	p	typeref:typename:void
io_u_mark_depth	io_u.c	/^void io_u_mark_depth(struct thread_data *td, unsigned int nr)$/;"	f	typeref:typename:void
io_u_mark_depth	io_u.h	/^extern void io_u_mark_depth(struct thread_data *, unsigned int);$/;"	p	typeref:typename:void
io_u_mark_lat_msec	io_u.c	/^static void io_u_mark_lat_msec(struct thread_data *td, unsigned long long msec)$/;"	f	typeref:typename:void	file:
io_u_mark_lat_nsec	io_u.c	/^static void io_u_mark_lat_nsec(struct thread_data *td, unsigned long long nsec)$/;"	f	typeref:typename:void	file:
io_u_mark_lat_usec	io_u.c	/^static void io_u_mark_lat_usec(struct thread_data *td, unsigned long long usec)$/;"	f	typeref:typename:void	file:
io_u_mark_latency	io_u.c	/^static void io_u_mark_latency(struct thread_data *td, unsigned long long nsec)$/;"	f	typeref:typename:void	file:
io_u_mark_submit	io_u.c	/^void io_u_mark_submit(struct thread_data *td, unsigned int nr)$/;"	f	typeref:typename:void
io_u_mark_submit	io_u.h	/^void io_u_mark_submit(struct thread_data *, unsigned int);$/;"	p	typeref:typename:void
io_u_plat	gclient.c	/^				       int ddir, uint64_t *io_u_plat,$/;"	z	function:gfio_show_clat_percentiles	typeref:typename:uint64_t *	file:
io_u_plat	iolog.c	/^uint64_t hist_sum(int j, int stride, uint64_t *io_u_plat,$/;"	z	function:hist_sum	typeref:typename:uint64_t *	file:
io_u_plat	stat.c	/^					     uint64_t *io_u_plat)$/;"	z	function:add_ddir_lat_json	typeref:typename:uint64_t *	file:
io_u_plat	stat.c	/^				      uint64_t *io_u_plat)$/;"	z	function:clat_prio_stat_add_samples	typeref:typename:uint64_t *	file:
io_u_plat	stat.c	/^static inline void reset_io_u_plat(uint64_t *io_u_plat)$/;"	z	function:reset_io_u_plat	typeref:typename:uint64_t *	file:
io_u_plat	stat.c	/^static void show_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	z	function:show_clat_percentiles	typeref:typename:uint64_t *	file:
io_u_plat	stat.c	/^unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	z	function:calc_clat_percentiles	typeref:typename:uint64_t *	file:
io_u_plat	stat.h	/^	uint64_t io_u_plat[FIO_IO_U_PLAT_NR];$/;"	m	struct:clat_prio_stat	typeref:typename:uint64_t[]
io_u_plat	stat.h	/^	uint64_t io_u_plat[FIO_IO_U_PLAT_NR];$/;"	m	struct:io_u_plat_entry	typeref:typename:uint64_t[]
io_u_plat	stat.h	/^	uint64_t io_u_plat[FIO_LAT_CNT][DDIR_RWDIR_CNT][FIO_IO_U_PLAT_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[][][]
io_u_plat	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:uint64_t *	file:
io_u_plat	t/io_uring.c	/^static void show_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	z	function:show_clat_percentiles	typeref:typename:unsigned long *	file:
io_u_plat	t/io_uring.c	/^unsigned int calc_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long *	file:
io_u_plat	t/read-to-pipe-async.c	/^static unsigned int calc_percentiles(unsigned int *io_u_plat, unsigned long nr,$/;"	z	function:calc_percentiles	typeref:typename:unsigned int *	file:
io_u_plat_entry	stat.h	/^struct io_u_plat_entry {$/;"	s
io_u_plat_last	iolog.c	/^		uint64_t *io_u_plat_last)$/;"	z	function:hist_sum	typeref:typename:uint64_t *	file:
io_u_ptr	io_u.c	/^static void io_completed(struct thread_data *td, struct io_u **io_u_ptr,$/;"	z	function:io_completed	typeref:struct:io_u **	file:
io_u_ptr	verify.c	/^int verify_io_u(struct thread_data *td, struct io_u **io_u_ptr)$/;"	z	function:verify_io_u	typeref:struct:io_u **	file:
io_u_ptr	verify.c	/^int verify_io_u_async(struct thread_data *td, struct io_u **io_u_ptr)$/;"	z	function:verify_io_u_async	typeref:struct:io_u **	file:
io_u_qempty	io_u_queue.h	/^static inline int io_u_qempty(const struct io_u_queue *q)$/;"	f	typeref:typename:int
io_u_qexit	io_u_queue.c	/^void io_u_qexit(struct io_u_queue *q, bool shared)$/;"	f	typeref:typename:void
io_u_qexit	io_u_queue.h	/^void io_u_qexit(struct io_u_queue *q, bool shared);$/;"	p	typeref:typename:void
io_u_qinit	io_u_queue.c	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared)$/;"	f	typeref:typename:bool
io_u_qinit	io_u_queue.h	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared);$/;"	p	typeref:typename:bool
io_u_qiter	io_u_queue.h	/^#define io_u_qiter(/;"	d
io_u_qpop	io_u_queue.h	/^static inline struct io_u *io_u_qpop(struct io_u_queue *q)$/;"	f	typeref:struct:io_u *
io_u_qpush	io_u_queue.h	/^static inline void io_u_qpush(struct io_u_queue *q, struct io_u *io_u)$/;"	f	typeref:typename:void
io_u_queue	io_u_queue.h	/^struct io_u_queue {$/;"	s
io_u_queued	fio.h	/^	unsigned int io_u_queued;$/;"	m	struct:thread_data	typeref:typename:unsigned int
io_u_queued	io_u.c	/^void io_u_queued(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
io_u_queued	io_u.h	/^extern void io_u_queued(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
io_u_queued_complete	io_u.c	/^int io_u_queued_complete(struct thread_data *td, int min_evts)$/;"	f	typeref:typename:int
io_u_queued_complete	io_u.h	/^extern int __must_check io_u_queued_complete(struct thread_data *, int);$/;"	p	typeref:typename:int __must_check
io_u_queued_nr	engines/librpma_fio.h	/^	int io_u_queued_nr;$/;"	m	struct:librpma_fio_client_data	typeref:typename:int
io_u_queued_nr	engines/rdma.c	/^	int io_u_queued_nr;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
io_u_quiesce	io_u.c	/^int io_u_quiesce(struct thread_data *td)$/;"	f	typeref:typename:int
io_u_quiesce	io_u.h	/^extern int io_u_quiesce(struct thread_data *);$/;"	p	typeref:typename:int
io_u_rempty	io_u_queue.h	/^static inline int io_u_rempty(struct io_u_ring *ring)$/;"	f	typeref:typename:int
io_u_requeues	fio.h	/^	struct io_u_ring io_u_requeues;$/;"	m	struct:thread_data	typeref:struct:io_u_ring
io_u_rexit	io_u_queue.c	/^void io_u_rexit(struct io_u_ring *ring)$/;"	f	typeref:typename:void
io_u_rexit	io_u_queue.h	/^void io_u_rexit(struct io_u_ring *ring);$/;"	p	typeref:typename:void
io_u_ring	io_u_queue.h	/^struct io_u_ring {$/;"	s
io_u_rinit	io_u_queue.c	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr)$/;"	f	typeref:typename:bool
io_u_rinit	io_u_queue.h	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr);$/;"	p	typeref:typename:bool
io_u_rpop	io_u_queue.h	/^static inline struct io_u *io_u_rpop(struct io_u_ring *r)$/;"	f	typeref:struct:io_u *
io_u_rpush	io_u_queue.h	/^static inline void io_u_rpush(struct io_u_ring *r, struct io_u *io_u)$/;"	f	typeref:typename:void
io_u_set	io_u.h	/^#define io_u_set(/;"	d
io_u_should_trim	trim.c	/^bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool
io_u_should_trim	trim.h	/^extern bool io_u_should_trim(struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:typename:bool
io_u_should_trim	trim.h	/^static inline bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:bool
io_u_submit	backend.c	/^static enum fio_q_status io_u_submit(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
io_u_submit	stat.h	/^	uint64_t io_u_submit[FIO_IO_U_MAP_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_sync_complete	io_u.c	/^int io_u_sync_complete(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
io_u_sync_complete	io_u.h	/^extern int __must_check io_u_sync_complete(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int __must_check
io_u_sync_plat	stat.h	/^	uint64_t io_u_sync_plat[FIO_IO_U_PLAT_NR];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
io_u_verify_off	verify.c	/^static inline void *io_u_verify_off(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:void *	file:
io_uring_cqe	os/linux/io_uring.h	/^struct io_uring_cqe {$/;"	s
io_uring_enter	engines/io_uring.c	/^static int io_uring_enter(struct ioring_data *ld, unsigned int to_submit,$/;"	f	typeref:typename:int	file:
io_uring_enter	t/io_uring.c	/^static int io_uring_enter(struct submitter *s, unsigned int to_submit,$/;"	f	typeref:typename:int	file:
io_uring_files_update	os/linux/io_uring.h	/^struct io_uring_files_update {$/;"	s
io_uring_getevents_arg	os/linux/io_uring.h	/^struct io_uring_getevents_arg {$/;"	s
io_uring_map_buffers	t/io_uring.c	/^static int io_uring_map_buffers(struct submitter *s)$/;"	f	typeref:typename:int	file:
io_uring_map_buffers	t/io_uring.c	/^struct io_uring_map_buffers {$/;"	s	file:
io_uring_params	os/linux/io_uring.h	/^struct io_uring_params {$/;"	s
io_uring_probe	os/linux/io_uring.h	/^struct io_uring_probe {$/;"	s
io_uring_probe	t/io_uring.c	/^static void io_uring_probe(int fd)$/;"	f	typeref:typename:void	file:
io_uring_probe_op	os/linux/io_uring.h	/^struct io_uring_probe_op {$/;"	s
io_uring_register_buffers	t/io_uring.c	/^static int io_uring_register_buffers(struct submitter *s)$/;"	f	typeref:typename:int	file:
io_uring_register_files	t/io_uring.c	/^static int io_uring_register_files(struct submitter *s)$/;"	f	typeref:typename:int	file:
io_uring_register_ring	t/io_uring.c	/^static int io_uring_register_ring(struct submitter *s)$/;"	f	typeref:typename:int	file:
io_uring_restriction	os/linux/io_uring.h	/^struct io_uring_restriction {$/;"	s
io_uring_rsrc_register	os/linux/io_uring.h	/^struct io_uring_rsrc_register {$/;"	s
io_uring_rsrc_update	os/linux/io_uring.h	/^struct io_uring_rsrc_update {$/;"	s
io_uring_rsrc_update2	os/linux/io_uring.h	/^struct io_uring_rsrc_update2 {$/;"	s
io_uring_setup	t/io_uring.c	/^static int io_uring_setup(unsigned entries, struct io_uring_params *p)$/;"	f	typeref:typename:int	file:
io_uring_sqe	os/linux/io_uring.h	/^struct io_uring_sqe {$/;"	s
io_uring_unregister_ring	t/io_uring.c	/^static void io_uring_unregister_ring(struct submitter *s)$/;"	f	typeref:typename:void	file:
io_us	engines/dfs.c	/^	struct io_u	**io_us;$/;"	m	struct:daos_data	typeref:struct:io_u **	file:
io_us	engines/ime.c	/^	struct io_u 	**io_us;		\/* array of queued io_u pointers *\/$/;"	m	struct:ime_data	typeref:struct:io_u **	file:
io_us	engines/libaio.c	/^	struct io_u **io_us;$/;"	m	struct:libaio_data	typeref:struct:io_u **	file:
io_us	engines/libaio.c	/^static void fio_libaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_libaio_queued	typeref:struct:io_u **	file:
io_us	engines/null.c	/^	struct io_u **io_us;$/;"	m	struct:null_data	typeref:struct:io_u **	file:
io_us	engines/rdma.c	/^static int fio_rdmaio_recv(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_recv	typeref:struct:io_u **	file:
io_us	engines/rdma.c	/^static int fio_rdmaio_send(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_send	typeref:struct:io_u **	file:
io_us	engines/rdma.c	/^static void fio_rdmaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_queued	typeref:struct:io_u **	file:
io_us	engines/sync.c	/^	struct io_u **io_us;$/;"	m	struct:syncio_data	typeref:struct:io_u **	file:
io_us	io_u_queue.h	/^	struct io_u **io_us;$/;"	m	struct:io_u_queue	typeref:struct:io_u **
io_us_completed	engines/librpma_fio.h	/^	struct io_u **io_us_completed;$/;"	m	struct:librpma_fio_client_data	typeref:struct:io_u **
io_us_completed	engines/rdma.c	/^	struct io_u **io_us_completed;$/;"	m	struct:rdmaio_data	typeref:struct:io_u **	file:
io_us_flight	engines/librpma_fio.h	/^	struct io_u **io_us_flight;$/;"	m	struct:librpma_fio_client_data	typeref:struct:io_u **
io_us_flight	engines/rdma.c	/^	struct io_u **io_us_flight;$/;"	m	struct:rdmaio_data	typeref:struct:io_u **	file:
io_us_msgs	engines/librpma_gpspm.c	/^	char *io_us_msgs;$/;"	m	struct:client_data	typeref:typename:char *	file:
io_us_queued	engines/librpma_fio.h	/^	struct io_u **io_us_queued;$/;"	m	struct:librpma_fio_client_data	typeref:struct:io_u **
io_us_queued	engines/rdma.c	/^	struct io_u **io_us_queued;$/;"	m	struct:rdmaio_data	typeref:struct:io_u **	file:
io_workqueue_alloc_fn	rate-submit.c	/^static int io_workqueue_alloc_fn(struct submit_worker *sw)$/;"	f	typeref:typename:int	file:
io_workqueue_exit_worker_fn	rate-submit.c	/^static void io_workqueue_exit_worker_fn(struct submit_worker *sw,$/;"	f	typeref:typename:void	file:
io_workqueue_fn	rate-submit.c	/^static int io_workqueue_fn(struct submit_worker *sw,$/;"	f	typeref:typename:int	file:
io_workqueue_free_fn	rate-submit.c	/^static void io_workqueue_free_fn(struct submit_worker *sw)$/;"	f	typeref:typename:void	file:
io_workqueue_init_worker_fn	rate-submit.c	/^static int io_workqueue_init_worker_fn(struct submit_worker *sw)$/;"	f	typeref:typename:int	file:
io_workqueue_pre_sleep_flush_fn	rate-submit.c	/^static bool io_workqueue_pre_sleep_flush_fn(struct submit_worker *sw)$/;"	f	typeref:typename:bool	file:
io_workqueue_pre_sleep_fn	rate-submit.c	/^static void io_workqueue_pre_sleep_fn(struct submit_worker *sw)$/;"	f	typeref:typename:void	file:
io_workqueue_update_acct_fn	rate-submit.c	/^static void io_workqueue_update_acct_fn(struct submit_worker *sw)$/;"	f	typeref:typename:void	file:
io_wq	fio.h	/^	struct workqueue io_wq;$/;"	m	struct:thread_data	typeref:struct:workqueue
iobytes	stat.h	/^	uint64_t iobytes[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
iocb	engines/ime.c	/^	struct ime_aiocb 	iocb;			\/* IME aio request *\/$/;"	m	struct:imeaio_req	typeref:struct:ime_aiocb	file:
iocb	io_u.h	/^		struct iocb iocb;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:struct:iocb
iocbs	engines/libaio.c	/^	struct iocb **iocbs;$/;"	m	struct:libaio_data	typeref:struct:iocb **	file:
iocbs	t/io_uring.c	/^static int prep_more_ios_aio(struct submitter *s, int max_ios, struct iocb *iocbs)$/;"	z	function:prep_more_ios_aio	typeref:struct:iocb *	file:
iocomplete_event	engines/windowsaio.c	/^	HANDLE iocomplete_event;$/;"	m	struct:windowsaio_data	typeref:typename:HANDLE	file:
iocp	engines/windowsaio.c	/^	HANDLE iocp;$/;"	m	struct:thread_ctx	typeref:typename:HANDLE	file:
iocp	engines/windowsaio.c	/^	HANDLE iocp;$/;"	m	struct:windowsaio_data	typeref:typename:HANDLE	file:
iocq	engines/xnvme.c	/^	struct io_u **iocq;$/;"	m	struct:xnvme_fioe_data	typeref:struct:io_u **	file:
iodepth	engines/io_uring.c	/^	unsigned iodepth;$/;"	m	struct:ioring_data	typeref:typename:unsigned	file:
iodepth	gfio.h	/^	struct multitext_widget iodepth;$/;"	m	struct:eta_widget	typeref:struct:multitext_widget
iodepth	thread_options.h	/^	uint32_t iodepth;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iodepth	thread_options.h	/^	unsigned int iodepth;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iodepth_batch	thread_options.h	/^	uint32_t iodepth_batch;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iodepth_batch	thread_options.h	/^	unsigned int iodepth_batch;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iodepth_batch_complete_max	thread_options.h	/^	uint32_t iodepth_batch_complete_max;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iodepth_batch_complete_max	thread_options.h	/^	unsigned int iodepth_batch_complete_max;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iodepth_batch_complete_min	thread_options.h	/^	uint32_t iodepth_batch_complete_min;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iodepth_batch_complete_min	thread_options.h	/^	unsigned int iodepth_batch_complete_min;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iodepth_low	thread_options.h	/^	uint32_t iodepth_low;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iodepth_low	thread_options.h	/^	unsigned int iodepth_low;$/;"	m	struct:thread_options	typeref:typename:unsigned int
ioengine	engines/cpu.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/dev-dax.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/dfs.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/e4defrag.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/exec.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/falloc.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/filecreate.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/filedelete.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/filestat.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/ftruncate.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/glusterfs_async.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/glusterfs_sync.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/http.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/io_uring.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/libaio.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/libcufile.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/libhdfs.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/libiscsi.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/libpmem.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/libzbc.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/mmap.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/mtd.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/nbd.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/nfs.c	/^struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/null.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/null.c	/^static struct ioengine_ops ioengine;$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/pmemblk.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/posixaio.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/rados.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/rbd.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/rdma.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/sg.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/skeleton_external.c	/^struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	engines/solarisaio.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/splice.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/windowsaio.c	/^static struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine	engines/xnvme.c	/^FIO_STATIC struct ioengine_ops ioengine = {$/;"	v	typeref:struct:ioengine_ops
ioengine	gfio.h	/^	struct multitext_widget ioengine;$/;"	m	struct:eta_widget	typeref:struct:multitext_widget
ioengine	t/zbd/test-zbd-support	/^ioengine() {$/;"	f
ioengine	thread_options.h	/^	char *ioengine;$/;"	m	struct:thread_options	typeref:typename:char *
ioengine	thread_options.h	/^	uint8_t ioengine[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
ioengine	tools/fiograph/fiograph.conf	/^[ioengine]$/;"	s
ioengine_aio	engines/ime.c	/^static struct ioengine_ops ioengine_aio = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_busy_wait_polling	tools/fiograph/fiograph.conf	/^[ioengine_busy_wait_polling]$/;"	s
ioengine_client	engines/librpma_apm.c	/^FIO_STATIC struct ioengine_ops ioengine_client = {$/;"	v	typeref:struct:ioengine_ops
ioengine_client	engines/librpma_gpspm.c	/^FIO_STATIC struct ioengine_ops ioengine_client = {$/;"	v	typeref:struct:ioengine_ops
ioengine_cpuio	tools/fiograph/fiograph.conf	/^[ioengine_cpuio]$/;"	s
ioengine_dfs	tools/fiograph/fiograph.conf	/^[ioengine_dfs]$/;"	s
ioengine_e4defrag	tools/fiograph/fiograph.conf	/^[ioengine_e4defrag]$/;"	s
ioengine_exec	tools/fiograph/fiograph.conf	/^[ioengine_exec]$/;"	s
ioengine_filestat	tools/fiograph/fiograph.conf	/^[ioengine_filestat]$/;"	s
ioengine_http	tools/fiograph/fiograph.conf	/^[ioengine_http]$/;"	s
ioengine_ime_aio	tools/fiograph/fiograph.conf	/^[ioengine_ime_aio]$/;"	s
ioengine_io_uring	tools/fiograph/fiograph.conf	/^[ioengine_io_uring]$/;"	s
ioengine_libaio	tools/fiograph/fiograph.conf	/^[ioengine_libaio]$/;"	s
ioengine_libcufile	tools/fiograph/fiograph.conf	/^[ioengine_libcufile]$/;"	s
ioengine_libhdfs	tools/fiograph/fiograph.conf	/^[ioengine_libhdfs]$/;"	s
ioengine_libiscsi	tools/fiograph/fiograph.conf	/^[ioengine_libiscsi]$/;"	s
ioengine_librpma_apm_server	tools/fiograph/fiograph.conf	/^[ioengine_librpma_apm_server]$/;"	s
ioengine_librpma_gpspm_server	tools/fiograph/fiograph.conf	/^[ioengine_librpma_gpspm_server]$/;"	s
ioengine_load	fio.h	/^extern int ioengine_load(struct thread_data *);$/;"	p	typeref:typename:int
ioengine_load	init.c	/^int ioengine_load(struct thread_data *td)$/;"	f	typeref:typename:int
ioengine_mmap	tools/fiograph/fiograph.conf	/^[ioengine_mmap]$/;"	s
ioengine_mtd	tools/fiograph/fiograph.conf	/^[ioengine_mtd]$/;"	s
ioengine_nbd	tools/fiograph/fiograph.conf	/^[ioengine_nbd]$/;"	s
ioengine_net	tools/fiograph/fiograph.conf	/^[ioengine_net]$/;"	s
ioengine_nfs	tools/fiograph/fiograph.conf	/^[ioengine_nfs]$/;"	s
ioengine_ops	ioengines.h	/^struct ioengine_ops {$/;"	s
ioengine_prw	engines/ime.c	/^static struct ioengine_ops ioengine_prw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_prw	engines/sync.c	/^static struct ioengine_ops ioengine_prw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_ptr	engines/null.c	/^void get_ioengine(struct ioengine_ops **ioengine_ptr)$/;"	z	function:get_ioengine	typeref:struct:ioengine_ops **	file:
ioengine_pvrw	engines/ime.c	/^static struct ioengine_ops ioengine_pvrw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_pvrw	engines/sync.c	/^static struct ioengine_ops ioengine_pvrw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_pvrw2	engines/sync.c	/^static struct ioengine_ops ioengine_pvrw2 = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_pvsync2	tools/fiograph/fiograph.conf	/^[ioengine_pvsync2]$/;"	s
ioengine_rados	tools/fiograph/fiograph.conf	/^[ioengine_rados]$/;"	s
ioengine_rbd	tools/fiograph/fiograph.conf	/^[ioengine_rbd]$/;"	s
ioengine_rdma	tools/fiograph/fiograph.conf	/^[ioengine_rdma]$/;"	s
ioengine_rw	engines/net.c	/^static struct ioengine_ops ioengine_rw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_rw	engines/sync.c	/^static struct ioengine_ops ioengine_rw = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_server	engines/librpma_apm.c	/^FIO_STATIC struct ioengine_ops ioengine_server = {$/;"	v	typeref:struct:ioengine_ops
ioengine_server	engines/librpma_gpspm.c	/^FIO_STATIC struct ioengine_ops ioengine_server = {$/;"	v	typeref:struct:ioengine_ops
ioengine_sg	tools/fiograph/fiograph.conf	/^[ioengine_sg]$/;"	s
ioengine_single-instance	tools/fiograph/fiograph.conf	/^[ioengine_single-instance]$/;"	s
ioengine_so_path	thread_options.h	/^	char *ioengine_so_path;$/;"	m	struct:thread_options	typeref:typename:char *
ioengine_splice	engines/net.c	/^static struct ioengine_ops ioengine_splice = {$/;"	v	typeref:struct:ioengine_ops	file:
ioengine_vrw	engines/sync.c	/^static struct ioengine_ops ioengine_vrw = {$/;"	v	typeref:struct:ioengine_ops	file:
iolog	iolog.c	/^uint64_t iolog_nr_samples(struct io_log *iolog)$/;"	z	function:iolog_nr_samples	typeref:struct:io_log *	file:
iolog	iolog.h	/^static inline struct io_sample *get_sample(struct io_log *iolog,$/;"	z	function:get_sample	typeref:struct:io_log *	file:
iolog	stat.c	/^				    struct io_log *iolog,$/;"	z	function:add_log_sample	typeref:struct:io_log *	file:
iolog	stat.c	/^static struct io_logs *get_cur_log(struct io_log *iolog)$/;"	z	function:get_cur_log	typeref:struct:io_log *	file:
iolog	stat.c	/^static struct io_logs *get_new_log(struct io_log *iolog)$/;"	z	function:get_new_log	typeref:struct:io_log *	file:
iolog	stat.c	/^static struct io_logs *regrow_log(struct io_log *iolog)$/;"	z	function:regrow_log	typeref:struct:io_log *	file:
iolog	stat.c	/^static void __add_log_sample(struct io_log *iolog, union io_sample_data data,$/;"	z	function:__add_log_sample	typeref:struct:io_log *	file:
iolog	stat.c	/^static void __add_stat_to_log(struct io_log *iolog, enum fio_ddir ddir,$/;"	z	function:__add_stat_to_log	typeref:struct:io_log *	file:
iolog	stat.c	/^static void _add_stat_to_log(struct io_log *iolog, unsigned long elapsed,$/;"	z	function:_add_stat_to_log	typeref:struct:io_log *	file:
iolog	thread_options.h	/^	uint32_t iolog;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iolog	thread_options.h	/^	unsigned int iolog;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iolog_buf	fio.h	/^	void *iolog_buf;$/;"	m	struct:thread_data	typeref:typename:void *
iolog_compress	iolog.h	/^struct iolog_compress {$/;"	s
iolog_compress_exit	iolog.c	/^void iolog_compress_exit(struct thread_data *td)$/;"	f	typeref:typename:void
iolog_compress_exit	iolog.h	/^extern void iolog_compress_exit(struct thread_data *);$/;"	p	typeref:typename:void
iolog_compress_init	iolog.c	/^int iolog_compress_init(struct thread_data *td, struct sk_out *sk_out)$/;"	f	typeref:typename:int
iolog_compress_init	iolog.h	/^extern int iolog_compress_init(struct thread_data *, struct sk_out *);$/;"	p	typeref:typename:int
iolog_cur_flush	iolog.c	/^int iolog_cur_flush(struct io_log *log, struct io_logs *cur_log)$/;"	f	typeref:typename:int
iolog_cur_flush	iolog.h	/^extern int iolog_cur_flush(struct io_log *, struct io_logs *);$/;"	p	typeref:typename:int
iolog_cur_log	iolog.c	/^struct io_logs *iolog_cur_log(struct io_log *log)$/;"	f	typeref:struct:io_logs *
iolog_cur_log	iolog.h	/^struct io_logs *iolog_cur_log(struct io_log *);$/;"	p	typeref:struct:io_logs *
iolog_delay	iolog.c	/^static void iolog_delay(struct thread_data *td, unsigned long delay)$/;"	f	typeref:typename:void	file:
iolog_f	fio.h	/^	FILE *iolog_f;$/;"	m	struct:thread_data	typeref:typename:FILE *
iolog_file_inflate	iolog.c	/^int iolog_file_inflate(const char *file)$/;"	f	typeref:typename:int
iolog_file_inflate	iolog.h	/^extern int iolog_file_inflate(const char *);$/;"	p	typeref:typename:int
iolog_flush	iolog.c	/^static int iolog_flush(struct io_log *log)$/;"	f	typeref:typename:int	file:
iolog_flush	iolog.c	/^static int iolog_flush(struct io_log *log);$/;"	p	typeref:typename:int	file:
iolog_flush_data	iolog.c	/^struct iolog_flush_data {$/;"	s	file:
iolog_free_deferred	iolog.c	/^static void iolog_free_deferred(struct io_log *log)$/;"	f	typeref:typename:void	file:
iolog_items_to_fetch	iolog.c	/^int64_t iolog_items_to_fetch(struct thread_data *td)$/;"	f	typeref:typename:int64_t
iolog_items_to_fetch	iolog.h	/^int64_t iolog_items_to_fetch(struct thread_data *td);$/;"	p	typeref:typename:int64_t
iolog_nr_samples	iolog.c	/^uint64_t iolog_nr_samples(struct io_log *iolog)$/;"	f	typeref:typename:uint64_t
iolog_nr_samples	iolog.h	/^uint64_t iolog_nr_samples(struct io_log *);$/;"	p	typeref:typename:uint64_t
iolog_put_deferred	iolog.c	/^static void iolog_put_deferred(struct io_log *log, void *ptr)$/;"	f	typeref:typename:void	file:
iolog_ver2	iolog.c	/^static const char iolog_ver2[] = "fio version 2 iolog";$/;"	v	typeref:typename:const char[]	file:
iolog_ver3	iolog.c	/^static const char iolog_ver3[] = "fio version 3 iolog";$/;"	v	typeref:typename:const char[]	file:
iomem_alloc	ioengines.h	/^	int (*iomem_alloc)(struct thread_data *, size_t);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,size_t)
iomem_free	ioengines.h	/^	void (*iomem_free)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:void (*)(struct thread_data *)
ioprio	fio.h	/^	unsigned int ioprio;$/;"	m	struct:thread_data	typeref:typename:unsigned int
ioprio	io_u.h	/^	unsigned short ioprio;$/;"	m	struct:io_u	typeref:typename:unsigned short
ioprio	os/linux/io_uring.h	/^	__u16	ioprio;		\/* ioprio for the request *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__u16
ioprio	os/os-android.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
ioprio	os/os-android.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	z	function:ioprio_value	typeref:typename:int	file:
ioprio	os/os-linux.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
ioprio	os/os-linux.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	z	function:ioprio_value	typeref:typename:int	file:
ioprio	stat.c	/^					enum fio_ddir ddir, uint32_t ioprio,$/;"	z	function:alloc_or_get_clat_prio_index	typeref:typename:uint32_t	file:
ioprio	stat.c	/^				      enum fio_ddir dst_ddir, uint32_t ioprio,$/;"	z	function:clat_prio_stat_add_samples	typeref:typename:uint32_t	file:
ioprio	stat.c	/^				    uint64_t offset, unsigned int ioprio)$/;"	z	function:add_log_sample	typeref:typename:unsigned int	file:
ioprio	stat.c	/^				uint32_t ioprio)$/;"	z	function:find_clat_prio_index	typeref:typename:uint32_t	file:
ioprio	stat.c	/^		     uint64_t offset, unsigned int ioprio)$/;"	z	function:add_slat_sample	typeref:typename:unsigned int	file:
ioprio	stat.c	/^		     uint64_t offset, unsigned int ioprio,$/;"	z	function:add_clat_sample	typeref:typename:unsigned int	file:
ioprio	stat.c	/^		    uint64_t offset, unsigned int ioprio,$/;"	z	function:add_lat_sample	typeref:typename:unsigned int	file:
ioprio	stat.h	/^	uint32_t ioprio;$/;"	m	struct:clat_prio_stat	typeref:typename:uint32_t
ioprio	stat.h	/^	uint32_t ioprio;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
ioprio	thread_options.h	/^	uint32_t ioprio;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ioprio	thread_options.h	/^	unsigned int ioprio;$/;"	m	struct:thread_options	typeref:typename:unsigned int
ioprio_class	os/os-android.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
ioprio_class	os/os-android.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	z	function:ioprio_value	typeref:typename:int	file:
ioprio_class	os/os-linux.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
ioprio_class	os/os-linux.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	z	function:ioprio_value	typeref:typename:int	file:
ioprio_class	thread_options.h	/^	uint32_t ioprio_class;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ioprio_class	thread_options.h	/^	unsigned int ioprio_class;$/;"	m	struct:thread_options	typeref:typename:unsigned int
ioprio_set	os/os-android.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	f	typeref:typename:int
ioprio_set	os/os-dragonfly.h	/^#define ioprio_set(/;"	d
ioprio_set	os/os-linux.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	f	typeref:typename:int
ioprio_set	os/os.h	/^#define ioprio_set(/;"	d
ioprio_value	os/os-android.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	f	typeref:typename:int
ioprio_value	os/os-dragonfly.h	/^#define ioprio_value(/;"	d
ioprio_value	os/os-linux.h	/^static inline int ioprio_value(int ioprio_class, int ioprio)$/;"	f	typeref:typename:int
ioprio_value	os/os.h	/^#define ioprio_value(/;"	d
ioprio_value_is_class_rt	os/os-android.h	/^static inline bool ioprio_value_is_class_rt(unsigned int priority)$/;"	f	typeref:typename:bool
ioprio_value_is_class_rt	os/os-linux.h	/^static inline bool ioprio_value_is_class_rt(unsigned int priority)$/;"	f	typeref:typename:bool
ioprio_value_is_class_rt	os/os.h	/^#define ioprio_value_is_class_rt(/;"	d
iops	eta.c	/^		      unsigned long long *prev_io_iops, unsigned int *iops)$/;"	z	function:calc_iops	typeref:typename:unsigned int *	file:
iops	steadystate.c	/^static bool steadystate_deviation(uint64_t iops, uint64_t bw,$/;"	z	function:steadystate_deviation	typeref:typename:uint64_t	file:
iops	steadystate.c	/^static bool steadystate_slope(uint64_t iops, uint64_t bw,$/;"	z	function:steadystate_slope	typeref:typename:uint64_t	file:
iops_avg_time	thread_options.h	/^	uint32_t iops_avg_time;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
iops_avg_time	thread_options.h	/^	unsigned int iops_avg_time;$/;"	m	struct:thread_options	typeref:typename:unsigned int
iops_data	steadystate.h	/^	uint64_t *iops_data;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t *
iops_graph	gfio.h	/^	struct graph *iops_graph;$/;"	m	struct:gfio_graphs	typeref:struct:graph *
iops_log	fio.h	/^	struct io_log *iops_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
iops_log	t/strided.py	/^        iops_log = run_fio(args.fio, test, index)$/;"	v
iops_log_file	thread_options.h	/^	char *iops_log_file;$/;"	m	struct:thread_options	typeref:typename:char *
iops_log_file	thread_options.h	/^	uint8_t iops_log_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
iops_sample_time	fio.h	/^	struct timespec iops_sample_time;$/;"	m	struct:thread_data	typeref:struct:timespec
iops_stat	stat.h	/^	struct io_stat iops_stat[DDIR_RWDIR_CNT]; \/* IOPS stats *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat[]
iops_str	eta.c	/^		       char **rate_str, char **iops_str)$/;"	z	function:gen_eta_str	typeref:typename:char **	file:
ioring_data	engines/io_uring.c	/^struct ioring_data {$/;"	s	file:
ioring_mmap	engines/io_uring.c	/^struct ioring_mmap {$/;"	s	file:
ioring_options	engines/io_uring.c	/^struct ioring_options {$/;"	s	file:
ios	blktrace.c	/^				 unsigned long *ios, unsigned long long *bs,$/;"	z	function:handle_trace_discard	typeref:typename:unsigned long *	file:
ios	blktrace.c	/^			       unsigned long long ttime, unsigned long *ios,$/;"	z	function:handle_trace_flush	typeref:typename:unsigned long *	file:
ios	blktrace.c	/^			    unsigned long long ttime, unsigned long *ios,$/;"	z	function:handle_trace_fs	typeref:typename:unsigned long *	file:
ios	blktrace.c	/^			 unsigned long *ios, unsigned long long *bs,$/;"	z	function:queue_trace	typeref:typename:unsigned long *	file:
ios	diskutil.h	/^	uint64_t ios[2];$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t[2]
ios	diskutil.h	/^	uint64_t ios[2];$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t[2]
ios	stat.c	/^static inline void reset_io_stat(struct io_stat *ios)$/;"	z	function:reset_io_stat	typeref:struct:io_stat *	file:
ios	t/btrace2fio.c	/^	unsigned long ios[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:unsigned long[]	file:
ios	t/btrace2fio.c	/^static int __output_p(struct btrace_pid *p, unsigned long *ios)$/;"	z	function:__output_p	typeref:typename:unsigned long *	file:
ios	t/btrace2fio.c	/^static int __output_p_fio(struct btrace_pid *p, unsigned long *ios,$/;"	z	function:__output_p_fio	typeref:typename:unsigned long *	file:
ios	t/btrace2fio.c	/^static void __output_p_ascii(struct btrace_pid *p, unsigned long *ios)$/;"	z	function:__output_p_ascii	typeref:typename:unsigned long *	file:
ios_completed	io_u.c	/^static void ios_completed(struct thread_data *td,$/;"	f	typeref:typename:void	file:
ios_threshold	t/btrace2fio.c	/^static unsigned int ios_threshold = 10;$/;"	v	typeref:typename:unsigned int	file:
ioscheduler	thread_options.h	/^	char *ioscheduler;$/;"	m	struct:thread_options	typeref:typename:char *
ioscheduler	thread_options.h	/^	uint8_t ioscheduler[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
iothread	engines/windowsaio.c	/^	HANDLE iothread;$/;"	m	struct:windowsaio_data	typeref:typename:HANDLE	file:
iothread_running	engines/windowsaio.c	/^	BOOL iothread_running;$/;"	m	struct:windowsaio_data	typeref:typename:BOOL	file:
iotype	gfio.h	/^	struct multitext_widget iotype;$/;"	m	struct:eta_widget	typeref:struct:multitext_widget
iov	engines/dfs.c	/^	d_iov_t		iov;$/;"	m	struct:daos_iou	typeref:typename:d_iov_t	file:
iov	os/os-linux.h	/^static inline ssize_t preadv2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:preadv2	typeref:typename:const struct iovec *	file:
iov	os/os-linux.h	/^static inline ssize_t pwritev2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:pwritev2	typeref:typename:const struct iovec *	file:
iov	os/windows/posix.c	/^ssize_t readv(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:readv	typeref:typename:const struct iovec *	file:
iov	os/windows/posix.c	/^ssize_t writev(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:writev	typeref:typename:const struct iovec *	file:
iov	os/windows/posix/include/sys/uio.h	/^ ssize_t readv(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:readv	typeref:typename:const struct iovec *	file:
iov	os/windows/posix/include/sys/uio.h	/^ ssize_t writev(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:writev	typeref:typename:const struct iovec *	file:
iov	server.c	/^static int fio_sendv_data(int sk, struct iovec *iov, int count)$/;"	z	function:fio_sendv_data	typeref:struct:iovec *	file:
iov	server.c	/^static ssize_t iov_total_len(const struct iovec *iov, int count)$/;"	z	function:iov_total_len	typeref:typename:const struct iovec *	file:
iov_base	os/windows/posix/include/sys/uio.h	/^	void	*iov_base;  \/* Base address of a memory region for input or output *\/$/;"	m	struct:iovec	typeref:typename:void *
iov_len	os/windows/posix/include/sys/uio.h	/^	size_t	 iov_len;   \/* The size of the memory pointed to by iov_base *\/$/;"	m	struct:iovec	typeref:typename:size_t
iov_total_len	server.c	/^static ssize_t iov_total_len(const struct iovec *iov, int count)$/;"	f	typeref:typename:ssize_t	file:
iovcnt	engines/ime.c	/^static void fio_ime_queue_commit (struct ime_data *ime_d, int iovcnt)$/;"	z	function:fio_ime_queue_commit	typeref:typename:int	file:
iovcnt	os/os-linux.h	/^static inline ssize_t preadv2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:preadv2	typeref:typename:int	file:
iovcnt	os/os-linux.h	/^static inline ssize_t pwritev2(int fd, const struct iovec *iov, int iovcnt,$/;"	z	function:pwritev2	typeref:typename:int	file:
iovcnt	os/windows/posix.c	/^ssize_t readv(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:readv	typeref:typename:int	file:
iovcnt	os/windows/posix.c	/^ssize_t writev(int fildes, const struct iovec *iov, int iovcnt)$/;"	z	function:writev	typeref:typename:int	file:
iovcnt	os/windows/posix/include/sys/uio.h	/^ ssize_t readv(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:readv	typeref:typename:int	file:
iovcnt	os/windows/posix/include/sys/uio.h	/^ ssize_t writev(int fildes, const struct iovec *iov, int iovcnt);$/;"	z	prototype:writev	typeref:typename:int	file:
iovec	engines/xnvme.c	/^	struct iovec *iovec;$/;"	m	struct:xnvme_fioe_data	typeref:struct:iovec *	file:
iovec	os/windows/posix/include/sys/uio.h	/^struct iovec$/;"	s
iovecs	engines/ime.c	/^	struct iovec 	*iovecs;		\/* array of queued iovecs *\/$/;"	m	struct:ime_data	typeref:struct:iovec *	file:
iovecs	engines/io_uring.c	/^	struct iovec *iovecs;$/;"	m	struct:ioring_data	typeref:struct:iovec *	file:
iovecs	engines/sync.c	/^	struct iovec *iovecs;$/;"	m	struct:syncio_data	typeref:struct:iovec *	file:
iovecs	t/io_uring.c	/^	struct iovec iovecs[];$/;"	m	struct:submitter	typeref:struct:iovec[]	file:
ip	goptions.c	/^				       struct fio_option *o, unsigned int **ip,$/;"	z	function:gopt_new_int_range	typeref:typename:unsigned int **	file:
ip	goptions.c	/^				       struct fio_option *o, unsigned int *ip,$/;"	z	function:gopt_new_combo_int	typeref:typename:unsigned int *	file:
ip	goptions.c	/^				 struct fio_option *o, unsigned int *ip,$/;"	z	function:gopt_new_int	typeref:typename:unsigned int *	file:
ip	goptions.c	/^static void gopt_combo_int_set_val(struct gopt_combo *c, unsigned int ip)$/;"	z	function:gopt_combo_int_set_val	typeref:typename:unsigned int	file:
ipc	idletime.c	/^static volatile struct idle_prof_common ipc;$/;"	v	typeref:typename:volatile struct idle_prof_common	file:
ipc_perm	os/windows/posix/include/sys/shm.h	/^struct ipc_perm$/;"	s
ipo	io_u.h	/^	struct io_piece *ipo;$/;"	m	struct:io_u	typeref:struct:io_piece *
ipo	iolog.c	/^static int ipo_special(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:ipo_special	typeref:struct:io_piece *	file:
ipo	iolog.c	/^void queue_io_piece(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:queue_io_piece	typeref:struct:io_piece *	file:
ipo	iolog.h	/^static inline void init_ipo(struct io_piece *ipo)$/;"	z	function:init_ipo	typeref:struct:io_piece *	file:
ipo	iolog.h	/^static inline void ipo_bytes_align(unsigned int replay_align, struct io_piece *ipo)$/;"	z	function:ipo_bytes_align	typeref:struct:io_piece *	file:
ipo	trim.h	/^static inline void remove_trim_entry(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:remove_trim_entry	typeref:struct:io_piece *	file:
ipo_bytes_align	iolog.h	/^static inline void ipo_bytes_align(unsigned int replay_align, struct io_piece *ipo)$/;"	f	typeref:typename:void
ipo_special	iolog.c	/^static int ipo_special(struct thread_data *td, struct io_piece *ipo)$/;"	f	typeref:typename:int	file:
ipt	idletime.c	/^static int set_cpu_affinity(struct idle_prof_thread *ipt)$/;"	z	function:set_cpu_affinity	typeref:struct:idle_prof_thread *	file:
ipt	idletime.c	/^static void free_cpu_affinity(struct idle_prof_thread *ipt)$/;"	z	function:free_cpu_affinity	typeref:struct:idle_prof_thread *	file:
ipts	idletime.h	/^	struct idle_prof_thread *ipts;$/;"	m	struct:idle_prof_common	typeref:struct:idle_prof_thread *
ipv6	client.h	/^	int ipv6;$/;"	m	struct:fio_client	typeref:typename:int
ipv6	server.c	/^			    struct in6_addr *inp6, int *ipv6)$/;"	z	function:fio_server_parse_string	typeref:typename:int *	file:
ipv6	server.c	/^int fio_server_parse_host(const char *host, int ipv6, struct in_addr *inp,$/;"	z	function:fio_server_parse_host	typeref:typename:int	file:
irange	HOWTO.rst	/^.. _irange:$/;"	T	section:Parameter types
is	stat.c	/^bool calc_lat(struct io_stat *is, unsigned long long *min,$/;"	z	function:calc_lat	typeref:struct:io_stat *	file:
is	stat.c	/^static inline void add_stat_sample(struct io_stat *is, unsigned long long data)$/;"	z	function:add_stat_sample	typeref:struct:io_stat *	file:
is	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	z	prototype:calc_lat	typeref:struct:io_stat *	file:
is_already_allocated	filesetup.c	/^static bool is_already_allocated(const char *fname)$/;"	f	typeref:typename:bool	file:
is_backend	init.c	/^bool is_backend = false;$/;"	v	typeref:typename:bool
is_blktrace	blktrace.c	/^bool is_blktrace(const char *filename, int *need_swap)$/;"	f	typeref:typename:bool
is_blktrace	blktrace.h	/^bool is_blktrace(const char *, int *);$/;"	p	typeref:typename:bool
is_blktrace	blktrace.h	/^static inline bool is_blktrace(const char *fname, int *need_swap)$/;"	f	typeref:typename:bool
is_buf	init.c	/^		char *file, int is_buf, int stonewall_flag, int type,$/;"	z	function:__parse_jobs_ini	typeref:typename:int	file:
is_buf	init.c	/^int parse_jobs_ini(char *file, int is_buf, int stonewall_flag, int type)$/;"	z	function:parse_jobs_ini	typeref:typename:int	file:
is_client	engines/rdma.c	/^	int is_client;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
is_close	tools/hist/fio-histo-log-pctiles.py	/^    def is_close(self, buckets, buckets_expected):$/;"	m	class:Test
is_close_msg	engines/net.c	/^static int is_close_msg(struct io_u *io_u, int len)$/;"	f	typeref:typename:int	file:
is_empty_or_comment	init.c	/^static int is_empty_or_comment(char *line)$/;"	f	typeref:typename:int	file:
is_err	parse.c	/^static void show_option_help(const struct fio_option *o, int is_err)$/;"	z	function:show_option_help	typeref:typename:int	file:
is_ipv6	engines/net.c	/^static inline int is_ipv6(struct netio_options *o)$/;"	f	typeref:typename:int	file:
is_kb	stat.c	/^			 bool is_kb)$/;"	z	function:__add_samples	typeref:typename:bool	file:
is_local_backend	init.c	/^bool is_local_backend = false;$/;"	v	typeref:typename:bool
is_nvme	t/one-core-peak.sh	/^is_nvme() {$/;"	f
is_pow2	engines/libaio.c	/^	int is_pow2;$/;"	m	struct:libaio_data	typeref:typename:int	file:
is_power_of_2	lib/pow2.h	/^static inline bool is_power_of_2(uint64_t val)$/;"	f	typeref:typename:bool
is_power_of_2	oslib/libmtd_common.h	/^static inline int is_power_of_2(unsigned long long n)$/;"	f	typeref:typename:int
is_random	io_u.c	/^				    bool is_random)$/;"	z	function:get_next_buflen	typeref:typename:bool	file:
is_random	io_u.c	/^			   bool *is_random)$/;"	z	function:get_next_offset	typeref:typename:bool *	file:
is_random	io_u.c	/^			  bool *is_random)$/;"	z	function:get_next_block	typeref:typename:bool *	file:
is_running_backend	fio.h	/^static inline bool is_running_backend(void)$/;"	f	typeref:typename:bool
is_scsi_device	t/zbd/test-zbd-support	/^is_scsi_device() {$/;"	f
is_seconds	parse.c	/^					int is_seconds)$/;"	z	function:get_mult_time	typeref:typename:int	file:
is_seconds	parse.c	/^		   int is_seconds, int is_time)$/;"	z	function:str_to_decimal	typeref:typename:int	file:
is_seconds	parse.c	/^int check_str_time(const char *p, long long *val, int is_seconds)$/;"	z	function:check_str_time	typeref:typename:int	file:
is_seconds	parse.h	/^	int is_seconds;			\/* time value with seconds base *\/$/;"	m	struct:fio_option	typeref:typename:int
is_separator	parse.c	/^static int is_separator(char c)$/;"	f	typeref:typename:int	file:
is_sock	client.h	/^	bool is_sock;$/;"	m	struct:fio_client	typeref:typename:bool
is_sock	server.c	/^int fio_server_parse_string(const char *str, char **ptr, bool *is_sock,$/;"	z	function:fio_server_parse_string	typeref:typename:bool *	file:
is_socket	iolog.c	/^static bool is_socket(const char *path)$/;"	f	typeref:typename:bool	file:
is_tcp	engines/net.c	/^static inline int is_tcp(struct netio_options *o)$/;"	f	typeref:typename:int	file:
is_thread	server.c	/^	bool is_thread;$/;"	m	struct:ffi_element	typeref:typename:bool	file:
is_time	exp/test-expression-parser.c	/^					  double *dval, double implied_units, int is_time);$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:int	file:
is_time	parse.c	/^					  int is_time);$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:int	file:
is_time	parse.c	/^		   int is_seconds, int is_time)$/;"	z	function:str_to_decimal	typeref:typename:int	file:
is_time	parse.c	/^int str_to_float(const char *str, double *val, int is_time)$/;"	z	function:str_to_float	typeref:typename:int	file:
is_time	parse.h	/^	int is_time;			\/* time based value *\/$/;"	m	struct:fio_option	typeref:typename:int
is_time	parse.h	/^extern int str_to_float(const char *str, double *val, int is_time);$/;"	z	prototype:str_to_float	typeref:typename:int	file:
is_time	y.tab.c	/^					double implied_units, int is_time)$/;"	z	function:evaluate_arithmetic_expression	typeref:typename:int	file:
is_udp	engines/net.c	/^static inline int is_udp(struct netio_options *o)$/;"	f	typeref:typename:int	file:
is_uint	parse.c	/^			  bool is_uint)$/;"	z	function:val_too_large	typeref:typename:bool	file:
is_uint	parse.c	/^			  bool is_uint)$/;"	z	function:val_too_small	typeref:typename:bool	file:
is_valid_offset	zbd.c	/^static bool is_valid_offset(const struct fio_file *f, uint64_t offset)$/;"	f	typeref:typename:bool	file:
iscsi	engines/libiscsi.c	/^	struct iscsi_context	*iscsi;$/;"	m	struct:iscsi_lun	typeref:struct:iscsi_context *	file:
iscsi	engines/libiscsi.c	/^static void iscsi_cb(struct iscsi_context *iscsi, int status,$/;"	z	function:iscsi_cb	typeref:struct:iscsi_context *	file:
iscsi_cb	engines/libiscsi.c	/^static void iscsi_cb(struct iscsi_context *iscsi, int status,$/;"	f	typeref:typename:void	file:
iscsi_info	engines/libiscsi.c	/^	struct iscsi_info	*iscsi_info;$/;"	m	struct:iscsi_lun	typeref:struct:iscsi_info *	file:
iscsi_info	engines/libiscsi.c	/^static int fio_iscsi_setup_lun(struct iscsi_info *iscsi_info,$/;"	z	function:fio_iscsi_setup_lun	typeref:struct:iscsi_info *	file:
iscsi_info	engines/libiscsi.c	/^struct iscsi_info {$/;"	s	file:
iscsi_lun	engines/libiscsi.c	/^	struct iscsi_lun	*iscsi_lun;$/;"	m	struct:iscsi_task	typeref:struct:iscsi_lun *	file:
iscsi_lun	engines/libiscsi.c	/^static void fio_iscsi_cleanup_lun(struct iscsi_lun *iscsi_lun) {$/;"	z	function:fio_iscsi_cleanup_lun	typeref:struct:iscsi_lun *	file:
iscsi_lun	engines/libiscsi.c	/^struct iscsi_lun {$/;"	s	file:
iscsi_options	engines/libiscsi.c	/^struct iscsi_options {$/;"	s	file:
iscsi_task	engines/libiscsi.c	/^struct iscsi_task {$/;"	s	file:
issue_time	io_u.h	/^	struct timespec issue_time;$/;"	m	struct:io_u	typeref:struct:timespec
it	helper_thread.c	/^static int eval_timer(struct interval_timer *it, const struct timespec *now,$/;"	z	function:eval_timer	typeref:struct:interval_timer *	file:
item	t/dedupe.c	/^struct item {$/;"	s	file:
item_style	tools/fiograph/fiograph.conf	/^item_style=<tr> <td align = "left"> <font color="{}" > {} <\/font> <\/td> <\/tr>$/;"	k	section:fio_jobs
items	t/dedupe.c	/^	unsigned long items;$/;"	m	struct:worker_thread	typeref:typename:unsigned long	file:
items	t/dedupe.c	/^static int insert_chunks(struct item *items, unsigned int nitems,$/;"	z	function:insert_chunks	typeref:struct:item *	file:
iter	blktrace.h	/^	int			iter;	\/\/ current iteration$/;"	m	struct:blktrace_cursor	typeref:typename:int
iter	iolog.c	/^			    z_stream *stream, struct inflate_chunk_iter *iter)$/;"	z	function:inflate_chunk	typeref:struct:inflate_chunk_iter *	file:
iter	iolog.c	/^			 struct inflate_chunk_iter *iter)$/;"	z	function:finish_chunk	typeref:struct:inflate_chunk_iter *	file:
iter	lib/prio_tree.c	/^static inline int overlap(struct prio_tree_iter *iter,$/;"	z	function:overlap	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_first(struct prio_tree_iter *iter)$/;"	z	function:prio_tree_first	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_left(struct prio_tree_iter *iter,$/;"	z	function:prio_tree_left	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_parent(struct prio_tree_iter *iter)$/;"	z	function:prio_tree_parent	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_right(struct prio_tree_iter *iter,$/;"	z	function:prio_tree_right	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_next(struct prio_tree_iter *iter)$/;"	z	function:prio_tree_next	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.h	/^static inline void prio_tree_iter_init(struct prio_tree_iter *iter,$/;"	z	function:prio_tree_iter_init	typeref:struct:prio_tree_iter *	file:
iter	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_next(struct prio_tree_iter *iter);$/;"	z	prototype:prio_tree_next	typeref:struct:prio_tree_iter *	file:
iter_rb_tree	t/dedupe.c	/^static void iter_rb_tree(uint64_t *nextents, uint64_t *nchunks, uint64_t *ndupextents)$/;"	f	typeref:typename:void	file:
ival	exp/test-expression-parser.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:long long *	file:
ival	options.c	/^void add_opt_posval(const char *optname, const char *ival, const char *help)$/;"	z	function:add_opt_posval	typeref:typename:const char *	file:
ival	options.c	/^void del_opt_posval(const char *optname, const char *ival)$/;"	z	function:del_opt_posval	typeref:typename:const char *	file:
ival	parse.c	/^extern int evaluate_arithmetic_expression(const char *buffer, long long *ival,$/;"	z	prototype:evaluate_arithmetic_expression	typeref:typename:long long *	file:
ival	parse.h	/^	const char *ival;		\/* string option *\/$/;"	m	struct:value_pair	typeref:typename:const char *
ival	y.tab.c	/^		long long ival;$/;"	m	struct:valtype::parser_value_type	typeref:typename:long long	file:
ival	y.tab.c	/^	long long ival;$/;"	m	struct:parser_value_type	typeref:typename:long long	file:
ival	y.tab.c	/^int evaluate_arithmetic_expression(const char *buffer, long long *ival, double *dval,$/;"	z	function:evaluate_arithmetic_expression	typeref:typename:long long *	file:
ival	y.tab.h	/^		long long ival;$/;"	m	struct:valtype::parser_value_type	typeref:typename:long long
ix	graph.c	/^const char *graph_find_tooltip(struct graph *g, int ix, int iy)$/;"	z	function:graph_find_tooltip	typeref:typename:int	file:
iy	graph.c	/^const char *graph_find_tooltip(struct graph *g, int ix, int iy)$/;"	z	function:graph_find_tooltip	typeref:typename:int	file:
j	iolog.c	/^uint64_t hist_sum(int j, int stride, uint64_t *io_u_plat,$/;"	z	function:hist_sum	typeref:typename:int	file:
je	client.c	/^static void client_display_thread_status(struct jobs_eta *je)$/;"	z	function:client_display_thread_status	typeref:struct:jobs_eta *	file:
je	client.c	/^static void client_display_thread_status(struct jobs_eta *je);$/;"	z	prototype:client_display_thread_status	typeref:struct:jobs_eta *	file:
je	client.c	/^static void convert_jobs_eta(struct jobs_eta *je)$/;"	z	function:convert_jobs_eta	typeref:struct:jobs_eta *	file:
je	client.c	/^void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je)$/;"	z	function:fio_client_sum_jobs_eta	typeref:struct:jobs_eta *	file:
je	client.h	/^extern void fio_client_sum_jobs_eta(struct jobs_eta *dst, struct jobs_eta *je);$/;"	z	prototype:fio_client_sum_jobs_eta	typeref:struct:jobs_eta *	file:
je	eta.c	/^bool calc_thread_status(struct jobs_eta *je, int force)$/;"	z	function:calc_thread_status	typeref:struct:jobs_eta *	file:
je	eta.c	/^static int gen_eta_str(struct jobs_eta *je, char *p, size_t left,$/;"	z	function:gen_eta_str	typeref:struct:jobs_eta *	file:
je	eta.c	/^void display_thread_status(struct jobs_eta *je)$/;"	z	function:display_thread_status	typeref:struct:jobs_eta *	file:
je	gclient.c	/^static void gfio_update_all_eta(struct jobs_eta *je)$/;"	z	function:gfio_update_all_eta	typeref:struct:jobs_eta *	file:
je	gclient.c	/^static void gfio_update_client_eta(struct fio_client *client, struct jobs_eta *je)$/;"	z	function:gfio_update_client_eta	typeref:struct:jobs_eta *	file:
je	stat.h	/^extern bool calc_thread_status(struct jobs_eta *je, int force);$/;"	z	prototype:calc_thread_status	typeref:struct:jobs_eta *	file:
je	stat.h	/^extern void display_thread_status(struct jobs_eta *je);$/;"	z	prototype:display_thread_status	typeref:struct:jobs_eta *	file:
jhash	hash.h	/^static inline uint32_t jhash(const void *key, uint32_t length, uint32_t initval)$/;"	f	typeref:typename:uint32_t
job_add_num	init.c	/^static int add_job(struct thread_data *td, const char *jobname, int job_add_num,$/;"	z	function:add_job	typeref:typename:int	file:
job_combo	goptions.c	/^	GtkWidget *job_combo;$/;"	m	struct:gopt_job_view	typeref:typename:GtkWidget *	file:
job_file	gfio.h	/^	char *job_file;$/;"	m	struct:gui_entry	typeref:typename:char *
job_list	server.c	/^static int handle_command(struct sk_out *sk_out, struct flist_head *job_list,$/;"	z	function:handle_command	typeref:struct:flist_head *	file:
job_list	server.c	/^static int handle_run_cmd(struct sk_out *sk_out, struct flist_head *job_list,$/;"	z	function:handle_run_cmd	typeref:struct:flist_head *	file:
job_list	server.c	/^static int handle_trigger_cmd(struct fio_net_cmd *cmd, struct flist_head *job_list)$/;"	z	function:handle_trigger_cmd	typeref:struct:flist_head *	file:
job_list	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pid_t pid)$/;"	z	function:fio_server_add_job_pid	typeref:struct:flist_head *	file:
job_list	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pthread_t thread)$/;"	z	function:fio_server_add_job_pid	typeref:struct:flist_head *	file:
job_list	server.c	/^static void fio_server_check_jobs(struct flist_head *job_list)$/;"	z	function:fio_server_check_jobs	typeref:struct:flist_head *	file:
job_max_open_zones	thread_options.h	/^	unsigned int job_max_open_zones;$/;"	m	struct:thread_options	typeref:typename:unsigned int
job_notebook	gfio.h	/^	GtkWidget *job_notebook;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
job_opt_object	client.c	/^static struct json_object *job_opt_object = NULL;$/;"	v	typeref:struct:json_object *	file:
job_sections	init.c	/^static char **job_sections;$/;"	v	typeref:typename:char **	file:
job_start	client.h	/^	client_cmd_op		*job_start;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
job_thread	gfio.c	/^static void *job_thread(void *arg)$/;"	f	typeref:typename:void *	file:
job_var_opts_exclude	t/zbd/test-zbd-support	/^job_var_opts_exclude() {$/;"	f
jobname	init.c	/^				       bool preserve_eo, const char *jobname)$/;"	z	function:get_new_job	typeref:typename:const char *	file:
jobname	init.c	/^			   const char *jobname, int jobnum, int filenum)$/;"	z	function:make_filename	typeref:typename:const char *	file:
jobname	init.c	/^static bool wait_for_ok(const char *jobname, struct thread_options *o)$/;"	z	function:wait_for_ok	typeref:typename:const char *	file:
jobname	init.c	/^static const char *make_log_name(const char *logname, const char *jobname)$/;"	z	function:make_log_name	typeref:typename:const char *	file:
jobname	init.c	/^static int add_job(struct thread_data *td, const char *jobname, int job_add_num,$/;"	z	function:add_job	typeref:typename:const char *	file:
jobname	init.c	/^static int verify_per_group_options(struct thread_data *td, const char *jobname)$/;"	z	function:verify_per_group_options	typeref:typename:const char *	file:
jobno	debug.h	/^	unsigned int jobno;$/;"	m	struct:debug_level	typeref:typename:unsigned int
jobnum	init.c	/^			   const char *jobname, int jobnum, int filenum)$/;"	z	function:make_filename	typeref:typename:int	file:
jobnum	t/steadystate_tests.py	/^    jobnum = 0$/;"	v
jobs	client.h	/^	unsigned int jobs;$/;"	m	struct:fio_client	typeref:typename:unsigned int
jobs	gfio.h	/^	GtkWidget *jobs;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
jobs	server.h	/^	uint32_t jobs;$/;"	m	struct:cmd_start_pdu	typeref:typename:uint32_t
jobs_eta	client.h	/^	client_jobs_eta_op	*jobs_eta;$/;"	m	struct:client_ops	typeref:typename:client_jobs_eta_op *
json	doc/Makefile	/^json:$/;"	t
json_add_job_opts	stat.c	/^static void json_add_job_opts(struct json_object *root, const char *name,$/;"	f	typeref:typename:void	file:
json_array	json.h	/^struct json_array {$/;"	s
json_array_add_disk_util	stat.c	/^void json_array_add_disk_util(struct disk_util_stat *dus,$/;"	f	typeref:typename:void
json_array_add_disk_util	stat.h	/^extern void json_array_add_disk_util(struct disk_util_stat *dus,$/;"	p	typeref:typename:void
json_array_add_value	json.c	/^static int json_array_add_value(struct json_array *array, struct json_value *value)$/;"	f	typeref:typename:int	file:
json_array_add_value_array	json.h	/^static inline int json_array_add_value_array(struct json_array *obj,$/;"	f	typeref:typename:int
json_array_add_value_float	json.h	/^static inline int json_array_add_value_float(struct json_array *obj,$/;"	f	typeref:typename:int
json_array_add_value_int	json.h	/^static inline int json_array_add_value_int(struct json_array *obj,$/;"	f	typeref:typename:int
json_array_add_value_object	json.h	/^static inline int json_array_add_value_object(struct json_array *obj,$/;"	f	typeref:typename:int
json_array_add_value_string	json.h	/^static inline int json_array_add_value_string(struct json_array *obj,$/;"	f	typeref:typename:int
json_array_add_value_type	json.c	/^int json_array_add_value_type(struct json_array *array,$/;"	f	typeref:typename:int
json_array_add_value_type	json.h	/^int json_array_add_value_type(struct json_array *array,$/;"	p	typeref:typename:int
json_array_last_value_object	json.h	/^#define json_array_last_value_object(/;"	d
json_array_level	json.c	/^static int json_array_level(struct json_array *array)$/;"	f	typeref:typename:int	file:
json_array_level	json.c	/^static int json_array_level(struct json_array *array);$/;"	p	typeref:typename:int	file:
json_create_array	json.c	/^struct json_array *json_create_array(void)$/;"	f	typeref:struct:json_array *
json_create_array	json.h	/^struct json_array *json_create_array(void);$/;"	p	typeref:struct:json_array *
json_create_object	json.c	/^struct json_object *json_create_object(void)$/;"	f	typeref:struct:json_object *
json_create_object	json.h	/^struct json_object *json_create_object(void);$/;"	p	typeref:struct:json_object *
json_create_pair	json.c	/^static struct json_pair *json_create_pair(const char *name, struct json_value *value)$/;"	f	typeref:struct:json_pair *	file:
json_create_value_array	json.c	/^static struct json_value *json_create_value_array(struct json_array *array)$/;"	f	typeref:struct:json_value *	file:
json_create_value_float	json.c	/^static struct json_value *json_create_value_float(double number)$/;"	f	typeref:struct:json_value *	file:
json_create_value_int	json.c	/^static struct json_value *json_create_value_int(long long number)$/;"	f	typeref:struct:json_value *	file:
json_create_value_object	json.c	/^static struct json_value *json_create_value_object(struct json_object *obj)$/;"	f	typeref:struct:json_value *	file:
json_create_value_string	json.c	/^static struct json_value *json_create_value_string(const char *str)$/;"	f	typeref:struct:json_value *	file:
json_free_array	json.c	/^static void json_free_array(struct json_array *array)$/;"	f	typeref:typename:void	file:
json_free_object	json.c	/^void json_free_object(struct json_object *obj)$/;"	f	typeref:typename:void
json_free_object	json.h	/^void json_free_object(struct json_object *obj);$/;"	p	typeref:typename:void
json_free_pair	json.c	/^static void json_free_pair(struct json_pair *pair)$/;"	f	typeref:typename:void	file:
json_free_pair	json.c	/^static void json_free_pair(struct json_pair *pair);$/;"	p	typeref:typename:void	file:
json_free_value	json.c	/^static void json_free_value(struct json_value *value)$/;"	f	typeref:typename:void	file:
json_free_value	json.c	/^static void json_free_value(struct json_value *value);$/;"	p	typeref:typename:void	file:
json_object	json.h	/^struct json_object {$/;"	s
json_object_add_client_info	client.c	/^static void json_object_add_client_info(struct json_object *obj,$/;"	f	typeref:typename:void	file:
json_object_add_disk_utils	stat.c	/^static void json_object_add_disk_utils(struct json_object *obj,$/;"	f	typeref:typename:void	file:
json_object_add_pair	json.c	/^static int json_object_add_pair(struct json_object *obj, struct json_pair *pair)$/;"	f	typeref:typename:int	file:
json_object_add_value_array	json.h	/^static inline int json_object_add_value_array(struct json_object *obj,$/;"	f	typeref:typename:int
json_object_add_value_float	json.h	/^static inline int json_object_add_value_float(struct json_object *obj,$/;"	f	typeref:typename:int
json_object_add_value_int	json.h	/^static inline int json_object_add_value_int(struct json_object *obj,$/;"	f	typeref:typename:int
json_object_add_value_object	json.h	/^static inline int json_object_add_value_object(struct json_object *obj,$/;"	f	typeref:typename:int
json_object_add_value_string	json.h	/^static inline int json_object_add_value_string(struct json_object *obj,$/;"	f	typeref:typename:int
json_object_add_value_type	json.c	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	f	typeref:typename:int
json_object_add_value_type	json.h	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	p	typeref:typename:int
json_object_level	json.c	/^static int json_object_level(struct json_object *object)$/;"	f	typeref:typename:int	file:
json_pair	json.h	/^struct json_pair {$/;"	s
json_pair_level	json.c	/^static int json_pair_level(struct json_pair *pair)$/;"	f	typeref:typename:int	file:
json_pair_level	json.c	/^static int json_pair_level(struct json_pair *pair);$/;"	p	typeref:typename:int	file:
json_print_array	json.c	/^static void json_print_array(struct json_array *array, struct buf_output *out)$/;"	f	typeref:typename:void	file:
json_print_level	json.c	/^static void json_print_level(int level, struct buf_output *out)$/;"	f	typeref:typename:void	file:
json_print_object	json.c	/^void json_print_object(struct json_object *obj, struct buf_output *out)$/;"	f	typeref:typename:void
json_print_object	json.h	/^void json_print_object(struct json_object *obj, struct buf_output *out);$/;"	p	typeref:typename:void
json_print_pair	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *);$/;"	p	typeref:typename:void	file:
json_print_pair	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *out)$/;"	f	typeref:typename:void	file:
json_print_value	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *);$/;"	p	typeref:typename:void	file:
json_print_value	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *out)$/;"	f	typeref:typename:void	file:
json_value	json.h	/^struct json_value {$/;"	s
json_value_level	json.c	/^static int json_value_level(struct json_value *value)$/;"	f	typeref:typename:int	file:
json_value_level	json.c	/^static int json_value_level(struct json_value *value);$/;"	p	typeref:typename:int	file:
jsondata	t/steadystate_tests.py	/^            jsondata = json.loads(source.read())$/;"	v
junk_buf	engines/libcufile.c	/^	void               *junk_buf;      \/* buffer to simulate cudaMemcpy with$/;"	m	struct:libcufile_options	typeref:typename:void *	file:
kb_base	stat.h	/^	uint32_t kb_base;$/;"	m	struct:group_run_stats	typeref:typename:uint32_t
kb_base	stat.h	/^	uint32_t kb_base;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
kb_base	thread_options.h	/^	uint32_t kb_base;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
kb_base	thread_options.h	/^	unsigned int kb_base;$/;"	m	struct:thread_options	typeref:typename:unsigned int
keccakf	crc/sha3.c	/^static void keccakf(uint64_t st[25])$/;"	f	typeref:typename:void	file:
keccakf_piln	crc/sha3.c	/^static const int keccakf_piln[24] = {$/;"	v	typeref:typename:const int[24]	file:
keccakf_rndc	crc/sha3.c	/^static const uint64_t keccakf_rndc[24] = {$/;"	v	typeref:typename:const uint64_t[24]	file:
keccakf_rotc	crc/sha3.c	/^static const int keccakf_rotc[24] = {$/;"	v	typeref:typename:const int[24]	file:
keep	engines/pmemblk.c	/^static void pmb_close(fio_pmemblk_file_t pmb, const bool keep)$/;"	z	function:pmb_close	typeref:typename:const bool	file:
keep_running	backend.c	/^static bool keep_running(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
key	crc/murmur3.c	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed)$/;"	z	function:murmurhash3	typeref:typename:const void *	file:
key	crc/murmur3.h	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed);$/;"	z	prototype:murmurhash3	typeref:typename:const void *	file:
key	engines/http.c	/^static void _hmac(unsigned char *md, void *key, int key_len, char *data) {$/;"	z	function:_hmac	typeref:typename:void *	file:
key	filesetup.c	/^	unsigned int key;$/;"	m	struct:fio_mount	typeref:typename:unsigned int	file:
key	gfio.c	/^static void ge_update_settings_fn(gpointer key, gpointer value, gpointer data)$/;"	z	function:ge_update_settings_fn	typeref:typename:gpointer	file:
key	hash.h	/^static inline uint32_t jhash(const void *key, uint32_t length, uint32_t initval)$/;"	z	function:jhash	typeref:typename:const void *	file:
key	init.c	/^	int key;$/;"	m	struct:fpre_keyword	typeref:typename:int	file:
key	os/windows/posix.c	/^int shmget(key_t key, size_t size, int shmflg)$/;"	z	function:shmget	typeref:typename:key_t	file:
key	os/windows/posix/include/sys/shm.h	/^int shmget(key_t key, size_t size, int shmflg);$/;"	z	prototype:shmget	typeref:typename:key_t	file:
key_len	engines/http.c	/^static void _hmac(unsigned char *md, void *key, int key_len, char *data) {$/;"	z	function:_hmac	typeref:typename:int	file:
key_t	os/windows/posix/include/sys/shm.h	/^typedef int key_t;$/;"	t	typeref:typename:int
keyboard_mode	gfio.c	/^			      gboolean keyboard_mode, GtkTooltip *tooltip,$/;"	z	function:graph_tooltip	typeref:typename:gboolean	file:
keyword	init.c	/^	const char *keyword;$/;"	m	struct:fpre_keyword	typeref:typename:const char *	file:
kib	t/btrace2fio.c	/^	uint64_t kib[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:uint64_t[]	file:
kill	os/os-windows.h	/^int kill(pid_t pid, int sig);$/;"	p	typeref:typename:int
kill	os/windows/posix.c	/^int kill(pid_t pid, int sig)$/;"	f	typeref:typename:int
kill_tv_tls_key	gettime.c	/^static void kill_tv_tls_key(void *data)$/;"	f	typeref:typename:void	file:
kilo	parse.c	/^int str_to_decimal(const char *str, long long *val, int kilo, void *data,$/;"	z	function:str_to_decimal	typeref:typename:int	file:
l	graph.c	/^static double find_double_values(struct graph_label *l, double_comparator cmp)$/;"	z	function:find_double_values	typeref:struct:graph_label *	file:
l	graph.c	/^static int count_values(struct graph_label *l)$/;"	z	function:count_values	typeref:struct:graph_label *	file:
l	graph.c	/^static int graph_nonzero_y(struct graph_label *l)$/;"	z	function:graph_nonzero_y	typeref:struct:graph_label *	file:
l	graph.c	/^static void __graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	z	function:__graph_value_drop	typeref:struct:graph_label *	file:
l	graph.c	/^static void graph_free_values(struct graph_label *l)$/;"	z	function:graph_free_values	typeref:struct:graph_label *	file:
l	graph.c	/^static void graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	z	function:graph_value_drop	typeref:struct:graph_label *	file:
l	parse.h	/^extern int parse_cmd_option(const char *t, const char *l,$/;"	z	prototype:parse_cmd_option	typeref:typename:const char *	file:
l_opts	init.c	/^static struct option l_opts[FIO_NR_OPTIONS] = {$/;"	v	typeref:struct:option[]	file:
label	ghelpers.c	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_combo_entry_in_frame	typeref:typename:const char *	file:
label	ghelpers.c	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_info_entry_in_frame	typeref:typename:const char *	file:
label	ghelpers.c	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	z	function:new_info_entry_in_frame_rgb	typeref:typename:const char *	file:
label	ghelpers.c	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label)$/;"	z	function:new_info_label_in_frame	typeref:typename:const char *	file:
label	ghelpers.h	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_combo_entry_in_frame	typeref:typename:const char *	file:
label	ghelpers.h	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_info_entry_in_frame	typeref:typename:const char *	file:
label	ghelpers.h	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	z	prototype:new_info_entry_in_frame_rgb	typeref:typename:const char *	file:
label	ghelpers.h	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label);$/;"	z	prototype:new_info_label_in_frame	typeref:typename:const char *	file:
label	graph.c	/^				const char *label)$/;"	z	function:graph_find_label	typeref:typename:const char *	file:
label	graph.c	/^	char *label;$/;"	m	struct:graph_label	typeref:typename:char *	file:
label	graph.c	/^graph_label_t graph_add_label(struct graph *bg, const char *label)$/;"	z	function:graph_add_label	typeref:typename:const char *	file:
label	graph.c	/^int graph_add_data(struct graph *bg, graph_label_t label, const double value)$/;"	z	function:graph_add_data	typeref:typename:graph_label_t	file:
label	graph.c	/^int graph_add_xy_data(struct graph *bg, graph_label_t label,$/;"	z	function:graph_add_xy_data	typeref:typename:graph_label_t	file:
label	graph.c	/^void graph_set_color(struct graph *gr, graph_label_t label, double red,$/;"	z	function:graph_set_color	typeref:typename:graph_label_t	file:
label	graph.h	/^graph_label_t graph_add_label(struct graph *g, const char *label);$/;"	z	prototype:graph_add_label	typeref:typename:const char *	file:
label	graph.h	/^int graph_add_data(struct graph *g, graph_label_t label, const double value);$/;"	z	prototype:graph_add_data	typeref:typename:graph_label_t	file:
label	graph.h	/^int graph_add_xy_data(struct graph *g, graph_label_t label,$/;"	z	prototype:graph_add_xy_data	typeref:typename:graph_label_t	file:
label	graph.h	/^void graph_set_color(struct graph *g, graph_label_t label,$/;"	z	prototype:graph_set_color	typeref:typename:graph_label_t	file:
label_list	graph.c	/^	struct flist_head label_list;$/;"	m	struct:graph	typeref:struct:flist_head	file:
label_offset	graph.c	/^			double label_offset, double bar_width,$/;"	z	function:draw_bars	typeref:typename:double	file:
label_set_int_value	ghelpers.c	/^void label_set_int_value(GtkWidget *entry, unsigned int val)$/;"	f	typeref:typename:void
label_set_int_value	ghelpers.h	/^void label_set_int_value(GtkWidget *entry, unsigned int val);$/;"	p	typeref:typename:void
labels	gclient.c	/^					    const char **labels,$/;"	z	function:setup_lat_bucket_graph	typeref:typename:const char **	file:
labels	gclient.c	/^static GtkWidget *gfio_output_lat_buckets(double *lat, const char **labels,$/;"	z	function:gfio_output_lat_buckets	typeref:typename:const char **	file:
language	doc/conf.py	/^language = None$/;"	v
last	lib/prio_tree.h	/^	uint64_t		last;	\/* last location _in_ interval *\/$/;"	m	struct:prio_tree_node	typeref:typename:uint64_t
last_argv	oslib/getopt_long.c	/^	char *const *last_argv;$/;"	m	struct:getopt_private_state	typeref:typename:char * const *	file:
last_block	io_u.c	/^static uint64_t last_block(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:uint64_t	file:
last_cmd	client.h	/^	unsigned int last_cmd;$/;"	m	struct:fio_client	typeref:typename:unsigned int
last_ddir	engines/sync.c	/^	enum fio_ddir last_ddir;$/;"	m	struct:syncio_data	typeref:enum:fio_ddir	file:
last_ddir	fio.h	/^	enum fio_ddir last_ddir;$/;"	m	struct:thread_data	typeref:enum:fio_ddir
last_du	diskutil.c	/^static struct disk_util *last_du;$/;"	v	typeref:struct:disk_util *	file:
last_dus	diskutil.h	/^	struct disk_util_stat last_dus;$/;"	m	struct:disk_util	typeref:struct:disk_util_stat
last_end	t/btrace2fio.c	/^	uint64_t last_end[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:uint64_t[]	file:
last_entry	server.c	/^					struct sk_entry **last_entry,$/;"	z	function:__fio_net_prep_tail	typeref:struct:sk_entry **	file:
last_entry	server.c	/^				struct sk_entry **last_entry, z_stream *stream,$/;"	z	function:__deflate_pdu_buffer	typeref:struct:sk_entry **	file:
last_file	engines/sync.c	/^	struct fio_file *last_file;$/;"	m	struct:syncio_data	typeref:struct:fio_file *	file:
last_io_u	engines/librpma_apm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	function:client_io_flush	typeref:struct:io_u *	file:
last_io_u	engines/librpma_apm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	prototype:client_io_flush	typeref:struct:io_u *	file:
last_io_u	engines/librpma_gpspm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	function:client_io_flush	typeref:struct:io_u *	file:
last_io_u	engines/librpma_gpspm.c	/^		struct io_u *first_io_u, struct io_u *last_io_u,$/;"	z	prototype:client_io_flush	typeref:struct:io_u *	file:
last_issue	fio.h	/^	struct timespec last_issue;$/;"	m	struct:thread_data	typeref:struct:timespec
last_majdev	diskutil.c	/^static int last_majdev, last_mindev;$/;"	v	typeref:typename:int	file:
last_major	t/btrace2fio.c	/^	unsigned int last_major, last_minor;$/;"	m	struct:btrace_pid	typeref:typename:unsigned int	file:
last_mindev	diskutil.c	/^static int last_majdev, last_mindev;$/;"	v	typeref:typename:int	file:
last_minor	t/btrace2fio.c	/^	unsigned int last_major, last_minor;$/;"	m	struct:btrace_pid	typeref:typename:unsigned int	file:
last_offset	engines/ime.c	/^	unsigned long long	last_offset;$/;"	m	struct:ime_data	typeref:typename:unsigned long long	file:
last_offset	engines/sync.c	/^	unsigned long long last_offset;$/;"	m	struct:syncio_data	typeref:typename:unsigned long long	file:
last_op	os/linux/io_uring.h	/^	__u8 last_op;	\/* last opcode supported *\/$/;"	m	struct:io_uring_probe	typeref:typename:__u8
last_optstring	oslib/getopt_long.c	/^	const char *last_optstring;$/;"	m	struct:getopt_private_state	typeref:typename:const char *	file:
last_pool	smalloc.c	/^static unsigned int last_pool;$/;"	v	typeref:typename:unsigned int	file:
last_pos	file.h	/^	uint64_t last_pos[DDIR_RWDIR_CNT];$/;"	m	struct:fio_file	typeref:typename:uint64_t[]
last_rate_check_blocks	fio.h	/^	unsigned long last_rate_check_blocks[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:unsigned long[]
last_rate_check_bytes	fio.h	/^	unsigned long long last_rate_check_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:unsigned long long[]
last_rate_check_time	fio.h	/^	struct timespec last_rate_check_time[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:struct:timespec[]
last_req	engines/ime.c	/^	struct imeaio_req	*last_req; \/* last request awaiting committing *\/$/;"	m	struct:ime_data	typeref:struct:imeaio_req *	file:
last_set_cpu	os/windows/cpu-affinity.c	/^static int last_set_cpu(os_cpu_mask_t *cpumask)$/;"	f	typeref:typename:int	file:
last_start	file.h	/^	uint64_t last_start[DDIR_RWDIR_CNT];$/;"	m	struct:fio_file	typeref:typename:uint64_t[]
last_thinktime	fio.h	/^	struct timespec last_thinktime;$/;"	m	struct:thread_data	typeref:struct:timespec
last_thinktime_blocks	fio.h	/^	uint64_t last_thinktime_blocks;$/;"	m	struct:thread_data	typeref:typename:uint64_t
last_ttime	t/btrace2fio.c	/^	uint64_t last_ttime[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:uint64_t[]	file:
last_usec	fio.h	/^	int64_t last_usec[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:int64_t[]
last_val	lib/lfsr.h	/^	uint64_t last_val;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
last_was_sync	fio.h	/^	bool last_was_sync;$/;"	m	struct:thread_data	typeref:typename:bool
last_write	file.h	/^	uint64_t last_write;$/;"	m	struct:fio_file	typeref:typename:uint64_t
last_write_comp	file.h	/^	uint64_t *last_write_comp;$/;"	m	struct:fio_file	typeref:typename:uint64_t *
last_write_idx	file.h	/^	unsigned int last_write_idx;$/;"	m	struct:fio_file	typeref:typename:unsigned int
lastb	io_u.c	/^				  uint64_t lastb)$/;"	z	function:__get_next_rand_offset	typeref:typename:uint64_t	file:
lastval	goptions.c	/^	unsigned long long lastval;$/;"	m	struct:gopt_int	typeref:typename:unsigned long long	file:
lat	gclient.c	/^static GtkWidget *gfio_output_lat_buckets(double *lat, const char **labels,$/;"	z	function:gfio_output_lat_buckets	typeref:typename:double *	file:
lat	gclient.c	/^static struct graph *setup_lat_bucket_graph(const char *title, double *lat,$/;"	z	function:setup_lat_bucket_graph	typeref:typename:double *	file:
lat	stat.c	/^					     enum fio_lat lat)$/;"	z	function:add_lat_percentile_sample	typeref:enum:fio_lat	file:
lat_bucket_graph	gfio.h	/^	struct graph *lat_bucket_graph;$/;"	m	struct:gui_entry	typeref:struct:graph *
lat_buckets	profiles/act.c	/^	uint64_t lat_buckets[ACT_MAX_CRIT];$/;"	m	struct:act_slice	typeref:typename:uint64_t[]	file:
lat_fatal	io_u.c	/^static void lat_fatal(struct thread_data *td, struct io_u *io_u, struct io_completion_data *icd,$/;"	f	typeref:typename:void	file:
lat_log	fio.h	/^	struct io_log *lat_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
lat_log_file	thread_options.h	/^	char *lat_log_file;$/;"	m	struct:thread_options	typeref:typename:char *
lat_log_file	thread_options.h	/^	uint8_t lat_log_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
lat_new_cycle	io_u.c	/^static void lat_new_cycle(struct thread_data *td)$/;"	f	typeref:typename:void	file:
lat_percentiles	stat.h	/^	uint32_t lat_percentiles;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
lat_percentiles	thread_options.h	/^	uint32_t lat_percentiles;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
lat_percentiles	thread_options.h	/^	unsigned int lat_percentiles;$/;"	m	struct:thread_options	typeref:typename:unsigned int
lat_stat	stat.c	/^					     struct io_stat *lat_stat,$/;"	z	function:add_ddir_lat_json	typeref:struct:io_stat *	file:
lat_stat	stat.h	/^	struct io_stat lat_stat[DDIR_RWDIR_CNT]; \/* total latency *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat[]
lat_target_check	fio.h	/^extern void lat_target_check(struct thread_data *);$/;"	p	typeref:typename:void
lat_target_check	io_u.c	/^void lat_target_check(struct thread_data *td)$/;"	f	typeref:typename:void
lat_target_failed	io_u.c	/^static bool lat_target_failed(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
lat_target_init	fio.h	/^extern void lat_target_init(struct thread_data *);$/;"	p	typeref:typename:void
lat_target_init	io_u.c	/^void lat_target_init(struct thread_data *td)$/;"	f	typeref:typename:void
lat_target_reset	fio.h	/^extern void lat_target_reset(struct thread_data *);$/;"	p	typeref:typename:void
lat_target_reset	io_u.c	/^void lat_target_reset(struct thread_data *td)$/;"	f	typeref:typename:void
lat_target_success	io_u.c	/^static void lat_target_success(struct thread_data *td)$/;"	f	typeref:typename:void	file:
latency_depth	stat.h	/^	uint32_t latency_depth;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
latency_end_run	fio.h	/^	int latency_end_run;$/;"	m	struct:thread_data	typeref:typename:int
latency_failed	fio.h	/^	unsigned int latency_failed;$/;"	m	struct:thread_data	typeref:typename:unsigned int
latency_ios	fio.h	/^	uint64_t latency_ios;$/;"	m	struct:thread_data	typeref:typename:uint64_t
latency_percentile	stat.h	/^	fio_fp64_t latency_percentile;$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t
latency_percentile	thread_options.h	/^	fio_fp64_t latency_percentile;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
latency_percentile	thread_options.h	/^	fio_fp64_t latency_percentile;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
latency_qd	fio.h	/^	unsigned int latency_qd;$/;"	m	struct:thread_data	typeref:typename:unsigned int
latency_qd_high	fio.h	/^	unsigned int latency_qd_high;$/;"	m	struct:thread_data	typeref:typename:unsigned int
latency_qd_low	fio.h	/^	unsigned int latency_qd_low;$/;"	m	struct:thread_data	typeref:typename:unsigned int
latency_run	thread_options.h	/^	uint32_t latency_run;$/;"	m	struct:thread_options	typeref:typename:uint32_t
latency_run	thread_options.h	/^	uint32_t latency_run;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
latency_stable_count	fio.h	/^	unsigned int latency_stable_count;$/;"	m	struct:thread_data	typeref:typename:unsigned int
latency_target	stat.h	/^	uint64_t latency_target;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
latency_target	thread_options.h	/^	uint64_t latency_target;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
latency_target	thread_options.h	/^	unsigned long long latency_target;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
latency_ts	fio.h	/^	struct timespec latency_ts;$/;"	m	struct:thread_data	typeref:struct:timespec
latency_window	stat.h	/^	uint64_t latency_window;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
latency_window	thread_options.h	/^	uint64_t latency_window;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
latency_window	thread_options.h	/^	unsigned long long latency_window;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
latex	doc/Makefile	/^latex:$/;"	t
latex_documents	doc/conf.py	/^latex_documents = [$/;"	v
latex_elements	doc/conf.py	/^latex_elements = {$/;"	v
latexpdf	doc/Makefile	/^latexpdf:$/;"	t
latexpdfja	doc/Makefile	/^latexpdfja:$/;"	t
lb	graph.c	/^static void draw_bars(struct graph *bg, cairo_t *cr, struct graph_label *lb,$/;"	z	function:draw_bars	typeref:struct:graph_label *	file:
lba	engines/sg.c	/^static void fio_sgio_rw_lba(struct sg_io_hdr *hdr, unsigned long long lba,$/;"	z	function:fio_sgio_rw_lba	typeref:typename:unsigned long long	file:
lba_nbytes	engines/xnvme.c	/^	uint32_t lba_nbytes;$/;"	m	struct:xnvme_fioe_fwrap	typeref:typename:uint32_t	file:
ld	engines/io_uring.c	/^static int fio_ioring_mmap(struct ioring_data *ld, struct io_uring_params *p)$/;"	z	function:fio_ioring_mmap	typeref:struct:ioring_data *	file:
ld	engines/io_uring.c	/^static int io_uring_enter(struct ioring_data *ld, unsigned int to_submit,$/;"	z	function:io_uring_enter	typeref:struct:ioring_data *	file:
ld	engines/io_uring.c	/^static void fio_ioring_unmap(struct ioring_data *ld)$/;"	z	function:fio_ioring_unmap	typeref:struct:ioring_data *	file:
ld	engines/libaio.c	/^static inline void ring_inc(struct libaio_data *ld, unsigned int *val,$/;"	z	function:ring_inc	typeref:struct:libaio_data *	file:
ld	engines/libzbc.c	/^static int libzbc_get_dev_info(struct libzbc_data *ld, struct fio_file *f)$/;"	z	function:libzbc_get_dev_info	typeref:struct:libzbc_data *	file:
le16_to_cpu	os/os.h	/^#define le16_to_cpu(/;"	d
le32_to_cpu	os/os.h	/^#define le32_to_cpu(/;"	d
le64_to_cpu	os/os.h	/^#define le64_to_cpu(/;"	d
left	eta.c	/^static int gen_eta_str(struct jobs_eta *je, char *p, size_t left,$/;"	z	function:gen_eta_str	typeref:typename:size_t	file:
left	lib/prio_tree.h	/^	struct prio_tree_node	*left;$/;"	m	struct:prio_tree_node	typeref:struct:prio_tree_node *
left_extra	graph.c	/^	double left_extra;$/;"	m	struct:graph	typeref:typename:double	file:
left_percent	graph.c	/^void graph_add_extra_space(struct graph *g, double left_percent,$/;"	z	function:graph_add_extra_space	typeref:typename:double	file:
left_percent	graph.h	/^void graph_add_extra_space(struct graph *g, double left_percent, double right_percent,$/;"	z	prototype:graph_add_extra_space	typeref:typename:double	file:
legacy_auto_oob_layout	oslib/libmtd.c	/^static int legacy_auto_oob_layout(const struct mtd_dev_info *mtd, int fd,$/;"	f	typeref:typename:int	file:
legacy_dev_present	oslib/libmtd_int.h	/^int legacy_dev_present(int mtd_num);$/;"	p	typeref:typename:int
legacy_dev_present	oslib/libmtd_legacy.c	/^int legacy_dev_present(int mtd_num)$/;"	f	typeref:typename:int
legacy_get_dev_info	oslib/libmtd_int.h	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd);$/;"	p	typeref:typename:int
legacy_get_dev_info	oslib/libmtd_legacy.c	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd)$/;"	f	typeref:typename:int
legacy_get_dev_info1	oslib/libmtd_int.h	/^int legacy_get_dev_info1(int dev_num, struct mtd_dev_info *mtd);$/;"	p	typeref:typename:int
legacy_get_dev_info1	oslib/libmtd_legacy.c	/^int legacy_get_dev_info1(int mtd_num, struct mtd_dev_info *mtd)$/;"	f	typeref:typename:int
legacy_libmtd_open	oslib/libmtd_int.h	/^int legacy_libmtd_open(void);$/;"	p	typeref:typename:int
legacy_libmtd_open	oslib/libmtd_legacy.c	/^int legacy_libmtd_open(void)$/;"	f	typeref:typename:int
legacy_mtd_get_info	oslib/libmtd_int.h	/^int legacy_mtd_get_info(struct mtd_info *info);$/;"	p	typeref:typename:int
legacy_mtd_get_info	oslib/libmtd_legacy.c	/^int legacy_mtd_get_info(struct mtd_info *info)$/;"	f	typeref:typename:int
len	crc/crc16.c	/^unsigned short fio_crc16(const void *buffer, unsigned int len)$/;"	z	function:fio_crc16	typeref:typename:unsigned int	file:
len	crc/crc16.h	/^extern unsigned short fio_crc16(const void *buffer, unsigned int len);$/;"	z	prototype:fio_crc16	typeref:typename:unsigned int	file:
len	crc/crc32c.h	/^static inline uint32_t fio_crc32c(unsigned char const *buf, unsigned long len)$/;"	z	function:fio_crc32c	typeref:typename:unsigned long	file:
len	crc/crc7.c	/^unsigned char fio_crc7(const unsigned char *buffer, unsigned int len)$/;"	z	function:fio_crc7	typeref:typename:unsigned int	file:
len	crc/crc7.h	/^extern unsigned char fio_crc7(const unsigned char *buffer, unsigned int len);$/;"	z	prototype:fio_crc7	typeref:typename:unsigned int	file:
len	crc/fnv.c	/^uint64_t fnv(const void *buf, uint32_t len, uint64_t hval)$/;"	z	function:fnv	typeref:typename:uint32_t	file:
len	crc/md5.c	/^		    unsigned int len)$/;"	z	function:fio_md5_update	typeref:typename:unsigned int	file:
len	crc/murmur3.c	/^			     uint32_t len, const uint32_t c1,$/;"	z	function:murmur3_tail	typeref:typename:uint32_t	file:
len	crc/murmur3.c	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed)$/;"	z	function:murmurhash3	typeref:typename:uint32_t	file:
len	crc/murmur3.h	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed);$/;"	z	prototype:murmurhash3	typeref:typename:uint32_t	file:
len	crc/sha1.c	/^		     unsigned long len)$/;"	z	function:fio_sha1_update	typeref:typename:unsigned long	file:
len	crc/sha1.h	/^void fio_sha1_update(struct fio_sha1_ctx *, const void *dataIn, unsigned long len);$/;"	z	prototype:fio_sha1_update	typeref:typename:unsigned long	file:
len	crc/sha256.c	/^		       unsigned int len)$/;"	z	function:fio_sha256_update	typeref:typename:unsigned int	file:
len	crc/sha3.c	/^		    unsigned int len)$/;"	z	function:fio_sha3_update	typeref:typename:unsigned int	file:
len	crc/sha3.h	/^		    unsigned int len);$/;"	z	prototype:fio_sha3_update	typeref:typename:unsigned int	file:
len	crc/sha512.c	/^		       unsigned int len)$/;"	z	function:fio_sha512_update	typeref:typename:unsigned int	file:
len	crc/xxhash.c	/^XXH_errorcode XXH32_update (void* state_in, const void* input, int len)$/;"	z	function:XXH32_update	typeref:typename:int	file:
len	crc/xxhash.c	/^static XXH_errorcode XXH32_update_endian (void* state_in, const void* input, int len, XXH_endian/;"	z	function:XXH32_update_endian	typeref:typename:int	file:
len	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	z	function:XXH32_endian_align	typeref:typename:int	file:
len	crc/xxhash.c	/^uint32_t XXH32(const void* input, uint32_t len, uint32_t seed)$/;"	z	function:XXH32	typeref:typename:uint32_t	file:
len	crc/xxhash.h	/^XXH_errorcode XXH32_update (void* state, const void* input, int len);$/;"	z	prototype:XXH32_update	typeref:typename:int	file:
len	crc/xxhash.h	/^uint32_t XXH32 (const void* input, uint32_t len, uint32_t seed);$/;"	z	prototype:XXH32	typeref:typename:uint32_t	file:
len	engines/e4defrag.c	/^	__u64 len;              \/* block length to be moved *\/$/;"	m	struct:move_extent	typeref:typename:__u64	file:
len	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_aws_auth_header	typeref:typename:size_t	file:
len	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_swift_header	typeref:typename:size_t	file:
len	engines/http.c	/^static char *_conv_hex(const unsigned char *p, size_t len)$/;"	z	function:_conv_hex	typeref:typename:size_t	file:
len	engines/http.c	/^static char *_gen_hex_md5(const char *p, size_t len)$/;"	z	function:_gen_hex_md5	typeref:typename:size_t	file:
len	engines/http.c	/^static char *_gen_hex_sha256(const char *p, size_t len)$/;"	z	function:_gen_hex_sha256	typeref:typename:size_t	file:
len	engines/io_uring.c	/^	size_t len;$/;"	m	struct:ioring_mmap	typeref:typename:size_t	file:
len	engines/librpma_apm.c	/^		unsigned long long int len)$/;"	z	function:client_io_flush	typeref:typename:unsigned long long int	file:
len	engines/librpma_apm.c	/^		unsigned long long int len);$/;"	z	prototype:client_io_flush	typeref:typename:unsigned long long int	file:
len	engines/librpma_gpspm.c	/^		unsigned long long int len)$/;"	z	function:client_io_flush	typeref:typename:unsigned long long int	file:
len	engines/librpma_gpspm.c	/^		unsigned long long int len);$/;"	z	prototype:client_io_flush	typeref:typename:unsigned long long int	file:
len	engines/librpma_gpspm_flush.pb-c.c	/^                      size_t               len,$/;"	z	function:gpspm_flush_request__unpack	typeref:typename:size_t	file:
len	engines/librpma_gpspm_flush.pb-c.c	/^                      size_t               len,$/;"	z	function:gpspm_flush_response__unpack	typeref:typename:size_t	file:
len	engines/librpma_gpspm_flush.pb-c.h	/^                      size_t               len,$/;"	z	prototype:gpspm_flush_request__unpack	typeref:typename:size_t	file:
len	engines/librpma_gpspm_flush.pb-c.h	/^                      size_t               len,$/;"	z	prototype:gpspm_flush_response__unpack	typeref:typename:size_t	file:
len	engines/net.c	/^			     unsigned int len)$/;"	z	function:vmsplice_io_u_out	typeref:typename:unsigned int	file:
len	engines/net.c	/^		      unsigned int len)$/;"	z	function:splice_out	typeref:typename:unsigned int	file:
len	engines/net.c	/^static int is_close_msg(struct io_u *io_u, int len)$/;"	z	function:is_close_msg	typeref:typename:int	file:
len	engines/net.c	/^static int splice_io_u(int fdin, int fdout, unsigned int len)$/;"	z	function:splice_io_u	typeref:typename:unsigned int	file:
len	engines/net.c	/^static int vmsplice_io_u(struct io_u *io_u, int fd, unsigned int len)$/;"	z	function:vmsplice_io_u	typeref:typename:unsigned int	file:
len	fifo.c	/^unsigned int fifo_get(struct fifo *fifo, void *buf, unsigned int len)$/;"	z	function:fifo_get	typeref:typename:unsigned int	file:
len	fifo.c	/^unsigned int fifo_put(struct fifo *fifo, void *buffer, unsigned int len)$/;"	z	function:fifo_put	typeref:typename:unsigned int	file:
len	filesetup.c	/^				   unsigned long long len)$/;"	z	function:__file_invalidate_cache	typeref:typename:unsigned long long	file:
len	gclient.c	/^					       unsigned int len,$/;"	z	function:gfio_output_clat_percentiles	typeref:typename:unsigned int	file:
len	gclient.c	/^					    unsigned int len,$/;"	z	function:setup_lat_bucket_graph	typeref:typename:unsigned int	file:
len	gclient.c	/^				       struct thread_stat *ts, unsigned int len)$/;"	z	function:gfio_add_total_depths_tree	typeref:typename:unsigned int	file:
len	gclient.c	/^				      unsigned int len,$/;"	z	function:setup_clat_graph	typeref:typename:unsigned int	file:
len	gclient.c	/^				    struct thread_stat *ts, unsigned int len,$/;"	z	function:gfio_add_sc_depths_tree	typeref:typename:unsigned int	file:
len	helper_thread.c	/^static int read_from_pipe(int fd, void *buf, size_t len)$/;"	z	function:read_from_pipe	typeref:typename:size_t	file:
len	helper_thread.c	/^static int write_to_pipe(int fd, const void *buf, size_t len)$/;"	z	function:write_to_pipe	typeref:typename:size_t	file:
len	helpers.c	/^int fallocate(int fd, int mode, off_t offset, off_t len)$/;"	z	function:fallocate	typeref:typename:off_t	file:
len	helpers.c	/^int posix_fadvise(int fd, off_t offset, off_t len, int advice)$/;"	z	function:posix_fadvise	typeref:typename:off_t	file:
len	helpers.c	/^int posix_fallocate(int fd, off_t offset, off_t len)$/;"	z	function:posix_fallocate	typeref:typename:off_t	file:
len	helpers.h	/^extern int fallocate(int fd, int mode, off_t offset, off_t len);$/;"	z	prototype:fallocate	typeref:typename:off_t	file:
len	helpers.h	/^extern int posix_fadvise(int fd, off_t offset, off_t len, int advice);$/;"	z	prototype:posix_fadvise	typeref:typename:off_t	file:
len	helpers.h	/^extern int posix_fallocate(int fd, off_t offset, off_t len);$/;"	z	prototype:posix_fallocate	typeref:typename:off_t	file:
len	iolog.h	/^	size_t len;$/;"	m	struct:iolog_compress	typeref:typename:size_t
len	iolog.h	/^	unsigned long len;$/;"	m	struct:io_piece	typeref:typename:unsigned long
len	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );$/;"	z	prototype:yy_scan_bytes	typeref:typename:int	file:
len	lib/bloom.c	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len,$/;"	z	function:bloom_string	typeref:typename:unsigned int	file:
len	lib/bloom.c	/^static bool __bloom_check(struct bloom *b, const void *data, unsigned int len,$/;"	z	function:__bloom_check	typeref:typename:unsigned int	file:
len	lib/bloom.c	/^static uint32_t bloom_crc32c(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_crc32c	typeref:typename:uint32_t	file:
len	lib/bloom.c	/^static uint32_t bloom_fnv(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_fnv	typeref:typename:uint32_t	file:
len	lib/bloom.h	/^bool bloom_string(struct bloom *b, const char *data, unsigned int len, bool);$/;"	z	prototype:bloom_string	typeref:typename:unsigned int	file:
len	lib/memcpy.c	/^static void simple_memcpy(void *dst, void const *src, size_t len)$/;"	z	function:simple_memcpy	typeref:typename:size_t	file:
len	lib/output_buffer.c	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len)$/;"	z	function:buf_output_add	typeref:typename:size_t	file:
len	lib/output_buffer.h	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len);$/;"	z	prototype:buf_output_add	typeref:typename:size_t	file:
len	lib/pattern.c	/^		unsigned int off, const char *buf, unsigned int len)$/;"	z	function:cmp_pattern	typeref:typename:unsigned int	file:
len	lib/pattern.h	/^		unsigned int off, const char *buf, unsigned int len);$/;"	z	prototype:cmp_pattern	typeref:typename:unsigned int	file:
len	lib/pattern.h	/^	unsigned int len;$/;"	m	struct:pattern_fmt_desc	typeref:typename:unsigned int
len	lib/rand.c	/^				    unsigned int segment, unsigned int len,$/;"	z	function:fill_random_buf_percentage	typeref:typename:unsigned int	file:
len	lib/rand.c	/^				  unsigned int segment, unsigned int len,$/;"	z	function:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
len	lib/rand.c	/^			 unsigned int len)$/;"	z	function:fill_random_buf	typeref:typename:unsigned int	file:
len	lib/rand.c	/^void __fill_random_buf(void *buf, unsigned int len, uint64_t seed)$/;"	z	function:__fill_random_buf	typeref:typename:unsigned int	file:
len	lib/rand.h	/^extern uint64_t fill_random_buf(struct frand_state *, void *buf, unsigned int len);$/;"	z	prototype:fill_random_buf	typeref:typename:unsigned int	file:
len	lib/rand.h	/^extern void __fill_random_buf(void *buf, unsigned int len, uint64_t seed);$/;"	z	prototype:__fill_random_buf	typeref:typename:unsigned int	file:
len	log.c	/^size_t log_info_buf(const char *buf, size_t len)$/;"	z	function:log_info_buf	typeref:typename:size_t	file:
len	log.h	/^extern size_t log_info_buf(const char *buf, size_t len);$/;"	z	prototype:log_info_buf	typeref:typename:size_t	file:
len	os/linux/io_uring.h	/^	__u32	len;		\/* buffer size or number of iovecs *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__u32
len	os/os-android.h	/^			  unsigned long long len)$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
len	os/os-dragonfly.h	/^			  unsigned long long len)$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
len	os/os-freebsd.h	/^			  unsigned long long len)$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
len	os/os-linux.h	/^				 uint64_t len)$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
len	os/os-linux.h	/^			  unsigned long long len)$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
len	os/os-mac.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
len	os/os.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
len	os/windows/posix.c	/^int mlock(const void * addr, size_t len)$/;"	z	function:mlock	typeref:typename:size_t	file:
len	os/windows/posix.c	/^int msync(void *addr, size_t len, int flags)$/;"	z	function:msync	typeref:typename:size_t	file:
len	os/windows/posix.c	/^int munlock(const void * addr, size_t len)$/;"	z	function:munlock	typeref:typename:size_t	file:
len	os/windows/posix.c	/^int munmap(void *addr, size_t len)$/;"	z	function:munmap	typeref:typename:size_t	file:
len	os/windows/posix.c	/^int posix_madvise(void *addr, size_t len, int advice)$/;"	z	function:posix_madvise	typeref:typename:size_t	file:
len	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^int mlock(const void *addr, size_t len);$/;"	z	prototype:mlock	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^int msync(void *addr, size_t len, int flags);$/;"	z	prototype:msync	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^int munlock(const void * addr, size_t len);$/;"	z	prototype:munlock	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^int munmap(void *addr, size_t len);$/;"	z	prototype:munmap	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^int posix_madvise(void *addr, size_t len, int advice);$/;"	z	prototype:posix_madvise	typeref:typename:size_t	file:
len	os/windows/posix/include/sys/mman.h	/^void *mmap(void *addr, size_t len, int prot, int flags,$/;"	z	prototype:mmap	typeref:typename:size_t	file:
len	oslib/libmtd.c	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	function:mtd_write	typeref:typename:int	file:
len	oslib/libmtd.c	/^	     void *buf, int len)$/;"	z	function:mtd_read	typeref:typename:int	file:
len	oslib/libmtd.h	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	prototype:mtd_write	typeref:typename:int	file:
len	oslib/libmtd.h	/^	     void *buf, int len);$/;"	z	prototype:mtd_read	typeref:typename:int	file:
len	oslib/linux-blkzoned.c	/^	__u64	len;            \/* Zone length in number of sectors *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u64	file:
len	parse.c	/^static unsigned long long get_mult_bytes(const char *str, int len, void *data,$/;"	z	function:get_mult_bytes	typeref:typename:int	file:
len	parse.c	/^static unsigned long long get_mult_time(const char *str, int len,$/;"	z	function:get_mult_time	typeref:typename:int	file:
len	server.c	/^int fio_server_text_output(int level, const char *buf, size_t len)$/;"	z	function:fio_server_text_output	typeref:typename:size_t	file:
len	server.c	/^static int fio_recv_data(int sk, void *buf, unsigned int len, bool wait)$/;"	z	function:fio_recv_data	typeref:typename:unsigned int	file:
len	server.c	/^static int fio_send_data(int sk, const void *p, unsigned int len)$/;"	z	function:fio_send_data	typeref:typename:unsigned int	file:
len	server.h	/^	uint16_t len;$/;"	m	struct:cmd_single_line_pdu	typeref:typename:uint16_t
len	server.h	/^	uint16_t len;$/;"	m	struct:cmd_vtrigger_pdu	typeref:typename:uint16_t
len	t/btrace2fio.c	/^			  unsigned int len)$/;"	z	function:trace_fifo_get	typeref:typename:unsigned int	file:
len	t/btrace2fio.c	/^static void __add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:__add_bs	typeref:typename:unsigned int	file:
len	t/btrace2fio.c	/^static void add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:add_bs	typeref:typename:unsigned int	file:
len	t/btrace2fio.c	/^static void inflight_add(struct btrace_pid *p, uint64_t sector, uint32_t len)$/;"	z	function:inflight_add	typeref:typename:uint32_t	file:
len	t/time-test.c	/^			 unsigned long long start, unsigned long len)$/;"	z	function:discontinuity	typeref:typename:unsigned long	file:
len	verify.c	/^			  unsigned int len)$/;"	z	function:__fill_buffer	typeref:typename:unsigned int	file:
len	verify.c	/^int paste_blockoff(char *buf, unsigned int len, void *priv)$/;"	z	function:paste_blockoff	typeref:typename:unsigned int	file:
len	verify.c	/^static void dump_buf(char *buf, unsigned int len, unsigned long long offset,$/;"	z	function:dump_buf	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_crc16(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc16	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_crc32(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_crc32c(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32c	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_crc64(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc64	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_crc7(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc7	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_md5(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_md5	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha1(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha1	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha256	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha3(struct fio_sha3_ctx *sha3_ctx, void *p, unsigned int len)$/;"	z	function:fill_sha3	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha3_224(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_224	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha3_256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_256	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha3_384(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_384	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha3_512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_512	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_sha512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha512	typeref:typename:unsigned int	file:
len	verify.c	/^static void fill_xxhash(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_xxhash	typeref:typename:unsigned int	file:
len	verify.c	/^static void hexdump(void *buffer, int len)$/;"	z	function:hexdump	typeref:typename:int	file:
len	verify.c	/^static void memswp(void *buf1, void *buf2, unsigned int len)$/;"	z	function:memswp	typeref:typename:unsigned int	file:
len	verify.c	/^void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len)$/;"	z	function:fill_buffer_pattern	typeref:typename:unsigned int	file:
len	verify.c	/^void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len,$/;"	z	function:fill_verify_pattern	typeref:typename:unsigned int	file:
len	verify.h	/^	uint32_t len;$/;"	m	struct:verify_header	typeref:typename:uint32_t
len	verify.h	/^extern int paste_blockoff(char *buf, unsigned int len, void *priv);$/;"	z	prototype:paste_blockoff	typeref:typename:unsigned int	file:
len	verify.h	/^extern void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len);$/;"	z	prototype:fill_buffer_pattern	typeref:typename:unsigned int	file:
len	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:typename:unsigned int	file:
len	zbd_types.h	/^	uint64_t		len;$/;"	m	struct:zbd_zone	typeref:typename:uint64_t
length	blktrace.h	/^	__u64			length; \/\/ length of trace$/;"	m	struct:blktrace_cursor	typeref:typename:__u64
length	crc/crc32.c	/^uint32_t fio_crc32(const void *buffer, unsigned long length)$/;"	z	function:fio_crc32	typeref:typename:unsigned long	file:
length	crc/crc32c-arm64.c	/^uint32_t crc32c_arm64(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_arm64	typeref:typename:unsigned long	file:
length	crc/crc32c-intel.c	/^					unsigned long length)$/;"	z	function:crc32c_intel_le_hw_byte	typeref:typename:unsigned long	file:
length	crc/crc32c-intel.c	/^uint32_t crc32c_intel(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_intel	typeref:typename:unsigned long	file:
length	crc/crc32c.c	/^uint32_t crc32c_sw(unsigned char const *data, unsigned long length)$/;"	z	function:crc32c_sw	typeref:typename:unsigned long	file:
length	crc/crc64.c	/^unsigned long long fio_crc64(const unsigned char *buffer, unsigned long length)$/;"	z	function:fio_crc64	typeref:typename:unsigned long	file:
length	engines/dev-dax.c	/^			   size_t length, off_t off)$/;"	z	function:fio_devdax_file	typeref:typename:size_t	file:
length	engines/libpmem.c	/^			    size_t length, off_t off)$/;"	z	function:fio_libpmem_file	typeref:typename:size_t	file:
length	engines/librpma_gpspm_flush.pb-c.h	/^  uint64_t length;$/;"	m	struct:_GPSPMFlushRequest	typeref:typename:uint64_t
length	engines/librpma_gpspm_flush.proto	/^    required fixed64 length = 2;$/;"	f	message:GPSPM_flush_request	typeref:typename:fixed64
length	engines/libzbc.c	/^			   uint64_t offset, uint64_t length)$/;"	z	function:libzbc_reset_wp	typeref:typename:uint64_t	file:
length	engines/mmap.c	/^			     size_t length)$/;"	z	function:fio_madvise_file	typeref:typename:size_t	file:
length	engines/mmap.c	/^			 size_t length, off_t off)$/;"	z	function:fio_mmap_file	typeref:typename:size_t	file:
length	engines/skeleton_external.c	/^				 uint64_t offset, uint64_t length)$/;"	z	function:fio_skeleton_reset_wp	typeref:typename:uint64_t	file:
length	engines/xnvme.c	/^			       uint64_t length)$/;"	z	function:xnvme_fioe_reset_wp	typeref:typename:uint64_t	file:
length	hash.h	/^static inline uint32_t jhash(const void *key, uint32_t length, uint32_t initval)$/;"	z	function:jhash	typeref:typename:uint32_t	file:
length	lib/lfsr.h	/^	unsigned int length;$/;"	m	struct:lfsr_taps	typeref:typename:unsigned int
length	oslib/blkzoned.h	/^				    uint64_t offset, uint64_t length)$/;"	z	function:blkzoned_reset_wp	typeref:typename:uint64_t	file:
length	oslib/blkzoned.h	/^				uint64_t offset, uint64_t length);$/;"	z	prototype:blkzoned_reset_wp	typeref:typename:uint64_t	file:
length	oslib/libmtd.c	/^		  uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_write_oob	typeref:typename:uint64_t	file:
length	oslib/libmtd.c	/^		 uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_read_oob	typeref:typename:uint64_t	file:
length	oslib/libmtd.c	/^	      uint64_t start, uint64_t length, void *data, unsigned int cmd64,$/;"	z	function:do_oob_op	typeref:typename:uint64_t	file:
length	oslib/libmtd.h	/^		  uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_write_oob	typeref:typename:uint64_t	file:
length	oslib/libmtd.h	/^		 uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_read_oob	typeref:typename:uint64_t	file:
length	oslib/linux-blkzoned.c	/^		      uint64_t offset, uint64_t length)$/;"	z	function:blkzoned_reset_wp	typeref:typename:uint64_t	file:
length	verify.c	/^static int mem_is_zero(const void *data, size_t length)$/;"	z	function:mem_is_zero	typeref:typename:size_t	file:
length	verify.c	/^static int mem_is_zero_slow(const void *data, size_t length, size_t *offset)$/;"	z	function:mem_is_zero_slow	typeref:typename:size_t	file:
length	zbd.c	/^			uint64_t offset, uint64_t length)$/;"	z	function:zbd_reset_wp	typeref:typename:uint64_t	file:
level	engines/cmdprio.h	/^	unsigned int level[CMDPRIO_RWDIR_CNT];$/;"	m	struct:cmdprio_options	typeref:typename:unsigned int[]
level	json.c	/^static void json_print_level(int level, struct buf_output *out)$/;"	z	function:json_print_level	typeref:typename:int	file:
level	lib/axmap.c	/^	int level;$/;"	m	struct:axmap_level	typeref:typename:int	file:
level	log.c	/^const char *log_get_level(int level)$/;"	z	function:log_get_level	typeref:typename:int	file:
level	log.h	/^extern const char *log_get_level(int level);$/;"	z	prototype:log_get_level	typeref:typename:int	file:
level	parse.c	/^			   int level)$/;"	z	function:__print_option	typeref:typename:int	file:
level	server.c	/^int fio_server_text_output(int level, const char *buf, size_t len)$/;"	z	function:fio_server_text_output	typeref:typename:int	file:
level	server.h	/^	uint32_t level;$/;"	m	struct:cmd_text_pdu	typeref:typename:uint32_t
levels	lib/axmap.c	/^	struct axmap_level *levels;$/;"	m	struct:axmap	typeref:struct:axmap_level *	file:
lex.yy.c	Makefile	/^lex.yy.c: exp\/expression-parser.l$/;"	t
lex.yy.o	Makefile	/^lex.yy.o: lex.yy.c y.tab.h$/;"	t
lexer.h	Makefile	/^lexer.h: lex.yy.c$/;"	t
lexer_input	lex.yy.c	/^extern int lexer_input(char *buffer, unsigned int *nbytes, int buffersize);$/;"	p	typeref:typename:int	file:
lexer_input	y.tab.c	/^int lexer_input(char* buffer, unsigned int *bytes_read, int bytes_requested)$/;"	f	typeref:typename:int
lexer_input_buffer	y.tab.c	/^static char lexer_input_buffer[1000];$/;"	v	typeref:typename:char[1000]	file:
lexer_read_offset	y.tab.c	/^static int lexer_read_offset = 0;$/;"	v	typeref:typename:int	file:
lexer_value_is_time	lex.yy.c	/^int lexer_value_is_time = 0; \/* for determining if "m" suffix means mega- or minutes *\/$/;"	v	typeref:typename:int
lfsr	file.h	/^		struct fio_lfsr lfsr;$/;"	m	union:fio_file::__anonfd762ebb040a	typeref:struct:fio_lfsr
lfsr_create_xormask	lib/lfsr.c	/^static uint64_t lfsr_create_xormask(uint8_t *taps)$/;"	f	typeref:typename:uint64_t	file:
lfsr_init	lib/lfsr.c	/^int lfsr_init(struct fio_lfsr *fl, uint64_t nums, uint64_t seed,$/;"	f	typeref:typename:int
lfsr_init	lib/lfsr.h	/^int lfsr_init(struct fio_lfsr *fl, uint64_t size,$/;"	p	typeref:typename:int
lfsr_next	lib/lfsr.c	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off)$/;"	f	typeref:typename:int
lfsr_next	lib/lfsr.h	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off);$/;"	p	typeref:typename:int
lfsr_reset	lib/lfsr.c	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed)$/;"	f	typeref:typename:int
lfsr_reset	lib/lfsr.h	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed);$/;"	p	typeref:typename:int
lfsr_taps	lib/lfsr.c	/^static uint8_t lfsr_taps[64][FIO_MAX_TAPS] =$/;"	v	typeref:typename:uint8_t[64][]	file:
lfsr_taps	lib/lfsr.h	/^struct lfsr_taps {$/;"	s
lib	oslib/libmtd.c	/^static int dev_get_major(struct libmtd *lib, int mtd_num, int *major, int *minor)$/;"	z	function:dev_get_major	typeref:struct:libmtd *	file:
lib	oslib/libmtd.c	/^static int dev_node2num(struct libmtd *lib, const char *node, int *mtd_num)$/;"	z	function:dev_node2num	typeref:struct:libmtd *	file:
lib	oslib/libmtd.c	/^static int sysfs_is_supported(struct libmtd *lib)$/;"	z	function:sysfs_is_supported	typeref:struct:libmtd *	file:
libaio	t/run-fio-tests.py	/^    def libaio(cls):$/;"	m	class:Requirements
libaio_LIBS	Makefile	/^  libaio_LIBS = -laio$/;"	m
libaio_SRCS	Makefile	/^  libaio_SRCS = engines\/libaio.c$/;"	m
libaio_data	engines/libaio.c	/^struct libaio_data {$/;"	s	file:
libaio_options	engines/libaio.c	/^struct libaio_options {$/;"	s	file:
libcufile_options	engines/libcufile.c	/^struct libcufile_options {$/;"	s	file:
libdir	Makefile	/^libdir = $(prefix)\/lib\/fio$/;"	m
libiscsi_CFLAGS	Makefile	/^  libiscsi_CFLAGS = $(LIBISCSI_CFLAGS)$/;"	m
libiscsi_LIBS	Makefile	/^  libiscsi_LIBS = $(LIBISCSI_LIBS)$/;"	m
libiscsi_SRCS	Makefile	/^  libiscsi_SRCS = engines\/libiscsi.c$/;"	m
libmtd	oslib/libmtd_int.h	/^struct libmtd$/;"	s
libmtd_close	oslib/libmtd.c	/^void libmtd_close(libmtd_t desc)$/;"	f	typeref:typename:void
libmtd_close	oslib/libmtd.h	/^void libmtd_close(libmtd_t desc);$/;"	p	typeref:typename:void
libmtd_open	oslib/libmtd.c	/^libmtd_t libmtd_open(void)$/;"	f	typeref:typename:libmtd_t
libmtd_open	oslib/libmtd.h	/^libmtd_t libmtd_open(void);$/;"	p	typeref:typename:libmtd_t
libmtd_t	oslib/libmtd.h	/^typedef void * libmtd_t;$/;"	t	typeref:typename:void *
libpmem_LIBS	Makefile	/^  libpmem_LIBS = -lpmem$/;"	m
libpmem_SRCS	Makefile	/^  libpmem_SRCS = engines\/libpmem.c$/;"	m
libpmem_off	engines/libpmem.c	/^	off_t libpmem_off;$/;"	m	struct:fio_libpmem_data	typeref:typename:off_t	file:
libpmem_ptr	engines/libpmem.c	/^	void *libpmem_ptr;$/;"	m	struct:fio_libpmem_data	typeref:typename:void *	file:
libpmem_sz	engines/libpmem.c	/^	size_t libpmem_sz;$/;"	m	struct:fio_libpmem_data	typeref:typename:size_t	file:
librpma_apm_LIBS	Makefile	/^  librpma_apm_LIBS = -lrpma -lpmem$/;"	m
librpma_apm_SRCS	Makefile	/^  librpma_apm_SRCS = engines\/librpma_apm.c$/;"	m
librpma_fio_SRCS	Makefile	/^  librpma_fio_SRCS = engines\/librpma_fio.c$/;"	m
librpma_fio_allocate_dram	engines/librpma_fio.c	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	f	typeref:typename:char *
librpma_fio_allocate_dram	engines/librpma_fio.h	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	p	typeref:typename:char *
librpma_fio_allocate_pmem	engines/librpma_fio.c	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:char *
librpma_fio_allocate_pmem	engines/librpma_fio.h	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	p	typeref:typename:char *
librpma_fio_client_cleanup	engines/librpma_fio.c	/^void librpma_fio_client_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void
librpma_fio_client_cleanup	engines/librpma_fio.h	/^void librpma_fio_client_cleanup(struct thread_data *td);$/;"	p	typeref:typename:void
librpma_fio_client_commit	engines/librpma_fio.c	/^int librpma_fio_client_commit(struct thread_data *td)$/;"	f	typeref:typename:int
librpma_fio_client_commit	engines/librpma_fio.h	/^int librpma_fio_client_commit(struct thread_data *td);$/;"	p	typeref:typename:int
librpma_fio_client_data	engines/librpma_fio.h	/^struct librpma_fio_client_data {$/;"	s
librpma_fio_client_errdetails	engines/librpma_fio.c	/^char *librpma_fio_client_errdetails(struct io_u *io_u)$/;"	f	typeref:typename:char *
librpma_fio_client_errdetails	engines/librpma_fio.h	/^char *librpma_fio_client_errdetails(struct io_u *io_u);$/;"	p	typeref:typename:char *
librpma_fio_client_event	engines/librpma_fio.c	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *
librpma_fio_client_event	engines/librpma_fio.h	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event);$/;"	p	typeref:struct:io_u *
librpma_fio_client_get_file_size	engines/librpma_fio.c	/^int librpma_fio_client_get_file_size(struct thread_data *td,$/;"	f	typeref:typename:int
librpma_fio_client_get_file_size	engines/librpma_fio.h	/^int librpma_fio_client_get_file_size(struct thread_data *td,$/;"	p	typeref:typename:int
librpma_fio_client_getevents	engines/librpma_fio.c	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int
librpma_fio_client_getevents	engines/librpma_fio.h	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	p	typeref:typename:int
librpma_fio_client_init	engines/librpma_fio.c	/^int librpma_fio_client_init(struct thread_data *td,$/;"	f	typeref:typename:int
librpma_fio_client_init	engines/librpma_fio.h	/^int librpma_fio_client_init(struct thread_data *td,$/;"	p	typeref:typename:int
librpma_fio_client_io_complete_all_sends	engines/librpma_fio.h	/^static inline int librpma_fio_client_io_complete_all_sends($/;"	f	typeref:typename:int
librpma_fio_client_io_read	engines/librpma_fio.h	/^static inline int librpma_fio_client_io_read(struct thread_data *td,$/;"	f	typeref:typename:int
librpma_fio_client_io_write	engines/librpma_fio.h	/^static inline int librpma_fio_client_io_write(struct thread_data *td,$/;"	f	typeref:typename:int
librpma_fio_client_post_init	engines/librpma_fio.c	/^int librpma_fio_client_post_init(struct thread_data *td)$/;"	f	typeref:typename:int
librpma_fio_client_post_init	engines/librpma_fio.h	/^int librpma_fio_client_post_init(struct thread_data *td);$/;"	p	typeref:typename:int
librpma_fio_client_queue	engines/librpma_fio.c	/^enum fio_q_status librpma_fio_client_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status
librpma_fio_client_queue	engines/librpma_fio.h	/^enum fio_q_status librpma_fio_client_queue(struct thread_data *td,$/;"	p	typeref:enum:fio_q_status
librpma_fio_file_nop	engines/librpma_fio.c	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
librpma_fio_file_nop	engines/librpma_fio.h	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:int
librpma_fio_flush_t	engines/librpma_fio.h	/^typedef int (*librpma_fio_flush_t)(struct thread_data *td,$/;"	t	typeref:typename:int (*)(struct thread_data * td,struct io_u * first_io_u,struct io_u * last_io_u,unsigned long long int len)
librpma_fio_free	engines/librpma_fio.c	/^void librpma_fio_free(struct librpma_fio_mem *mem)$/;"	f	typeref:typename:void
librpma_fio_free	engines/librpma_fio.h	/^void librpma_fio_free(struct librpma_fio_mem *mem);$/;"	p	typeref:typename:void
librpma_fio_get_io_u_index_t	engines/librpma_fio.h	/^typedef int (*librpma_fio_get_io_u_index_t)(struct ibv_wc *wc,$/;"	t	typeref:typename:int (*)(struct ibv_wc * wc,unsigned int * io_u_index)
librpma_fio_mem	engines/librpma_fio.h	/^struct librpma_fio_mem {$/;"	s
librpma_fio_options	engines/librpma_fio.c	/^struct fio_option librpma_fio_options[] = {$/;"	v	typeref:struct:fio_option[]
librpma_fio_options_values	engines/librpma_fio.h	/^struct librpma_fio_options_values {$/;"	s
librpma_fio_prepare_connection_t	engines/librpma_fio.h	/^typedef int (*librpma_fio_prepare_connection_t)($/;"	t	typeref:typename:int (*)(struct thread_data * td,struct rpma_conn_req * conn_req)
librpma_fio_server_cleanup	engines/librpma_fio.c	/^void librpma_fio_server_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void
librpma_fio_server_cleanup	engines/librpma_fio.h	/^void librpma_fio_server_cleanup(struct thread_data *td);$/;"	p	typeref:typename:void
librpma_fio_server_close_file	engines/librpma_fio.c	/^int librpma_fio_server_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
librpma_fio_server_close_file	engines/librpma_fio.h	/^int librpma_fio_server_close_file(struct thread_data *td,$/;"	p	typeref:typename:int
librpma_fio_server_data	engines/librpma_fio.h	/^struct librpma_fio_server_data {$/;"	s
librpma_fio_server_init	engines/librpma_fio.c	/^int librpma_fio_server_init(struct thread_data *td)$/;"	f	typeref:typename:int
librpma_fio_server_init	engines/librpma_fio.h	/^int librpma_fio_server_init(struct thread_data *td);$/;"	p	typeref:typename:int
librpma_fio_server_open_file	engines/librpma_fio.c	/^int librpma_fio_server_open_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int
librpma_fio_server_open_file	engines/librpma_fio.h	/^int librpma_fio_server_open_file(struct thread_data *td,$/;"	p	typeref:typename:int
librpma_fio_td_port	engines/librpma_fio.c	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	f	typeref:typename:int
librpma_fio_td_port	engines/librpma_fio.h	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	p	typeref:typename:int
librpma_fio_workspace	engines/librpma_fio.h	/^struct librpma_fio_workspace {$/;"	s
librpma_gpspm_LIBS	Makefile	/^  librpma_gpspm_LIBS = -lrpma -lpmem -lprotobuf-c$/;"	m
librpma_gpspm_SRCS	Makefile	/^  librpma_gpspm_SRCS = engines\/librpma_gpspm.c engines\/librpma_gpspm_flush.pb-c.c$/;"	m
librpma_td_verror	engines/librpma_fio.h	/^#define librpma_td_verror(/;"	d
libzbc_LIBS	Makefile	/^  libzbc_LIBS = -lzbc$/;"	m
libzbc_SRCS	Makefile	/^  libzbc_SRCS = engines\/libzbc.c$/;"	m
libzbc_cleanup	engines/libzbc.c	/^static void libzbc_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
libzbc_close_dev	engines/libzbc.c	/^static int libzbc_close_dev(struct thread_data *td)$/;"	f	typeref:typename:int	file:
libzbc_close_file	engines/libzbc.c	/^static int libzbc_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
libzbc_data	engines/libzbc.c	/^struct libzbc_data {$/;"	s	file:
libzbc_get_dev_info	engines/libzbc.c	/^static int libzbc_get_dev_info(struct libzbc_data *ld, struct fio_file *f)$/;"	f	typeref:typename:int	file:
libzbc_get_file_size	engines/libzbc.c	/^static int libzbc_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
libzbc_get_max_open_zones	engines/libzbc.c	/^static int libzbc_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
libzbc_get_zoned_model	engines/libzbc.c	/^static int libzbc_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
libzbc_invalidate	engines/libzbc.c	/^static int libzbc_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
libzbc_open_dev	engines/libzbc.c	/^static int libzbc_open_dev(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
libzbc_open_file	engines/libzbc.c	/^static int libzbc_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
libzbc_queue	engines/libzbc.c	/^static enum fio_q_status libzbc_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
libzbc_report_zones	engines/libzbc.c	/^static int libzbc_report_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
libzbc_reset_wp	engines/libzbc.c	/^static int libzbc_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
libzbc_rw	engines/libzbc.c	/^ssize_t libzbc_rw(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:ssize_t
limit	steadystate.h	/^	double limit;$/;"	m	struct:steadystate_data	typeref:typename:double
line	init.c	/^static int is_empty_or_comment(char *line)$/;"	z	function:is_empty_or_comment	typeref:typename:char *	file:
line	t/steadystate_tests.py	/^                                line = 'FAILED ' + line + ' fio criterion {0} != calculated crit/;"	v
line	t/steadystate_tests.py	/^                                line = 'FAILED ' + line + ' target {0} < threshold {1} but fio r/;"	v
line	t/steadystate_tests.py	/^                                line = 'PASSED ' + line + ' target {0} < limit {1}'.format(targe/;"	v
line	t/steadystate_tests.py	/^                            line = 'FAILED ' + line + ' fio criterion {0} != calculated criterio/;"	v
line	t/steadystate_tests.py	/^                        line = 'FAILED ' + line + ' ss attained, runtime {0} < ss_dur {1} + ss_r/;"	v
line	t/steadystate_tests.py	/^                        line = 'FAILED ' + line + ' ss not attained, expected runtime {0} != act/;"	v
line	t/steadystate_tests.py	/^                line = result + line + ' no ss, expected runtime {0} ~= actual runtime {1}'.form/;"	v
line	t/steadystate_tests.py	/^            line = "{0}".format(jsonjob['job options']['name'])$/;"	v
line_graph_draw	graph.c	/^void line_graph_draw(struct graph *g, cairo_t *cr)$/;"	f	typeref:typename:void
line_graph_draw	graph.h	/^void line_graph_draw(struct graph *g, cairo_t *cr);$/;"	p	typeref:typename:void
line_graph_set_data_count_limit	graph.c	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit)$/;"	f	typeref:typename:void
line_graph_set_data_count_limit	graph.h	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit);$/;"	p	typeref:typename:void
lines	server.h	/^	uint16_t lines;$/;"	m	struct:cmd_line_pdu	typeref:typename:uint16_t
link_ok	diskutil.c	/^static int find_block_dir(int majdev, int mindev, char *path, int link_ok)$/;"	z	function:find_block_dir	typeref:typename:int	file:
linkcheck	doc/Makefile	/^linkcheck:$/;"	t
linux	t/run-fio-tests.py	/^    def linux(cls):$/;"	m	class:Requirements
list	cgroup.c	/^	struct flist_head list;$/;"	m	struct:cgroup_member	typeref:struct:flist_head	file:
list	cgroup.h	/^static inline int cgroup_setup(struct thread_data *td, struct flist_head *list,$/;"	z	function:cgroup_setup	typeref:struct:flist_head *	file:
list	cgroup.h	/^static inline void cgroup_kill(struct flist_head *list)$/;"	z	function:cgroup_kill	typeref:struct:flist_head *	file:
list	cgroup.h	/^void cgroup_kill(struct flist_head *list);$/;"	z	prototype:cgroup_kill	typeref:struct:flist_head *	file:
list	client.h	/^	struct flist_head list;$/;"	m	struct:fio_client	typeref:struct:flist_head
list	diskutil.h	/^	struct flist_head list;$/;"	m	struct:disk_util	typeref:struct:flist_head
list	engines/glusterfs.c	/^	struct flist_head	list;$/;"	m	struct:glfs_info	typeref:struct:flist_head	file:
list	engines/rados.c	/^	struct flist_head list;$/;"	m	struct:fio_rados_iou	typeref:struct:flist_head	file:
list	filelock.c	/^	struct flist_head list;$/;"	m	struct:filelock_data	typeref:struct:flist_head	file:
list	filelock.c	/^	struct flist_head list;$/;"	m	struct:fio_filelock	typeref:struct:flist_head	file:
list	filesetup.c	/^	struct flist_head list;$/;"	m	struct:file_name	typeref:struct:flist_head	file:
list	filesetup.c	/^	struct flist_head list;$/;"	m	struct:fio_mount	typeref:struct:flist_head	file:
list	flist.h	/^static inline void __flist_splice(const struct flist_head *list,$/;"	z	function:__flist_splice	typeref:typename:const struct flist_head *	file:
list	flist.h	/^static inline void flist_splice(const struct flist_head *list,$/;"	z	function:flist_splice	typeref:typename:const struct flist_head *	file:
list	flist.h	/^static inline void flist_splice_init(struct flist_head *list,$/;"	z	function:flist_splice_init	typeref:struct:flist_head *	file:
list	flist.h	/^static inline void flist_splice_tail(struct flist_head *list,$/;"	z	function:flist_splice_tail	typeref:struct:flist_head *	file:
list	flist.h	/^static inline void flist_splice_tail_init(struct flist_head *list,$/;"	z	function:flist_splice_tail_init	typeref:struct:flist_head *	file:
list	flow.c	/^	struct flist_head list;$/;"	m	struct:fio_flow	typeref:struct:flist_head	file:
list	gettime.c	/^	struct flist_head list;$/;"	m	struct:gtod_log	typeref:struct:flist_head	file:
list	gfio.h	/^	struct flist_head list;$/;"	m	struct:gfio_client_options	typeref:struct:flist_head
list	graph.c	/^	struct flist_head list;$/;"	m	struct:graph_label	typeref:struct:flist_head	file:
list	graph.c	/^	struct flist_head list;$/;"	m	struct:graph_value	typeref:struct:flist_head	file:
list	ioengines.h	/^	struct flist_head list;$/;"	m	struct:ioengine_ops	typeref:struct:flist_head
list	iolog.h	/^		struct flist_head list;$/;"	m	union:io_piece::__anona1301755060a	typeref:struct:flist_head
list	iolog.h	/^	struct flist_head list;$/;"	m	struct:io_hist	typeref:struct:flist_head
list	iolog.h	/^	struct flist_head list;$/;"	m	struct:io_logs	typeref:struct:flist_head
list	iolog.h	/^	struct flist_head list;$/;"	m	struct:iolog_compress	typeref:struct:flist_head
list	parse.h	/^	struct flist_head list;$/;"	m	struct:print_option	typeref:struct:flist_head
list	profile.h	/^	struct flist_head list;$/;"	m	struct:profile_ops	typeref:struct:flist_head
list	server.c	/^			    struct flist_head *list)$/;"	z	function:fio_net_send_simple_cmd	typeref:struct:flist_head *	file:
list	server.c	/^		     uint64_t *tagptr, struct flist_head *list)$/;"	z	function:fio_net_send_cmd	typeref:struct:flist_head *	file:
list	server.c	/^	struct flist_head list;	\/* link on sk_out->list *\/$/;"	m	struct:sk_entry	typeref:struct:flist_head	file:
list	server.c	/^	struct flist_head list;$/;"	m	struct:fio_fork_item	typeref:struct:flist_head	file:
list	server.c	/^static void add_reply(uint64_t tag, struct flist_head *list)$/;"	z	function:add_reply	typeref:struct:flist_head *	file:
list	server.c	/^static void entry_set_flags(struct sk_entry *entry, struct flist_head *list,$/;"	z	function:entry_set_flags	typeref:struct:flist_head *	file:
list	server.c	/^static void fio_server_add_fork_item(pid_t pid, struct flist_head *list)$/;"	z	function:fio_server_add_fork_item	typeref:struct:flist_head *	file:
list	server.c	/^static void fio_server_add_fork_item(struct ffi_element *element, struct flist_head *list)$/;"	z	function:fio_server_add_fork_item	typeref:struct:flist_head *	file:
list	server.c	/^static void fio_server_check_fork_items(struct flist_head *list, bool stop)$/;"	z	function:fio_server_check_fork_items	typeref:struct:flist_head *	file:
list	server.h	/^	struct flist_head list;	\/* list of pending transmit work *\/$/;"	m	struct:sk_out	typeref:struct:flist_head
list	server.h	/^	struct flist_head list;$/;"	m	struct:fio_net_cmd_reply	typeref:struct:flist_head
list	stat.h	/^	struct flist_head list;$/;"	m	struct:io_u_plat_entry	typeref:struct:flist_head
list	t/btrace2fio.c	/^	struct flist_head list;$/;"	m	struct:inflight	typeref:struct:flist_head	file:
list	t/btrace2fio.c	/^static struct btrace_pid *pid_hash_find(pid_t pid, struct flist_head *list)$/;"	z	function:pid_hash_find	typeref:struct:flist_head *	file:
list	t/dedupe.c	/^	struct flist_head list;$/;"	m	struct:extent	typeref:struct:flist_head	file:
list	t/genzipf.c	/^	struct flist_head list;$/;"	m	struct:node	typeref:struct:flist_head	file:
list	t/read-to-pipe-async.c	/^	struct flist_head list;$/;"	m	struct:reader_thread	typeref:struct:flist_head	file:
list	t/read-to-pipe-async.c	/^	struct flist_head list;$/;"	m	struct:work_item	typeref:struct:flist_head	file:
list	t/read-to-pipe-async.c	/^	struct flist_head list;$/;"	m	struct:writer_thread	typeref:struct:flist_head	file:
list	t/stest.c	/^	struct flist_head list;$/;"	m	struct:elem	typeref:struct:flist_head	file:
list	workqueue.c	/^static void handle_list(struct submit_worker *sw, struct flist_head *list)$/;"	z	function:handle_list	typeref:struct:flist_head *	file:
list	workqueue.h	/^	struct flist_head list;$/;"	m	struct:workqueue_work	typeref:struct:flist_head
list_types	crc/test.c	/^static int list_types(void)$/;"	f	typeref:typename:int	file:
list_types	lib/memcpy.c	/^static int list_types(void)$/;"	f	typeref:typename:int	file:
listen	engines/net.c	/^	unsigned int listen;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
listen_sk	server.c	/^static int accept_loop(int listen_sk)$/;"	z	function:accept_loop	typeref:typename:int	file:
listenfd	engines/net.c	/^	int listenfd;$/;"	m	struct:netio_data	typeref:typename:int	file:
ll	crc/xxhash.h	/^typedef struct { long long ll[(XXH32_SIZEOFSTATE+(sizeof(long long)-1))\/sizeof(long long)]; } X/;"	m	struct:__anon6ad455760208	typeref:typename:long long[]
lname	parse.h	/^	const char *lname;		\/* long option name *\/$/;"	m	struct:fio_option	typeref:typename:const char *
load	profiles/act.c	/^	unsigned int load;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
load_blktrace	t/btrace2fio.c	/^static int load_blktrace(const char *fname, int need_swap)$/;"	f	typeref:typename:int	file:
load_ioengine	ioengines.c	/^struct ioengine_ops *load_ioengine(struct thread_data *td)$/;"	f	typeref:struct:ioengine_ops *
load_ioengine	ioengines.h	/^extern struct ioengine_ops *load_ioengine(struct thread_data *);$/;"	p	typeref:struct:ioengine_ops *
load_profile	profile.c	/^int load_profile(const char *profile)$/;"	f	typeref:typename:int
load_profile	profile.h	/^int load_profile(const char *);$/;"	p	typeref:typename:int
lock	cgroup.c	/^static struct fio_sem *lock;$/;"	v	typeref:struct:fio_sem *	file:
lock	diskutil.h	/^	struct fio_sem *lock;$/;"	m	struct:disk_util	typeref:struct:fio_sem *
lock	file.h	/^		struct fio_sem *lock;$/;"	m	union:fio_file::__anonfd762ebb030a	typeref:struct:fio_sem *
lock	filelock.c	/^	struct fio_sem lock;$/;"	m	struct:filelock_data	typeref:struct:fio_sem	file:
lock	filelock.c	/^	struct fio_sem lock;$/;"	m	struct:fio_filelock	typeref:struct:fio_sem	file:
lock	fio_sem.h	/^	pthread_mutex_t lock;$/;"	m	struct:fio_sem	typeref:typename:pthread_mutex_t
lock	gettime.c	/^	struct fio_sem lock;$/;"	m	struct:clock_thread	typeref:struct:fio_sem	file:
lock	rwlock.c	/^void fio_rwlock_read(struct fio_rwlock *lock)$/;"	z	function:fio_rwlock_read	typeref:struct:fio_rwlock *	file:
lock	rwlock.c	/^void fio_rwlock_remove(struct fio_rwlock *lock)$/;"	z	function:fio_rwlock_remove	typeref:struct:fio_rwlock *	file:
lock	rwlock.c	/^void fio_rwlock_unlock(struct fio_rwlock *lock)$/;"	z	function:fio_rwlock_unlock	typeref:struct:fio_rwlock *	file:
lock	rwlock.c	/^void fio_rwlock_write(struct fio_rwlock *lock)$/;"	z	function:fio_rwlock_write	typeref:struct:fio_rwlock *	file:
lock	rwlock.h	/^	pthread_rwlock_t lock;$/;"	m	struct:fio_rwlock	typeref:typename:pthread_rwlock_t
lock	server.c	/^	struct fio_sem lock;$/;"	m	struct:cmd_reply	typeref:struct:fio_sem	file:
lock	server.h	/^	struct fio_sem lock;	\/* protects ref and below list *\/$/;"	m	struct:sk_out	typeref:struct:fio_sem
lock	smalloc.c	/^	struct fio_sem *lock;			\/* protects this pool *\/$/;"	m	struct:pool	typeref:struct:fio_sem *	file:
lock	t/read-to-pipe-async.c	/^	pthread_mutex_t lock;$/;"	m	struct:thread_data	typeref:typename:pthread_mutex_t	file:
lock	t/read-to-pipe-async.c	/^	pthread_mutex_t lock;$/;"	m	struct:work_item	typeref:typename:pthread_mutex_t	file:
lock	workqueue.h	/^	pthread_mutex_t lock;$/;"	m	struct:submit_worker	typeref:typename:pthread_mutex_t
lock1	rate-submit.c	/^static void pthread_double_lock(pthread_mutex_t *lock1, pthread_mutex_t *lock2)$/;"	z	function:pthread_double_lock	typeref:typename:pthread_mutex_t *	file:
lock1	rate-submit.c	/^static void pthread_double_unlock(pthread_mutex_t *lock1,$/;"	z	function:pthread_double_unlock	typeref:typename:pthread_mutex_t *	file:
lock2	rate-submit.c	/^				  pthread_mutex_t *lock2)$/;"	z	function:pthread_double_unlock	typeref:typename:pthread_mutex_t *	file:
lock2	rate-submit.c	/^static void pthread_double_lock(pthread_mutex_t *lock1, pthread_mutex_t *lock2)$/;"	z	function:pthread_double_lock	typeref:typename:pthread_mutex_t *	file:
lock_file	file.h	/^extern void lock_file(struct thread_data *, struct fio_file *, enum fio_ddir);$/;"	p	typeref:typename:void
lock_file	filesetup.c	/^void lock_file(struct thread_data *td, struct fio_file *f, enum fio_ddir ddir)$/;"	f	typeref:typename:void
lockmem	thread_options.h	/^	uint64_t lockmem;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
lockmem	thread_options.h	/^	unsigned long long lockmem;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
log	iolog.c	/^	struct io_log *log;$/;"	m	struct:iolog_flush_data	typeref:struct:io_log *	file:
log	iolog.c	/^int iolog_cur_flush(struct io_log *log, struct io_logs *cur_log)$/;"	z	function:iolog_cur_flush	typeref:struct:io_log *	file:
log	iolog.c	/^size_t log_chunk_sizes(struct io_log *log)$/;"	z	function:log_chunk_sizes	typeref:struct:io_log *	file:
log	iolog.c	/^static int __write_log(struct thread_data *td, struct io_log *log, int try)$/;"	z	function:__write_log	typeref:struct:io_log *	file:
log	iolog.c	/^static int finish_log(struct thread_data *td, struct io_log *log, int trylock)$/;"	z	function:finish_log	typeref:struct:io_log *	file:
log	iolog.c	/^static int inflate_gz_chunks(struct io_log *log, FILE *f)$/;"	z	function:inflate_gz_chunks	typeref:struct:io_log *	file:
log	iolog.c	/^static int iolog_flush(struct io_log *log)$/;"	z	function:iolog_flush	typeref:struct:io_log *	file:
log	iolog.c	/^static int iolog_flush(struct io_log *log);$/;"	z	prototype:iolog_flush	typeref:struct:io_log *	file:
log	iolog.c	/^static void iolog_free_deferred(struct io_log *log)$/;"	z	function:iolog_free_deferred	typeref:struct:io_log *	file:
log	iolog.c	/^static void iolog_put_deferred(struct io_log *log, void *ptr)$/;"	z	function:iolog_put_deferred	typeref:struct:io_log *	file:
log	iolog.c	/^struct io_logs *iolog_cur_log(struct io_log *log)$/;"	z	function:iolog_cur_log	typeref:struct:io_log *	file:
log	iolog.c	/^void flush_log(struct io_log *log, bool do_append)$/;"	z	function:flush_log	typeref:struct:io_log *	file:
log	iolog.c	/^void free_log(struct io_log *log)$/;"	z	function:free_log	typeref:struct:io_log *	file:
log	iolog.c	/^void setup_log(struct io_log **log, struct log_params *p,$/;"	z	function:setup_log	typeref:struct:io_log **	file:
log	iolog.h	/^	void *log;$/;"	m	struct:io_logs	typeref:typename:void *
log	iolog.h	/^static inline bool inline_log(struct io_log *log)$/;"	z	function:inline_log	typeref:struct:io_log *	file:
log	iolog.h	/^static inline bool per_unit_log(struct io_log *log)$/;"	z	function:per_unit_log	typeref:struct:io_log *	file:
log	iolog.h	/^static inline size_t log_entry_sz(struct io_log *log)$/;"	z	function:log_entry_sz	typeref:struct:io_log *	file:
log	iolog.h	/^static inline size_t log_sample_sz(struct io_log *log, struct io_logs *cur_log)$/;"	z	function:log_sample_sz	typeref:struct:io_log *	file:
log	iolog.h	/^static inline void io_sample_set_ddir(struct io_log *log,$/;"	z	function:io_sample_set_ddir	typeref:struct:io_log *	file:
log	server.c	/^int fio_send_iolog(struct thread_data *td, struct io_log *log, const char *name)$/;"	z	function:fio_send_iolog	typeref:struct:io_log *	file:
log	server.c	/^static int __fio_append_iolog_gz(struct sk_entry *first, struct io_log *log,$/;"	z	function:__fio_append_iolog_gz	typeref:struct:io_log *	file:
log	server.c	/^static int __fio_append_iolog_gz_hist(struct sk_entry *first, struct io_log *log,$/;"	z	function:__fio_append_iolog_gz_hist	typeref:struct:io_log *	file:
log	server.c	/^static int fio_append_gz_chunks(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_gz_chunks	typeref:struct:io_log *	file:
log	server.c	/^static int fio_append_iolog_gz(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_iolog_gz	typeref:struct:io_log *	file:
log	server.c	/^static int fio_append_text_log(struct sk_entry *first, struct io_log *log)$/;"	z	function:fio_append_text_log	typeref:struct:io_log *	file:
log	stat.c	/^			 struct io_stat *stat, struct io_log *log,$/;"	z	function:__add_samples	typeref:struct:io_log *	file:
log_alternate_epoch	thread_options.h	/^	uint32_t log_alternate_epoch;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_alternate_epoch	thread_options.h	/^	unsigned int log_alternate_epoch;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_alternate_epoch	time.c	/^void set_epoch_time(struct thread_data *td, int log_alternate_epoch, clockid_t clock_id)$/;"	z	function:set_epoch_time	typeref:typename:int	file:
log_alternate_epoch_clock_id	thread_options.h	/^	uint32_t log_alternate_epoch_clock_id;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_alternate_epoch_clock_id	thread_options.h	/^	unsigned int log_alternate_epoch_clock_id;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_avg_msec	thread_options.h	/^	uint32_t log_avg_msec;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_avg_msec	thread_options.h	/^	unsigned int log_avg_msec;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_buf	log.h	/^#define log_buf(/;"	d
log_chunk_sizes	iolog.c	/^size_t log_chunk_sizes(struct io_log *log)$/;"	f	typeref:typename:size_t
log_chunk_sizes	iolog.h	/^extern size_t log_chunk_sizes(struct io_log *);$/;"	p	typeref:typename:size_t
log_compress	iolog.h	/^	int log_compress;$/;"	m	struct:log_params	typeref:typename:int
log_compress_wq	fio.h	/^	struct workqueue log_compress_wq;$/;"	m	struct:thread_data	typeref:struct:workqueue
log_compress_wq_ops	iolog.c	/^static struct workqueue_ops log_compress_wq_ops = {$/;"	v	typeref:struct:workqueue_ops	file:
log_ddir_mask	iolog.h	/^	unsigned int log_ddir_mask;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_entries	thread_options.h	/^	uint32_t log_entries;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_entries	thread_options.h	/^	unsigned int log_entries;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_entry_sz	iolog.h	/^static inline size_t log_entry_sz(struct io_log *log)$/;"	f	typeref:typename:size_t
log_err	log.c	/^ssize_t log_err(const char *format, ...)$/;"	f	typeref:typename:ssize_t
log_err	log.h	/^extern ssize_t log_err(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)));$/;"	p	typeref:typename:ssize_t
log_err	t/log.c	/^size_t log_err(const char *format, ...)$/;"	f	typeref:typename:size_t
log_file	iolog.c	/^void log_file(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:void
log_file	iolog.h	/^extern void log_file(struct thread_data *, struct fio_file *, enum file_log_act);$/;"	p	typeref:typename:void
log_file	os/windows/posix.c	/^static HANDLE log_file = INVALID_HANDLE_VALUE;$/;"	v	typeref:typename:HANDLE	file:
log_get_level	log.c	/^const char *log_get_level(int level)$/;"	f	typeref:typename:const char *
log_get_level	log.h	/^extern const char *log_get_level(int level);$/;"	p	typeref:typename:const char *
log_gz	iolog.h	/^	int log_gz;$/;"	m	struct:log_params	typeref:typename:int
log_gz	iolog.h	/^	unsigned int log_gz;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_gz	thread_options.h	/^	uint32_t log_gz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_gz	thread_options.h	/^	unsigned int log_gz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_gz_cpumask	thread_options.h	/^	os_cpu_mask_t log_gz_cpumask;$/;"	m	struct:thread_options	typeref:typename:os_cpu_mask_t
log_gz_store	iolog.h	/^	int log_gz_store;$/;"	m	struct:log_params	typeref:typename:int
log_gz_store	iolog.h	/^	unsigned int log_gz_store;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_gz_store	thread_options.h	/^	uint32_t log_gz_store;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_gz_store	thread_options.h	/^	unsigned int log_gz_store;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_hist_coarseness	server.h	/^	uint32_t log_hist_coarseness;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
log_hist_coarseness	thread_options.h	/^	uint32_t log_hist_coarseness;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_hist_coarseness	thread_options.h	/^	unsigned int log_hist_coarseness;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_hist_msec	thread_options.h	/^	uint32_t log_hist_msec;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_hist_msec	thread_options.h	/^	unsigned int log_hist_msec;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_info	log.c	/^ssize_t log_info(const char *format, ...)$/;"	f	typeref:typename:ssize_t
log_info	log.h	/^extern ssize_t log_info(const char *format, ...) __attribute__ ((__format__ (__printf__, 1, 2)))/;"	p	typeref:typename:ssize_t
log_info	t/log.c	/^size_t log_info(const char *format, ...)$/;"	f	typeref:typename:size_t
log_info_buf	log.c	/^size_t log_info_buf(const char *buf, size_t len)$/;"	f	typeref:typename:size_t
log_info_buf	log.h	/^extern size_t log_info_buf(const char *buf, size_t len);$/;"	p	typeref:typename:size_t
log_info_flush	log.c	/^int log_info_flush(void)$/;"	f	typeref:typename:int
log_info_flush	log.h	/^extern int log_info_flush(void);$/;"	p	typeref:typename:int
log_io_piece	iolog.c	/^void log_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
log_io_piece	iolog.h	/^extern void log_io_piece(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
log_io_u	iolog.c	/^void log_io_u(const struct thread_data *td, const struct io_u *io_u)$/;"	f	typeref:typename:void
log_io_u	iolog.h	/^extern void log_io_u(const struct thread_data *, const struct io_u *);$/;"	p	typeref:typename:void
log_max	stat.c	/^			      unsigned long elapsed, bool log_max)$/;"	z	function:__add_stat_to_log	typeref:typename:bool	file:
log_max	stat.c	/^			     bool log_max)$/;"	z	function:_add_stat_to_log	typeref:typename:bool	file:
log_max	thread_options.h	/^	uint32_t log_max;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_max	thread_options.h	/^	unsigned int log_max;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_model	gfio.h	/^	GtkListStore *log_model;$/;"	m	struct:gui	typeref:typename:GtkListStore *
log_model	gfio.h	/^	GtkListStore *log_model;$/;"	m	struct:gui_entry	typeref:typename:GtkListStore *
log_offset	iolog.h	/^	int log_offset;$/;"	m	struct:log_params	typeref:typename:int
log_offset	iolog.h	/^	unsigned int log_offset;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_offset	iolog.h	/^static inline size_t __log_entry_sz(int log_offset)$/;"	z	function:__log_entry_sz	typeref:typename:int	file:
log_offset	iolog.h	/^static inline struct io_sample *__get_sample(void *samples, int log_offset,$/;"	z	function:__get_sample	typeref:typename:int	file:
log_offset	server.h	/^	uint32_t log_offset;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
log_offset	thread_options.h	/^	uint32_t log_offset;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_offset	thread_options.h	/^	unsigned int log_offset;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_params	iolog.h	/^struct log_params {$/;"	s
log_prevalist	log.c	/^void log_prevalist(int type, const char *fmt, va_list args)$/;"	f	typeref:typename:void
log_prevalist	log.h	/^extern void log_prevalist(int type, const char *str, va_list);$/;"	p	typeref:typename:void
log_prio	iolog.h	/^	int log_prio;$/;"	m	struct:log_params	typeref:typename:int
log_prio	iolog.h	/^	unsigned int log_prio;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_prio	server.h	/^	uint32_t log_prio;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
log_prio	thread_options.h	/^	uint32_t log_prio;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_prio	thread_options.h	/^	unsigned int log_prio;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_sample_sz	iolog.h	/^static inline size_t log_sample_sz(struct io_log *log, struct io_logs *cur_log)$/;"	f	typeref:typename:size_t
log_sec	server.h	/^	uint64_t log_sec;$/;"	m	struct:cmd_text_pdu	typeref:typename:uint64_t
log_syslog	init.c	/^bool log_syslog = false;$/;"	v	typeref:typename:bool
log_tree	gfio.h	/^	GtkWidget *log_tree;$/;"	m	struct:gui	typeref:typename:GtkWidget *
log_tree	gfio.h	/^	GtkWidget *log_tree;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
log_type	iolog.c	/^struct log_type {$/;"	s	file:
log_type	iolog.h	/^	int log_type;$/;"	m	struct:log_params	typeref:typename:int
log_type	iolog.h	/^	unsigned int log_type;$/;"	m	struct:io_log	typeref:typename:unsigned int
log_type	server.h	/^	uint32_t log_type;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
log_types	iolog.c	/^static struct log_type log_types[] = {$/;"	v	typeref:struct:log_type[]	file:
log_unix_epoch	thread_options.h	/^	uint32_t log_unix_epoch;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
log_unix_epoch	thread_options.h	/^	unsigned int log_unix_epoch;$/;"	m	struct:thread_options	typeref:typename:unsigned int
log_usec	server.h	/^	uint64_t log_usec;$/;"	m	struct:cmd_text_pdu	typeref:typename:uint64_t
log_valist	log.c	/^size_t log_valist(const char *fmt, va_list args)$/;"	f	typeref:typename:size_t
log_valist	log.h	/^extern size_t log_valist(const char *str, va_list);$/;"	p	typeref:typename:size_t
log_verify_failure	verify.c	/^static void log_verify_failure(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:void	file:
log_view	gfio.h	/^	GtkWidget *log_view;$/;"	m	struct:gui	typeref:typename:GtkWidget *
log_view	gfio.h	/^	GtkWidget *log_view;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
logged	engines/libcufile.c	/^	int                 logged;        \/* bitmask of log messages that have$/;"	m	struct:libcufile_options	typeref:typename:int	file:
logger	parse.c	/^			      ssize_t (*logger)(const char *format, ...))$/;"	z	function:show_option_range	typeref:typename:ssize_t (*)(const char * format,...)	file:
logname	init.c	/^			 const char *logname, unsigned int num,$/;"	z	function:gen_log_name	typeref:typename:const char *	file:
logname	init.c	/^static const char *make_log_name(const char *logname, const char *jobname)$/;"	z	function:make_log_name	typeref:typename:const char *	file:
logopt	os/windows/posix.c	/^void openlog(const char *ident, int logopt, int facility)$/;"	z	function:openlog	typeref:typename:int	file:
logopt	os/windows/posix/include/syslog.h	/^void openlog(const char *ident, int logopt, int facility);$/;"	z	prototype:openlog	typeref:typename:int	file:
logtype	init.c	/^static void gen_log_name(char *name, size_t size, const char *logtype,$/;"	z	function:gen_log_name	typeref:typename:const char *	file:
long_options	fio.h	/^extern void fio_options_set_ioengine_opts(struct option *long_options, struct thread_data *td);$/;"	z	prototype:fio_options_set_ioengine_opts	typeref:struct:option *	file:
long_options	options.c	/^			      struct option *long_options,$/;"	z	function:options_to_lopts	typeref:struct:option *	file:
long_options	options.c	/^void fio_options_dup_and_init(struct option *long_options)$/;"	z	function:fio_options_dup_and_init	typeref:struct:option *	file:
long_options	options.c	/^void fio_options_set_ioengine_opts(struct option *long_options,$/;"	z	function:fio_options_set_ioengine_opts	typeref:struct:option *	file:
longest_existing_path	filesetup.c	/^int longest_existing_path(char *path) {$/;"	f	typeref:typename:int
longindex	oslib/getopt_long.c	/^		const struct option *longopts, int *longindex)$/;"	z	function:getopt_long_only	typeref:typename:int *	file:
longopts	oslib/getopt_long.c	/^		const struct option *longopts, int *longindex)$/;"	z	function:getopt_long_only	typeref:typename:const struct option *	file:
lookup_file_hash	filehash.c	/^struct fio_file *lookup_file_hash(const char *name)$/;"	f	typeref:struct:fio_file *
lookup_file_hash	filehash.h	/^extern struct fio_file *lookup_file_hash(const char *);$/;"	p	typeref:struct:fio_file *
loop_cache_invalidate	io_u.c	/^static void loop_cache_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void	file:
loop_idx	profiles/tiobench.c	/^static char sz_idx[80], bs_idx[80], loop_idx[80], dir_idx[80], t_idx[80];$/;"	v	typeref:typename:char[80]	file:
loops	fio.h	/^	uint64_t loops;$/;"	m	struct:thread_data	typeref:typename:uint64_t
loops	idletime.h	/^	double loops;$/;"	m	struct:idle_prof_thread	typeref:typename:double
loops	profiles/tiobench.c	/^	unsigned int loops;$/;"	m	struct:tiobench_options	typeref:typename:unsigned int	file:
loops	profiles/tiobench.c	/^static unsigned int loops = 1;$/;"	v	typeref:typename:unsigned int	file:
loops	thread_options.h	/^	uint32_t loops;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
loops	thread_options.h	/^	unsigned int loops;$/;"	m	struct:thread_options	typeref:typename:unsigned int
lopt	options.c	/^static void add_to_lopt(struct option *lopt, struct fio_option *o,$/;"	z	function:add_to_lopt	typeref:struct:option *	file:
lower_bin_vals	tools/hist/fiologparser_hist.py	/^lower_bin_vals = [] # lower edge of each bin$/;"	v
lowest_mtd_num	oslib/libmtd.h	/^	int lowest_mtd_num;$/;"	m	struct:mtd_info	typeref:typename:int
lpParameter	engines/windowsaio.c	/^static DWORD WINAPI IoCompletionRoutine(LPVOID lpParameter)$/;"	z	function:IoCompletionRoutine	typeref:typename:LPVOID	file:
lpParameter	engines/windowsaio.c	/^static DWORD WINAPI IoCompletionRoutine(LPVOID lpParameter);$/;"	z	prototype:IoCompletionRoutine	typeref:typename:LPVOID	file:
lstat	os/os-windows.h	/^int lstat(const char * path, struct stat * buf);$/;"	p	typeref:typename:int
lstat	os/windows/posix.c	/^int lstat(const char *path, struct stat *buf)$/;"	f	typeref:typename:int
luns	engines/libiscsi.c	/^	struct iscsi_lun	**luns;$/;"	m	struct:iscsi_info	typeref:struct:iscsi_lun **	file:
m	goptions.c	/^					  struct gopt_str_multi *m,$/;"	z	function:gopt_handle_str_multi_changed	typeref:struct:gopt_str_multi *	file:
m	goptions.c	/^static void gopt_str_multi_set_val(struct gopt_str_multi *m, int val)$/;"	z	function:gopt_str_multi_set_val	typeref:struct:gopt_str_multi *	file:
m	init.c	/^static unsigned int gcd(unsigned int m, unsigned int n)$/;"	z	function:gcd	typeref:typename:unsigned int	file:
m	lib/rand.c	/^static inline uint64_t __seed(uint64_t x, uint64_t m)$/;"	z	function:__seed	typeref:typename:uint64_t	file:
m2sw1-128k-sdb-randwrite-para.results_bw.log	tools/plot/samples/Makefile	/^m2sw1-128k-sdb-randwrite-para.results_bw.log:$/;"	t
m_rate	backend.c	/^			 uint64_t *m_rate)$/;"	z	function:reap_threads	typeref:typename:uint64_t *	file:
magic	blktrace_api.h	/^	__u32 magic;		\/* MAGIC << 8 | version *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
magic	engines/libaio.c	/^	unsigned magic;$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
magic	engines/net.c	/^	uint32_t magic;$/;"	m	struct:udp_close_msg	typeref:typename:uint32_t	file:
magic	engines/net.c	/^	uint64_t magic;$/;"	m	struct:udp_seq	typeref:typename:uint64_t	file:
magic	fio_sem.h	/^	int magic;$/;"	m	struct:fio_sem	typeref:typename:int
magic	rwlock.h	/^	int magic;$/;"	m	struct:fio_rwlock	typeref:typename:int
magic	thread_options.h	/^	int magic;$/;"	m	struct:thread_options	typeref:typename:int
magic	verify.h	/^	uint16_t magic;$/;"	m	struct:verify_header	typeref:typename:uint16_t
magic1	t/stest.c	/^	unsigned int magic1;$/;"	m	struct:elem	typeref:typename:unsigned int	file:
magic2	t/stest.c	/^	unsigned int magic2;$/;"	m	struct:elem	typeref:typename:unsigned int	file:
main	ci/actions-build.sh	/^main() {$/;"	f
main	ci/actions-full-test.sh	/^main() {$/;"	f
main	ci/actions-install.sh	/^main() {$/;"	f
main	ci/actions-smoke-test.sh	/^main() {$/;"	f
main	exp/test-expression-parser.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	fio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	f	typeref:typename:int
main	gfio.c	/^int main(int argc, char *argv[], char *envp[])$/;"	f	typeref:typename:int
main	t/axmap.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/btrace2fio.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/dedupe.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/fuzz/onefile.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	t/gen-rand.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/genzipf.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/ieee754.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/io_uring.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/jsonplus2csv_test.py	/^def main():$/;"	f
main	t/latency_percentiles.py	/^def main():$/;"	f
main	t/lfsr-test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/memlock.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/read-to-pipe-async.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/run-fio-tests.py	/^def main():$/;"	f
main	t/stest.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/time-test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	t/verify-state.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	tools/fio_jsonplus_clat2csv	/^def main():$/;"	f
main	tools/fiograph/fiograph.py	/^def main():$/;"	f
main	tools/hist/fiologparser_hist.py	/^def main(ctx):$/;"	f
main	tools/hist/half-bins.py	/^def main(ctx):$/;"	f
main	tools/plot/fio2gnuplot	/^def main(argv):$/;"	f
main	unittests/unittest.c	/^int main(void)$/;"	f	typeref:typename:int
main_ui	gfio.c	/^struct gui main_ui;$/;"	v	typeref:struct:gui
maj	blktrace.c	/^	unsigned int maj;$/;"	m	struct:file_cache	typeref:typename:unsigned int	file:
maj	diskutil.c	/^static int get_device_numbers(char *file_name, int *maj, int *min)$/;"	z	function:get_device_numbers	typeref:typename:int *	file:
maj	diskutil.c	/^static int read_block_dev_entry(char *path, int *maj, int *min)$/;"	z	function:read_block_dev_entry	typeref:typename:int *	file:
maj	oslib/linux-dev-lookup.c	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	function:blktrace_lookup_device	typeref:typename:unsigned int	file:
maj	oslib/linux-dev-lookup.h	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	prototype:blktrace_lookup_device	typeref:typename:unsigned int	file:
majdev	diskutil.c	/^						   int majdev, int mindev,$/;"	z	function:__init_per_file_disk_util	typeref:typename:int	file:
majdev	diskutil.c	/^		int majdev, int mindev, char *path);$/;"	z	prototype:__init_per_file_disk_util	typeref:typename:int	file:
majdev	diskutil.c	/^static int check_dev_match(int majdev, int mindev, char *path)$/;"	z	function:check_dev_match	typeref:typename:int	file:
majdev	diskutil.c	/^static int find_block_dir(int majdev, int mindev, char *path, int link_ok)$/;"	z	function:find_block_dir	typeref:typename:int	file:
majdev	diskutil.c	/^static struct disk_util *disk_util_add(struct thread_data *td, int majdev,$/;"	z	function:disk_util_add	typeref:typename:int	file:
majf	stat.h	/^	uint64_t minf, majf;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
major	diskutil.c	/^static struct disk_util *disk_util_exists(int major, int minor)$/;"	z	function:disk_util_exists	typeref:typename:int	file:
major	diskutil.h	/^	int major, minor;$/;"	m	struct:disk_util	typeref:typename:int
major	file.h	/^	unsigned int major, minor;$/;"	m	struct:fio_file	typeref:typename:unsigned int
major	oslib/libmtd.c	/^static int dev_get_major(struct libmtd *lib, int mtd_num, int *major, int *minor)$/;"	z	function:dev_get_major	typeref:typename:int *	file:
major	oslib/libmtd.c	/^static int read_major(const char *file, int *major, int *minor)$/;"	z	function:read_major	typeref:typename:int *	file:
major	oslib/libmtd.h	/^	int major;$/;"	m	struct:mtd_dev_info	typeref:typename:int
major	t/btrace2fio.c	/^	int major, minor;$/;"	m	struct:trace_file	typeref:typename:int	file:
make_filename	init.c	/^static char *make_filename(char *buf, size_t buf_size,struct thread_options *o,$/;"	f	typeref:typename:char *	file:
make_log_name	init.c	/^static const char *make_log_name(const char *logname, const char *jobname)$/;"	f	typeref:typename:const char *	file:
make_nonblocking	helper_thread.c	/^static int make_nonblocking(int fd)$/;"	f	typeref:typename:int	file:
make_pos_h_l	os/os-linux.h	/^static inline void make_pos_h_l(unsigned long *pos_h, unsigned long *pos_l,$/;"	f	typeref:typename:void
malloc	y.tab.c	/^void *malloc (YYSIZE_T); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	typeref:typename:void *	file:
malloc_fn	lib/memalign.h	/^typedef void* (*malloc_fn)(size_t);$/;"	t	typeref:typename:void * (*)(size_t)
man	doc/Makefile	/^man:$/;"	t
man_pages	doc/conf.py	/^man_pages = [$/;"	v
mandir	Makefile	/^mandir = $(prefix)\/man$/;"	m
mandir	Makefile	/^mandir = \/usr\/share\/man$/;"	m
map	io_u.c	/^static void __io_u_mark_map(uint64_t *map, unsigned int nr)$/;"	z	function:__io_u_mark_map	typeref:typename:uint64_t *	file:
map	lib/axmap.c	/^	unsigned long *map;$/;"	m	struct:axmap_level	typeref:typename:unsigned long *	file:
map	lib/bloom.c	/^	uint32_t *map;$/;"	m	struct:bloom	typeref:typename:uint32_t *	file:
map	smalloc.c	/^	void *map;				\/* map of blocks *\/$/;"	m	struct:pool	typeref:typename:void *	file:
map	smalloc.c	/^static int mask_clear(unsigned int *map, unsigned int mask)$/;"	z	function:mask_clear	typeref:typename:unsigned int *	file:
map	smalloc.c	/^static int mask_cmp(unsigned int *map, unsigned int mask)$/;"	z	function:mask_cmp	typeref:typename:unsigned int *	file:
map	smalloc.c	/^static int mask_set(unsigned int *map, unsigned int mask)$/;"	z	function:mask_set	typeref:typename:unsigned int *	file:
map	stat.c	/^void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist)$/;"	z	function:stat_calc_dist	typeref:typename:uint64_t *	file:
map	stat.h	/^extern void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist);$/;"	z	prototype:stat_calc_dist	typeref:typename:uint64_t *	file:
map	t/axmap.c	/^static int check_next_free(struct axmap *map, uint64_t start, uint64_t expected)$/;"	z	function:check_next_free	typeref:struct:axmap *	file:
map_size	lib/axmap.c	/^	unsigned long map_size;$/;"	m	struct:axmap_level	typeref:typename:unsigned long	file:
mark_random_map	io_u.c	/^static uint64_t mark_random_map(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:uint64_t	file:
mask	crc/test.c	/^	unsigned int mask;$/;"	m	struct:test_type	typeref:typename:unsigned int	file:
mask	debug.h	/^static inline bool fio_did_warn(unsigned int mask)$/;"	z	function:fio_did_warn	typeref:typename:unsigned int	file:
mask	iolog.c	/^	unsigned int mask;$/;"	m	struct:log_type	typeref:typename:unsigned int	file:
mask	lib/memcpy.c	/^	unsigned int mask;$/;"	m	struct:memcpy_type	typeref:typename:unsigned int	file:
mask	lib/prio_tree.h	/^	unsigned long		mask;$/;"	m	struct:prio_tree_iter	typeref:typename:unsigned long
mask	optgroup.c	/^					       uint64_t *mask,$/;"	z	function:group_from_mask	typeref:typename:uint64_t *	file:
mask	optgroup.c	/^const struct opt_group *opt_group_cat_from_mask(uint64_t *mask)$/;"	z	function:opt_group_cat_from_mask	typeref:typename:uint64_t *	file:
mask	optgroup.c	/^const struct opt_group *opt_group_from_mask(uint64_t *mask)$/;"	z	function:opt_group_from_mask	typeref:typename:uint64_t *	file:
mask	optgroup.h	/^	uint64_t mask;$/;"	m	struct:opt_group	typeref:typename:uint64_t
mask	optgroup.h	/^extern const struct opt_group *opt_group_cat_from_mask(uint64_t *mask);$/;"	z	prototype:opt_group_cat_from_mask	typeref:typename:uint64_t *	file:
mask	optgroup.h	/^extern const struct opt_group *opt_group_from_mask(uint64_t *mask);$/;"	z	prototype:opt_group_from_mask	typeref:typename:uint64_t *	file:
mask	options.c	/^int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	z	function:fio_cpus_split	typeref:typename:os_cpu_mask_t *	file:
mask	options.c	/^static int set_cpus_allowed(struct thread_data *td, os_cpu_mask_t *mask,$/;"	z	function:set_cpus_allowed	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	z	function:fio_getaffinity	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t mask)$/;"	z	function:fio_setaffinity	typeref:typename:os_cpu_mask_t	file:
mask	os/os-dragonfly.h	/^static inline void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_clear	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-dragonfly.h	/^static inline void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_set	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-freebsd.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-freebsd.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-linux.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-linux.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-solaris.h	/^static inline bool fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-solaris.h	/^static inline int fio_cpu_count(os_cpu_mask_t *mask)$/;"	z	function:fio_cpu_count	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-solaris.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-solaris.h	/^static inline int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^int fio_cpu_count(os_cpu_mask_t *mask);$/;"	z	prototype:fio_cpu_count	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_isset	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^int fio_cpuset_exit(os_cpu_mask_t *mask);$/;"	z	prototype:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^int fio_cpuset_init(os_cpu_mask_t *mask);$/;"	z	prototype:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask);$/;"	z	prototype:fio_getaffinity	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_clear	typeref:typename:os_cpu_mask_t *	file:
mask	os/os-windows.h	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu);$/;"	z	prototype:fio_cpu_set	typeref:typename:os_cpu_mask_t *	file:
mask	os/os.h	/^extern int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu);$/;"	z	prototype:fio_cpus_split	typeref:typename:os_cpu_mask_t *	file:
mask	os/os.h	/^static inline int CPU_COUNT(os_cpu_mask_t *mask)$/;"	z	function:CPU_COUNT	typeref:typename:os_cpu_mask_t *	file:
mask	os/os.h	/^static inline int fio_cpus_split(os_cpu_mask_t *mask, unsigned int cpu_index)$/;"	z	function:fio_cpus_split	typeref:typename:os_cpu_mask_t *	file:
mask	os/os.h	/^static inline int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^int fio_cpu_count(os_cpu_mask_t *mask)$/;"	z	function:fio_cpu_count	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^int fio_cpu_isset(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_isset	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^int fio_cpuset_exit(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_exit	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^int fio_cpuset_init(os_cpu_mask_t *mask)$/;"	z	function:fio_cpuset_init	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	z	function:fio_getaffinity	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^void fio_cpu_clear(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_clear	typeref:typename:os_cpu_mask_t *	file:
mask	os/windows/cpu-affinity.c	/^void fio_cpu_set(os_cpu_mask_t *mask, int cpu)$/;"	z	function:fio_cpu_set	typeref:typename:os_cpu_mask_t *	file:
mask	oslib/statx.c	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	function:statx	typeref:typename:unsigned int	file:
mask	oslib/statx.h	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	prototype:statx	typeref:typename:unsigned int	file:
mask	smalloc.c	/^static int mask_clear(unsigned int *map, unsigned int mask)$/;"	z	function:mask_clear	typeref:typename:unsigned int	file:
mask	smalloc.c	/^static int mask_cmp(unsigned int *map, unsigned int mask)$/;"	z	function:mask_cmp	typeref:typename:unsigned int	file:
mask	smalloc.c	/^static int mask_set(unsigned int *map, unsigned int mask)$/;"	z	function:mask_set	typeref:typename:unsigned int	file:
mask	verify-state.h	/^extern void verify_save_state(int mask);$/;"	z	prototype:verify_save_state	typeref:typename:int	file:
mask	verify.c	/^void verify_save_state(int mask)$/;"	z	function:verify_save_state	typeref:typename:int	file:
mask_clear	smalloc.c	/^static int mask_clear(unsigned int *map, unsigned int mask)$/;"	f	typeref:typename:int	file:
mask_cmp	smalloc.c	/^static int mask_cmp(unsigned int *map, unsigned int mask)$/;"	f	typeref:typename:int	file:
mask_set	smalloc.c	/^static int mask_set(unsigned int *map, unsigned int mask)$/;"	f	typeref:typename:int	file:
mask_to_group_mask	os/windows/cpu-affinity.c	/^static int mask_to_group_mask(os_cpu_mask_t *cpumask, int *processor_group, uint64_t *affinity_m/;"	f	typeref:typename:int	file:
master_doc	doc/conf.py	/^master_doc = 'index'$/;"	v
masterdu	diskutil.c	/^				 struct disk_util *masterdu)$/;"	z	function:find_add_disk_slaves	typeref:struct:disk_util *	file:
masterdu	stat.c	/^static void aggregate_slaves_stats(struct disk_util *masterdu)$/;"	z	function:aggregate_slaves_stats	typeref:struct:disk_util *	file:
max	engines/dfs.c	/^			      unsigned int max, const struct timespec *t)$/;"	z	function:daos_fio_getevents	typeref:typename:unsigned int	file:
max	engines/glusterfs_async.c	/^			    unsigned int max, const struct timespec *t)$/;"	z	function:fio_gf_getevents	typeref:typename:unsigned int	file:
max	engines/http.c	/^	size_t max;$/;"	m	struct:http_curl_stream	typeref:typename:size_t	file:
max	engines/http.c	/^	unsigned int max, const struct timespec *t)$/;"	z	function:fio_http_getevents	typeref:typename:unsigned int	file:
max	engines/ime.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ime_aio_getevents	typeref:typename:unsigned int	file:
max	engines/ime.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ime_psyncv_getevents	typeref:typename:unsigned int	file:
max	engines/io_uring.c	/^				   unsigned int max)$/;"	z	function:fio_ioring_cqring_reap	typeref:typename:unsigned int	file:
max	engines/io_uring.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ioring_getevents	typeref:typename:unsigned int	file:
max	engines/libaio.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_libaio_getevents	typeref:typename:unsigned int	file:
max	engines/libaio.c	/^static int user_io_getevents(io_context_t aio_ctx, unsigned int max,$/;"	z	function:user_io_getevents	typeref:typename:unsigned int	file:
max	engines/libiscsi.c	/^			       unsigned int max, const struct timespec *t)$/;"	z	function:fio_iscsi_getevents	typeref:typename:unsigned int	file:
max	engines/librpma_fio.c	/^		unsigned int max, const struct timespec *t)$/;"	z	function:librpma_fio_client_getevents	typeref:typename:unsigned int	file:
max	engines/librpma_fio.h	/^		unsigned int max, const struct timespec *t);$/;"	z	prototype:librpma_fio_client_getevents	typeref:typename:unsigned int	file:
max	engines/nbd.c	/^			 unsigned int max, const struct timespec *t)$/;"	z	function:nbd_getevents	typeref:typename:unsigned int	file:
max	engines/nfs.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_libnfs_getevents	typeref:typename:unsigned int	file:
max	engines/null.c	/^			       unsigned int max, const struct timespec *t)$/;"	z	function:NullData::fio_null_getevents	typeref:typename:unsigned int	file:
max	engines/null.c	/^			      unsigned int max, const struct timespec *t)$/;"	z	function:fio_null_getevents	typeref:typename:unsigned int	file:
max	engines/null.c	/^			  unsigned int fio_unused max,$/;"	z	function:null_getevents	typeref:typename:unsigned int fio_unused	file:
max	engines/posixaio.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_posixaio_getevents	typeref:typename:unsigned int	file:
max	engines/rados.c	/^	unsigned int max, const struct timespec *t)$/;"	z	function:fio_rados_getevents	typeref:typename:unsigned int	file:
max	engines/rbd.c	/^			     unsigned int max, const struct timespec *t)$/;"	z	function:fio_rbd_getevents	typeref:typename:unsigned int	file:
max	engines/rdma.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_rdmaio_getevents	typeref:typename:unsigned int	file:
max	engines/sg.c	/^			      unsigned int max,$/;"	z	function:fio_sgio_getevents	typeref:typename:unsigned int	file:
max	engines/skeleton_external.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_skeleton_getevents	typeref:typename:unsigned int	file:
max	engines/solarisaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_solarisaio_getevents	typeref:typename:unsigned int	file:
max	engines/sync.c	/^				 unsigned int max,$/;"	z	function:fio_vsyncio_getevents	typeref:typename:unsigned int	file:
max	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowaio_getevents_thread	typeref:typename:unsigned int	file:
max	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowsaio_getevents	typeref:typename:unsigned int	file:
max	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowsaio_getevents_nothread	typeref:typename:unsigned int	file:
max	engines/xnvme.c	/^static int xnvme_fioe_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:xnvme_fioe_getevents	typeref:typename:unsigned int	file:
max	gclient.c	/^			  unsigned long long max, double mean, double dev)$/;"	z	function:gfio_show_lat	typeref:typename:unsigned long long	file:
max	ghelpers.c	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval)$/;"	z	function:create_spinbutton	typeref:typename:double	file:
max	ghelpers.h	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval);$/;"	z	prototype:create_spinbutton	typeref:typename:double	file:
max	io_u_queue.h	/^	unsigned int max;$/;"	m	struct:io_u_queue	typeref:typename:unsigned int
max	io_u_queue.h	/^	unsigned int max;$/;"	m	struct:io_u_ring	typeref:typename:unsigned int
max	ioengines.c	/^int td_io_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:td_io_getevents	typeref:typename:unsigned int	file:
max	minmax.h	/^#define max(/;"	d
max	stat.c	/^			unsigned long long max, double mean, double dev,$/;"	z	function:display_lat	typeref:typename:unsigned long long	file:
max	stat.c	/^	      unsigned long long *max, double *mean, double *dev)$/;"	z	function:calc_lat	typeref:typename:unsigned long long *	file:
max	stat.h	/^				unsigned long long *max, double *mean,$/;"	z	function:nsec_to_msec	typeref:typename:unsigned long long *	file:
max	stat.h	/^				unsigned long long *max, double *mean,$/;"	z	function:nsec_to_usec	typeref:typename:unsigned long long *	file:
max	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	z	prototype:calc_lat	typeref:typename:unsigned long long *	file:
max	t/read-to-pipe-async.c	/^	unsigned int max;$/;"	m	struct:stats	typeref:typename:unsigned int	file:
max	t/zbd/test-zbd-support	/^max() {$/;"	f
max	tickmarks.c	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	function:calc_tickmarks	typeref:typename:double	file:
max	tickmarks.h	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	prototype:calc_tickmarks	typeref:typename:double	file:
max_blocks	t/io_uring.c	/^	unsigned long max_blocks;$/;"	m	struct:file	typeref:typename:unsigned long	file:
max_bs	engines/rdma.c	/^	uint32_t max_bs;        \/* maximum block size *\/$/;"	m	struct:rdma_info_blk	typeref:typename:uint32_t	file:
max_bs	io_u.c	/^		      unsigned long long min_write, unsigned long long max_bs)$/;"	z	function:io_u_fill_buffer	typeref:typename:unsigned long long	file:
max_bs	io_u.c	/^		    unsigned long long max_bs)$/;"	z	function:fill_io_buffer	typeref:typename:unsigned long long	file:
max_bs	thread_options.h	/^	uint64_t max_bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
max_bs	thread_options.h	/^	unsigned long long max_bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned long long[]
max_buflen	lib/output_buffer.h	/^	size_t max_buflen;$/;"	m	struct:buf_output	typeref:typename:size_t
max_bw	stat.h	/^	uint64_t max_bw[DDIR_RWDIR_CNT], min_bw[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
max_cycles_mask	gettime.c	/^static unsigned long long max_cycles_mask;$/;"	v	typeref:typename:unsigned long long	file:
max_cycles_mask	t/time-test.c	/^static unsigned long long max_cycles_mask;$/;"	v	typeref:typename:unsigned long long	file:
max_cycles_shift	gettime.c	/^static unsigned int max_cycles_shift;$/;"	v	typeref:typename:unsigned int	file:
max_cycles_shift	t/time-test.c	/^static unsigned int max_cycles_shift;$/;"	v	typeref:typename:unsigned int	file:
max_depth	engines/solarisaio.c	/^	unsigned int max_depth;$/;"	m	struct:solarisaio_data	typeref:typename:unsigned int	file:
max_depth	t/btrace2fio.c	/^static unsigned int max_depth = 256;$/;"	v	typeref:typename:unsigned int	file:
max_heap_index	lib/prio_tree.c	/^		struct prio_tree_node *node, unsigned long max_heap_index)$/;"	z	function:prio_tree_expand	typeref:typename:unsigned long	file:
max_iops	t/io_uring.c	/^static unsigned long max_iops;$/;"	v	typeref:typename:unsigned long	file:
max_ios	t/io_uring.c	/^static int prep_more_ios_aio(struct submitter *s, int max_ios, struct iocb *iocbs)$/;"	z	function:prep_more_ios_aio	typeref:typename:int	file:
max_ios	t/io_uring.c	/^static int prep_more_ios_uring(struct submitter *s, int max_ios)$/;"	z	function:prep_more_ios_uring	typeref:typename:int	file:
max_latency	thread_options.h	/^	uint64_t max_latency[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
max_latency	thread_options.h	/^	unsigned long long max_latency[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned long long[]
max_lba	engines/sg.c	/^				  unsigned long long *max_lba)$/;"	z	function:fio_sgio_read_capacity	typeref:typename:unsigned long long *	file:
max_msg_num	engines/librpma_fio.h	/^	uint16_t max_msg_num;	\/* # of RQ slots *\/$/;"	m	struct:librpma_fio_workspace	typeref:typename:uint16_t
max_nsec	io_u.c	/^		      unsigned long long tnsec, unsigned long long max_nsec)$/;"	z	function:lat_fatal	typeref:typename:unsigned long long	file:
max_open_seq_req	engines/libzbc.c	/^	uint32_t		max_open_seq_req;$/;"	m	struct:libzbc_data	typeref:typename:uint32_t	file:
max_open_zones	engines/libzbc.c	/^				     unsigned int *max_open_zones)$/;"	z	function:libzbc_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	engines/skeleton_external.c	/^					   unsigned int *max_open_zones)$/;"	z	function:fio_skeleton_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	engines/xnvme.c	/^					 unsigned int *max_open_zones)$/;"	z	function:xnvme_fioe_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	oslib/blkzoned.h	/^					      unsigned int *max_open_zones)$/;"	z	function:blkzoned_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	oslib/blkzoned.h	/^				       unsigned int *max_open_zones);$/;"	z	prototype:blkzoned_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	oslib/linux-blkzoned.c	/^				unsigned int *max_open_zones)$/;"	z	function:blkzoned_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	thread_options.h	/^	int max_open_zones;$/;"	m	struct:thread_options	typeref:typename:int
max_open_zones	thread_options.h	/^	int32_t max_open_zones;$/;"	m	struct:thread_options_pack	typeref:typename:int32_t
max_open_zones	zbd.c	/^				  unsigned int *max_open_zones)$/;"	z	function:zbd_get_max_open_zones	typeref:typename:unsigned int *	file:
max_open_zones	zbd.h	/^	uint32_t		max_open_zones;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
max_perm	profiles/act.c	/^	unsigned int max_perm;$/;"	m	struct:act_pass_criteria	typeref:typename:unsigned int	file:
max_run	stat.h	/^	uint64_t max_run[DDIR_RWDIR_CNT], min_run[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
max_samples	iolog.h	/^	uint64_t max_samples;$/;"	m	struct:io_logs	typeref:typename:uint64_t
max_sec	t/time-test.c	/^			    unsigned long long max_sec,$/;"	z	function:calc_mult_shift	typeref:typename:unsigned long long	file:
max_size	t/io_uring.c	/^	unsigned long max_size;$/;"	m	struct:file	typeref:typename:unsigned long	file:
max_splits	options.c	/^			    char *str, bool absolute, unsigned int max_splits)$/;"	z	function:split_parse_ddir	typeref:typename:unsigned int	file:
max_splits	thread_options.h	/^			    char *str, bool absolute, unsigned int max_splits);$/;"	z	prototype:split_parse_ddir	typeref:typename:unsigned int	file:
max_t	oslib/libmtd_common.h	/^#define max_t(/;"	d
max_text	ghelpers.h	/^	unsigned int max_text;$/;"	m	struct:multitext_widget	typeref:typename:unsigned int
max_unique_prios	engines/cmdprio.c	/^			       int max_unique_prios, struct thread_stat *ts)$/;"	z	function:init_cmdprio_values	typeref:typename:int	file:
max_us	t/read-to-pipe-async.c	/^static int max_us = 10000;$/;"	v	typeref:typename:int	file:
max_usec	profiles/act.c	/^	unsigned int max_usec;$/;"	m	struct:act_pass_criteria	typeref:typename:unsigned int	file:
max_util	diskutil.h	/^	fio_fp64_t max_util;$/;"	m	struct:disk_util_agg	typeref:typename:fio_fp64_t
max_val	iolog.h	/^	uint64_t max_val;$/;"	m	struct:io_stat	typeref:typename:uint64_t
max_val	lib/lfsr.h	/^	uint64_t max_val;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
max_workers	workqueue.c	/^		   struct workqueue_ops *ops, unsigned int max_workers,$/;"	z	function:workqueue_init	typeref:typename:unsigned int	file:
max_workers	workqueue.h	/^	unsigned int max_workers;$/;"	m	struct:workqueue	typeref:typename:unsigned int
max_workers	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	z	prototype:workqueue_init	typeref:typename:unsigned int	file:
max_zone	file.h	/^	uint32_t max_zone;	\/* exclusive *\/$/;"	m	struct:fio_file	typeref:typename:uint32_t
maxdata	graph.c	/^			double mindata, double maxdata)$/;"	z	function:draw_bars	typeref:typename:double	file:
maxdouble	graph.c	/^static double maxdouble(double a, double b)$/;"	f	typeref:typename:double	file:
maxfp	parse.h	/^	double maxfp;			\/* max and min floating value *\/$/;"	m	struct:fio_option	typeref:typename:double
maxindex	goptions.c	/^	unsigned int maxindex;$/;"	m	struct:gopt_str_val	typeref:typename:unsigned int	file:
maxlen	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	z	function:num2str	typeref:typename:int	file:
maxlen	parse.h	/^	unsigned int maxlen;		\/* max length *\/$/;"	m	struct:fio_option	typeref:typename:unsigned int
maxlen	unittests/lib/num2str.c	/^	int maxlen;$/;"	m	struct:testcase	typeref:typename:int	file:
maxv	stat.c	/^				   unsigned long long *maxv, unsigned long long *minv)$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long long *	file:
maxv	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:unsigned long long *	file:
maxv	t/io_uring.c	/^				   unsigned long *maxv, unsigned long *minv)$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long *	file:
maxval	parse.h	/^	unsigned long long maxval;		\/* max and min value *\/$/;"	m	struct:fio_option	typeref:typename:unsigned long long
maxx	graph.c	/^	double minx, double maxx, int nticks, int add_tm_text)$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
maxy	graph.c	/^	double miny, double maxy, int nticks, int add_tm_text)$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
mb	arch/arch-sh.h	/^#define mb(/;"	d
mbox	gclient.c	/^static void gfio_show_ddir_status(struct gfio_client *gc, GtkWidget *mbox,$/;"	z	function:gfio_show_ddir_status	typeref:typename:GtkWidget *	file:
mcaddr	engines/net.c	/^static int fio_netio_is_multicast(const char *mcaddr)$/;"	z	function:fio_netio_is_multicast	typeref:typename:const char *	file:
mctx	crc/md5.c	/^void fio_md5_final(struct fio_md5_ctx *mctx)$/;"	z	function:fio_md5_final	typeref:struct:fio_md5_ctx *	file:
mctx	crc/md5.c	/^void fio_md5_init(struct fio_md5_ctx *mctx)$/;"	z	function:fio_md5_init	typeref:struct:fio_md5_ctx *	file:
mctx	crc/md5.c	/^void fio_md5_update(struct fio_md5_ctx *mctx, const uint8_t *data,$/;"	z	function:fio_md5_update	typeref:struct:fio_md5_ctx *	file:
md	engines/http.c	/^static void _hmac(unsigned char *md, void *key, int key_len, char *data) {$/;"	z	function:_hmac	typeref:typename:unsigned char *	file:
md5_digest	verify.h	/^	uint32_t md5_digest[4];$/;"	m	struct:vhdr_md5	typeref:typename:uint32_t[4]
md5_transform	crc/md5.c	/^static void md5_transform(uint32_t *hash, uint32_t const *in)$/;"	f	typeref:typename:void	file:
md_len	crc/sha3.h	/^	unsigned int	md_len;$/;"	m	struct:fio_sha3_ctx	typeref:typename:unsigned int
me	backend.c	/^static bool waitee_running(struct thread_data *me)$/;"	z	function:waitee_running	typeref:struct:thread_data *	file:
me	server.c	/^static char me[128];$/;"	v	typeref:typename:char[128]	file:
mean	gclient.c	/^			  unsigned long long max, double mean, double dev)$/;"	z	function:gfio_show_lat	typeref:typename:double	file:
mean	iolog.h	/^	fio_fp64_t mean;$/;"	m	struct:io_stat	typeref:typename:fio_fp64_t
mean	stat.c	/^					 enum fio_ddir ddir, int mean)$/;"	z	function:convert_agg_kbytes_percent	typeref:typename:int	file:
mean	stat.c	/^			unsigned long long max, double mean, double dev,$/;"	z	function:display_lat	typeref:typename:double	file:
mean	stat.c	/^	      unsigned long long *max, double *mean, double *dev)$/;"	z	function:calc_lat	typeref:typename:double *	file:
mean	stat.h	/^				unsigned long long *max, double *mean,$/;"	z	function:nsec_to_msec	typeref:typename:double *	file:
mean	stat.h	/^				unsigned long long *max, double *mean,$/;"	z	function:nsec_to_usec	typeref:typename:double *	file:
mean	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	z	prototype:calc_lat	typeref:typename:double *	file:
mean	t/steadystate_tests.py	/^                        objsame, met, mean, target = check(data=jsonjob['steadystate']['data'],$/;"	v
median	tools/fiologparser.py	/^def median(values):$/;"	f
mem	engines/librpma_fio.c	/^		size_t size, struct librpma_fio_mem *mem)$/;"	z	function:librpma_fio_allocate_pmem	typeref:struct:librpma_fio_mem *	file:
mem	engines/librpma_fio.c	/^	struct librpma_fio_mem *mem)$/;"	z	function:librpma_fio_allocate_dram	typeref:struct:librpma_fio_mem *	file:
mem	engines/librpma_fio.c	/^void librpma_fio_free(struct librpma_fio_mem *mem)$/;"	z	function:librpma_fio_free	typeref:struct:librpma_fio_mem *	file:
mem	engines/librpma_fio.h	/^		size_t size, struct librpma_fio_mem *mem);$/;"	z	prototype:librpma_fio_allocate_pmem	typeref:struct:librpma_fio_mem *	file:
mem	engines/librpma_fio.h	/^		struct librpma_fio_mem *mem);$/;"	z	prototype:librpma_fio_allocate_dram	typeref:struct:librpma_fio_mem *	file:
mem	engines/librpma_fio.h	/^	struct librpma_fio_mem mem;$/;"	m	struct:librpma_fio_server_data	typeref:struct:librpma_fio_mem
mem	engines/librpma_fio.h	/^void librpma_fio_free(struct librpma_fio_mem *mem);$/;"	z	prototype:librpma_fio_free	typeref:struct:librpma_fio_mem *	file:
mem	options.c	/^static int str_mem_cb(void *data, const char *mem)$/;"	z	function:str_mem_cb	typeref:typename:const char *	file:
mem_align	thread_options.h	/^	uint32_t mem_align;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
mem_align	thread_options.h	/^	unsigned int mem_align;$/;"	m	struct:thread_options	typeref:typename:unsigned int
mem_is_zero	verify.c	/^static int mem_is_zero(const void *data, size_t length)$/;"	f	typeref:typename:int	file:
mem_is_zero_slow	verify.c	/^static int mem_is_zero_slow(const void *data, size_t length, size_t *offset)$/;"	f	typeref:typename:int	file:
mem_ptr	engines/librpma_fio.h	/^	char *mem_ptr;$/;"	m	struct:librpma_fio_mem	typeref:typename:char *
mem_type	thread_options.h	/^	enum fio_memtype mem_type;$/;"	m	struct:thread_options	typeref:enum:fio_memtype
mem_type	thread_options.h	/^	uint32_t mem_type;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
membar_safe	arch/arch-sparc64.h	/^#define membar_safe(/;"	d
members	stat.h	/^	uint32_t members;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
memcpy_test	lib/memcpy.c	/^struct memcpy_test {$/;"	s	file:
memcpy_type	lib/memcpy.c	/^struct memcpy_type {$/;"	s	file:
memory	crc/xxhash.h	/^    char memory[16];$/;"	m	struct:XXH_state32_t	typeref:typename:char[16]
memsize	crc/xxhash.h	/^    int memsize;$/;"	m	struct:XXH_state32_t	typeref:typename:int
memswp	verify.c	/^static void memswp(void *buf1, void *buf2, unsigned int len)$/;"	f	typeref:typename:void	file:
menu	gfio.h	/^	GtkWidget *menu;$/;"	m	struct:gui	typeref:typename:GtkWidget *
menu_items	gfio.c	/^static GtkActionEntry menu_items[] = {$/;"	v	typeref:typename:GtkActionEntry[]	file:
menubar	gfio.c	/^void gfio_ui_setup(GtkSettings *settings, GtkWidget *menubar,$/;"	z	function:gfio_ui_setup	typeref:typename:GtkWidget *	file:
merge	lib/flist_sort.c	/^static struct flist_head *merge(void *priv,$/;"	f	typeref:struct:flist_head *	file:
merge_and_restore_back_links	lib/flist_sort.c	/^static void merge_and_restore_back_links(void *priv,$/;"	f	typeref:typename:void	file:
merge_blktrace_file	thread_options.h	/^	char *merge_blktrace_file;$/;"	m	struct:thread_options	typeref:typename:char *
merge_blktrace_file	thread_options.h	/^	uint8_t merge_blktrace_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
merge_blktrace_iologs	blktrace.c	/^int merge_blktrace_iologs(struct thread_data *td)$/;"	f	typeref:typename:int
merge_blktrace_iologs	blktrace.h	/^int merge_blktrace_iologs(struct thread_data *td);$/;"	p	typeref:typename:int
merge_blktrace_iologs	blktrace.h	/^static inline int merge_blktrace_iologs(struct thread_data *td)$/;"	f	typeref:typename:int
merge_blktrace_iters	thread_options.h	/^	fio_fp64_t merge_blktrace_iters[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t[]
merge_blktrace_iters	thread_options.h	/^	fio_fp64_t merge_blktrace_iters[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t[]
merge_blktrace_only	init.c	/^static bool merge_blktrace_only;$/;"	v	typeref:typename:bool	file:
merge_blktrace_scalars	thread_options.h	/^	fio_fp64_t merge_blktrace_scalars[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t[]
merge_blktrace_scalars	thread_options.h	/^	fio_fp64_t merge_blktrace_scalars[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t[]
merge_bs	t/btrace2fio.c	/^static void merge_bs(struct bs **bsap, unsigned int *nr_bsap,$/;"	f	typeref:typename:void	file:
merge_entries	t/btrace2fio.c	/^static int merge_entries(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	f	typeref:typename:int	file:
merge_finish_file	blktrace.c	/^static void merge_finish_file(struct blktrace_cursor *bcs, int i, int *nr_logs)$/;"	f	typeref:typename:void	file:
merge_pids	t/btrace2fio.c	/^	pid_t *merge_pids;$/;"	m	struct:btrace_pid	typeref:typename:pid_t *	file:
merges	diskutil.h	/^	uint64_t merges[2];$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t[2]
merges	diskutil.h	/^	uint64_t merges[2];$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t[2]
merges	t/btrace2fio.c	/^	int merges;$/;"	m	struct:bs	typeref:typename:int	file:
merges	t/btrace2fio.c	/^	unsigned long merges[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:unsigned long[]	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (GPSPMFlushRequest         *message)$/;"	z	function:gpspm_flush_request__init	typeref:typename:GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (GPSPMFlushRequest *message,$/;"	z	function:gpspm_flush_request__free_unpacked	typeref:typename:GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (GPSPMFlushResponse         *message)$/;"	z	function:gpspm_flush_response__init	typeref:typename:GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (GPSPMFlushResponse *message,$/;"	z	function:gpspm_flush_response__free_unpacked	typeref:typename:GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushRequest *message)$/;"	z	function:gpspm_flush_request__get_packed_size	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushRequest *message,$/;"	z	function:gpspm_flush_request__pack	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushRequest *message,$/;"	z	function:gpspm_flush_request__pack_to_buffer	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushResponse *message)$/;"	z	function:gpspm_flush_response__get_packed_size	typeref:typename:const GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushResponse *message,$/;"	z	function:gpspm_flush_response__pack	typeref:typename:const GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.c	/^                     (const GPSPMFlushResponse *message,$/;"	z	function:gpspm_flush_response__pack_to_buffer	typeref:typename:const GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (GPSPMFlushRequest         *message);$/;"	z	prototype:gpspm_flush_request__init	typeref:typename:GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (GPSPMFlushRequest *message,$/;"	z	prototype:gpspm_flush_request__free_unpacked	typeref:typename:GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (GPSPMFlushResponse         *message);$/;"	z	prototype:gpspm_flush_response__init	typeref:typename:GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (GPSPMFlushResponse *message,$/;"	z	prototype:gpspm_flush_response__free_unpacked	typeref:typename:GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushRequest   *message);$/;"	z	prototype:gpspm_flush_request__get_packed_size	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushRequest   *message,$/;"	z	prototype:gpspm_flush_request__pack	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushRequest   *message,$/;"	z	prototype:gpspm_flush_request__pack_to_buffer	typeref:typename:const GPSPMFlushRequest *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushResponse   *message);$/;"	z	prototype:gpspm_flush_response__get_packed_size	typeref:typename:const GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushResponse   *message,$/;"	z	prototype:gpspm_flush_response__pack	typeref:typename:const GPSPMFlushResponse *	file:
message	engines/librpma_gpspm_flush.pb-c.h	/^                     (const GPSPMFlushResponse   *message,$/;"	z	prototype:gpspm_flush_response__pack_to_buffer	typeref:typename:const GPSPMFlushResponse *	file:
message	gerror.c	/^void gfio_report_info(struct gui *ui, const char *title, const char *message)$/;"	z	function:gfio_report_info	typeref:typename:const char *	file:
message	gerror.h	/^extern void gfio_report_info(struct gui *ui, const char *title, const char *message);$/;"	z	prototype:gfio_report_info	typeref:typename:const char *	file:
message	os/windows/posix.c	/^void syslog(int priority, const char *message, ... \/* argument *\/)$/;"	z	function:syslog	typeref:typename:const char *	file:
met	t/steadystate_tests.py	/^                        objsame, met, mean, target = check(data=jsonjob['steadystate']['data'],$/;"	v
mfspr	arch/arch-ppc.h	/^static inline unsigned int mfspr(unsigned int reg)$/;"	f	typeref:typename:unsigned int
mib	t/memlock.c	/^	unsigned long mib;$/;"	m	struct:thread_data	typeref:typename:unsigned long	file:
min	blktrace.c	/^	unsigned int min;$/;"	m	struct:file_cache	typeref:typename:unsigned int	file:
min	diskutil.c	/^static int get_device_numbers(char *file_name, int *maj, int *min)$/;"	z	function:get_device_numbers	typeref:typename:int *	file:
min	diskutil.c	/^static int read_block_dev_entry(char *path, int *maj, int *min)$/;"	z	function:read_block_dev_entry	typeref:typename:int *	file:
min	engines/dfs.c	/^static int daos_fio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:daos_fio_getevents	typeref:typename:unsigned int	file:
min	engines/glusterfs_async.c	/^static int fio_gf_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_gf_getevents	typeref:typename:unsigned int	file:
min	engines/http.c	/^int fio_http_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_http_getevents	typeref:typename:unsigned int	file:
min	engines/ime.c	/^static int fio_ime_aio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ime_aio_getevents	typeref:typename:unsigned int	file:
min	engines/ime.c	/^static int fio_ime_psyncv_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ime_psyncv_getevents	typeref:typename:unsigned int	file:
min	engines/io_uring.c	/^static int fio_ioring_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ioring_getevents	typeref:typename:unsigned int	file:
min	engines/libaio.c	/^static int fio_libaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_libaio_getevents	typeref:typename:unsigned int	file:
min	engines/libiscsi.c	/^static int fio_iscsi_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_iscsi_getevents	typeref:typename:unsigned int	file:
min	engines/librpma_fio.c	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:librpma_fio_client_getevents	typeref:typename:unsigned int	file:
min	engines/librpma_fio.h	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	z	prototype:librpma_fio_client_getevents	typeref:typename:unsigned int	file:
min	engines/nbd.c	/^static int nbd_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:nbd_getevents	typeref:typename:unsigned int	file:
min	engines/nfs.c	/^static int fio_libnfs_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_libnfs_getevents	typeref:typename:unsigned int	file:
min	engines/posixaio.c	/^static int fio_posixaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_posixaio_getevents	typeref:typename:unsigned int	file:
min	engines/rados.c	/^int fio_rados_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rados_getevents	typeref:typename:unsigned int	file:
min	engines/rbd.c	/^static int fio_rbd_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rbd_getevents	typeref:typename:unsigned int	file:
min	engines/rdma.c	/^static int fio_rdmaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rdmaio_getevents	typeref:typename:unsigned int	file:
min	engines/sg.c	/^static int fio_sgio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_sgio_getevents	typeref:typename:unsigned int	file:
min	engines/skeleton_external.c	/^static int fio_skeleton_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_skeleton_getevents	typeref:typename:unsigned int	file:
min	engines/solarisaio.c	/^static int fio_solarisaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_solarisaio_getevents	typeref:typename:unsigned int	file:
min	engines/sync.c	/^static int fio_vsyncio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_vsyncio_getevents	typeref:typename:unsigned int	file:
min	engines/windowsaio.c	/^static int fio_windowaio_getevents_thread(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowaio_getevents_thread	typeref:typename:unsigned int	file:
min	engines/windowsaio.c	/^static int fio_windowsaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowsaio_getevents	typeref:typename:unsigned int	file:
min	engines/windowsaio.c	/^static int fio_windowsaio_getevents_nothread(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowsaio_getevents_nothread	typeref:typename:unsigned int	file:
min	engines/xnvme.c	/^static int xnvme_fioe_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:xnvme_fioe_getevents	typeref:typename:unsigned int	file:
min	gclient.c	/^static void gfio_show_lat(GtkWidget *vbox, const char *name, unsigned long long min,$/;"	z	function:gfio_show_lat	typeref:typename:unsigned long long	file:
min	ghelpers.c	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval)$/;"	z	function:create_spinbutton	typeref:typename:double	file:
min	ghelpers.h	/^GtkWidget *create_spinbutton(GtkWidget *hbox, double min, double max, double defval);$/;"	z	prototype:create_spinbutton	typeref:typename:double	file:
min	ioengines.c	/^int td_io_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:td_io_getevents	typeref:typename:unsigned int	file:
min	minmax.h	/^#define min(/;"	d
min	oslib/libmtd_common.h	/^#define min(/;"	d
min	oslib/linux-dev-lookup.c	/^			   unsigned int min)$/;"	z	function:blktrace_lookup_device	typeref:typename:unsigned int	file:
min	oslib/linux-dev-lookup.h	/^			   unsigned int min);$/;"	z	prototype:blktrace_lookup_device	typeref:typename:unsigned int	file:
min	stat.c	/^bool calc_lat(struct io_stat *is, unsigned long long *min,$/;"	z	function:calc_lat	typeref:typename:unsigned long long *	file:
min	stat.c	/^static void display_lat(const char *name, unsigned long long min,$/;"	z	function:display_lat	typeref:typename:unsigned long long	file:
min	stat.h	/^extern bool calc_lat(struct io_stat *is, unsigned long long *min, unsigned long long *max, doubl/;"	z	prototype:calc_lat	typeref:typename:unsigned long long *	file:
min	stat.h	/^static inline bool nsec_to_msec(unsigned long long *min,$/;"	z	function:nsec_to_msec	typeref:typename:unsigned long long *	file:
min	stat.h	/^static inline bool nsec_to_usec(unsigned long long *min,$/;"	z	function:nsec_to_usec	typeref:typename:unsigned long long *	file:
min	t/read-to-pipe-async.c	/^	unsigned int min;$/;"	m	struct:stats	typeref:typename:unsigned int	file:
min	t/zbd/test-zbd-support	/^min() {$/;"	f
min	tickmarks.c	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	function:calc_tickmarks	typeref:typename:double	file:
min	tickmarks.h	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	prototype:calc_tickmarks	typeref:typename:double	file:
min_bs	thread_options.h	/^	uint64_t min_bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
min_bs	thread_options.h	/^	unsigned long long min_bs[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned long long[]
min_bw	stat.h	/^	uint64_t max_bw[DDIR_RWDIR_CNT], min_bw[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
min_bytes	zbd.c	/^zbd_find_zone(struct thread_data *td, struct io_u *io_u, uint64_t min_bytes,$/;"	z	function:zbd_find_zone	typeref:typename:uint64_t	file:
min_complete	engines/io_uring.c	/^			 unsigned int min_complete, unsigned int flags)$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
min_complete	t/io_uring.c	/^			  unsigned int min_complete, unsigned int flags)$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
min_events	engines/null.c	/^	int fio_null_getevents(struct thread_data *, unsigned int min_events,$/;"	z	function:NullData::fio_null_getevents	typeref:typename:unsigned int	file:
min_events	engines/null.c	/^static int fio_null_getevents(struct thread_data *td, unsigned int min_events,$/;"	z	function:fio_null_getevents	typeref:typename:unsigned int	file:
min_events	engines/null.c	/^static int null_getevents(struct null_data *nd, unsigned int min_events,$/;"	z	function:null_getevents	typeref:typename:unsigned int	file:
min_evts	engines/rbd.c	/^			   unsigned int min_evts, int wait)$/;"	z	function:rbd_iter_events	typeref:typename:unsigned int	file:
min_evts	io_u.c	/^int io_u_queued_complete(struct thread_data *td, int min_evts)$/;"	z	function:io_u_queued_complete	typeref:typename:int	file:
min_io_size	oslib/libmtd.h	/^	int min_io_size;$/;"	m	struct:mtd_dev_info	typeref:typename:int
min_not_zero	minmax.h	/^#define min_not_zero(/;"	d
min_run	stat.h	/^	uint64_t max_run[DDIR_RWDIR_CNT], min_run[DDIR_RWDIR_CNT];$/;"	m	struct:group_run_stats	typeref:typename:uint64_t[]
min_t	oslib/libmtd_common.h	/^#define min_t(/;"	d
min_val	iolog.h	/^	uint64_t min_val;$/;"	m	struct:io_stat	typeref:typename:uint64_t
min_write	io_u.c	/^		      unsigned long long min_write, unsigned long long max_bs)$/;"	z	function:io_u_fill_buffer	typeref:typename:unsigned long long	file:
min_write	io_u.c	/^void fill_io_buffer(struct thread_data *td, void *buf, unsigned long long min_write,$/;"	z	function:fill_io_buffer	typeref:typename:unsigned long long	file:
min_zone	file.h	/^	uint32_t min_zone;	\/* inclusive *\/$/;"	m	struct:fio_file	typeref:typename:uint32_t
mindata	graph.c	/^			double mindata, double maxdata)$/;"	z	function:draw_bars	typeref:typename:double	file:
mindev	diskutil.c	/^						   int majdev, int mindev,$/;"	z	function:__init_per_file_disk_util	typeref:typename:int	file:
mindev	diskutil.c	/^				       int mindev, char *path)$/;"	z	function:disk_util_add	typeref:typename:int	file:
mindev	diskutil.c	/^		int majdev, int mindev, char *path);$/;"	z	prototype:__init_per_file_disk_util	typeref:typename:int	file:
mindev	diskutil.c	/^static int check_dev_match(int majdev, int mindev, char *path)$/;"	z	function:check_dev_match	typeref:typename:int	file:
mindev	diskutil.c	/^static int find_block_dir(int majdev, int mindev, char *path, int link_ok)$/;"	z	function:find_block_dir	typeref:typename:int	file:
mindouble	graph.c	/^static double mindouble(double a, double b)$/;"	f	typeref:typename:double	file:
minf	stat.h	/^	uint64_t minf, majf;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
minfp	parse.h	/^	double minfp;$/;"	m	struct:fio_option	typeref:typename:double
minor	diskutil.c	/^static struct disk_util *disk_util_exists(int major, int minor)$/;"	z	function:disk_util_exists	typeref:typename:int	file:
minor	diskutil.h	/^	int major, minor;$/;"	m	struct:disk_util	typeref:typename:int
minor	file.h	/^	unsigned int major, minor;$/;"	m	struct:fio_file	typeref:typename:unsigned int
minor	oslib/libmtd.c	/^static int dev_get_major(struct libmtd *lib, int mtd_num, int *major, int *minor)$/;"	z	function:dev_get_major	typeref:typename:int *	file:
minor	oslib/libmtd.c	/^static int read_major(const char *file, int *major, int *minor)$/;"	z	function:read_major	typeref:typename:int *	file:
minor	oslib/libmtd.h	/^	int minor;$/;"	m	struct:mtd_dev_info	typeref:typename:int
minor	t/btrace2fio.c	/^	int major, minor;$/;"	m	struct:trace_file	typeref:typename:int	file:
mintime	t/steadystate_tests.py	/^                    mintime = (job['ss_dur'] + job['ss_ramp']) * 1000$/;"	v
minv	stat.c	/^				   unsigned long long *maxv, unsigned long long *minv)$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long long *	file:
minv	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:unsigned long long *	file:
minv	t/io_uring.c	/^				   unsigned long *maxv, unsigned long *minv)$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long *	file:
minval	parse.h	/^	int minval;$/;"	m	struct:fio_option	typeref:typename:int
minx	graph.c	/^	double minx, double maxx, int nticks, int add_tm_text)$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
miny	graph.c	/^	double miny, double maxy, int nticks, int add_tm_text)$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
mkpath	oslib/libmtd.c	/^static char *mkpath(const char *path, const char *name)$/;"	f	typeref:typename:char *	file:
mlock	os/windows/posix.c	/^int mlock(const void * addr, size_t len)$/;"	f	typeref:typename:int
mlock	os/windows/posix/include/sys/mman.h	/^int mlock(const void *addr, size_t len);$/;"	p	typeref:typename:int
mmap	engines/io_uring.c	/^	struct ioring_mmap mmap[3];$/;"	m	struct:ioring_data	typeref:struct:ioring_mmap[3]	file:
mmap	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	f	typeref:typename:void *
mmap	os/windows/posix/include/sys/mman.h	/^void *mmap(void *addr, size_t len, int prot, int flags,$/;"	p	typeref:typename:void *
mmap_data	io_u.h	/^		void *mmap_data;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:typename:void *
mmap_map_size	engines/mmap.c	/^static unsigned long mmap_map_size;$/;"	v	typeref:typename:unsigned long	file:
mmap_off	engines/mmap.c	/^	off_t mmap_off;$/;"	m	struct:fio_mmap_data	typeref:typename:off_t	file:
mmap_options	engines/mmap.c	/^struct mmap_options {$/;"	s	file:
mmap_ptr	engines/mmap.c	/^	void *mmap_ptr;$/;"	m	struct:fio_mmap_data	typeref:typename:void *	file:
mmap_size	smalloc.c	/^	size_t mmap_size;$/;"	m	struct:pool	typeref:typename:size_t	file:
mmap_sz	engines/mmap.c	/^	size_t mmap_sz;$/;"	m	struct:fio_mmap_data	typeref:typename:size_t	file:
mmapfd	fio.h	/^	int mmapfd;$/;"	m	struct:thread_data	typeref:typename:int
mmapfile	thread_options.h	/^	char *mmapfile;$/;"	m	struct:thread_options	typeref:typename:char *
mmapfile	thread_options.h	/^	uint8_t mmapfile[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
mnt	cgroup.c	/^int cgroup_setup(struct thread_data *td, struct flist_head *clist, struct cgroup_mnt **mnt)$/;"	z	function:cgroup_setup	typeref:struct:cgroup_mnt **	file:
mnt	cgroup.c	/^static char *get_cgroup_root(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:get_cgroup_root	typeref:struct:cgroup_mnt *	file:
mnt	cgroup.c	/^static int cgroup_del_pid(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_del_pid	typeref:struct:cgroup_mnt *	file:
mnt	cgroup.c	/^void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_shutdown	typeref:struct:cgroup_mnt *	file:
mnt	cgroup.h	/^			       struct cgroup_mnt **mnt)$/;"	z	function:cgroup_setup	typeref:struct:cgroup_mnt **	file:
mnt	cgroup.h	/^static inline void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_shutdown	typeref:struct:cgroup_mnt *	file:
mode	backend.c	/^		       const char *mode)$/;"	z	function:exec_string	typeref:typename:const char *	file:
mode	engines/cmdprio.h	/^	unsigned int mode;$/;"	m	struct:cmdprio	typeref:typename:unsigned int
mode	engines/http.c	/^	unsigned int mode;$/;"	m	struct:http_options	typeref:typename:unsigned int	file:
mode	engines/rdma.c	/^	uint32_t mode;		\/* channel semantic or memory semantic *\/$/;"	m	struct:rdma_info_blk	typeref:typename:uint32_t	file:
mode	helpers.c	/^int fallocate(int fd, int mode, off_t offset, off_t len)$/;"	z	function:fallocate	typeref:typename:int	file:
mode	helpers.h	/^extern int fallocate(int fd, int mode, off_t offset, off_t len);$/;"	z	prototype:fallocate	typeref:typename:int	file:
mode	os/os-windows.h	/^static inline int fio_mkdir(const char *path, mode_t mode) {$/;"	z	function:fio_mkdir	typeref:typename:mode_t	file:
mode	os/windows/posix.c	/^void *dlopen(const char *file, int mode)$/;"	z	function:dlopen	typeref:typename:int	file:
mode	os/windows/posix/include/dlfcn.h	/^void *dlopen(const char *file, int mode);$/;"	z	prototype:dlopen	typeref:typename:int	file:
mode	os/windows/posix/include/sys/shm.h	/^	mode_t   mode;   \/* read\/write permission *\/$/;"	m	struct:ipc_perm	typeref:typename:mode_t
mode	oslib/libmtd.c	/^	      uint8_t mode)$/;"	z	function:mtd_write	typeref:typename:uint8_t	file:
mode	oslib/libmtd.h	/^	      uint8_t mode);$/;"	z	prototype:mtd_write	typeref:typename:uint8_t	file:
mode	t/time-test.c	/^static int discontinuity(int mode, int delta_ticks, int delta_nsec,$/;"	z	function:discontinuity	typeref:typename:int	file:
mode	t/time-test.c	/^static long long test_clock(int mode, int cycles_per_usec, int fast_test,$/;"	z	function:test_clock	typeref:typename:int	file:
mode	t/time-test.c	/^static unsigned long long _get_nsec(int mode, unsigned long long t)$/;"	z	function:_get_nsec	typeref:typename:int	file:
mode	t/time-test.c	/^static unsigned long long get_nsec(int mode, unsigned long long t)$/;"	z	function:get_nsec	typeref:typename:int	file:
mode	t/time-test.c	/^static void calc_mult_shift(int mode, void *mult, unsigned int *shift,$/;"	z	function:calc_mult_shift	typeref:typename:int	file:
model	engines/libzbc.c	/^				  enum zbd_zoned_model *model)$/;"	z	function:libzbc_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	engines/libzbc.c	/^	enum zbc_dev_model	model;$/;"	m	struct:libzbc_data	typeref:enum:zbc_dev_model	file:
model	engines/skeleton_external.c	/^			struct fio_file *f, enum zbd_zoned_model *model)$/;"	z	function:fio_skeleton_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	engines/xnvme.c	/^				      enum zbd_zoned_model *model)$/;"	z	function:xnvme_fioe_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	gclient.c	/^static void gfio_add_sc_depths_tree(GtkListStore *model,$/;"	z	function:gfio_add_sc_depths_tree	typeref:typename:GtkListStore *	file:
model	gclient.c	/^static void gfio_add_total_depths_tree(GtkListStore *model,$/;"	z	function:gfio_add_total_depths_tree	typeref:typename:GtkListStore *	file:
model	oslib/blkzoned.h	/^			struct fio_file *f, enum zbd_zoned_model *model)$/;"	z	function:blkzoned_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	oslib/blkzoned.h	/^			struct fio_file *f, enum zbd_zoned_model *model);$/;"	z	prototype:blkzoned_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	oslib/linux-blkzoned.c	/^			     enum zbd_zoned_model *model)$/;"	z	function:blkzoned_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	zbd.c	/^			       enum zbd_zoned_model *model)$/;"	z	function:zbd_get_zoned_model	typeref:enum:zbd_zoned_model *	file:
model	zbd.h	/^	enum zbd_zoned_model	model;$/;"	m	struct:zoned_block_device_info	typeref:enum:zbd_zoned_model
monitor_process_till_connect	os/windows/posix.c	/^static bool monitor_process_till_connect(PROCESS_INFORMATION *pi, HANDLE *hpipe)$/;"	f	typeref:typename:bool	file:
more	parse.c	/^			   void *data, int first, int more, int curr)$/;"	z	function:__handle_option	typeref:typename:int	file:
more_bins	tools/fio_jsonplus_clat2csv	/^def more_bins(indices, bins):$/;"	f
mounted	backend.c	/^mounted:$/;"	L	function:check_mount_writes	file:
move_extent	engines/e4defrag.c	/^struct move_extent {$/;"	s	file:
moved_len	engines/e4defrag.c	/^	__u64 moved_len;        \/* moved block length *\/$/;"	m	struct:move_extent	typeref:typename:__u64	file:
mp	smalloc.c	/^static struct pool *mp;$/;"	v	typeref:struct:pool *	file:
mr	io_u.h	/^		struct ibv_mr *mr;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:struct:ibv_mr *
mr_desc_size	engines/librpma_fio.h	/^	uint8_t mr_desc_size;	\/* size of mr_desc in descriptor[] *\/$/;"	m	struct:librpma_fio_workspace	typeref:typename:uint8_t
msec	diskutil.h	/^	uint64_t msec;$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t
msec	io_u.c	/^static void io_u_mark_lat_msec(struct thread_data *td, unsigned long long msec)$/;"	z	function:io_u_mark_lat_msec	typeref:typename:unsigned long long	file:
msec	time.c	/^void timespec_add_msec(struct timespec *ts, unsigned int msec)$/;"	z	function:timespec_add_msec	typeref:typename:unsigned int	file:
msec_per_sec	tools/hist/fio-histo-log-pctiles.py	/^msec_per_sec = 1000$/;"	v
msec_to_next_event	helper_thread.c	/^		      unsigned int *msec_to_next_event)$/;"	z	function:eval_timer	typeref:typename:unsigned int *	file:
msecs	fio_sem.c	/^int fio_sem_down_timeout(struct fio_sem *sem, unsigned int msecs)$/;"	z	function:fio_sem_down_timeout	typeref:typename:unsigned int	file:
msecs	fio_sem.c	/^static bool sem_timed_out(struct timespec *t, unsigned int msecs)$/;"	z	function:sem_timed_out	typeref:typename:unsigned int	file:
msg	lex.yy.c	/^		int *has_error, int *units_specified, const char *msg);$/;"	z	prototype:yyerror	typeref:typename:const char *	file:
msg	lex.yy.c	/^static void yynoreturn yy_fatal_error ( const char* msg  );$/;"	z	prototype:yy_fatal_error	typeref:typename:const char *	file:
msg	lex.yy.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	z	function:yy_fatal_error	typeref:typename:const char *	file:
msg	stat.c	/^		     const char *msg, struct buf_output *out)$/;"	z	function:show_lat	typeref:typename:const char *	file:
msg	t/read-to-pipe-async.c	/^static void show_latencies(struct stats *s, const char *msg)$/;"	z	function:show_latencies	typeref:typename:const char *	file:
msg	y.tab.c	/^		__attribute__((unused)) const char *msg)$/;"	z	function:yyerror	typeref:typename:const char *	file:
msg	y.tab.c	/^		__attribute__((unused)) const char *msg);$/;"	z	prototype:yyerror	typeref:typename:const char *	file:
msg_curr	engines/librpma_gpspm.c	/^	uint32_t msg_curr;$/;"	m	struct:client_data	typeref:typename:uint32_t	file:
msg_flags	os/linux/io_uring.h	/^		__u32		msg_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
msg_mr	engines/librpma_gpspm.c	/^	struct rpma_mr_local *msg_mr;$/;"	m	struct:client_data	typeref:struct:rpma_mr_local *	file:
msg_mr	engines/librpma_gpspm.c	/^	struct rpma_mr_local *msg_mr;$/;"	m	struct:server_data	typeref:struct:rpma_mr_local *	file:
msg_num	engines/librpma_gpspm.c	/^	uint32_t msg_num;$/;"	m	struct:client_data	typeref:typename:uint32_t	file:
msg_queued_nr	engines/librpma_gpspm.c	/^	uint32_t msg_queued_nr;$/;"	m	struct:server_data	typeref:typename:uint32_t	file:
msg_sqe_available	engines/librpma_gpspm.c	/^	uint32_t msg_sqe_available; \/* # of free SQ slots *\/$/;"	m	struct:server_data	typeref:typename:uint32_t	file:
msgs_queued	engines/librpma_gpspm.c	/^	struct ibv_wc *msgs_queued;$/;"	m	struct:server_data	typeref:struct:ibv_wc *	file:
mss	engines/net.c	/^	unsigned int mss;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
msync	os/windows/posix.c	/^int msync(void *addr, size_t len, int flags)$/;"	f	typeref:typename:int
msync	os/windows/posix/include/sys/mman.h	/^int msync(void *addr, size_t len, int flags);$/;"	p	typeref:typename:int
mt	ghelpers.c	/^void multitext_add_entry(struct multitext_widget *mt, const char *text)$/;"	z	function:multitext_add_entry	typeref:struct:multitext_widget *	file:
mt	ghelpers.c	/^void multitext_free(struct multitext_widget *mt)$/;"	z	function:multitext_free	typeref:struct:multitext_widget *	file:
mt	ghelpers.c	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index)$/;"	z	function:multitext_set_entry	typeref:struct:multitext_widget *	file:
mt	ghelpers.c	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	z	function:multitext_update_entry	typeref:struct:multitext_widget *	file:
mt	ghelpers.h	/^void multitext_add_entry(struct multitext_widget *mt, const char *text);$/;"	z	prototype:multitext_add_entry	typeref:struct:multitext_widget *	file:
mt	ghelpers.h	/^void multitext_free(struct multitext_widget *mt);$/;"	z	prototype:multitext_free	typeref:struct:multitext_widget *	file:
mt	ghelpers.h	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index);$/;"	z	prototype:multitext_set_entry	typeref:struct:multitext_widget *	file:
mt	ghelpers.h	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	z	prototype:multitext_update_entry	typeref:struct:multitext_widget *	file:
mtd	oslib/libmtd.c	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_erase	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info1	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_bad	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_is_locked	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_lock	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_mark_bad	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_read	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_read_oob	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_torture	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	z	function:mtd_unlock	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	function:mtd_write	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_write_img	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:mtd_write_oob	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^static inline int mtd_ioctl_error(const struct mtd_dev_info *mtd, int eb,$/;"	z	function:mtd_ioctl_error	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^static int do_oob_op(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	function:do_oob_op	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^static int legacy_auto_oob_layout(const struct mtd_dev_info *mtd, int fd,$/;"	z	function:legacy_auto_oob_layout	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^static int mtd_valid_erase_block(const struct mtd_dev_info *mtd, int eb)$/;"	z	function:mtd_valid_erase_block	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.c	/^static int mtd_xlock(const struct mtd_dev_info *mtd, int fd, int eb, int req,$/;"	z	function:mtd_xlock	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_erase	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info1	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_bad	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_is_locked	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_lock	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_mark_bad	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_read	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_read_oob	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_torture	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	z	prototype:mtd_unlock	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	z	prototype:mtd_write	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_write_img	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd.h	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	z	prototype:mtd_write_oob	typeref:typename:const struct mtd_dev_info *	file:
mtd	oslib/libmtd_int.h	/^	char *mtd;$/;"	m	struct:libmtd	typeref:typename:char *
mtd	oslib/libmtd_int.h	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd);$/;"	z	prototype:legacy_get_dev_info	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd_int.h	/^int legacy_get_dev_info1(int dev_num, struct mtd_dev_info *mtd);$/;"	z	prototype:legacy_get_dev_info1	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd_legacy.c	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd)$/;"	z	function:legacy_get_dev_info	typeref:struct:mtd_dev_info *	file:
mtd	oslib/libmtd_legacy.c	/^int legacy_get_dev_info1(int mtd_num, struct mtd_dev_info *mtd)$/;"	z	function:legacy_get_dev_info1	typeref:struct:mtd_dev_info *	file:
mtd_dev	oslib/libmtd_int.h	/^	char *mtd_dev;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_dev_cnt	oslib/libmtd.h	/^	int mtd_dev_cnt;$/;"	m	struct:mtd_info	typeref:typename:int
mtd_dev_info	oslib/libmtd.h	/^struct mtd_dev_info$/;"	s
mtd_dev_present	oslib/libmtd.c	/^int mtd_dev_present(libmtd_t desc, int mtd_num) {$/;"	f	typeref:typename:int
mtd_dev_present	oslib/libmtd.h	/^int mtd_dev_present(libmtd_t desc, int mtd_num);$/;"	p	typeref:typename:int
mtd_eb_size	oslib/libmtd_int.h	/^	char *mtd_eb_size;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_erase	oslib/libmtd.c	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_erase	oslib/libmtd.h	/^int mtd_erase(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_flags	oslib/libmtd_int.h	/^	char *mtd_flags;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_get_dev_info	oslib/libmtd.c	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd)$/;"	f	typeref:typename:int
mtd_get_dev_info	oslib/libmtd.h	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd);$/;"	p	typeref:typename:int
mtd_get_dev_info1	oslib/libmtd.c	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd)$/;"	f	typeref:typename:int
mtd_get_dev_info1	oslib/libmtd.h	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd);$/;"	p	typeref:typename:int
mtd_get_info	oslib/libmtd.c	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info)$/;"	f	typeref:typename:int
mtd_get_info	oslib/libmtd.h	/^int mtd_get_info(libmtd_t desc, struct mtd_info *info);$/;"	p	typeref:typename:int
mtd_info	oslib/libmtd.h	/^struct mtd_info$/;"	s
mtd_ioctl_error	oslib/libmtd.c	/^static inline int mtd_ioctl_error(const struct mtd_dev_info *mtd, int eb,$/;"	f	typeref:typename:int	file:
mtd_is_bad	oslib/libmtd.c	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_is_bad	oslib/libmtd.h	/^int mtd_is_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_is_locked	oslib/libmtd.c	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_is_locked	oslib/libmtd.h	/^int mtd_is_locked(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_lock	oslib/libmtd.c	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_lock	oslib/libmtd.h	/^int mtd_lock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_mark_bad	oslib/libmtd.c	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_mark_bad	oslib/libmtd.h	/^int mtd_mark_bad(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_min_io_size	oslib/libmtd_int.h	/^	char *mtd_min_io_size;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_name	oslib/libmtd_int.h	/^	char *mtd_name;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_num	oslib/libmtd.c	/^int mtd_dev_present(libmtd_t desc, int mtd_num) {$/;"	z	function:mtd_dev_present	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info1	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^static int dev_get_major(struct libmtd *lib, int mtd_num, int *major, int *minor)$/;"	z	function:dev_get_major	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^static int dev_node2num(struct libmtd *lib, const char *node, int *mtd_num)$/;"	z	function:dev_node2num	typeref:typename:int *	file:
mtd_num	oslib/libmtd.c	/^static int dev_read_data(const char *patt, int mtd_num, void *buf, int buf_len)$/;"	z	function:dev_read_data	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^static int dev_read_hex_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_hex_int	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^static int dev_read_pos_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_pos_int	typeref:typename:int	file:
mtd_num	oslib/libmtd.c	/^static int dev_read_pos_ll(const char *patt, int mtd_num, long long *value)$/;"	z	function:dev_read_pos_ll	typeref:typename:int	file:
mtd_num	oslib/libmtd.h	/^	int mtd_num;$/;"	m	struct:mtd_dev_info	typeref:typename:int
mtd_num	oslib/libmtd.h	/^int mtd_dev_present(libmtd_t desc, int mtd_num);$/;"	z	prototype:mtd_dev_present	typeref:typename:int	file:
mtd_num	oslib/libmtd.h	/^int mtd_get_dev_info1(libmtd_t desc, int mtd_num, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info1	typeref:typename:int	file:
mtd_num	oslib/libmtd_int.h	/^int legacy_dev_present(int mtd_num);$/;"	z	prototype:legacy_dev_present	typeref:typename:int	file:
mtd_num	oslib/libmtd_legacy.c	/^	int mtd_num;$/;"	m	struct:proc_parse_info	typeref:typename:int	file:
mtd_num	oslib/libmtd_legacy.c	/^int legacy_dev_present(int mtd_num)$/;"	z	function:legacy_dev_present	typeref:typename:int	file:
mtd_num	oslib/libmtd_legacy.c	/^int legacy_get_dev_info1(int mtd_num, struct mtd_dev_info *mtd)$/;"	z	function:legacy_get_dev_info1	typeref:typename:int	file:
mtd_oob_size	oslib/libmtd_int.h	/^	char *mtd_oob_size;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_probe_node	oslib/libmtd.c	/^int mtd_probe_node(libmtd_t desc, const char *node)$/;"	f	typeref:typename:int
mtd_probe_node	oslib/libmtd.h	/^int mtd_probe_node(libmtd_t desc, const char *node);$/;"	p	typeref:typename:int
mtd_read	oslib/libmtd.c	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	f	typeref:typename:int
mtd_read	oslib/libmtd.h	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	p	typeref:typename:int
mtd_read_oob	oslib/libmtd.c	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	f	typeref:typename:int
mtd_read_oob	oslib/libmtd.h	/^int mtd_read_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	p	typeref:typename:int
mtd_region_cnt	oslib/libmtd_int.h	/^	char *mtd_region_cnt;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_regioninfo	oslib/libmtd.c	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo)$/;"	f	typeref:typename:int
mtd_regioninfo	oslib/libmtd.h	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo);$/;"	p	typeref:typename:int
mtd_size	oslib/libmtd_int.h	/^	char *mtd_size;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_subpage_size	oslib/libmtd_int.h	/^	char *mtd_subpage_size;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_torture	oslib/libmtd.c	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_torture	oslib/libmtd.h	/^int mtd_torture(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_type	oslib/libmtd_int.h	/^	char *mtd_type;$/;"	m	struct:libmtd	typeref:typename:char *
mtd_unlock	oslib/libmtd.c	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb)$/;"	f	typeref:typename:int
mtd_unlock	oslib/libmtd.h	/^int mtd_unlock(const struct mtd_dev_info *mtd, int fd, int eb);$/;"	p	typeref:typename:int
mtd_valid_erase_block	oslib/libmtd.c	/^static int mtd_valid_erase_block(const struct mtd_dev_info *mtd, int eb)$/;"	f	typeref:typename:int	file:
mtd_write	oslib/libmtd.c	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	f	typeref:typename:int
mtd_write	oslib/libmtd.h	/^int mtd_write(libmtd_t desc, const struct mtd_dev_info *mtd, int fd, int eb,$/;"	p	typeref:typename:int
mtd_write_img	oslib/libmtd.c	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	f	typeref:typename:int
mtd_write_img	oslib/libmtd.h	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	p	typeref:typename:int
mtd_write_oob	oslib/libmtd.c	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	f	typeref:typename:int
mtd_write_oob	oslib/libmtd.h	/^int mtd_write_oob(libmtd_t desc, const struct mtd_dev_info *mtd, int fd,$/;"	p	typeref:typename:int
mtd_xlock	oslib/libmtd.c	/^#define mtd_xlock(/;"	d	file:
mtd_xlock	oslib/libmtd.c	/^static int mtd_xlock(const struct mtd_dev_info *mtd, int fd, int eb, int req,$/;"	f	typeref:typename:int	file:
mtime	eta.c	/^static void calc_iops(int unified_rw_rep, unsigned long mtime,$/;"	z	function:calc_iops	typeref:typename:unsigned long	file:
mtime	eta.c	/^static void calc_rate(int unified_rw_rep, unsigned long mtime,$/;"	z	function:calc_rate	typeref:typename:unsigned long	file:
mtime_since	fio_time.h	/^extern uint64_t mtime_since(const struct timespec *, const struct timespec *);$/;"	p	typeref:typename:uint64_t
mtime_since	gettime.c	/^uint64_t mtime_since(const struct timespec *s, const struct timespec *e)$/;"	f	typeref:typename:uint64_t
mtime_since_genesis	fio_time.h	/^extern uint64_t mtime_since_genesis(void);$/;"	p	typeref:typename:uint64_t
mtime_since_genesis	time.c	/^uint64_t mtime_since_genesis(void)$/;"	f	typeref:typename:uint64_t
mtime_since_now	fio_time.h	/^extern uint64_t mtime_since_now(const struct timespec *);$/;"	p	typeref:typename:uint64_t
mtime_since_now	gettime.c	/^uint64_t mtime_since_now(const struct timespec *s)$/;"	f	typeref:typename:uint64_t
mtime_since_now	os/windows/posix.c	/^extern unsigned long mtime_since_now(struct timespec *);$/;"	p	typeref:typename:unsigned long	file:
mtime_since_tv	fio_time.h	/^extern uint64_t mtime_since_tv(const struct timeval *, const struct timeval *);$/;"	p	typeref:typename:uint64_t
mtime_since_tv	gettime.c	/^uint64_t mtime_since_tv(const struct timeval *s, const struct timeval *e)$/;"	f	typeref:typename:uint64_t
mult	t/time-test.c	/^static void calc_mult_shift(int mode, void *mult, unsigned int *shift,$/;"	z	function:calc_mult_shift	typeref:typename:void *	file:
multitext_add_entry	ghelpers.c	/^void multitext_add_entry(struct multitext_widget *mt, const char *text)$/;"	f	typeref:typename:void
multitext_add_entry	ghelpers.h	/^void multitext_add_entry(struct multitext_widget *mt, const char *text);$/;"	p	typeref:typename:void
multitext_free	ghelpers.c	/^void multitext_free(struct multitext_widget *mt)$/;"	f	typeref:typename:void
multitext_free	ghelpers.h	/^void multitext_free(struct multitext_widget *mt);$/;"	p	typeref:typename:void
multitext_set_entry	ghelpers.c	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index)$/;"	f	typeref:typename:void
multitext_set_entry	ghelpers.h	/^void multitext_set_entry(struct multitext_widget *mt, unsigned int index);$/;"	p	typeref:typename:void
multitext_update_entry	ghelpers.c	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	f	typeref:typename:void
multitext_update_entry	ghelpers.h	/^void multitext_update_entry(struct multitext_widget *mt, unsigned int index,$/;"	p	typeref:typename:void
multitext_widget	ghelpers.h	/^struct multitext_widget {$/;"	s
munlock	os/windows/posix.c	/^int munlock(const void * addr, size_t len)$/;"	f	typeref:typename:int
munlock	os/windows/posix/include/sys/mman.h	/^int munlock(const void * addr, size_t len);$/;"	p	typeref:typename:int
munmap	os/windows/posix.c	/^int munmap(void *addr, size_t len)$/;"	f	typeref:typename:int
munmap	os/windows/posix/include/sys/mman.h	/^int munmap(void *addr, size_t len);$/;"	p	typeref:typename:int
murmur3_tail	crc/murmur3.c	/^static uint32_t murmur3_tail(const uint8_t *data, const int nblocks,$/;"	f	typeref:typename:uint32_t	file:
murmurhash3	crc/murmur3.c	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed)$/;"	f	typeref:typename:uint32_t
murmurhash3	crc/murmur3.h	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed);$/;"	p	typeref:typename:uint32_t
mutex	pshared.c	/^int mutex_cond_init_pshared(pthread_mutex_t *mutex, pthread_cond_t *cond)$/;"	z	function:mutex_cond_init_pshared	typeref:typename:pthread_mutex_t *	file:
mutex	pshared.c	/^int mutex_init_pshared(pthread_mutex_t *mutex)$/;"	z	function:mutex_init_pshared	typeref:typename:pthread_mutex_t *	file:
mutex	pshared.c	/^int mutex_init_pshared_with_type(pthread_mutex_t *mutex, int type)$/;"	z	function:mutex_init_pshared_with_type	typeref:typename:pthread_mutex_t *	file:
mutex	zbd.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:fio_zone_info	typeref:typename:pthread_mutex_t
mutex	zbd.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:zoned_block_device_info	typeref:typename:pthread_mutex_t
mutex_cond_init_pshared	pshared.c	/^int mutex_cond_init_pshared(pthread_mutex_t *mutex, pthread_cond_t *cond)$/;"	f	typeref:typename:int
mutex_cond_init_pshared	pshared.h	/^extern int mutex_cond_init_pshared(pthread_mutex_t *, pthread_cond_t *);$/;"	p	typeref:typename:int
mutex_init_pshared	pshared.c	/^int mutex_init_pshared(pthread_mutex_t *mutex)$/;"	f	typeref:typename:int
mutex_init_pshared	pshared.h	/^extern int mutex_init_pshared(pthread_mutex_t *);$/;"	p	typeref:typename:int
mutex_init_pshared_with_type	pshared.c	/^int mutex_init_pshared_with_type(pthread_mutex_t *mutex, int type)$/;"	f	typeref:typename:int
mutex_init_pshared_with_type	pshared.h	/^extern int mutex_init_pshared_with_type(pthread_mutex_t *, int);$/;"	p	typeref:typename:int
mwc	engines/cpu.c	/^struct mwc {$/;"	s	file:
mwc	engines/cpu.c	/^uint32_t mwc32(struct mwc *mwc)$/;"	z	function:mwc32	typeref:struct:mwc *	file:
mwc32	engines/cpu.c	/^uint32_t mwc32(struct mwc *mwc)$/;"	f	typeref:typename:uint32_t
my_extend	tools/fiologparser.py	/^def my_extend( vlist, val ):$/;"	f
my_gpu_id	engines/libcufile.c	/^	int                 my_gpu_id;     \/* GPU id to use for this job *\/$/;"	m	struct:libcufile_options	typeref:typename:int	file:
myabort	tools/hist/fio-histo-log-pctiles.py	/^def myabort(msg):$/;"	f
n	init.c	/^static unsigned int gcd(unsigned int m, unsigned int n)$/;"	z	function:gcd	typeref:typename:unsigned int	file:
n	lex.yy.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	z	function:yy_flex_strncpy	typeref:typename:int	file:
n	oslib/libmtd_common.h	/^static inline int is_power_of_2(unsigned long long n)$/;"	z	function:is_power_of_2	typeref:typename:unsigned long long	file:
n	oslib/strndup.c	/^char *strndup(const char *s, size_t n)$/;"	z	function:strndup	typeref:typename:size_t	file:
n	oslib/strndup.h	/^char *strndup(const char *s, size_t n);$/;"	z	prototype:strndup	typeref:typename:size_t	file:
n	t/dedupe.c	/^static uint64_t bytes_to_human_readable_unit(uint64_t n, const char **unit_out)$/;"	z	function:bytes_to_human_readable_unit	typeref:typename:uint64_t	file:
n	t/genzipf.c	/^static void hash_insert(struct node *n, unsigned long long val)$/;"	z	function:hash_insert	typeref:struct:node *	file:
n2s_unit	lib/num2str.h	/^enum n2s_unit {$/;"	g
n2s_unit	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	z	prototype:num2str	typeref:meta:enum	file:
nFileMappings	os/windows/posix.c	/^int nFileMappings = 0;$/;"	v	typeref:typename:int
n_add_opts	t/btrace2fio.c	/^static int n_add_opts;$/;"	v	typeref:typename:int	file:
nallocated	engines/xnvme.c	/^	uint64_t nallocated;$/;"	m	struct:xnvme_fioe_data	typeref:typename:uint64_t	file:
name	blktrace_api.h	/^	char name[32];			\/* output *\/$/;"	m	struct:blk_user_trace_setup	typeref:typename:char[32]
name	cgroup.c	/^static void add_cgroup(struct thread_data *td, const char *name,$/;"	z	function:add_cgroup	typeref:typename:const char *	file:
name	client.h	/^	char *name;$/;"	m	struct:fio_client	typeref:typename:char *
name	crc/test.c	/^	const char *name;$/;"	m	struct:test_type	typeref:typename:const char *	file:
name	debug.h	/^	const char *name;$/;"	m	struct:debug_level	typeref:typename:const char *
name	diskutil.h	/^	uint8_t name[FIO_DU_NAME_SZ];$/;"	m	struct:disk_util_stat	typeref:typename:uint8_t[]
name	filehash.c	/^static struct fio_file *__lookup_file_hash(const char *name)$/;"	z	function:__lookup_file_hash	typeref:typename:const char *	file:
name	filehash.c	/^static unsigned short hash(const char *name)$/;"	z	function:hash	typeref:typename:const char *	file:
name	filehash.c	/^struct fio_file *lookup_file_hash(const char *name)$/;"	z	function:lookup_file_hash	typeref:typename:const char *	file:
name	gclient.c	/^static void gfio_show_lat(GtkWidget *vbox, const char *name, unsigned long long min,$/;"	z	function:gfio_show_lat	typeref:typename:const char *	file:
name	gfio.c	/^static struct gui_entry *get_new_ge_with_tab(struct gui *ui, const char *name)$/;"	z	function:get_new_ge_with_tab	typeref:typename:const char *	file:
name	goptions.c	/^static GtkWidget *gopt_add_tab(GtkWidget *notebook, const char *name)$/;"	z	function:gopt_add_tab	typeref:typename:const char *	file:
name	helper_thread.c	/^	const char	*name;$/;"	m	struct:interval_timer	typeref:typename:const char *	file:
name	init.c	/^		int nested, char *name, char ***popts, int *aopts, int *nopts)$/;"	z	function:__parse_jobs_ini	typeref:typename:char *	file:
name	init.c	/^static int skip_this_section(const char *name)$/;"	z	function:skip_this_section	typeref:typename:const char *	file:
name	init.c	/^static void gen_log_name(char *name, size_t size, const char *logtype,$/;"	z	function:gen_log_name	typeref:typename:char *	file:
name	init.c	/^static void show_closest_option(const char *name)$/;"	z	function:show_closest_option	typeref:typename:const char *	file:
name	init.c	/^static void usage(const char *name)$/;"	z	function:usage	typeref:typename:const char *	file:
name	ioengines.c	/^static struct ioengine_ops *find_ioengine(const char *name)$/;"	z	function:find_ioengine	typeref:typename:const char *	file:
name	ioengines.h	/^	const char *name;$/;"	m	struct:ioengine_ops	typeref:typename:const char *
name	json.c	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	z	function:json_object_add_value_type	typeref:typename:const char *	file:
name	json.c	/^static struct json_pair *json_create_pair(const char *name, struct json_value *value)$/;"	z	function:json_create_pair	typeref:typename:const char *	file:
name	json.h	/^					       const char *name,$/;"	z	function:json_object_add_value_object	typeref:typename:const char *	file:
name	json.h	/^					       const char *name,$/;"	z	function:json_object_add_value_string	typeref:typename:const char *	file:
name	json.h	/^					      const char *name, double val)$/;"	z	function:json_object_add_value_float	typeref:typename:const char *	file:
name	json.h	/^					      const char *name,$/;"	z	function:json_object_add_value_array	typeref:typename:const char *	file:
name	json.h	/^					    const char *name, long long val)$/;"	z	function:json_object_add_value_int	typeref:typename:const char *	file:
name	json.h	/^	char *name;$/;"	m	struct:json_pair	typeref:typename:char *
name	json.h	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	z	prototype:json_object_add_value_type	typeref:typename:const char *	file:
name	lib/memcpy.c	/^	const char *name;$/;"	m	struct:memcpy_test	typeref:typename:const char *	file:
name	lib/memcpy.c	/^	const char *name;$/;"	m	struct:memcpy_type	typeref:typename:const char *	file:
name	optgroup.h	/^	const char *name;$/;"	m	struct:opt_group	typeref:typename:const char *
name	options.c	/^			const char *name, int val)$/;"	z	function:add_to_lopt	typeref:typename:const char *	file:
name	options.c	/^struct fio_option *fio_option_find(const char *name)$/;"	z	function:fio_option_find	typeref:typename:const char *	file:
name	os/os-windows.h	/^long sysconf(int name);$/;"	z	prototype:sysconf	typeref:typename:int	file:
name	os/windows/posix.c	/^long sysconf(int name)$/;"	z	function:sysconf	typeref:typename:int	file:
name	os/windows/posix.c	/^void *dlsym(void *handle, const char *name)$/;"	z	function:dlsym	typeref:typename:const char *	file:
name	os/windows/posix/include/dlfcn.h	/^void *dlsym(void *restrict handle, const char *restrict name);$/;"	z	prototype:dlsym	typeref:typename:const char * 	file:
name	oslib/getopt.h	/^	const char *name;$/;"	m	struct:option	typeref:typename:const char *
name	oslib/libmtd.c	/^static char *mkpath(const char *path, const char *name)$/;"	z	function:mkpath	typeref:typename:const char *	file:
name	oslib/libmtd.h	/^	char name[MTD_NAME_MAX + 1];$/;"	m	struct:mtd_dev_info	typeref:typename:char[]
name	oslib/libmtd_legacy.c	/^	char name[MTD_NAME_MAX + 1];$/;"	m	struct:proc_parse_info	typeref:typename:char[]	file:
name	parse.c	/^int show_cmd_help(const struct fio_option *options, const char *name)$/;"	z	function:show_cmd_help	typeref:typename:const char *	file:
name	parse.h	/^	char *name;$/;"	m	struct:print_option	typeref:typename:char *
name	parse.h	/^	const char *name;		\/* option name *\/$/;"	m	struct:fio_option	typeref:typename:const char *
name	profile.h	/^	char name[32];$/;"	m	struct:profile_ops	typeref:typename:char[32]
name	server.c	/^int fio_send_iolog(struct thread_data *td, struct io_log *log, const char *name)$/;"	z	function:fio_send_iolog	typeref:typename:const char *	file:
name	server.c	/^int fio_server_get_verify_state(const char *name, int threadnumber,$/;"	z	function:fio_server_get_verify_state	typeref:typename:const char *	file:
name	server.h	/^	uint8_t name[64];$/;"	m	struct:cmd_job_option	typeref:typename:uint8_t[64]
name	server.h	/^	uint8_t name[FIO_NET_NAME_MAX];$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint8_t[]
name	stat.c	/^static void display_lat(const char *name, unsigned long long min,$/;"	z	function:display_lat	typeref:typename:const char *	file:
name	stat.c	/^static void json_add_job_opts(struct json_object *root, const char *name,$/;"	z	function:json_add_job_opts	typeref:typename:const char *	file:
name	stat.h	/^	char name[FIO_JOBNAME_SIZE];$/;"	m	struct:thread_stat	typeref:typename:char[]
name	t/btrace2fio.c	/^	char *name;$/;"	m	struct:trace_file	typeref:typename:char *	file:
name	t/read-to-pipe-async.c	/^static void add_lat(struct stats *s, unsigned int us, const char *name)$/;"	z	function:add_lat	typeref:typename:const char *	file:
name	thread_options.h	/^	char *name;$/;"	m	struct:thread_options	typeref:typename:char *
name	thread_options.h	/^	uint8_t name[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
name	unittests/unittest.c	/^CU_ErrorCode fio_unittest_add_suite(const char *name, CU_InitializeFunc initfn,$/;"	z	function:fio_unittest_add_suite	typeref:typename:const char *	file:
name	unittests/unittest.h	/^	const char *name;$/;"	m	struct:fio_unittest_entry	typeref:typename:const char *
name	verify-state.h	/^					 const char *name, const char *prefix,$/;"	z	function:verify_state_gen_name	typeref:typename:const char *	file:
name	verify-state.h	/^	uint8_t name[64];$/;"	m	struct:thread_io_list	typeref:typename:uint8_t[64]
name	verify.c	/^			    unsigned int sha_size, const char *name)$/;"	z	function:verify_io_u_sha3	typeref:typename:const char *	file:
name	verify.c	/^	const char *name;$/;"	m	struct:vcont	typeref:typename:const char *	file:
name	verify.c	/^static int open_state_file(const char *name, const char *prefix, int num,$/;"	z	function:open_state_file	typeref:typename:const char *	file:
name_len	server.h	/^	uint16_t name_len;$/;"	m	struct:cmd_load_file_pdu	typeref:typename:uint16_t
name_postfix	t/btrace2fio.c	/^			  const char *name_postfix)$/;"	z	function:__output_p_fio	typeref:typename:const char *	file:
names	gfio.h	/^	GtkWidget *names;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
nanosleep	os/os-windows.h	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp);$/;"	p	typeref:typename:int
nanosleep	os/windows/posix.c	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp)$/;"	f	typeref:typename:int
native_fallocate	filesetup.c	/^static int native_fallocate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
nbd	engines/nbd.c	/^	struct nbd_handle *nbd;$/;"	m	struct:nbd_data	typeref:struct:nbd_handle *	file:
nbd	engines/nbd.c	/^static unsigned retire_commands(struct nbd_handle *nbd)$/;"	z	function:retire_commands	typeref:struct:nbd_handle *	file:
nbd_CFLAGS	Makefile	/^  nbd_CFLAGS = $(LIBNBD_CFLAGS)$/;"	m
nbd_LIBS	Makefile	/^  nbd_LIBS = $(LIBNBD_LIBS)$/;"	m
nbd_SRCS	Makefile	/^  nbd_SRCS = engines\/nbd.c$/;"	m
nbd_cleanup	engines/nbd.c	/^static void nbd_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
nbd_data	engines/nbd.c	/^struct nbd_data {$/;"	s	file:
nbd_event	engines/nbd.c	/^static struct io_u *nbd_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
nbd_getevents	engines/nbd.c	/^static int nbd_getevents(struct thread_data *td, unsigned int min,$/;"	f	typeref:typename:int	file:
nbd_init	engines/nbd.c	/^static int nbd_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
nbd_invalidate	engines/nbd.c	/^static int nbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
nbd_io_u_free	engines/nbd.c	/^static void nbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
nbd_io_u_init	engines/nbd.c	/^static int nbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
nbd_open_file	engines/nbd.c	/^static int nbd_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
nbd_options	engines/nbd.c	/^struct nbd_options {$/;"	s	file:
nbd_queue	engines/nbd.c	/^static enum fio_q_status nbd_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
nbd_setup	engines/nbd.c	/^static int nbd_setup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
nblocks	crc/murmur3.c	/^static uint32_t murmur3_tail(const uint8_t *data, const int nblocks,$/;"	z	function:murmur3_tail	typeref:typename:const int	file:
nbuttons	gfio.c	/^			int nbuttons)$/;"	z	function:add_buttons	typeref:typename:int	file:
nbyte	os/os-windows.h	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);$/;"	z	prototype:pread	typeref:typename:size_t	file:
nbyte	os/os-windows.h	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	prototype:pwrite	typeref:typename:size_t	file:
nbyte	os/windows/posix.c	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset)$/;"	z	function:pread	typeref:typename:size_t	file:
nbyte	os/windows/posix.c	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	z	function:pwrite	typeref:typename:size_t	file:
nbytes	helpers.c	/^int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	function:sync_file_range	typeref:typename:uint64_t	file:
nbytes	helpers.h	/^extern int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	prototype:sync_file_range	typeref:typename:uint64_t	file:
nbytes	lex.yy.c	/^extern int lexer_input(char *buffer, unsigned int *nbytes, int buffersize);$/;"	z	prototype:lexer_input	typeref:typename:unsigned int *	file:
nchunks	t/dedupe.c	/^			      uint64_t *nextents, uint64_t *nchunks,$/;"	z	function:run_dedupe_threads	typeref:typename:uint64_t *	file:
nchunks	t/dedupe.c	/^			uint64_t *nchunks, uint64_t *unique_capacity)$/;"	z	function:dedupe_check	typeref:typename:uint64_t *	file:
nchunks	t/dedupe.c	/^static void iter_rb_tree(uint64_t *nextents, uint64_t *nchunks, uint64_t *ndupextents)$/;"	z	function:iter_rb_tree	typeref:typename:uint64_t *	file:
nchunks	t/dedupe.c	/^static void show_stat(uint64_t nextents, uint64_t nchunks, uint64_t ndupextents,$/;"	z	function:show_stat	typeref:typename:uint64_t	file:
nd	engines/net.c	/^static void store_udp_seq(struct netio_data *nd, struct io_u *io_u)$/;"	z	function:store_udp_seq	typeref:struct:netio_data *	file:
nd	engines/net.c	/^static void verify_udp_seq(struct thread_data *td, struct netio_data *nd,$/;"	z	function:verify_udp_seq	typeref:struct:netio_data *	file:
nd	engines/null.c	/^				    struct null_data *nd, struct io_u *io_u)$/;"	z	function:null_queue	typeref:struct:null_data *	file:
nd	engines/null.c	/^static int null_commit(struct thread_data *td, struct null_data *nd)$/;"	z	function:null_commit	typeref:struct:null_data *	file:
nd	engines/null.c	/^static int null_getevents(struct null_data *nd, unsigned int min_events,$/;"	z	function:null_getevents	typeref:struct:null_data *	file:
nd	engines/null.c	/^static int null_open(struct null_data fio_unused *nd,$/;"	z	function:null_open	typeref:struct:null_data fio_unused *	file:
nd	engines/null.c	/^static struct io_u *null_event(struct null_data *nd, int event)$/;"	z	function:null_event	typeref:struct:null_data *	file:
nd	engines/null.c	/^static void null_cleanup(struct null_data *nd)$/;"	z	function:null_cleanup	typeref:struct:null_data *	file:
ndupes	t/dedupe.c	/^			 uint64_t *ndupes, uint64_t *unique_capacity,$/;"	z	function:insert_chunks	typeref:typename:uint64_t *	file:
ndupextents	t/dedupe.c	/^static void iter_rb_tree(uint64_t *nextents, uint64_t *nchunks, uint64_t *ndupextents)$/;"	z	function:iter_rb_tree	typeref:typename:uint64_t *	file:
ndupextents	t/dedupe.c	/^static void show_stat(uint64_t nextents, uint64_t nchunks, uint64_t ndupextents,$/;"	z	function:show_stat	typeref:typename:uint64_t	file:
need_swap	blktrace.c	/^bool init_blktrace_read(struct thread_data *td, const char *filename, int need_swap)$/;"	z	function:init_blktrace_read	typeref:typename:int	file:
need_swap	blktrace.c	/^bool is_blktrace(const char *filename, int *need_swap)$/;"	z	function:is_blktrace	typeref:typename:int *	file:
need_swap	blktrace.h	/^				 int need_swap)$/;"	z	function:init_blktrace_read	typeref:typename:int	file:
need_swap	blktrace.h	/^static inline bool is_blktrace(const char *fname, int *need_swap)$/;"	z	function:is_blktrace	typeref:typename:int *	file:
need_swap	t/btrace2fio.c	/^static int load_blktrace(const char *fname, int need_swap)$/;"	z	function:load_blktrace	typeref:typename:int	file:
needle	oslib/strcasestr.h	/^char *strcasestr(const char *haystack, const char *needle);$/;"	z	prototype:strcasestr	typeref:typename:const char *	file:
neg	parse.h	/^	int neg;			\/* negate value stored *\/$/;"	m	struct:fio_option	typeref:typename:int
nentries	lib/bloom.c	/^	uint64_t nentries;$/;"	m	struct:bloom	typeref:typename:uint64_t	file:
nested	init.c	/^		int nested, char *name, char ***popts, int *aopts, int *nopts)$/;"	z	function:__parse_jobs_ini	typeref:typename:int	file:
netio_data	engines/net.c	/^struct netio_data {$/;"	s	file:
netio_options	engines/net.c	/^struct netio_options {$/;"	s	file:
new	gettime.c	/^						 uint32_t new)$/;"	z	function:atomic32_compare_and_swap	typeref:typename:uint32_t	file:
new_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	z	function:yy_switch_to_buffer	typeref:typename:YY_BUFFER_STATE	file:
new_buffer	lex.yy.c	/^void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );$/;"	z	prototype:yy_switch_to_buffer	typeref:typename:YY_BUFFER_STATE	file:
new_buffer	lex.yy.c	/^void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );$/;"	z	prototype:yypush_buffer_state	typeref:typename:YY_BUFFER_STATE	file:
new_buffer	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	z	function:yypush_buffer_state	typeref:typename:YY_BUFFER_STATE	file:
new_client_page	gfio.c	/^static GtkWidget *new_client_page(struct gui_entry *ge)$/;"	f	typeref:typename:GtkWidget *	file:
new_client_page	gfio.c	/^static GtkWidget *new_client_page(struct gui_entry *ge);$/;"	p	typeref:typename:GtkWidget *	file:
new_combo_entry_in_frame	ghelpers.c	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label)$/;"	f	typeref:typename:GtkWidget *
new_combo_entry_in_frame	ghelpers.h	/^GtkWidget *new_combo_entry_in_frame(GtkWidget *box, const char *label);$/;"	p	typeref:typename:GtkWidget *
new_entry	flist.h	/^static inline void __flist_add(struct flist_head *new_entry,$/;"	z	function:__flist_add	typeref:struct:flist_head *	file:
new_entry	flist.h	/^static inline void flist_add(struct flist_head *new_entry,$/;"	z	function:flist_add	typeref:struct:flist_head *	file:
new_entry	flist.h	/^static inline void flist_add_tail(struct flist_head *new_entry,$/;"	z	function:flist_add_tail	typeref:struct:flist_head *	file:
new_group	thread_options.h	/^	uint32_t new_group;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
new_group	thread_options.h	/^	unsigned int new_group;$/;"	m	struct:thread_options	typeref:typename:unsigned int
new_info_entry_in_frame	ghelpers.c	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label)$/;"	f	typeref:typename:GtkWidget *
new_info_entry_in_frame	ghelpers.h	/^GtkWidget *new_info_entry_in_frame(GtkWidget *box, const char *label);$/;"	p	typeref:typename:GtkWidget *
new_info_entry_in_frame_rgb	ghelpers.c	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	f	typeref:typename:GtkWidget *
new_info_entry_in_frame_rgb	ghelpers.h	/^GtkWidget *new_info_entry_in_frame_rgb(GtkWidget *box, const char *label,$/;"	p	typeref:typename:GtkWidget *
new_info_label_in_frame	ghelpers.c	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label)$/;"	f	typeref:typename:GtkWidget *
new_info_label_in_frame	ghelpers.h	/^GtkWidget *new_info_label_in_frame(GtkWidget *box, const char *label);$/;"	p	typeref:typename:GtkWidget *
new_main_page	gfio.c	/^static GtkWidget *new_main_page(struct gui *ui)$/;"	f	typeref:typename:GtkWidget *	file:
new_state	libfio.c	/^int td_bump_runstate(struct thread_data *td, int new_state)$/;"	z	function:td_bump_runstate	typeref:typename:int	file:
next	engines/mtd.c	/^next:$/;"	L	function:fio_mtd_queue	file:
next	flist.h	/^				  struct flist_head *next)$/;"	z	function:__flist_splice	typeref:struct:flist_head *	file:
next	flist.h	/^			       struct flist_head * next)$/;"	z	function:__flist_del	typeref:struct:flist_head *	file:
next	flist.h	/^			       struct flist_head *next)$/;"	z	function:__flist_add	typeref:struct:flist_head *	file:
next	flist.h	/^	struct flist_head *next, *prev;$/;"	m	struct:flist_head	typeref:struct:flist_head *
next	oslib/libmtd_legacy.c	/^	char *next;$/;"	m	struct:proc_parse_info	typeref:typename:char *	file:
next	server.c	/^	struct flist_head next;	\/* Other sk_entry's, if linked command *\/$/;"	m	struct:sk_entry	typeref:struct:flist_head	file:
nextData	tools/hist/fiologparser_hist.py	/^    def nextData(self):$/;"	m	class:HistFileRdr
next_buffered_event	engines/nfs.c	/^	int next_buffered_event; \/* round robin-pointer within events[] *\/$/;"	m	struct:fio_libnfs_options	typeref:typename:int	file:
next_file	fio.h	/^		unsigned int next_file;$/;"	m	union:thread_data::__anon0f7035d9080a	typeref:typename:unsigned int
next_file_gauss	fio.h	/^		struct gauss_state next_file_gauss;$/;"	m	union:thread_data::__anon0f7035d9090a	typeref:struct:gauss_state
next_file_state	fio.h	/^		struct frand_state next_file_state;$/;"	m	union:thread_data::__anon0f7035d9080a	typeref:struct:frand_state
next_file_zipf	fio.h	/^		struct zipf_state next_file_zipf;$/;"	m	union:thread_data::__anon0f7035d9090a	typeref:struct:zipf_state
next_free_worker	workqueue.h	/^	unsigned int next_free_worker;$/;"	m	struct:workqueue	typeref:typename:unsigned int
next_in	server.c	/^static int __deflate_pdu_buffer(void *next_in, unsigned int next_sz, void **out_pdu,$/;"	z	function:__deflate_pdu_buffer	typeref:typename:void *	file:
next_non_full	smalloc.c	/^	size_t next_non_full;$/;"	m	struct:pool	typeref:typename:size_t	file:
next_sz	server.c	/^static int __deflate_pdu_buffer(void *next_in, unsigned int next_sz, void **out_pdu,$/;"	z	function:__deflate_pdu_buffer	typeref:typename:unsigned int	file:
nextents	t/dedupe.c	/^			      uint64_t *nextents, uint64_t *nchunks,$/;"	z	function:run_dedupe_threads	typeref:typename:uint64_t *	file:
nextents	t/dedupe.c	/^static int dedupe_check(const char *filename, uint64_t *nextents,$/;"	z	function:dedupe_check	typeref:typename:uint64_t *	file:
nextents	t/dedupe.c	/^static void iter_rb_tree(uint64_t *nextents, uint64_t *nchunks, uint64_t *ndupextents)$/;"	z	function:iter_rb_tree	typeref:typename:uint64_t *	file:
nextents	t/dedupe.c	/^static void show_stat(uint64_t nextents, uint64_t nchunks, uint64_t ndupextents,$/;"	z	function:show_stat	typeref:typename:uint64_t	file:
nfds	os/windows/posix.c	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout)$/;"	z	function:poll	typeref:typename:nfds_t	file:
nfds	os/windows/posix/include/poll.h	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout);$/;"	z	prototype:poll	typeref:typename:nfds_t	file:
nfds_t	os/windows/posix/include/poll.h	/^typedef int nfds_t;$/;"	t	typeref:typename:int
nfs	engines/nfs.c	/^static void nfs_callback(int res, struct nfs_context *nfs, void *data,$/;"	z	function:nfs_callback	typeref:struct:nfs_context *	file:
nfs_callback	engines/nfs.c	/^static void nfs_callback(int res, struct nfs_context *nfs, void *data,$/;"	f	typeref:typename:void	file:
nfs_data	engines/nfs.c	/^struct nfs_data {$/;"	s	file:
nfs_event_loop	engines/nfs.c	/^static int nfs_event_loop(struct thread_data *td, bool flush) {$/;"	f	typeref:typename:int	file:
nfs_op_type	engines/nfs.c	/^enum nfs_op_type {$/;"	g	file:
nfs_url	engines/nfs.c	/^	char *nfs_url;$/;"	m	struct:fio_libnfs_options	typeref:typename:char *	file:
nfsfh	engines/nfs.c	/^	struct nfsfh *nfsfh;$/;"	m	struct:nfs_data	typeref:struct:nfsfh *	file:
nice	os/os-windows.h	/^int nice(int incr);$/;"	p	typeref:typename:int
nice	os/windows/posix.c	/^int nice(int incr)$/;"	f	typeref:typename:int
nice	thread_options.h	/^	uint32_t nice;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
nice	thread_options.h	/^	unsigned int nice;$/;"	m	struct:thread_options	typeref:typename:unsigned int
nice	workqueue.h	/^	unsigned int nice;$/;"	m	struct:workqueue_ops	typeref:typename:unsigned int
nicenum	tickmarks.c	/^static double nicenum(double x, int round)$/;"	f	typeref:typename:double	file:
nitems	t/dedupe.c	/^static int insert_chunks(struct item *items, unsigned int nitems,$/;"	z	function:insert_chunks	typeref:typename:unsigned int	file:
nmemb	engines/http.c	/^static size_t _http_read(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_read	typeref:typename:size_t	file:
nmemb	engines/http.c	/^static size_t _http_write(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_write	typeref:typename:size_t	file:
nmemb	oslib/libmtd_xalloc.h	/^static void *xcalloc(size_t nmemb, size_t size)$/;"	z	function:xcalloc	typeref:typename:size_t	file:
nmemb	smalloc.c	/^void *scalloc(size_t nmemb, size_t size)$/;"	z	function:scalloc	typeref:typename:size_t	file:
nmenu_items	gfio.c	/^static gint nmenu_items = FIO_ARRAY_SIZE(menu_items);$/;"	v	typeref:typename:gint	file:
nnodes	t/genzipf.c	/^static void output_csv(struct node *nodes, unsigned long nnodes)$/;"	z	function:output_csv	typeref:typename:unsigned long	file:
nnodes	t/genzipf.c	/^static void output_normal(struct node *nodes, unsigned long nnodes,$/;"	z	function:output_normal	typeref:typename:unsigned long	file:
no_argument	oslib/getopt.h	/^	no_argument	  = 0,$/;"	e	enum:__anon316b4bb60103
no_completion_thread	engines/windowsaio.c	/^	unsigned int no_completion_thread;$/;"	m	struct:windowsaio_options	typeref:typename:unsigned int	file:
no_comps	verify-state.h	/^	uint64_t no_comps;$/;"	m	struct:thread_io_list	typeref:typename:uint64_t
no_free	parse.h	/^	int no_free;$/;"	m	struct:fio_option	typeref:typename:int
no_s	t/verify-state.c	/^static void show_s(struct thread_io_list *s, unsigned int no_s)$/;"	z	function:show_s	typeref:typename:unsigned int	file:
no_stall	thread_options.h	/^	uint32_t no_stall;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
no_stall	thread_options.h	/^	unsigned int no_stall;$/;"	m	struct:thread_options	typeref:typename:unsigned int
no_warn_def	parse.h	/^	int no_warn_def;$/;"	m	struct:fio_option	typeref:typename:int
node	graph.c	/^	struct prio_tree_node node;$/;"	m	struct:graph_value	typeref:struct:prio_tree_node	file:
node	lib/prio_tree.c	/^		struct prio_tree_node *node)$/;"	z	function:prio_tree_insert	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.c	/^		struct prio_tree_node *node, unsigned long max_heap_index)$/;"	z	function:prio_tree_expand	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.c	/^		struct prio_tree_node *old, struct prio_tree_node *node)$/;"	z	function:prio_tree_replace	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.c	/^static void get_index(const struct prio_tree_node *node,$/;"	z	function:get_index	typeref:typename:const struct prio_tree_node *	file:
node	lib/prio_tree.c	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node)$/;"	z	function:prio_tree_remove	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.h	/^                struct prio_tree_node *node);$/;"	z	prototype:prio_tree_insert	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.h	/^                struct prio_tree_node *old, struct prio_tree_node *node);$/;"	z	prototype:prio_tree_replace	typeref:struct:prio_tree_node *	file:
node	lib/prio_tree.h	/^static inline int prio_tree_left_empty(const struct prio_tree_node *node)$/;"	z	function:prio_tree_left_empty	typeref:typename:const struct prio_tree_node *	file:
node	lib/prio_tree.h	/^static inline int prio_tree_right_empty(const struct prio_tree_node *node)$/;"	z	function:prio_tree_right_empty	typeref:typename:const struct prio_tree_node *	file:
node	lib/prio_tree.h	/^static inline int prio_tree_root(const struct prio_tree_node *node)$/;"	z	function:prio_tree_root	typeref:typename:const struct prio_tree_node *	file:
node	lib/prio_tree.h	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node);$/;"	z	prototype:prio_tree_remove	typeref:struct:prio_tree_node *	file:
node	lib/rbtree.c	/^static void __rb_erase_color(struct fio_rb_node *node,$/;"	z	function:__rb_erase_color	typeref:struct:fio_rb_node *	file:
node	lib/rbtree.c	/^static void __rb_rotate_left(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:__rb_rotate_left	typeref:struct:fio_rb_node *	file:
node	lib/rbtree.c	/^static void __rb_rotate_right(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:__rb_rotate_right	typeref:struct:fio_rb_node *	file:
node	lib/rbtree.c	/^struct fio_rb_node *rb_next(const struct fio_rb_node *node)$/;"	z	function:rb_next	typeref:typename:const struct fio_rb_node *	file:
node	lib/rbtree.c	/^void rb_erase(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:rb_erase	typeref:struct:fio_rb_node *	file:
node	lib/rbtree.c	/^void rb_insert_color(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:rb_insert_color	typeref:struct:fio_rb_node *	file:
node	lib/rbtree.h	/^static inline void rb_link_node(struct fio_rb_node * node,$/;"	z	function:rb_link_node	typeref:struct:fio_rb_node *	file:
node	oslib/libmtd.c	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd)$/;"	z	function:mtd_get_dev_info	typeref:typename:const char *	file:
node	oslib/libmtd.c	/^int mtd_probe_node(libmtd_t desc, const char *node)$/;"	z	function:mtd_probe_node	typeref:typename:const char *	file:
node	oslib/libmtd.c	/^static int dev_node2num(struct libmtd *lib, const char *node, int *mtd_num)$/;"	z	function:dev_node2num	typeref:typename:const char *	file:
node	oslib/libmtd.h	/^int mtd_get_dev_info(libmtd_t desc, const char *node, struct mtd_dev_info *mtd);$/;"	z	prototype:mtd_get_dev_info	typeref:typename:const char *	file:
node	oslib/libmtd.h	/^int mtd_probe_node(libmtd_t desc, const char *node);$/;"	z	prototype:mtd_probe_node	typeref:typename:const char *	file:
node	oslib/libmtd_int.h	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd);$/;"	z	prototype:legacy_get_dev_info	typeref:typename:const char *	file:
node	oslib/libmtd_legacy.c	/^int legacy_get_dev_info(const char *node, struct mtd_dev_info *mtd)$/;"	z	function:legacy_get_dev_info	typeref:typename:const char *	file:
node	t/genzipf.c	/^struct node {$/;"	s	file:
node_cmp	t/genzipf.c	/^static int node_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
nodelay	engines/net.c	/^	unsigned int nodelay;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
nodes	t/genzipf.c	/^static void output_csv(struct node *nodes, unsigned long nnodes)$/;"	z	function:output_csv	typeref:struct:node *	file:
nodes	t/genzipf.c	/^static void output_normal(struct node *nodes, unsigned long nnodes,$/;"	z	function:output_normal	typeref:struct:node *	file:
nofiles	verify-state.h	/^	uint32_t nofiles;$/;"	m	struct:thread_io_list	typeref:typename:uint32_t
nofiles	verify-state.h	/^static inline size_t __thread_io_list_sz(uint32_t depth, uint32_t nofiles)$/;"	z	function:__thread_io_list_sz	typeref:typename:uint32_t	file:
non_seq	oslib/linux-blkzoned.c	/^	__u8	non_seq;        \/* Non-sequential write resources active *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u8	file:
nonvectored	engines/io_uring.c	/^	unsigned int nonvectored;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
noop_init	engines/cpu.c	/^static int noop_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
nop	arch/arch-aarch64.h	/^#define nop	/;"	d
nop	arch/arch-alpha.h	/^#define nop	/;"	d
nop	arch/arch-arm.h	/^#define	nop	/;"	d
nop	arch/arch-arm.h	/^#define nop /;"	d
nop	arch/arch-generic.h	/^#define nop	/;"	d
nop	arch/arch-hppa.h	/^#define nop	/;"	d
nop	arch/arch-ia64.h	/^#define nop	/;"	d
nop	arch/arch-mips.h	/^#define nop	/;"	d
nop	arch/arch-ppc.h	/^#define nop	/;"	d
nop	arch/arch-s390.h	/^#define nop	/;"	d
nop	arch/arch-sh.h	/^#define nop /;"	d
nop	arch/arch-sparc.h	/^#define nop	/;"	d
nop	arch/arch-sparc64.h	/^#define nop	/;"	d
nop	arch/arch-x86.h	/^#define nop	/;"	d
nop	arch/arch-x86_64.h	/^#define nop	/;"	d
nopen	engines/xnvme.c	/^	int64_t nopen;$/;"	m	struct:xnvme_fioe_data	typeref:typename:int64_t	file:
nopts	init.c	/^		int nested, char *name, char ***popts, int *aopts, int *nopts)$/;"	z	function:__parse_jobs_ini	typeref:typename:int *	file:
norandommap	thread_options.h	/^	uint32_t norandommap;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
norandommap	thread_options.h	/^	unsigned int norandommap;$/;"	m	struct:thread_options	typeref:typename:unsigned int
normsg	oslib/libmtd_common.h	/^#define normsg(/;"	d
normsg_cont	oslib/libmtd_common.h	/^#define normsg_cont(/;"	d
not_macos	t/run-fio-tests.py	/^    def not_macos(cls):$/;"	m	class:Requirements
not_windows	t/run-fio-tests.py	/^    def not_windows(cls):$/;"	m	class:Requirements
notebook	gfio.c	/^static gboolean notebook_switch_page(GtkNotebook *notebook, GtkWidget *widget,$/;"	z	function:notebook_switch_page	typeref:typename:GtkNotebook *	file:
notebook	gfio.h	/^	GtkWidget *notebook;$/;"	m	struct:gui	typeref:typename:GtkWidget *
notebook	gfio.h	/^	GtkWidget *notebook;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
notebook	goptions.c	/^static GtkWidget *gopt_add_group_tab(GtkWidget *notebook,$/;"	z	function:gopt_add_group_tab	typeref:typename:GtkWidget *	file:
notebook	goptions.c	/^static GtkWidget *gopt_add_tab(GtkWidget *notebook, const char *name)$/;"	z	function:gopt_add_tab	typeref:typename:GtkWidget *	file:
notebook	goptions.c	/^static void gopt_add_group_tabs(GtkWidget *notebook, struct gopt_job_view *gjv)$/;"	z	function:gopt_add_group_tabs	typeref:typename:GtkWidget *	file:
notebook_switch_page	gfio.c	/^static gboolean notebook_switch_page(GtkNotebook *notebook, GtkWidget *widget,$/;"	f	typeref:typename:gboolean	file:
nothing	verify.c	/^nothing:$/;"	L	function:get_next_verify	file:
now	backend.c	/^static bool __check_min_rate(struct thread_data *td, struct timespec *now,$/;"	z	function:__check_min_rate	typeref:struct:timespec *	file:
now	backend.c	/^static bool check_min_rate(struct thread_data *td, struct timespec *now)$/;"	z	function:check_min_rate	typeref:struct:timespec *	file:
now	client.c	/^				    struct timespec *now)$/;"	z	function:client_check_cmd_timeout	typeref:struct:timespec *	file:
now	helper_thread.c	/^			struct timespec *now)$/;"	z	function:reset_timers	typeref:struct:timespec *	file:
now	helper_thread.c	/^static int eval_timer(struct interval_timer *it, const struct timespec *now,$/;"	z	function:eval_timer	typeref:typename:const struct timespec *	file:
nowait	engines/io_uring.c	/^	unsigned int nowait;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
nowait	engines/libaio.c	/^	unsigned int nowait;$/;"	m	struct:libaio_options	typeref:typename:unsigned int	file:
nowait	engines/sync.c	/^	unsigned int nowait;$/;"	m	struct:psyncv2_options	typeref:typename:unsigned int	file:
nowarn_snprintf	lib/nowarn_snprintf.h	/^static inline int nowarn_snprintf(char *str, size_t size, const char *format,$/;"	f	typeref:typename:int
np	tools/hist/fiologparser_hist.py	/^import numpy as np$/;"	I	nameref:module:numpy
nr	engines/io_uring.c	/^static void fio_ioring_queued(struct thread_data *td, int start, int nr)$/;"	z	function:fio_ioring_queued	typeref:typename:int	file:
nr	engines/libaio.c	/^			      unsigned int nr)$/;"	z	function:fio_libaio_queued	typeref:typename:unsigned int	file:
nr	engines/libaio.c	/^	unsigned nr;		 \/** number of io_events *\/$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
nr	engines/rdma.c	/^			      unsigned int nr)$/;"	z	function:fio_rdmaio_queued	typeref:typename:unsigned int	file:
nr	engines/rdma.c	/^			   unsigned int nr)$/;"	z	function:fio_rdmaio_recv	typeref:typename:unsigned int	file:
nr	engines/rdma.c	/^			   unsigned int nr)$/;"	z	function:fio_rdmaio_send	typeref:typename:unsigned int	file:
nr	engines/rdma.c	/^	uint32_t nr;		\/* client: io depth$/;"	m	struct:rdma_info_blk	typeref:typename:uint32_t	file:
nr	engines/sg.c	/^	int nr;$/;"	m	struct:sgio_cmd	typeref:typename:int	file:
nr	engines/solarisaio.c	/^	unsigned int nr;$/;"	m	struct:solarisaio_data	typeref:typename:unsigned int	file:
nr	gclient.c	/^				       unsigned long long nr, const char *type)$/;"	z	function:gfio_show_clat_percentiles	typeref:typename:unsigned long long	file:
nr	goptions.c	/^	unsigned int nr;$/;"	m	struct:gopt_frame_widget	typeref:typename:unsigned int	file:
nr	io_u.c	/^		     int nr)$/;"	z	function:init_icd	typeref:typename:int	file:
nr	io_u.c	/^	int nr;				\/* input *\/$/;"	m	struct:io_completion_data	typeref:typename:int	file:
nr	io_u.c	/^static void __io_u_mark_map(uint64_t *map, unsigned int nr)$/;"	z	function:__io_u_mark_map	typeref:typename:unsigned int	file:
nr	io_u.c	/^void io_u_mark_complete(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_complete	typeref:typename:unsigned int	file:
nr	io_u.c	/^void io_u_mark_depth(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_depth	typeref:typename:unsigned int	file:
nr	io_u.c	/^void io_u_mark_submit(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_submit	typeref:typename:unsigned int	file:
nr	io_u_queue.c	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared)$/;"	z	function:io_u_qinit	typeref:typename:unsigned int	file:
nr	io_u_queue.c	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr)$/;"	z	function:io_u_rinit	typeref:typename:unsigned int	file:
nr	io_u_queue.h	/^	unsigned int nr;$/;"	m	struct:io_u_queue	typeref:typename:unsigned int
nr	io_u_queue.h	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared);$/;"	z	prototype:io_u_qinit	typeref:typename:unsigned int	file:
nr	io_u_queue.h	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr);$/;"	z	prototype:io_u_rinit	typeref:typename:unsigned int	file:
nr	libfio.c	/^const char *fio_get_arch_string(int nr)$/;"	z	function:fio_get_arch_string	typeref:typename:int	file:
nr	libfio.c	/^const char *fio_get_os_string(int nr)$/;"	z	function:fio_get_os_string	typeref:typename:int	file:
nr	os/linux/io_uring.h	/^	__u32 nr;$/;"	m	struct:io_uring_rsrc_register	typeref:typename:__u32
nr	os/linux/io_uring.h	/^	__u32 nr;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__u32
nr	stat.c	/^			  uint64_t *src, int nr)$/;"	z	function:stat_calc_lat	typeref:typename:int	file:
nr	stat.c	/^static bool show_lat(double *io_u_lat, int nr, const char **ranges,$/;"	z	function:show_lat	typeref:typename:int	file:
nr	stat.c	/^static void show_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	z	function:show_clat_percentiles	typeref:typename:unsigned long long	file:
nr	stat.c	/^unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long long	file:
nr	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:unsigned long long	file:
nr	t/axmap.c	/^	unsigned int nr;$/;"	m	struct:overlap_test	typeref:typename:unsigned int	file:
nr	t/btrace2fio.c	/^	unsigned int nr;$/;"	m	struct:bs	typeref:typename:unsigned int	file:
nr	t/io_uring.c	/^static void add_stat(struct submitter *s, int clock_index, int nr)$/;"	z	function:add_stat	typeref:typename:int	file:
nr	t/io_uring.c	/^static void show_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	z	function:show_clat_percentiles	typeref:typename:unsigned long	file:
nr	t/io_uring.c	/^unsigned int calc_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long	file:
nr	t/read-to-pipe-async.c	/^static unsigned int calc_percentiles(unsigned int *io_u_plat, unsigned long nr,$/;"	z	function:calc_percentiles	typeref:typename:unsigned long	file:
nr	thread_options.h	/^	unsigned int nr;$/;"	m	struct:split	typeref:typename:unsigned int
nr_bits	lib/axmap.c	/^			  unsigned int nr_bits)$/;"	z	function:axmap_set_nr	typeref:typename:unsigned int	file:
nr_bits	lib/axmap.c	/^	uint64_t nr_bits;$/;"	m	struct:axmap	typeref:typename:uint64_t	file:
nr_bits	lib/axmap.c	/^	unsigned int nr_bits;$/;"	m	struct:axmap_set_data	typeref:typename:unsigned int	file:
nr_bits	lib/axmap.c	/^struct axmap *axmap_new(uint64_t nr_bits)$/;"	z	function:axmap_new	typeref:typename:uint64_t	file:
nr_bits	lib/axmap.h	/^struct axmap *axmap_new(uint64_t nr_bits);$/;"	z	prototype:axmap_new	typeref:typename:uint64_t	file:
nr_bits	lib/axmap.h	/^unsigned int axmap_set_nr(struct axmap *axmap, uint64_t bit_nr, unsigned int nr_bits);$/;"	z	prototype:axmap_set_nr	typeref:typename:unsigned int	file:
nr_block_infos	stat.c	/^static int calc_block_percentiles(int nr_block_infos, uint32_t *block_infos,$/;"	z	function:calc_block_percentiles	typeref:typename:int	file:
nr_block_infos	stat.c	/^static void show_block_infos(int nr_block_infos, uint32_t *block_infos,$/;"	z	function:show_block_infos	typeref:typename:int	file:
nr_block_infos	stat.h	/^	uint64_t nr_block_infos;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
nr_blocks	engines/sg.c	/^			    unsigned long long nr_blocks, bool override16)$/;"	z	function:fio_sgio_rw_lba	typeref:typename:unsigned long long	file:
nr_blocks	smalloc.c	/^			 unsigned int idx, size_t nr_blocks)$/;"	z	function:clear_blocks	typeref:typename:size_t	file:
nr_blocks	smalloc.c	/^		       unsigned int idx, size_t nr_blocks)$/;"	z	function:blocks_free	typeref:typename:size_t	file:
nr_blocks	smalloc.c	/^		       unsigned int idx, size_t nr_blocks)$/;"	z	function:set_blocks	typeref:typename:size_t	file:
nr_blocks	smalloc.c	/^		       unsigned int idx, size_t nr_blocks,$/;"	z	function:blocks_iter	typeref:typename:size_t	file:
nr_blocks	smalloc.c	/^	size_t nr_blocks;			\/* total blocks *\/$/;"	m	struct:pool	typeref:typename:size_t	file:
nr_bs	t/btrace2fio.c	/^	unsigned int nr_bs[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:unsigned int[]	file:
nr_bsap	t/btrace2fio.c	/^static void merge_bs(struct bs **bsap, unsigned int *nr_bsap,$/;"	z	function:merge_bs	typeref:typename:unsigned int *	file:
nr_bsb	t/btrace2fio.c	/^		     struct bs *bsb, unsigned int nr_bsb)$/;"	z	function:merge_bs	typeref:typename:unsigned int	file:
nr_bsprios	engines/cmdprio.h	/^	unsigned int nr_bsprios;$/;"	m	struct:cmdprio_bsprio_desc	typeref:typename:unsigned int
nr_clat_prio	stat.h	/^	uint32_t nr_clat_prio[DDIR_RWDIR_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint32_t[]
nr_clients	init.c	/^int nr_clients = 0;$/;"	v	typeref:typename:int
nr_completed	engines/nbd.c	/^	size_t nr_completed;$/;"	m	struct:nbd_data	typeref:typename:size_t	file:
nr_cpus	idletime.h	/^	int nr_cpus;$/;"	m	struct:idle_prof_common	typeref:typename:int
nr_done_files	fio.h	/^	unsigned int nr_done_files;$/;"	m	struct:thread_data	typeref:typename:unsigned int
nr_du	gfio.h	/^	unsigned int nr_du;$/;"	m	struct:gfio_client	typeref:typename:unsigned int
nr_entries	engines/cmdprio.c	/^	int nr_entries;$/;"	m	struct:cmdprio_parse_result	typeref:typename:int	file:
nr_entries	gettime.c	/^	unsigned long nr_entries;$/;"	m	struct:clock_thread	typeref:typename:unsigned long	file:
nr_entries	options.c	/^			  int *nr_entries, char *str)$/;"	z	function:split_parse_prio_ddir	typeref:typename:int *	file:
nr_entries	thread_options.h	/^				 struct split_prio **entries, int *nr_entries,$/;"	z	prototype:split_parse_prio_ddir	typeref:typename:int *	file:
nr_events	engines/libiscsi.c	/^	int			  nr_events;$/;"	m	struct:iscsi_info	typeref:typename:int	file:
nr_files	client.h	/^	unsigned int nr_files;$/;"	m	struct:fio_client	typeref:typename:unsigned int
nr_files	t/btrace2fio.c	/^	int nr_files;$/;"	m	struct:btrace_pid	typeref:typename:int	file:
nr_files	t/io_uring.c	/^	unsigned nr_files;$/;"	m	struct:submitter	typeref:typename:unsigned	file:
nr_files	thread_options.h	/^	uint32_t nr_files;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
nr_files	thread_options.h	/^	unsigned int nr_files;$/;"	m	struct:thread_options	typeref:typename:unsigned int
nr_iter	blktrace.h	/^	int			nr_iter; \/\/ number of iterations to run$/;"	m	struct:blktrace_cursor	typeref:typename:int
nr_job_sections	init.c	/^static int nr_job_sections;$/;"	v	typeref:typename:int	file:
nr_levels	lib/axmap.c	/^	unsigned int nr_levels;$/;"	m	struct:axmap	typeref:typename:unsigned int	file:
nr_logs	blktrace.c	/^				 int nr_logs, int def, size_t off)$/;"	z	function:init_merge_param_list	typeref:typename:int	file:
nr_logs	blktrace.c	/^static int find_earliest_io(struct blktrace_cursor *bcs, int nr_logs)$/;"	z	function:find_earliest_io	typeref:typename:int	file:
nr_logs	blktrace.c	/^static void merge_finish_file(struct blktrace_cursor *bcs, int i, int *nr_logs)$/;"	z	function:merge_finish_file	typeref:typename:int *	file:
nr_luns	engines/libiscsi.c	/^	int			  nr_luns;$/;"	m	struct:iscsi_info	typeref:typename:int	file:
nr_merge_pids	t/btrace2fio.c	/^	unsigned int nr_merge_pids;$/;"	m	struct:btrace_pid	typeref:typename:unsigned int	file:
nr_open_files	fio.h	/^	unsigned int nr_open_files;$/;"	m	struct:thread_data	typeref:typename:unsigned int
nr_pools	smalloc.c	/^static unsigned int nr_pools;$/;"	v	typeref:typename:unsigned int	file:
nr_prios	engines/cmdprio.c	/^	int nr_prios;$/;"	m	struct:cmdprio_values	typeref:typename:int	file:
nr_prios	engines/cmdprio.c	/^static int find_clat_prio_index(unsigned int *all_prios, int nr_prios,$/;"	z	function:find_clat_prio_index	typeref:typename:int	file:
nr_prios	engines/cmdprio.h	/^	unsigned int nr_prios;$/;"	m	struct:cmdprio_bsprio	typeref:typename:unsigned int
nr_prios	stat.c	/^			      int nr_prios)$/;"	z	function:alloc_clat_prio_stat_ddir	typeref:typename:int	file:
nr_process	backend.c	/^static unsigned int nr_process = 0;$/;"	v	typeref:typename:unsigned int	file:
nr_results	gfio.h	/^	unsigned int nr_results;$/;"	m	struct:gfio_client	typeref:typename:unsigned int
nr_running	backend.c	/^static void reap_threads(unsigned int *nr_running, uint64_t *t_rate,$/;"	z	function:reap_threads	typeref:typename:unsigned int *	file:
nr_samples	iolog.c	/^	uint32_t nr_samples;$/;"	m	struct:iolog_flush_data	typeref:typename:uint32_t	file:
nr_samples	iolog.h	/^	uint64_t nr_samples;$/;"	m	struct:io_logs	typeref:typename:uint64_t
nr_samples	server.h	/^	uint64_t nr_samples;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint64_t
nr_samples	t/read-to-pipe-async.c	/^	unsigned int nr_samples;$/;"	m	struct:stats	typeref:typename:unsigned int	file:
nr_sectors	engines/libzbc.c	/^	uint64_t		nr_sectors;$/;"	m	struct:libzbc_data	typeref:typename:uint64_t	file:
nr_segments	backend.c	/^unsigned int nr_segments = 0;$/;"	v	typeref:typename:unsigned int
nr_slices	profiles/act.c	/^	unsigned int nr_slices;$/;"	m	struct:act_prof_data	typeref:typename:unsigned int	file:
nr_slices	profiles/act.c	/^	unsigned int nr_slices;$/;"	m	struct:act_run_data	typeref:typename:unsigned int	file:
nr_stat	client.h	/^	unsigned int nr_stat;$/;"	m	struct:fio_client	typeref:typename:unsigned int
nr_thread	backend.c	/^static unsigned int nr_thread = 0;$/;"	v	typeref:typename:unsigned int	file:
nr_threads	fio.h	/^	int nr_threads;$/;"	m	struct:thread_segment	typeref:typename:int
nr_ts	stat.c	/^static void init_per_prio_stats(struct thread_stat *threadstats, int nr_ts)$/;"	z	function:init_per_prio_stats	typeref:typename:int	file:
nr_verify_threads	fio.h	/^	unsigned int nr_verify_threads;$/;"	m	struct:thread_data	typeref:typename:unsigned int
nr_zone_resets	stat.h	/^	uint64_t nr_zone_resets;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
nr_zones	engines/libzbc.c	/^			       unsigned int nr_zones)$/;"	z	function:libzbc_report_zones	typeref:typename:unsigned int	file:
nr_zones	engines/skeleton_external.c	/^				     unsigned int nr_zones)$/;"	z	function:fio_skeleton_report_zones	typeref:typename:unsigned int	file:
nr_zones	engines/xnvme.c	/^				   struct zbd_zone *zbdz, unsigned int nr_zones)$/;"	z	function:xnvme_fioe_report_zones	typeref:typename:unsigned int	file:
nr_zones	oslib/blkzoned.h	/^				struct zbd_zone *zones, unsigned int nr_zones)$/;"	z	function:blkzoned_report_zones	typeref:typename:unsigned int	file:
nr_zones	oslib/blkzoned.h	/^				struct zbd_zone *zones, unsigned int nr_zones);$/;"	z	prototype:blkzoned_report_zones	typeref:typename:unsigned int	file:
nr_zones	oslib/linux-blkzoned.c	/^			  unsigned int nr_zones)$/;"	z	function:blkzoned_report_zones	typeref:typename:unsigned int	file:
nr_zones	oslib/linux-blkzoned.c	/^	__u32	nr_zones;$/;"	m	struct:blk_zone_report_v2	typeref:typename:__u32	file:
nr_zones	zbd.c	/^			    unsigned int nr_zones)$/;"	z	function:zbd_report_zones	typeref:typename:unsigned int	file:
nr_zones	zbd.h	/^	uint32_t		nr_zones;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
nranges	lib/gauss.c	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	function:gauss_init	typeref:typename:unsigned long	file:
nranges	lib/gauss.h	/^	uint64_t nranges;$/;"	m	struct:gauss_state	typeref:typename:uint64_t
nranges	lib/gauss.h	/^void gauss_init(struct gauss_state *gs, unsigned long nranges, double dev,$/;"	z	prototype:gauss_init	typeref:typename:unsigned long	file:
nranges	lib/zipf.c	/^static void shared_rand_init(struct zipf_state *zs, uint64_t nranges,$/;"	z	function:shared_rand_init	typeref:typename:uint64_t	file:
nranges	lib/zipf.c	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	function:pareto_init	typeref:typename:uint64_t	file:
nranges	lib/zipf.c	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	function:zipf_init	typeref:typename:uint64_t	file:
nranges	lib/zipf.h	/^	uint64_t nranges;$/;"	m	struct:zipf_state	typeref:typename:uint64_t
nranges	lib/zipf.h	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	prototype:pareto_init	typeref:typename:uint64_t	file:
nranges	lib/zipf.h	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	prototype:zipf_init	typeref:typename:uint64_t	file:
nranges	t/genzipf.c	/^			  unsigned long nranges)$/;"	z	function:output_normal	typeref:typename:unsigned long	file:
nranges	t/genzipf.c	/^	unsigned int nranges;$/;"	m	struct:output_sum	typeref:typename:unsigned int	file:
ns_granularity	time.c	/^static unsigned long ns_granularity;$/;"	v	typeref:typename:unsigned long	file:
nsec	io_u.c	/^static void io_u_mark_lat_nsec(struct thread_data *td, unsigned long long nsec)$/;"	z	function:io_u_mark_lat_nsec	typeref:typename:unsigned long long	file:
nsec	io_u.c	/^static void io_u_mark_latency(struct thread_data *td, unsigned long long nsec)$/;"	z	function:io_u_mark_latency	typeref:typename:unsigned long long	file:
nsec	profiles/act.c	/^static int act_io_u_lat(struct thread_data *td, uint64_t nsec)$/;"	z	function:act_io_u_lat	typeref:typename:uint64_t	file:
nsec	stat.c	/^					     unsigned long long nsec,$/;"	z	function:add_lat_percentile_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^					unsigned long long nsec)$/;"	z	function:add_stat_prio_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^		     unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_clat_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^		     unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_slat_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^		    unsigned long long nsec, unsigned long long bs,$/;"	z	function:add_lat_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^add_lat_percentile_prio_sample(struct thread_stat *ts, unsigned long long nsec,$/;"	z	function:add_lat_percentile_prio_sample	typeref:typename:unsigned long long	file:
nsec	stat.c	/^void add_sync_clat_sample(struct thread_stat *ts, unsigned long long nsec)$/;"	z	function:add_sync_clat_sample	typeref:typename:unsigned long long	file:
nsec	stat.h	/^				unsigned long long nsec);$/;"	z	prototype:add_sync_clat_sample	typeref:typename:unsigned long long	file:
nsec_per_usec	tools/hist/fio-histo-log-pctiles.py	/^nsec_per_usec = 1000$/;"	v
nsec_to_msec	stat.h	/^static inline bool nsec_to_msec(unsigned long long *min,$/;"	f	typeref:typename:bool
nsec_to_usec	stat.h	/^static inline bool nsec_to_usec(unsigned long long *min,$/;"	f	typeref:typename:bool
nsecs	t/time-test.c	/^static unsigned long long *nsecs;$/;"	v	typeref:typename:unsigned long long *	file:
nsecs_for_max_cycles	gettime.c	/^static unsigned long long nsecs_for_max_cycles;$/;"	v	typeref:typename:unsigned long long	file:
nsecs_for_max_cycles	t/time-test.c	/^static unsigned long long nsecs_for_max_cycles;$/;"	v	typeref:typename:unsigned long long	file:
nthreads	profiles/tiobench.c	/^	unsigned int nthreads;$/;"	m	struct:tiobench_options	typeref:typename:unsigned int	file:
nthreads	profiles/tiobench.c	/^static unsigned int nthreads = 1;$/;"	v	typeref:typename:unsigned int	file:
nthreads	t/io_uring.c	/^static int nthreads = 1;$/;"	v	typeref:typename:int	file:
nticks	graph.c	/^	double minx, double maxx, int nticks, int add_tm_text)$/;"	z	function:graph_draw_x_ticks	typeref:typename:int	file:
nticks	graph.c	/^	double miny, double maxy, int nticks, int add_tm_text)$/;"	z	function:graph_draw_y_ticks	typeref:typename:int	file:
nticks	tickmarks.c	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	function:calc_tickmarks	typeref:typename:int	file:
nticks	tickmarks.c	/^static void shorten(struct tickmark *tm, int nticks, int *power_of_ten,$/;"	z	function:shorten	typeref:typename:int	file:
nticks	tickmarks.h	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	prototype:calc_tickmarks	typeref:typename:int	file:
ntime_since	fio_time.h	/^extern uint64_t ntime_since(const struct timespec *, const struct timespec *);$/;"	p	typeref:typename:uint64_t
ntime_since	gettime.c	/^uint64_t ntime_since(const struct timespec *s, const struct timespec *e)$/;"	f	typeref:typename:uint64_t
ntime_since_now	fio_time.h	/^extern uint64_t ntime_since_now(const struct timespec *);$/;"	p	typeref:typename:uint64_t
ntime_since_now	gettime.c	/^uint64_t ntime_since_now(const struct timespec *s)$/;"	f	typeref:typename:uint64_t
null_cleanup	engines/null.c	/^static void null_cleanup(struct null_data *nd)$/;"	f	typeref:typename:void	file:
null_commit	engines/null.c	/^static int null_commit(struct thread_data *td, struct null_data *nd)$/;"	f	typeref:typename:int	file:
null_data	engines/null.c	/^struct null_data {$/;"	s	file:
null_event	engines/null.c	/^static struct io_u *null_event(struct null_data *nd, int event)$/;"	f	typeref:struct:io_u *	file:
null_getevents	engines/null.c	/^static int null_getevents(struct null_data *nd, unsigned int min_events,$/;"	f	typeref:typename:int	file:
null_init	engines/null.c	/^static struct null_data *null_init(struct thread_data *td)$/;"	f	typeref:struct:null_data *	file:
null_open	engines/null.c	/^static int null_open(struct null_data fio_unused *nd,$/;"	f	typeref:typename:int	file:
null_queue	engines/null.c	/^static enum fio_q_status null_queue(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
num	gclient.c	/^					  int num)$/;"	z	function:gfio_output_lat_buckets	typeref:typename:int	file:
num	init.c	/^			 const char *logname, unsigned int num,$/;"	z	function:gen_log_name	typeref:typename:unsigned int	file:
num	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	z	function:num2str	typeref:typename:uint64_t	file:
num	unittests/lib/num2str.c	/^	uint64_t num;$/;"	m	struct:testcase	typeref:typename:uint64_t	file:
num	verify-state.h	/^					 int num)$/;"	z	function:verify_state_gen_name	typeref:typename:int	file:
num	verify.c	/^static int open_state_file(const char *name, const char *prefix, int num,$/;"	z	function:open_state_file	typeref:typename:int	file:
num2str	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	f	typeref:typename:char *
num2str	lib/num2str.h	/^extern char *num2str(uint64_t, int, int, int, enum n2s_unit);$/;"	p	typeref:typename:char *
num_blocks	engines/libiscsi.c	/^	uint64_t		 num_blocks;$/;"	m	struct:iscsi_lun	typeref:typename:uint64_t	file:
num_ios	engines/dfs.c	/^	int		num_ios;$/;"	m	struct:daos_data	typeref:typename:int	file:
num_open_zones	fio.h	/^	unsigned int num_open_zones;$/;"	m	struct:thread_data	typeref:typename:unsigned int
num_open_zones	zbd.h	/^	uint32_t		num_open_zones;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
num_opts	options.c	/^int fio_options_parse(struct thread_data *td, char **opts, int num_opts)$/;"	z	function:fio_options_parse	typeref:typename:int	file:
num_opts	options.c	/^static char **dup_and_sub_options(char **opts, int num_opts)$/;"	z	function:dup_and_sub_options	typeref:typename:int	file:
num_opts	parse.c	/^void sort_options(char **opts, const struct fio_option *options, int num_opts)$/;"	z	function:sort_options	typeref:typename:int	file:
num_read_blocks	profiles/act.c	/^	unsigned int num_read_blocks;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
num_threads	engines/dfs.c	/^static int		num_threads;$/;"	v	typeref:typename:int	file:
num_threads	t/dedupe.c	/^static unsigned int num_threads;$/;"	v	typeref:typename:unsigned int	file:
num_timers	helper_thread.c	/^static int reset_timers(struct interval_timer timer[], int num_timers,$/;"	z	function:reset_timers	typeref:typename:int	file:
num_unique_pages	fio.h	/^	unsigned long long num_unique_pages;$/;"	m	struct:thread_data	typeref:typename:unsigned long long
num_vals	lib/lfsr.h	/^	uint64_t num_vals;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
numa_cpunodes	thread_options.h	/^	char *numa_cpunodes;$/;"	m	struct:thread_options	typeref:typename:char *
numa_mem_mode	thread_options.h	/^	unsigned short numa_mem_mode;$/;"	m	struct:thread_options	typeref:typename:unsigned short
numa_mem_prefer_node	thread_options.h	/^	unsigned int numa_mem_prefer_node;$/;"	m	struct:thread_options	typeref:typename:unsigned int
numa_memnodes	thread_options.h	/^	char *numa_memnodes;$/;"	m	struct:thread_options	typeref:typename:char *
number	json.c	/^static struct json_value *json_create_value_float(double number)$/;"	z	function:json_create_value_float	typeref:typename:double	file:
number	json.c	/^static struct json_value *json_create_value_int(long long number)$/;"	z	function:json_create_value_int	typeref:typename:long long	file:
number_ios	thread_options.h	/^	uint64_t number_ios;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
number_ios	thread_options.h	/^	unsigned long long number_ios;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
numberio	io_u.h	/^	unsigned short numberio;$/;"	m	struct:io_u	typeref:typename:unsigned short
numberio	iolog.h	/^	unsigned short numberio;$/;"	m	struct:io_piece	typeref:typename:unsigned short
numberio	verify-state.h	/^	uint64_t numberio;$/;"	m	struct:thread_io_list	typeref:typename:uint64_t
numberio	verify.h	/^	uint16_t numberio;$/;"	m	struct:verify_header	typeref:typename:uint16_t
numjob	filesetup.c	/^int add_file(struct thread_data *td, const char *fname, int numjob, int inc)$/;"	z	function:add_file	typeref:typename:int	file:
numjobs	t/btrace2fio.c	/^	int numjobs;$/;"	m	struct:btrace_pid	typeref:typename:int	file:
numjobs	thread_options.h	/^	uint32_t numjobs;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
numjobs	thread_options.h	/^	unsigned int numjobs;$/;"	m	struct:thread_options	typeref:typename:unsigned int
numjobs	tools/fiograph/fiograph.conf	/^[numjobs]$/;"	s
nums	lib/lfsr.c	/^int lfsr_init(struct fio_lfsr *fl, uint64_t nums, uint64_t seed,$/;"	z	function:lfsr_init	typeref:typename:uint64_t	file:
nwords	lib/bloom.c	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords)$/;"	z	function:bloom_set	typeref:typename:unsigned int	file:
nwords	lib/bloom.h	/^bool bloom_set(struct bloom *b, uint32_t *data, unsigned int nwords);$/;"	z	prototype:bloom_set	typeref:typename:unsigned int	file:
o	backend.c	/^static int exec_string(struct thread_options *o, const char *string,$/;"	z	function:exec_string	typeref:struct:thread_options *	file:
o	blktrace.c	/^static void t_bytes_align(struct thread_options *o, struct blk_io_trace *t)$/;"	z	function:t_bytes_align	typeref:struct:thread_options *	file:
o	cconv.c	/^				   struct thread_options *o)$/;"	z	function:convert_thread_options_to_net	typeref:struct:thread_options *	file:
o	cconv.c	/^static void free_thread_options_to_cpu(struct thread_options *o)$/;"	z	function:free_thread_options_to_cpu	typeref:struct:thread_options *	file:
o	cconv.c	/^void convert_thread_options_to_cpu(struct thread_options *o,$/;"	z	function:convert_thread_options_to_cpu	typeref:struct:thread_options *	file:
o	client.c	/^			      struct thread_options *o, uint64_t *tag)$/;"	z	function:fio_client_update_options	typeref:struct:thread_options *	file:
o	engines/exec.c	/^char *expand_variables(struct thread_options *o, char *arguments)$/;"	z	function:expand_variables	typeref:struct:thread_options *	file:
o	engines/exec.c	/^static int exec_background(struct thread_options *o, struct exec_options *eo)$/;"	z	function:exec_background	typeref:struct:thread_options *	file:
o	engines/http.c	/^static void _add_aws_auth_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_aws_auth_header	typeref:struct:http_options *	file:
o	engines/http.c	/^static void _add_swift_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_swift_header	typeref:struct:http_options *	file:
o	engines/libcufile.c	/^					  struct libcufile_options *o,$/;"	z	function:fio_libcufile_post_read	typeref:struct:libcufile_options *	file:
o	engines/libcufile.c	/^					  struct libcufile_options *o,$/;"	z	function:fio_libcufile_pre_write	typeref:struct:libcufile_options *	file:
o	engines/net.c	/^static inline int is_ipv6(struct netio_options *o)$/;"	z	function:is_ipv6	typeref:struct:netio_options *	file:
o	engines/net.c	/^static inline int is_tcp(struct netio_options *o)$/;"	z	function:is_tcp	typeref:struct:netio_options *	file:
o	engines/net.c	/^static inline int is_udp(struct netio_options *o)$/;"	z	function:is_udp	typeref:struct:netio_options *	file:
o	engines/nfs.c	/^static int queue_read(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	z	function:queue_read	typeref:struct:fio_libnfs_options *	file:
o	engines/nfs.c	/^static int queue_write(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	z	function:queue_write	typeref:struct:fio_libnfs_options *	file:
o	engines/windowsaio.c	/^	OVERLAPPED o;$/;"	m	struct:fio_overlapped	typeref:typename:OVERLAPPED	file:
o	fio.h	/^	struct thread_options o;$/;"	m	struct:thread_data	typeref:struct:thread_options
o	gfio.h	/^	struct thread_options o;$/;"	m	struct:gfio_client_options	typeref:struct:thread_options
o	goptions.c	/^					   struct fio_option *o,$/;"	z	function:__gopt_new_combo	typeref:struct:fio_option *	file:
o	goptions.c	/^					  struct fio_option *o)$/;"	z	function:gopt_handle_combo_int_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^					  struct fio_option *o)$/;"	z	function:gopt_handle_combo_str_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^					  struct fio_option *o)$/;"	z	function:gopt_handle_str_multi_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^					struct fio_option *o)$/;"	z	function:gopt_handle_str_val_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o, const char *text,$/;"	z	function:gopt_new_combo_str	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o, const char *text,$/;"	z	function:gopt_new_str_store	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o, unsigned int **ip,$/;"	z	function:gopt_new_int_range	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o, unsigned int *ip,$/;"	z	function:gopt_new_combo_int	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o, unsigned int idx)$/;"	z	function:gopt_new_str_multi	typeref:struct:fio_option *	file:
o	goptions.c	/^				       struct fio_option *o,$/;"	z	function:__gopt_new_int	typeref:struct:fio_option *	file:
o	goptions.c	/^				      struct fio_option *o)$/;"	z	function:gopt_handle_range_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^				     struct fio_option *o,$/;"	z	function:gopt_new_str_val	typeref:struct:fio_option *	file:
o	goptions.c	/^				     struct gopt_bool *b, struct fio_option *o)$/;"	z	function:gopt_handle_bool_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^				    struct fio_option *o, unsigned long long *p,$/;"	z	function:gopt_new_ullong	typeref:struct:fio_option *	file:
o	goptions.c	/^				    struct gopt_int *i, struct fio_option *o)$/;"	z	function:gopt_handle_int_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^				    struct gopt_str *s, struct fio_option *o)$/;"	z	function:gopt_handle_str_changed	typeref:struct:fio_option *	file:
o	goptions.c	/^				  struct fio_option *o, unsigned int *val,$/;"	z	function:gopt_new_bool	typeref:struct:fio_option *	file:
o	goptions.c	/^				 struct fio_option *o, unsigned int *ip,$/;"	z	function:gopt_new_int	typeref:struct:fio_option *	file:
o	goptions.c	/^			    struct fio_option *o, unsigned int opt_index,$/;"	z	function:gopt_add_option	typeref:struct:fio_option *	file:
o	goptions.c	/^	struct thread_options *o;$/;"	m	struct:gopt_job_view	typeref:struct:thread_options *	file:
o	goptions.c	/^static void gopt_set_option(struct gopt_job_view *gjv, struct fio_option *o,$/;"	z	function:gopt_set_option	typeref:struct:fio_option *	file:
o	init.c	/^static bool wait_for_ok(const char *jobname, struct thread_options *o)$/;"	z	function:wait_for_ok	typeref:struct:thread_options *	file:
o	init.c	/^static char *make_filename(char *buf, size_t buf_size,struct thread_options *o,$/;"	z	function:make_filename	typeref:struct:thread_options *	file:
o	init.c	/^static int fixed_block_size(struct thread_options *o)$/;"	z	function:fixed_block_size	typeref:struct:thread_options *	file:
o	init.c	/^void add_job_opts(const char **o, int client_type)$/;"	z	function:add_job_opts	typeref:typename:const char **	file:
o	init.c	/^void options_default_fill(struct thread_options *o)$/;"	z	function:options_default_fill	typeref:struct:thread_options *	file:
o	options.c	/^bool __fio_option_is_set(struct thread_options *o, unsigned int off1)$/;"	z	function:__fio_option_is_set	typeref:struct:thread_options *	file:
o	options.c	/^int add_option(const struct fio_option *o)$/;"	z	function:add_option	typeref:typename:const struct fio_option *	file:
o	options.c	/^int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	z	function:split_parse_ddir	typeref:struct:thread_options *	file:
o	options.c	/^int split_parse_prio_ddir(struct thread_options *o, struct split_prio **entries,$/;"	z	function:split_parse_prio_ddir	typeref:struct:thread_options *	file:
o	options.c	/^static int bssplit_ddir(struct thread_options *o, void *eo,$/;"	z	function:bssplit_ddir	typeref:struct:thread_options *	file:
o	options.c	/^static int gtod_cpu_verify(const struct fio_option *o, void *data)$/;"	z	function:gtod_cpu_verify	typeref:typename:const struct fio_option *	file:
o	options.c	/^static int opt_is_set(struct thread_options *o, struct fio_option *opt)$/;"	z	function:opt_is_set	typeref:struct:thread_options *	file:
o	options.c	/^static int parse_cmdprio_bssplit_entry(struct thread_options *o,$/;"	z	function:parse_cmdprio_bssplit_entry	typeref:struct:thread_options *	file:
o	options.c	/^static int rw_verify(const struct fio_option *o, void *data)$/;"	z	function:rw_verify	typeref:typename:const struct fio_option *	file:
o	options.c	/^static int zone_split_ddir(struct thread_options *o, void *eo,$/;"	z	function:zone_split_ddir	typeref:struct:thread_options *	file:
o	options.c	/^static void add_to_lopt(struct option *lopt, struct fio_option *o,$/;"	z	function:add_to_lopt	typeref:struct:fio_option *	file:
o	options.c	/^void fio_option_mark_set(struct thread_options *o, const struct fio_option *opt)$/;"	z	function:fio_option_mark_set	typeref:struct:thread_options *	file:
o	options.h	/^static inline bool o_match(const struct fio_option *o, const char *opt)$/;"	z	function:o_match	typeref:typename:const struct fio_option *	file:
o	parse.c	/^					   const struct fio_option *o)$/;"	z	function:find_child	typeref:typename:const struct fio_option *	file:
o	parse.c	/^		 const struct fio_option **o, void *data,$/;"	z	function:parse_option	typeref:typename:const struct fio_option **	file:
o	parse.c	/^static bool val_too_large(const struct fio_option *o, unsigned long long val,$/;"	z	function:val_too_large	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static bool val_too_small(const struct fio_option *o, unsigned long long val,$/;"	z	function:val_too_small	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static const char *opt_type_name(const struct fio_option *o)$/;"	z	function:opt_type_name	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static int __handle_option(const struct fio_option *o, const char *ptr,$/;"	z	function:__handle_option	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static int handle_option(const struct fio_option *o, const char *__ptr,$/;"	z	function:handle_option	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void __print_option(const struct fio_option *o,$/;"	z	function:__print_option	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void add_to_dump_list(const struct fio_option *o,$/;"	z	function:add_to_dump_list	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void option_init(struct fio_option *o)$/;"	z	function:option_init	typeref:struct:fio_option *	file:
o	parse.c	/^static void posval_sort(const struct fio_option *o, struct value_pair *vpmap)$/;"	z	function:posval_sort	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void print_option(const struct fio_option *o)$/;"	z	function:print_option	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void show_option_help(const struct fio_option *o, int is_err)$/;"	z	function:show_option_help	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void show_option_range(const struct fio_option *o,$/;"	z	function:show_option_range	typeref:typename:const struct fio_option *	file:
o	parse.c	/^static void show_option_values(const struct fio_option *o)$/;"	z	function:show_option_values	typeref:typename:const struct fio_option *	file:
o	parse.h	/^static inline void *td_var(void *to, const struct fio_option *o,$/;"	z	function:td_var	typeref:typename:const struct fio_option *	file:
o	t/btrace2fio.c	/^	struct btrace_out o;$/;"	m	struct:btrace_pid	typeref:struct:btrace_out	file:
o	t/btrace2fio.c	/^static int prune_entry(struct btrace_out *o)$/;"	z	function:prune_entry	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static uint64_t o_first_ttime(struct btrace_out *o)$/;"	z	function:o_first_ttime	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static uint64_t o_longest_ttime(struct btrace_out *o)$/;"	z	function:o_longest_ttime	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static unsigned long o_to_kib_rate(struct btrace_out *o, int rw)$/;"	z	function:o_to_kib_rate	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static void __add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:__add_bs	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static void add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:add_bs	typeref:struct:btrace_out *	file:
o	t/btrace2fio.c	/^static void remove_ddir(struct btrace_out *o, int rw)$/;"	z	function:remove_ddir	typeref:struct:btrace_out *	file:
o	thread_options.h	/^extern int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	z	prototype:split_parse_ddir	typeref:struct:thread_options *	file:
o	thread_options.h	/^extern int split_parse_prio_ddir(struct thread_options *o,$/;"	z	prototype:split_parse_prio_ddir	typeref:struct:thread_options *	file:
o	thread_options.h	/^extern void convert_thread_options_to_cpu(struct thread_options *o, struct thread_options_pack */;"	z	prototype:convert_thread_options_to_cpu	typeref:struct:thread_options *	file:
o	thread_options.h	/^extern void options_default_fill(struct thread_options *o);$/;"	z	prototype:options_default_fill	typeref:struct:thread_options *	file:
o	verify.c	/^static void __fill_buffer(struct thread_options *o, uint64_t seed, void *p,$/;"	z	function:__fill_buffer	typeref:struct:thread_options *	file:
o_first_ttime	t/btrace2fio.c	/^static uint64_t o_first_ttime(struct btrace_out *o)$/;"	f	typeref:typename:uint64_t	file:
o_list	gfio.h	/^	struct flist_head o_list;$/;"	m	struct:gfio_client	typeref:struct:flist_head
o_list_nr	gfio.h	/^	unsigned int o_list_nr;$/;"	m	struct:gfio_client	typeref:typename:unsigned int
o_longest_ttime	t/btrace2fio.c	/^static uint64_t o_longest_ttime(struct btrace_out *o)$/;"	f	typeref:typename:uint64_t	file:
o_match	options.h	/^static inline bool o_match(const struct fio_option *o, const char *opt)$/;"	f	typeref:typename:bool
o_to_kib_rate	t/btrace2fio.c	/^static unsigned long o_to_kib_rate(struct btrace_out *o, int rw)$/;"	f	typeref:typename:unsigned long	file:
oact	os/os-windows.h	/^		struct sigaction *oact);$/;"	z	prototype:sigaction	typeref:struct:sigaction *	file:
oact	os/windows/posix.c	/^int sigaction(int sig, const struct sigaction *act, struct sigaction *oact)$/;"	z	function:sigaction	typeref:struct:sigaction *	file:
oatomic	thread_options.h	/^	uint32_t oatomic;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
oatomic	thread_options.h	/^	unsigned int oatomic;$/;"	m	struct:thread_options	typeref:typename:unsigned int
obj	client.c	/^static void json_object_add_client_info(struct json_object *obj,$/;"	z	function:json_object_add_client_info	typeref:struct:json_object *	file:
obj	engines/dfs.c	/^	dfs_obj_t	*obj;$/;"	m	struct:daos_data	typeref:typename:dfs_obj_t *	file:
obj	json.c	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	z	function:json_object_add_value_type	typeref:struct:json_object *	file:
obj	json.c	/^static int json_object_add_pair(struct json_object *obj, struct json_pair *pair)$/;"	z	function:json_object_add_pair	typeref:struct:json_object *	file:
obj	json.c	/^static struct json_value *json_create_value_object(struct json_object *obj)$/;"	z	function:json_create_value_object	typeref:struct:json_object *	file:
obj	json.c	/^void json_free_object(struct json_object *obj)$/;"	z	function:json_free_object	typeref:struct:json_object *	file:
obj	json.c	/^void json_print_object(struct json_object *obj, struct buf_output *out)$/;"	z	function:json_print_object	typeref:struct:json_object *	file:
obj	json.h	/^int json_object_add_value_type(struct json_object *obj, const char *name,$/;"	z	prototype:json_object_add_value_type	typeref:struct:json_object *	file:
obj	json.h	/^static inline int json_array_add_value_array(struct json_array *obj,$/;"	z	function:json_array_add_value_array	typeref:struct:json_array *	file:
obj	json.h	/^static inline int json_array_add_value_float(struct json_array *obj,$/;"	z	function:json_array_add_value_float	typeref:struct:json_array *	file:
obj	json.h	/^static inline int json_array_add_value_int(struct json_array *obj,$/;"	z	function:json_array_add_value_int	typeref:struct:json_array *	file:
obj	json.h	/^static inline int json_array_add_value_object(struct json_array *obj,$/;"	z	function:json_array_add_value_object	typeref:struct:json_array *	file:
obj	json.h	/^static inline int json_array_add_value_string(struct json_array *obj,$/;"	z	function:json_array_add_value_string	typeref:struct:json_array *	file:
obj	json.h	/^static inline int json_object_add_value_array(struct json_object *obj,$/;"	z	function:json_object_add_value_array	typeref:struct:json_object *	file:
obj	json.h	/^static inline int json_object_add_value_float(struct json_object *obj,$/;"	z	function:json_object_add_value_float	typeref:struct:json_object *	file:
obj	json.h	/^static inline int json_object_add_value_int(struct json_object *obj,$/;"	z	function:json_object_add_value_int	typeref:struct:json_object *	file:
obj	json.h	/^static inline int json_object_add_value_object(struct json_object *obj,$/;"	z	function:json_object_add_value_object	typeref:struct:json_object *	file:
obj	json.h	/^static inline int json_object_add_value_string(struct json_object *obj,$/;"	z	function:json_object_add_value_string	typeref:struct:json_object *	file:
obj	json.h	/^void json_free_object(struct json_object *obj);$/;"	z	prototype:json_free_object	typeref:struct:json_object *	file:
obj	json.h	/^void json_print_object(struct json_object *obj, struct buf_output *out);$/;"	z	prototype:json_print_object	typeref:struct:json_object *	file:
obj	stat.c	/^static void json_object_add_disk_utils(struct json_object *obj,$/;"	z	function:json_object_add_disk_utils	typeref:struct:json_object *	file:
object	json.c	/^static int json_object_level(struct json_object *object)$/;"	z	function:json_object_level	typeref:struct:json_object *	file:
object	json.h	/^		struct json_object *object;$/;"	m	union:json_value::__anon078191b5010a	typeref:struct:json_object *
objsame	t/steadystate_tests.py	/^                        objsame, met, mean, target = check(data=jsonjob['steadystate']['data'],$/;"	v
oclass	engines/dfs.c	/^	char		*oclass; \/* object class *\/$/;"	m	struct:daos_fio_options	typeref:typename:char *	file:
odirect	t/dedupe.c	/^static unsigned int odirect;$/;"	v	typeref:typename:unsigned int	file:
odirect	thread_options.h	/^	uint32_t odirect;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
odirect	thread_options.h	/^	unsigned int odirect;$/;"	m	struct:thread_options	typeref:typename:unsigned int
off	blktrace.c	/^				 int nr_logs, int def, size_t off)$/;"	z	function:init_merge_param_list	typeref:typename:size_t	file:
off	engines/dev-dax.c	/^			   size_t length, off_t off)$/;"	z	function:fio_devdax_file	typeref:typename:off_t	file:
off	engines/libpmem.c	/^			    size_t length, off_t off)$/;"	z	function:fio_libpmem_file	typeref:typename:off_t	file:
off	engines/mmap.c	/^			 size_t length, off_t off)$/;"	z	function:fio_mmap_file	typeref:typename:off_t	file:
off	filesetup.c	/^				   unsigned long long off,$/;"	z	function:__file_invalidate_cache	typeref:typename:unsigned long long	file:
off	lib/lfsr.c	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off)$/;"	z	function:lfsr_next	typeref:typename:uint64_t *	file:
off	lib/lfsr.h	/^int lfsr_next(struct fio_lfsr *fl, uint64_t *off);$/;"	z	prototype:lfsr_next	typeref:typename:uint64_t *	file:
off	lib/pattern.c	/^		unsigned int off, const char *buf, unsigned int len)$/;"	z	function:cmp_pattern	typeref:typename:unsigned int	file:
off	lib/pattern.h	/^		unsigned int off, const char *buf, unsigned int len);$/;"	z	prototype:cmp_pattern	typeref:typename:unsigned int	file:
off	lib/pattern.h	/^	unsigned int off;$/;"	m	struct:pattern_fmt	typeref:typename:unsigned int
off	options.h	/^extern bool __fio_option_is_set(struct thread_options *, unsigned int off);$/;"	z	prototype:__fio_option_is_set	typeref:typename:unsigned int	file:
off	os/linux/io_uring.h	/^		__u64	off;	\/* offset into file *\/$/;"	m	union:io_uring_sqe::__anon2bbba927010a	typeref:typename:__u64
off	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:off_t	file:
off	os/windows/posix/include/sys/mman.h	/^		int fildes, off_t off);$/;"	z	prototype:mmap	typeref:typename:off_t	file:
off	t/read-to-pipe-async.c	/^	off_t off;$/;"	m	struct:work_item	typeref:typename:off_t	file:
off1	options.c	/^					unsigned int off1)$/;"	z	function:find_next_opt	typeref:typename:unsigned int	file:
off1	options.c	/^bool __fio_option_is_set(struct thread_options *o, unsigned int off1)$/;"	z	function:__fio_option_is_set	typeref:typename:unsigned int	file:
off1	parse.h	/^	unsigned int off1;		\/* potential parameters *\/$/;"	m	struct:fio_option	typeref:typename:unsigned int
off2	parse.h	/^	unsigned int off2;$/;"	m	struct:fio_option	typeref:typename:unsigned int
off3	parse.h	/^	unsigned int off3;$/;"	m	struct:fio_option	typeref:typename:unsigned int
off4	parse.h	/^	unsigned int off4;$/;"	m	struct:fio_option	typeref:typename:unsigned int
off5	parse.h	/^	unsigned int off5;$/;"	m	struct:fio_option	typeref:typename:unsigned int
off6	parse.h	/^	unsigned int off6;$/;"	m	struct:fio_option	typeref:typename:unsigned int
offs	oslib/libmtd.c	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	function:mtd_write	typeref:typename:int	file:
offs	oslib/libmtd.c	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_read	typeref:typename:int	file:
offs	oslib/libmtd.c	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	function:mtd_write_img	typeref:typename:int	file:
offs	oslib/libmtd.h	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	prototype:mtd_write	typeref:typename:int	file:
offs	oslib/libmtd.h	/^int mtd_read(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_read	typeref:typename:int	file:
offs	oslib/libmtd.h	/^int mtd_write_img(const struct mtd_dev_info *mtd, int fd, int eb, int offs,$/;"	z	prototype:mtd_write_img	typeref:typename:int	file:
offs64_ioctls	oslib/libmtd_int.h	/^	unsigned int offs64_ioctls:2;$/;"	m	struct:libmtd	typeref:typename:unsigned int:2
offset	blktrace.c	/^static void store_ipo(struct thread_data *td, unsigned long long offset,$/;"	z	function:store_ipo	typeref:typename:unsigned long long	file:
offset	engines/http.c	/^static int _http_seek(void *stream, curl_off_t offset, int origin)$/;"	z	function:_http_seek	typeref:typename:curl_off_t	file:
offset	engines/ime.c	/^	off_t			offset;	\/* File offset *\/$/;"	m	struct:imesio_req	typeref:typename:off_t	file:
offset	engines/librpma_gpspm_flush.pb-c.h	/^  uint64_t offset;$/;"	m	struct:_GPSPMFlushRequest	typeref:typename:uint64_t
offset	engines/librpma_gpspm_flush.proto	/^    required fixed64 offset = 1;$/;"	f	message:GPSPM_flush_request	typeref:typename:fixed64
offset	engines/libzbc.c	/^			       uint64_t offset, struct zbd_zone *zbdz,$/;"	z	function:libzbc_report_zones	typeref:typename:uint64_t	file:
offset	engines/libzbc.c	/^			   uint64_t offset, uint64_t length)$/;"	z	function:libzbc_reset_wp	typeref:typename:uint64_t	file:
offset	engines/skeleton_external.c	/^				     uint64_t offset, struct zbd_zone *zones,$/;"	z	function:fio_skeleton_report_zones	typeref:typename:uint64_t	file:
offset	engines/skeleton_external.c	/^				 uint64_t offset, uint64_t length)$/;"	z	function:fio_skeleton_reset_wp	typeref:typename:uint64_t	file:
offset	engines/xnvme.c	/^static int xnvme_fioe_report_zones(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_report_zones	typeref:typename:uint64_t	file:
offset	engines/xnvme.c	/^static int xnvme_fioe_reset_wp(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_reset_wp	typeref:typename:uint64_t	file:
offset	graph.c	/^	unsigned int offset;$/;"	m	struct:tick_value	typeref:typename:unsigned int	file:
offset	helpers.c	/^int fallocate(int fd, int mode, off_t offset, off_t len)$/;"	z	function:fallocate	typeref:typename:off_t	file:
offset	helpers.c	/^int posix_fadvise(int fd, off_t offset, off_t len, int advice)$/;"	z	function:posix_fadvise	typeref:typename:off_t	file:
offset	helpers.c	/^int posix_fallocate(int fd, off_t offset, off_t len)$/;"	z	function:posix_fallocate	typeref:typename:off_t	file:
offset	helpers.c	/^int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	function:sync_file_range	typeref:typename:uint64_t	file:
offset	helpers.h	/^extern int fallocate(int fd, int mode, off_t offset, off_t len);$/;"	z	prototype:fallocate	typeref:typename:off_t	file:
offset	helpers.h	/^extern int posix_fadvise(int fd, off_t offset, off_t len, int advice);$/;"	z	prototype:posix_fadvise	typeref:typename:off_t	file:
offset	helpers.h	/^extern int posix_fallocate(int fd, off_t offset, off_t len);$/;"	z	prototype:posix_fallocate	typeref:typename:off_t	file:
offset	helpers.h	/^extern int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	z	prototype:sync_file_range	typeref:typename:uint64_t	file:
offset	io_u.c	/^				uint64_t offset, uint64_t buflen)$/;"	z	function:mark_random_map	typeref:typename:uint64_t	file:
offset	io_u.c	/^				uint64_t offset, unsigned int bytes)$/;"	z	function:file_log_write_comp	typeref:typename:uint64_t	file:
offset	io_u.c	/^			       enum fio_ddir ddir, uint64_t *offset)$/;"	z	function:get_next_seq_offset	typeref:typename:uint64_t *	file:
offset	io_u.h	/^	unsigned long long offset;	\/* is really ->xfer_offset... *\/$/;"	m	struct:io_u	typeref:typename:unsigned long long
offset	iolog.h	/^	uint64_t offset;$/;"	m	struct:io_sample_offset	typeref:typename:uint64_t
offset	iolog.h	/^	unsigned long long offset;$/;"	m	struct:io_piece	typeref:typename:unsigned long long
offset	lib/axmap.c	/^static bool axmap_isset_fn(struct axmap_level *al, uint64_t offset,$/;"	z	function:axmap_isset_fn	typeref:typename:uint64_t	file:
offset	lib/axmap.c	/^static bool axmap_set_fn(struct axmap_level *al, uint64_t offset,$/;"	z	function:axmap_set_fn	typeref:typename:uint64_t	file:
offset	lib/memalign.c	/^	unsigned int offset;$/;"	m	struct:align_footer	typeref:typename:unsigned int	file:
offset	os/linux/io_uring.h	/^	__u32 offset;$/;"	m	struct:io_uring_files_update	typeref:typename:__u32
offset	os/linux/io_uring.h	/^	__u32 offset;$/;"	m	struct:io_uring_rsrc_update	typeref:typename:__u32
offset	os/linux/io_uring.h	/^	__u32 offset;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__u32
offset	os/os-linux.h	/^				off_t offset)$/;"	z	function:make_pos_h_l	typeref:typename:off_t	file:
offset	os/os-linux.h	/^			       off_t offset, unsigned int flags)$/;"	z	function:pwritev2	typeref:typename:off_t	file:
offset	os/os-linux.h	/^			      off_t offset, unsigned int flags)$/;"	z	function:preadv2	typeref:typename:off_t	file:
offset	os/os-linux.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset,$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
offset	os/os-mac.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
offset	os/os-windows.h	/^		off_t offset);$/;"	z	prototype:pwrite	typeref:typename:off_t	file:
offset	os/os-windows.h	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);$/;"	z	prototype:pread	typeref:typename:off_t	file:
offset	os/os.h	/^static inline bool fio_fallocate(struct fio_file *f, uint64_t offset, uint64_t len)$/;"	z	function:fio_fallocate	typeref:typename:uint64_t	file:
offset	os/windows/cpu-affinity.c	/^static void cpu_to_row_offset(int cpu, int *row, int *offset)$/;"	z	function:cpu_to_row_offset	typeref:typename:int *	file:
offset	os/windows/posix.c	/^		off_t offset)$/;"	z	function:pwrite	typeref:typename:off_t	file:
offset	os/windows/posix.c	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset)$/;"	z	function:pread	typeref:typename:off_t	file:
offset	oslib/blkzoned.h	/^				    uint64_t offset, uint64_t length)$/;"	z	function:blkzoned_reset_wp	typeref:typename:uint64_t	file:
offset	oslib/blkzoned.h	/^				struct fio_file *f, uint64_t offset,$/;"	z	function:blkzoned_report_zones	typeref:typename:uint64_t	file:
offset	oslib/blkzoned.h	/^				struct fio_file *f, uint64_t offset,$/;"	z	prototype:blkzoned_report_zones	typeref:typename:uint64_t	file:
offset	oslib/blkzoned.h	/^				uint64_t offset, uint64_t length);$/;"	z	prototype:blkzoned_reset_wp	typeref:typename:uint64_t	file:
offset	oslib/linux-blkzoned.c	/^			  uint64_t offset, struct zbd_zone *zones,$/;"	z	function:blkzoned_report_zones	typeref:typename:uint64_t	file:
offset	oslib/linux-blkzoned.c	/^		      uint64_t offset, uint64_t length)$/;"	z	function:blkzoned_reset_wp	typeref:typename:uint64_t	file:
offset	parse.h	/^			   unsigned int offset)$/;"	z	function:td_var	typeref:typename:unsigned int	file:
offset	stat.c	/^				    uint64_t offset, unsigned int ioprio)$/;"	z	function:add_log_sample	typeref:typename:uint64_t	file:
offset	stat.c	/^			     unsigned long t, uint64_t offset,$/;"	z	function:__add_log_sample	typeref:typename:uint64_t	file:
offset	stat.c	/^		     uint64_t offset, unsigned int ioprio)$/;"	z	function:add_slat_sample	typeref:typename:uint64_t	file:
offset	stat.c	/^		     uint64_t offset, unsigned int ioprio,$/;"	z	function:add_clat_sample	typeref:typename:uint64_t	file:
offset	stat.c	/^		    uint64_t offset, unsigned int ioprio,$/;"	z	function:add_lat_sample	typeref:typename:uint64_t	file:
offset	t/dedupe.c	/^	uint64_t offset;$/;"	m	struct:extent	typeref:typename:uint64_t	file:
offset	t/dedupe.c	/^	uint64_t offset;$/;"	m	struct:item	typeref:typename:uint64_t	file:
offset	t/dedupe.c	/^static int __read_block(int fd, void *buf, off_t offset, size_t count)$/;"	z	function:__read_block	typeref:typename:off_t	file:
offset	t/dedupe.c	/^static int account_unique_capacity(uint64_t offset, uint64_t *unique_capacity,$/;"	z	function:account_unique_capacity	typeref:typename:uint64_t	file:
offset	t/dedupe.c	/^static int get_work(uint64_t *offset, uint64_t *size)$/;"	z	function:get_work	typeref:typename:uint64_t *	file:
offset	t/dedupe.c	/^static int read_block(int fd, void *buf, off_t offset)$/;"	z	function:read_block	typeref:typename:off_t	file:
offset	t/dedupe.c	/^static unsigned int read_blocks(int fd, void *buf, off_t offset, size_t size)$/;"	z	function:read_blocks	typeref:typename:off_t	file:
offset	t/io_uring.c	/^static struct submitter *get_submitter(int offset)$/;"	z	function:get_submitter	typeref:typename:int	file:
offset	verify-state.h	/^	uint64_t offset;$/;"	m	struct:file_comp	typeref:typename:uint64_t
offset	verify.c	/^static int mem_is_zero_slow(const void *data, size_t length, size_t *offset)$/;"	z	function:mem_is_zero_slow	typeref:typename:size_t *	file:
offset	verify.c	/^static void dump_buf(char *buf, unsigned int len, unsigned long long offset,$/;"	z	function:dump_buf	typeref:typename:unsigned long long	file:
offset	verify.h	/^	uint64_t offset;$/;"	m	struct:verify_header	typeref:typename:uint64_t
offset	zbd.c	/^					   uint64_t offset)$/;"	z	function:zbd_offset_to_zone_idx	typeref:typename:uint64_t	file:
offset	zbd.c	/^			    uint64_t offset, struct zbd_zone *zones,$/;"	z	function:zbd_report_zones	typeref:typename:uint64_t	file:
offset	zbd.c	/^			uint64_t offset, uint64_t length)$/;"	z	function:zbd_reset_wp	typeref:typename:uint64_t	file:
offset	zbd.c	/^static bool is_valid_offset(const struct fio_file *f, uint64_t offset)$/;"	z	function:is_valid_offset	typeref:typename:uint64_t	file:
offset	zbd.c	/^zbd_offset_to_zone(const struct fio_file *f,  uint64_t offset)$/;"	z	function:zbd_offset_to_zone	typeref:typename:uint64_t	file:
offset_increment	thread_options.h	/^	uint64_t offset_increment;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
offset_increment	thread_options.h	/^	unsigned long long offset_increment;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
offset_increment_nz	thread_options.h	/^	uint32_t offset_increment_nz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
offset_increment_nz	thread_options.h	/^	unsigned int offset_increment_nz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
offset_increment_percent	thread_options.h	/^	uint32_t offset_increment_percent;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
offset_increment_percent	thread_options.h	/^	unsigned int offset_increment_percent;$/;"	m	struct:thread_options	typeref:typename:unsigned int
og	goptions.c	/^				     const struct opt_group *og)$/;"	z	function:gopt_add_group_tab	typeref:typename:const struct opt_group *	file:
ogs	optgroup.c	/^static const struct opt_group *group_from_mask(const struct opt_group *ogs,$/;"	z	function:group_from_mask	typeref:typename:const struct opt_group *	file:
old	gettime.c	/^static inline uint32_t atomic32_compare_and_swap(uint32_t *ptr, uint32_t old,$/;"	z	function:atomic32_compare_and_swap	typeref:typename:uint32_t	file:
old	lib/prio_tree.c	/^		struct prio_tree_node *old, struct prio_tree_node *node)$/;"	z	function:prio_tree_replace	typeref:struct:prio_tree_node *	file:
old	lib/prio_tree.h	/^                struct prio_tree_node *old, struct prio_tree_node *node);$/;"	z	prototype:prio_tree_replace	typeref:struct:prio_tree_node *	file:
old_state	libfio.c	/^void td_restore_runstate(struct thread_data *td, int old_state)$/;"	z	function:td_restore_runstate	typeref:typename:int	file:
oldest_y	steadystate.h	/^	uint64_t oldest_y;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
on_config_drawing_area	gfio.c	/^static gint on_config_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	f	typeref:typename:gint	file:
on_config_lat_drawing_area	gclient.c	/^static gint on_config_lat_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	f	typeref:typename:gint	file:
on_expose_drawing_area	gfio.c	/^static int on_expose_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	f	typeref:typename:int	file:
on_expose_lat_drawing_area	gclient.c	/^static int on_expose_lat_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	f	typeref:typename:int	file:
on_info_bar_response	gerror.c	/^static void on_info_bar_response(GtkWidget *widget, gint response,$/;"	f	typeref:typename:void	file:
one	crc/xxhash.c	/^    static const int one = 1;$/;"	v	typeref:typename:const int	file:
onerr	cgroup.c	/^			     const char *onerr)$/;"	z	function:write_int_to_file	typeref:typename:const char *	file:
oob	oslib/libmtd.c	/^				  int ooblen, void *oob) {$/;"	z	function:legacy_auto_oob_layout	typeref:typename:void *	file:
oob	oslib/libmtd.c	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	function:mtd_write	typeref:typename:void *	file:
oob	oslib/libmtd.h	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	prototype:mtd_write	typeref:typename:void *	file:
oob_size	oslib/libmtd.h	/^	int oob_size;$/;"	m	struct:mtd_dev_info	typeref:typename:int
ooblen	oslib/libmtd.c	/^				  int ooblen, void *oob) {$/;"	z	function:legacy_auto_oob_layout	typeref:typename:int	file:
ooblen	oslib/libmtd.c	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	function:mtd_write	typeref:typename:int	file:
ooblen	oslib/libmtd.h	/^	      int offs, void *data, int len, void *oob, int ooblen,$/;"	z	prototype:mtd_write	typeref:typename:int	file:
op	arch/arch-x86-common.h	/^static inline void cpuid(unsigned int op,$/;"	z	function:cpuid	typeref:typename:unsigned int	file:
op	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_aws_auth_header	typeref:typename:int	file:
op	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_swift_header	typeref:typename:int	file:
op	os/linux/io_uring.h	/^	__u8 op;$/;"	m	struct:io_uring_probe_op	typeref:typename:__u8
op	server.c	/^const char *fio_server_op(unsigned int op)$/;"	z	function:fio_server_op	typeref:typename:unsigned int	file:
op_context	engines/librpma_gpspm_flush.pb-c.h	/^  uint64_t op_context;$/;"	m	struct:_GPSPMFlushRequest	typeref:typename:uint64_t
op_context	engines/librpma_gpspm_flush.pb-c.h	/^  uint64_t op_context;$/;"	m	struct:_GPSPMFlushResponse	typeref:typename:uint64_t
op_context	engines/librpma_gpspm_flush.proto	/^    required fixed64 op_context = 1;$/;"	f	message:GPSPM_flush_response	typeref:typename:fixed64
op_context	engines/librpma_gpspm_flush.proto	/^    required fixed64 op_context = 3;$/;"	f	message:GPSPM_flush_request	typeref:typename:fixed64
op_recv_completed	engines/librpma_fio.h	/^	uint32_t op_recv_completed;$/;"	m	struct:librpma_fio_client_data	typeref:typename:uint32_t
op_send_completed	engines/librpma_fio.h	/^	uint32_t op_send_completed;$/;"	m	struct:librpma_fio_client_data	typeref:typename:uint32_t
op_send_posted	engines/librpma_fio.h	/^	uint32_t op_send_posted;$/;"	m	struct:librpma_fio_client_data	typeref:typename:uint32_t
opcode	engines/rdma.c	/^static int cq_event_handler(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	z	function:cq_event_handler	typeref:enum:ibv_wc_opcode	file:
opcode	engines/rdma.c	/^static int rdma_poll_wait(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	z	function:rdma_poll_wait	typeref:enum:ibv_wc_opcode	file:
opcode	os/linux/io_uring.h	/^	__u16 opcode;$/;"	m	struct:io_uring_restriction	typeref:typename:__u16
opcode	os/linux/io_uring.h	/^	__u8	opcode;		\/* type of operation for this sqe *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__u8
opcode	server.c	/^	int opcode;		\/* Actual command fields *\/$/;"	m	struct:sk_entry	typeref:typename:int	file:
opcode	server.c	/^int fio_net_send_cmd(int fd, uint16_t opcode, const void *buf, off_t size,$/;"	z	function:fio_net_send_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^int fio_net_send_simple_cmd(int sk, uint16_t opcode, uint64_t tag,$/;"	z	function:fio_net_send_simple_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^static int fio_net_queue_cmd(uint16_t opcode, void *buf, off_t size,$/;"	z	function:fio_net_queue_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^static int fio_net_send_simple_stack_cmd(int sk, uint16_t opcode, uint64_t tag)$/;"	z	function:fio_net_send_simple_stack_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^static int fio_send_cmd_ext_pdu(int sk, uint16_t opcode, const void *buf,$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:uint16_t	file:
opcode	server.c	/^static struct sk_entry *fio_net_prep_cmd(uint16_t opcode, void *buf,$/;"	z	function:fio_net_prep_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^static uint64_t alloc_reply(uint64_t tag, uint16_t opcode)$/;"	z	function:alloc_reply	typeref:typename:uint16_t	file:
opcode	server.c	/^static void __fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	z	function:__fio_init_net_cmd	typeref:typename:uint16_t	file:
opcode	server.c	/^static void fio_init_net_cmd(struct fio_net_cmd *cmd, uint16_t opcode,$/;"	z	function:fio_init_net_cmd	typeref:typename:uint16_t	file:
opcode	server.h	/^	uint16_t opcode;	\/* command opcode *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint16_t
opcode	server.h	/^	uint16_t opcode;$/;"	m	struct:fio_net_cmd_reply	typeref:typename:uint16_t
open	zbd.h	/^	unsigned int		open:1;$/;"	m	struct:fio_zone_info	typeref:typename:unsigned int:1
open_again	engines/falloc.c	/^open_again:$/;"	L	function:open_file	file:
open_again	filesetup.c	/^open_again:$/;"	L	function:generic_open_file	file:
open_file	engines/falloc.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
open_file	engines/filecreate.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
open_file	ioengines.h	/^	int (*open_file)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
open_files	thread_options.h	/^	uint32_t open_files;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
open_files	thread_options.h	/^	unsigned int open_files;$/;"	m	struct:thread_options	typeref:typename:unsigned int
open_flags	os/linux/io_uring.h	/^		__u32		open_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
open_other_zone	zbd.c	/^open_other_zone:$/;"	L	function:zbd_convert_to_open_zone	file:
open_socket	iolog.c	/^static int open_socket(const char *path)$/;"	f	typeref:typename:int	file:
open_state_file	verify.c	/^static int open_state_file(const char *name, const char *prefix, int num,$/;"	f	typeref:typename:int	file:
open_stream	engines/sg.c	/^static int fio_sgio_stream_control(struct fio_file *f, bool open_stream, uint16_t *stream_id)$/;"	z	function:fio_sgio_stream_control	typeref:typename:bool	file:
open_zones	zbd.h	/^	uint32_t		open_zones[ZBD_MAX_OPEN_ZONES];$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t[]
opendir	os/windows/posix.c	/^DIR *opendir(const char *dirname)$/;"	f	typeref:typename:DIR *
opendir	os/windows/posix/include/dirent.h	/^DIR *opendir(const char *dirname);$/;"	p	typeref:typename:DIR *
opendir	thread_options.h	/^	char *opendir;$/;"	m	struct:thread_options	typeref:typename:char *
opendir	thread_options.h	/^	uint8_t opendir[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
openlog	os/windows/posix.c	/^void openlog(const char *ident, int logopt, int facility)$/;"	f	typeref:typename:void
openlog	os/windows/posix/include/syslog.h	/^void openlog(const char *ident, int logopt, int facility);$/;"	p	typeref:typename:void
operation	printing.c	/^static void begin_print(GtkPrintOperation *operation,$/;"	z	function:begin_print	typeref:typename:GtkPrintOperation *	file:
operation	printing.c	/^static void results_draw_page(GtkPrintOperation *operation,$/;"	z	function:results_draw_page	typeref:typename:GtkPrintOperation *	file:
operation	printing.c	/^static void results_print_done(GtkPrintOperation *operation,$/;"	z	function:results_print_done	typeref:typename:GtkPrintOperation *	file:
ops	client.c	/^int fio_client_add(struct client_ops *ops, const char *hostname, void **cookie)$/;"	z	function:fio_client_add	typeref:struct:client_ops *	file:
ops	client.c	/^int fio_handle_clients(struct client_ops *ops)$/;"	z	function:fio_handle_clients	typeref:struct:client_ops *	file:
ops	client.c	/^static void request_client_etas(struct client_ops *ops)$/;"	z	function:request_client_etas	typeref:struct:client_ops *	file:
ops	client.c	/^struct fio_client *fio_client_add_explicit(struct client_ops *ops,$/;"	z	function:fio_client_add_explicit	typeref:struct:client_ops *	file:
ops	client.h	/^	struct client_ops *ops;$/;"	m	struct:fio_client	typeref:struct:client_ops *
ops	ioengines.c	/^static bool check_engine_ops(struct thread_data *td, struct ioengine_ops *ops)$/;"	z	function:check_engine_ops	typeref:struct:ioengine_ops *	file:
ops	ioengines.c	/^void register_ioengine(struct ioengine_ops *ops)$/;"	z	function:register_ioengine	typeref:struct:ioengine_ops *	file:
ops	ioengines.c	/^void unregister_ioengine(struct ioengine_ops *ops)$/;"	z	function:unregister_ioengine	typeref:struct:ioengine_ops *	file:
ops	os/linux/io_uring.h	/^	struct io_uring_probe_op ops[0];$/;"	m	struct:io_uring_probe	typeref:struct:io_uring_probe_op[0]
ops	profile.c	/^int register_profile(struct profile_ops *ops)$/;"	z	function:register_profile	typeref:struct:profile_ops *	file:
ops	profile.c	/^static int add_profile_options(struct profile_ops *ops)$/;"	z	function:add_profile_options	typeref:struct:profile_ops *	file:
ops	profile.c	/^void unregister_profile(struct profile_ops *ops)$/;"	z	function:unregister_profile	typeref:struct:profile_ops *	file:
ops	workqueue.c	/^		   struct workqueue_ops *ops, unsigned int max_workers,$/;"	z	function:workqueue_init	typeref:struct:workqueue_ops *	file:
ops	workqueue.h	/^	struct workqueue_ops ops;$/;"	m	struct:workqueue	typeref:struct:workqueue_ops
ops	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	z	prototype:workqueue_init	typeref:struct:workqueue_ops *	file:
ops_completed	engines/rados.c	/^	uint64_t ops_completed;$/;"	m	struct:rados_data	typeref:typename:uint64_t	file:
ops_len	os/linux/io_uring.h	/^	__u8 ops_len;	\/* length of ops[] array below *\/$/;"	m	struct:io_uring_probe	typeref:typename:__u8
ops_scheduled	engines/rados.c	/^	uint64_t ops_scheduled;$/;"	m	struct:rados_data	typeref:typename:uint64_t	file:
opt	client.c	/^					const char *opt)$/;"	z	function:__fio_client_add_cmd_option	typeref:typename:const char *	file:
opt	client.c	/^void fio_client_add_cmd_option(void *cookie, const char *opt)$/;"	z	function:fio_client_add_cmd_option	typeref:typename:const char *	file:
opt	engines/glusterfs.c	/^static glfs_t *fio_gf_get_glfs(struct gf_options *opt,$/;"	z	function:fio_gf_get_glfs	typeref:struct:gf_options *	file:
opt	engines/glusterfs.c	/^static void fio_gf_put_glfs(struct gf_options *opt, glfs_t *fs)$/;"	z	function:fio_gf_put_glfs	typeref:struct:gf_options *	file:
opt	idletime.h	/^	int opt;$/;"	m	struct:idle_prof_common	typeref:typename:int
opt	init.c	/^static void parse_cmd_client(void *client, char *opt)$/;"	z	function:parse_cmd_client	typeref:typename:char *	file:
opt	options.c	/^char *fio_option_dup_subs(const char *opt)$/;"	z	function:fio_option_dup_subs	typeref:typename:const char *	file:
opt	options.c	/^int fio_cmd_ioengine_option_parse(struct thread_data *td, const char *opt,$/;"	z	function:fio_cmd_ioengine_option_parse	typeref:typename:const char *	file:
opt	options.c	/^int fio_cmd_option_parse(struct thread_data *td, const char *opt, char *val)$/;"	z	function:fio_cmd_option_parse	typeref:typename:const char *	file:
opt	options.c	/^int fio_show_option_help(const char *opt)$/;"	z	function:fio_show_option_help	typeref:typename:const char *	file:
opt	options.c	/^static char *fio_keyword_replace(char *opt)$/;"	z	function:fio_keyword_replace	typeref:typename:char *	file:
opt	options.c	/^static int opt_is_set(struct thread_options *o, struct fio_option *opt)$/;"	z	function:opt_is_set	typeref:struct:fio_option *	file:
opt	options.c	/^static void show_closest_option(const char *opt)$/;"	z	function:show_closest_option	typeref:typename:const char *	file:
opt	options.c	/^void fio_option_mark_set(struct thread_options *o, const struct fio_option *opt)$/;"	z	function:fio_option_mark_set	typeref:typename:const struct fio_option *	file:
opt	options.h	/^static inline bool o_match(const struct fio_option *o, const char *opt)$/;"	z	function:o_match	typeref:typename:const char *	file:
opt	parse.c	/^find_option_c(const struct fio_option *options, const char *opt)$/;"	z	function:find_option_c	typeref:typename:const char *	file:
opt	parse.c	/^get_option(char *opt, const struct fio_option *options, char **post)$/;"	z	function:get_option	typeref:typename:char *	file:
opt	parse.c	/^int parse_cmd_option(const char *opt, const char *val,$/;"	z	function:parse_cmd_option	typeref:typename:const char *	file:
opt	parse.c	/^int parse_option(char *opt, const char *input, const struct fio_option *options,$/;"	z	function:parse_option	typeref:typename:char *	file:
opt	parse.c	/^int string_distance_ok(const char *opt, int distance)$/;"	z	function:string_distance_ok	typeref:typename:const char *	file:
opt	parse.c	/^struct fio_option *find_option(struct fio_option *options, const char *opt)$/;"	z	function:find_option	typeref:typename:const char *	file:
opt_category	optgroup.h	/^enum opt_category {$/;"	g
opt_category_group	optgroup.h	/^enum opt_category_group {$/;"	g
opt_cmp	parse.c	/^static int opt_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
opt_data	profile.h	/^	void *opt_data;$/;"	m	struct:profile_ops	typeref:typename:void *
opt_group	optgroup.h	/^struct opt_group {$/;"	s
opt_group_cat_from_mask	optgroup.c	/^const struct opt_group *opt_group_cat_from_mask(uint64_t *mask)$/;"	f	typeref:typename:const struct opt_group *
opt_group_cat_from_mask	optgroup.h	/^extern const struct opt_group *opt_group_cat_from_mask(uint64_t *mask);$/;"	p	typeref:typename:const struct opt_group *
opt_group_from_mask	optgroup.c	/^const struct opt_group *opt_group_from_mask(uint64_t *mask)$/;"	f	typeref:typename:const struct opt_group *
opt_group_from_mask	optgroup.h	/^extern const struct opt_group *opt_group_from_mask(uint64_t *mask);$/;"	p	typeref:typename:const struct opt_group *
opt_idx	profiles/act.c	/^static unsigned int opt_idx = 5;$/;"	v	typeref:typename:unsigned int	file:
opt_index	goptions.c	/^			    struct fio_option *o, unsigned int opt_index,$/;"	z	function:gopt_add_option	typeref:typename:unsigned int	file:
opt_index	goptions.c	/^	unsigned int opt_index;$/;"	m	struct:gopt	typeref:typename:unsigned int	file:
opt_is_set	options.c	/^static int opt_is_set(struct thread_options *o, struct fio_option *opt)$/;"	f	typeref:typename:int	file:
opt_len	parse.c	/^static size_t opt_len(const char *str)$/;"	f	typeref:typename:size_t	file:
opt_list	fio.h	/^	struct flist_head opt_list;$/;"	m	struct:thread_data	typeref:struct:flist_head
opt_list	server.c	/^void fio_server_send_job_options(struct flist_head *opt_list,$/;"	z	function:fio_server_send_job_options	typeref:struct:flist_head *	file:
opt_list	stat.c	/^						   struct flist_head *opt_list)$/;"	z	function:show_thread_status_json	typeref:struct:flist_head *	file:
opt_list	stat.c	/^				       struct flist_head *opt_list,$/;"	z	function:show_thread_status	typeref:struct:flist_head *	file:
opt_list	stat.c	/^			      struct flist_head *opt_list)$/;"	z	function:json_add_job_opts	typeref:struct:flist_head *	file:
opt_lists	client.h	/^	struct flist_head *opt_lists;$/;"	m	struct:fio_client	typeref:struct:flist_head *
opt_name	oslib/getopt_long.c	/^					 const char *opt_name, int smatch)$/;"	z	function:option_matches	typeref:typename:const char *	file:
opt_type	goptions.c	/^	unsigned int opt_type;$/;"	m	struct:gopt	typeref:typename:unsigned int	file:
opt_type_name	parse.c	/^static const char *opt_type_name(const struct fio_option *o)$/;"	f	typeref:typename:const char *	file:
opt_type_names	parse.c	/^static const char *opt_type_names[] = {$/;"	v	typeref:typename:const char * []	file:
optarg	init.c	/^static int parse_output_format(const char *optarg)$/;"	z	function:parse_output_format	typeref:typename:const char *	file:
optarg	oslib/getopt_long.c	/^char *optarg;$/;"	v	typeref:typename:char *
opterr	oslib/getopt_long.c	/^int optind, opterr, optopt;$/;"	v	typeref:typename:int
optind	oslib/getopt_long.c	/^int optind, opterr, optopt;$/;"	v	typeref:typename:int
option	oslib/getopt.h	/^struct option {$/;"	s
option_check_rate	fio.h	/^static inline bool option_check_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:typename:bool
option_init	parse.c	/^static void option_init(struct fio_option *o)$/;"	f	typeref:typename:void	file:
option_matches	oslib/getopt_long.c	/^static inline const char *option_matches(const char *arg_str,$/;"	f	typeref:typename:const char *	file:
option_struct_size	ioengines.h	/^	int option_struct_size;$/;"	m	struct:ioengine_ops	typeref:typename:int
option_type	options.c	/^			      int i, int option_type)$/;"	z	function:options_to_lopts	typeref:typename:int	file:
optional_argument	oslib/getopt.h	/^	optional_argument = 2,$/;"	e	enum:__anon316b4bb60103
options	engines/cmdprio.c	/^		     struct cmdprio_options *options)$/;"	z	function:fio_cmdprio_init	typeref:struct:cmdprio_options *	file:
options	engines/cmdprio.h	/^		     struct cmdprio_options *options);$/;"	z	prototype:fio_cmdprio_init	typeref:struct:cmdprio_options *	file:
options	engines/cmdprio.h	/^	struct cmdprio_options *options;$/;"	m	struct:cmdprio	typeref:struct:cmdprio_options *
options	engines/cpu.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/dfs.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/e4defrag.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/exec.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/filestat.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/http.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/io_uring.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/libaio.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/libcufile.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/libhdfs.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/libiscsi.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/mmap.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/mtd.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/nbd.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/net.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/nfs.c	/^	struct fio_libnfs_options *options;$/;"	m	struct:nfs_data	typeref:struct:fio_libnfs_options *	file:
options	engines/nfs.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/rados.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/rbd.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/rdma.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/sg.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/skeleton_external.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/sync.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/windowsaio.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	engines/xnvme.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	ioengines.h	/^	struct fio_option *options;$/;"	m	struct:ioengine_ops	typeref:struct:fio_option *
options	os/windows/posix.c	/^pid_t waitpid(pid_t pid, int *stat_loc, int options)$/;"	z	function:waitpid	typeref:typename:int	file:
options	os/windows/posix/include/sys/wait.h	/^pid_t waitpid(pid_t, int *stat_loc, int options);$/;"	z	prototype:waitpid	typeref:typename:int	file:
options	parse.c	/^		     const struct fio_option *options, void *data,$/;"	z	function:parse_cmd_option	typeref:typename:const struct fio_option *	file:
options	parse.c	/^find_option_c(const struct fio_option *options, const char *opt)$/;"	z	function:find_option_c	typeref:typename:const struct fio_option *	file:
options	parse.c	/^get_option(char *opt, const struct fio_option *options, char **post)$/;"	z	function:get_option	typeref:typename:const struct fio_option *	file:
options	parse.c	/^int parse_option(char *opt, const char *input, const struct fio_option *options,$/;"	z	function:parse_option	typeref:typename:const struct fio_option *	file:
options	parse.c	/^int show_cmd_help(const struct fio_option *options, const char *name)$/;"	z	function:show_cmd_help	typeref:typename:const struct fio_option *	file:
options	parse.c	/^static const struct fio_option *find_child(const struct fio_option *options,$/;"	z	function:find_child	typeref:typename:const struct fio_option *	file:
options	parse.c	/^struct fio_option *find_option(struct fio_option *options, const char *opt)$/;"	z	function:find_option	typeref:struct:fio_option *	file:
options	parse.c	/^void fill_default_options(void *data, const struct fio_option *options)$/;"	z	function:fill_default_options	typeref:typename:const struct fio_option *	file:
options	parse.c	/^void options_free(const struct fio_option *options, void *data)$/;"	z	function:options_free	typeref:typename:const struct fio_option *	file:
options	parse.c	/^void options_init(struct fio_option *options)$/;"	z	function:options_init	typeref:struct:fio_option *	file:
options	parse.c	/^void options_mem_dupe(const struct fio_option *options, void *data)$/;"	z	function:options_mem_dupe	typeref:typename:const struct fio_option *	file:
options	parse.c	/^void sort_options(char **opts, const struct fio_option *options, int num_opts)$/;"	z	function:sort_options	typeref:typename:const struct fio_option *	file:
options	profile.h	/^	struct fio_option *options;$/;"	m	struct:profile_ops	typeref:struct:fio_option *
options	profiles/act.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	profiles/tiobench.c	/^static struct fio_option options[] = {$/;"	v	typeref:struct:fio_option[]	file:
options	server.h	/^	struct cmd_single_line_pdu options[];$/;"	m	struct:cmd_line_pdu	typeref:struct:cmd_single_line_pdu[]
options_default_fill	init.c	/^void options_default_fill(struct thread_options *o)$/;"	f	typeref:typename:void
options_default_fill	thread_options.h	/^extern void options_default_fill(struct thread_options *o);$/;"	p	typeref:typename:void
options_free	parse.c	/^void options_free(const struct fio_option *options, void *data)$/;"	f	typeref:typename:void
options_free	parse.h	/^extern void options_free(const struct fio_option *, void *);$/;"	p	typeref:typename:void
options_init	parse.c	/^void options_init(struct fio_option *options)$/;"	f	typeref:typename:void
options_init	parse.h	/^extern void options_init(struct fio_option *);$/;"	p	typeref:typename:void
options_mem_dupe	parse.c	/^void options_mem_dupe(const struct fio_option *options, void *data)$/;"	f	typeref:typename:void
options_mem_dupe	parse.h	/^extern void options_mem_dupe(const struct fio_option *, void *);$/;"	p	typeref:typename:void
options_to_lopts	options.c	/^static void options_to_lopts(struct fio_option *opts,$/;"	f	typeref:typename:void	file:
optname	options.c	/^void add_opt_posval(const char *optname, const char *ival, const char *help)$/;"	z	function:add_opt_posval	typeref:typename:const char *	file:
optname	options.c	/^void del_opt_posval(const char *optname, const char *ival)$/;"	z	function:del_opt_posval	typeref:typename:const char *	file:
optopt	oslib/getopt_long.c	/^int optind, opterr, optopt;$/;"	v	typeref:typename:int
optptr	oslib/getopt_long.c	/^	const char *optptr;$/;"	m	struct:getopt_private_state	typeref:typename:const char *	file:
opts	options.c	/^int fio_options_parse(struct thread_data *td, char **opts, int num_opts)$/;"	z	function:fio_options_parse	typeref:typename:char **	file:
opts	options.c	/^static char **dup_and_sub_options(char **opts, int num_opts)$/;"	z	function:dup_and_sub_options	typeref:typename:char **	file:
opts	options.c	/^static void options_to_lopts(struct fio_option *opts,$/;"	z	function:options_to_lopts	typeref:struct:fio_option *	file:
opts	parse.c	/^void sort_options(char **opts, const struct fio_option *options, int num_opts)$/;"	z	function:sort_options	typeref:typename:char **	file:
optstring	oslib/getopt_long.c	/^int getopt_long_only(int argc, char *const *argv, const char *optstring,$/;"	z	function:getopt_long_only	typeref:typename:const char *	file:
org	filesetup.c	/^void dup_files(struct thread_data *td, struct thread_data *org)$/;"	z	function:dup_files	typeref:struct:thread_data *	file:
org	parse.c	/^			   const struct fio_option *org,$/;"	z	function:__print_option	typeref:typename:const struct fio_option *	file:
org_idx	profiles/act.c	/^static unsigned int org_idx;$/;"	v	typeref:typename:unsigned int	file:
orig	engines/exec.c	/^char *str_replace(char *orig, const char *rep, const char *with)$/;"	z	function:str_replace	typeref:typename:char *	file:
orig_buffer	fio.h	/^	char *orig_buffer;$/;"	m	struct:thread_data	typeref:typename:char *
orig_buffer_aligned	engines/librpma_fio.h	/^	char *orig_buffer_aligned;$/;"	m	struct:librpma_fio_client_data	typeref:typename:char *
orig_buffer_aligned	engines/librpma_gpspm.c	/^	char *orig_buffer_aligned;$/;"	m	struct:server_data	typeref:typename:char *	file:
orig_buffer_size	fio.h	/^	size_t orig_buffer_size;$/;"	m	struct:thread_data	typeref:typename:size_t
orig_mr	engines/librpma_fio.h	/^	struct rpma_mr_local *orig_mr;$/;"	m	struct:librpma_fio_client_data	typeref:struct:rpma_mr_local *
orig_start	engines/e4defrag.c	/^	__u64 orig_start;       \/* logical start offset in block for orig *\/$/;"	m	struct:move_extent	typeref:typename:__u64	file:
origin	engines/http.c	/^static int _http_seek(void *stream, curl_off_t offset, int origin)$/;"	z	function:_http_seek	typeref:typename:int	file:
orval	parse.h	/^	int orval;			\/* OR value *\/$/;"	m	struct:value_pair	typeref:typename:int
os	gfio.h	/^	GtkWidget *os;$/;"	m	struct:probe_widget	typeref:typename:GtkWidget *
os	server.h	/^	uint8_t os;$/;"	m	struct:cmd_probe_reply_pdu	typeref:typename:uint8_t
os_aiocb_t	os/os-hpux.h	/^typedef struct aiocb64 os_aiocb_t;$/;"	t	typeref:struct:aiocb64
os_aiocb_t	os/os.h	/^typedef struct aiocb os_aiocb_t;$/;"	t	typeref:struct:aiocb
os_aix	os/os.h	/^	os_aix,$/;"	e	enum:__anon741282ae0103
os_android	os/os.h	/^	os_android,$/;"	e	enum:__anon741282ae0103
os_cache_line_size	os/os.h	/^static inline int os_cache_line_size(void)$/;"	f	typeref:typename:int
os_clk_tck	os/os.h	/^extern void os_clk_tck(long *clk_tck);$/;"	p	typeref:typename:void
os_clk_tck	os/os.h	/^static inline void os_clk_tck(long *clk_tck)$/;"	f	typeref:typename:void
os_clk_tck	os/windows/dlls.c	/^void os_clk_tck(long *clk_tck)$/;"	f	typeref:typename:void
os_cpu_has	os/os-linux.h	/^static inline bool os_cpu_has(cpu_features feature)$/;"	f	typeref:typename:bool
os_cpu_has	os/os.h	/^static inline bool os_cpu_has(cpu_features feature)$/;"	f	typeref:typename:bool
os_cpu_mask_t	os/os-dragonfly.h	/^typedef cpumask_t os_cpu_mask_t;$/;"	t	typeref:typename:cpumask_t
os_cpu_mask_t	os/os-freebsd.h	/^typedef cpuset_t os_cpu_mask_t;$/;"	t	typeref:typename:cpuset_t
os_cpu_mask_t	os/os-linux.h	/^typedef cpu_set_t os_cpu_mask_t;$/;"	t	typeref:typename:cpu_set_t
os_cpu_mask_t	os/os-solaris.h	/^typedef psetid_t os_cpu_mask_t;$/;"	t	typeref:typename:psetid_t
os_cpu_mask_t	os/os-windows-7.h	/^} os_cpu_mask_t;$/;"	t	typeref:struct:__anon08f18c4a0108
os_cpu_mask_t	os/os.h	/^typedef unsigned long os_cpu_mask_t;$/;"	t	typeref:typename:unsigned long
os_ctime_r	os/os-solaris.h	/^#define os_ctime_r(/;"	d
os_ctime_r	os/os.h	/^#define os_ctime_r(/;"	d
os_dragonfly	os/os.h	/^	os_dragonfly,$/;"	e	enum:__anon741282ae0103
os_freebsd	os/os.h	/^	os_freebsd,$/;"	e	enum:__anon741282ae0103
os_hpux	os/os.h	/^	os_hpux,$/;"	e	enum:__anon741282ae0103
os_linux	os/os.h	/^	os_linux = 1,$/;"	e	enum:__anon741282ae0103
os_mac	os/os.h	/^	os_mac,$/;"	e	enum:__anon741282ae0103
os_netbsd	os/os.h	/^	os_netbsd,$/;"	e	enum:__anon741282ae0103
os_nr	os/os.h	/^	os_nr,$/;"	e	enum:__anon741282ae0103
os_openbsd	os/os.h	/^	os_openbsd,$/;"	e	enum:__anon741282ae0103
os_phys_mem	os/os-aix.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-android.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-dragonfly.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-freebsd.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-hpux.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-linux.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-mac.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-netbsd.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-openbsd.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-solaris.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_phys_mem	os/os-windows.h	/^static inline unsigned long long os_phys_mem(void)$/;"	f	typeref:typename:unsigned long long
os_solaris	os/os.h	/^	os_solaris,$/;"	e	enum:__anon741282ae0103
os_trim	os/os-android.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	f	typeref:typename:int
os_trim	os/os-dragonfly.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	f	typeref:typename:int
os_trim	os/os-freebsd.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	f	typeref:typename:int
os_trim	os/os-linux.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	f	typeref:typename:int
os_windows	os/os.h	/^	os_windows,$/;"	e	enum:__anon741282ae0103
out	cgroup.c	/^out:$/;"	L	function:cgroup_shutdown	file:
out	client.c	/^out:$/;"	L	function:fio_client_handle_iolog	file:
out	client.c	/^out:$/;"	L	function:read_ini_data	file:
out	engines/dfs.c	/^out:$/;"	L	function:daos_fio_init	file:
out	engines/e4defrag.c	/^out:$/;"	L	function:fio_e4defrag_queue	file:
out	engines/glusterfs.c	/^out:$/;"	L	function:fio_gf_get_glfs	file:
out	engines/glusterfs.c	/^out:$/;"	L	function:fio_gf_new_fs	file:
out	engines/http.c	/^out:$/;"	L	function:fio_http_queue	file:
out	engines/io_uring.c	/^out:$/;"	L	function:fio_ioring_probe	file:
out	engines/libiscsi.c	/^out:$/;"	L	function:fio_iscsi_queue	file:
out	engines/libiscsi.c	/^out:$/;"	L	function:fio_iscsi_setup_lun	file:
out	engines/librpma_gpspm_flush.pb-c.c	/^                      uint8_t       *out)$/;"	z	function:gpspm_flush_request__pack	typeref:typename:uint8_t *	file:
out	engines/librpma_gpspm_flush.pb-c.c	/^                      uint8_t       *out)$/;"	z	function:gpspm_flush_response__pack	typeref:typename:uint8_t *	file:
out	engines/librpma_gpspm_flush.pb-c.h	/^                      uint8_t             *out);$/;"	z	prototype:gpspm_flush_request__pack	typeref:typename:uint8_t *	file:
out	engines/librpma_gpspm_flush.pb-c.h	/^                      uint8_t             *out);$/;"	z	prototype:gpspm_flush_response__pack	typeref:typename:uint8_t *	file:
out	engines/libzbc.c	/^out:$/;"	L	function:libzbc_open_dev	file:
out	engines/libzbc.c	/^out:$/;"	L	function:libzbc_report_zones	file:
out	fifo.h	/^	unsigned int out;	\/* data is extracted from off. (out % size) *\/$/;"	m	struct:fifo	typeref:typename:unsigned int
out	gclient.c	/^out:$/;"	L	function:gfio_show_clat_percentiles	file:
out	idletime.c	/^			  struct buf_output *out)$/;"	z	function:show_idle_prof_stats	typeref:struct:buf_output *	file:
out	init.c	/^out:$/;"	L	function:__parse_jobs_ini	file:
out	io_u.c	/^out:$/;"	L	function:__get_next_file	file:
out	io_u.c	/^out:$/;"	L	function:fill_io_u	file:
out	io_u.c	/^out:$/;"	L	function:get_io_u	file:
out	ioengines.c	/^out:$/;"	L	function:td_io_getevents	file:
out	json.c	/^static void json_print_array(struct json_array *array, struct buf_output *out)$/;"	z	function:json_print_array	typeref:struct:buf_output *	file:
out	json.c	/^static void json_print_level(int level, struct buf_output *out)$/;"	z	function:json_print_level	typeref:struct:buf_output *	file:
out	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *out)$/;"	z	function:json_print_pair	typeref:struct:buf_output *	file:
out	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *out)$/;"	z	function:json_print_value	typeref:struct:buf_output *	file:
out	json.c	/^void json_print_object(struct json_object *obj, struct buf_output *out)$/;"	z	function:json_print_object	typeref:struct:buf_output *	file:
out	json.h	/^void json_print_object(struct json_object *obj, struct buf_output *out);$/;"	z	prototype:json_print_object	typeref:struct:buf_output *	file:
out	lib/output_buffer.c	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len)$/;"	z	function:buf_output_add	typeref:struct:buf_output *	file:
out	lib/output_buffer.c	/^void buf_output_free(struct buf_output *out)$/;"	z	function:buf_output_free	typeref:struct:buf_output *	file:
out	lib/output_buffer.c	/^void buf_output_init(struct buf_output *out)$/;"	z	function:buf_output_init	typeref:struct:buf_output *	file:
out	lib/output_buffer.h	/^size_t buf_output_add(struct buf_output *out, const char *buf, size_t len);$/;"	z	prototype:buf_output_add	typeref:struct:buf_output *	file:
out	lib/output_buffer.h	/^void buf_output_free(struct buf_output *out);$/;"	z	prototype:buf_output_free	typeref:struct:buf_output *	file:
out	lib/output_buffer.h	/^void buf_output_init(struct buf_output *out);$/;"	z	prototype:buf_output_init	typeref:struct:buf_output *	file:
out	lib/pattern.c	/^			   char *out, unsigned int out_len,$/;"	z	function:parse_and_fill_pattern	typeref:typename:char *	file:
out	lib/pattern.c	/^		 char *out, unsigned int out_len, void *priv)$/;"	z	function:paste_format	typeref:typename:char *	file:
out	lib/pattern.c	/^		char *out, unsigned int out_len)$/;"	z	function:cpy_pattern	typeref:typename:char *	file:
out	lib/pattern.c	/^static const char *parse_file(const char *beg, char *out,$/;"	z	function:parse_file	typeref:typename:char *	file:
out	lib/pattern.c	/^static const char *parse_format(const char *in, char *out, unsigned int parsed,$/;"	z	function:parse_format	typeref:typename:char *	file:
out	lib/pattern.c	/^static const char *parse_number(const char *beg, char *out,$/;"	z	function:parse_number	typeref:typename:char *	file:
out	lib/pattern.c	/^static const char *parse_string(const char *beg, char *out,$/;"	z	function:parse_string	typeref:typename:char *	file:
out	lib/pattern.c	/^static int dup_pattern(char *out, unsigned int out_len, unsigned int pattern_len)$/;"	z	function:dup_pattern	typeref:typename:char *	file:
out	lib/pattern.h	/^			   char *out, unsigned int out_len,$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:char *	file:
out	lib/pattern.h	/^		 char *out, unsigned int out_len, void *priv);$/;"	z	prototype:paste_format	typeref:typename:char *	file:
out	lib/pattern.h	/^		char *out, unsigned int out_len);$/;"	z	prototype:cpy_pattern	typeref:typename:char *	file:
out	options.c	/^out:$/;"	L	function:str_directory_cb	file:
out	options.c	/^out:$/;"	L	function:str_numa_mpol_cb	file:
out	oslib/libmtd.c	/^out:$/;"	L	function:mtd_torture	file:
out	oslib/linux-blkzoned.c	/^out:$/;"	L	function:blkzoned_get_sysfs_attr	file:
out	oslib/linux-blkzoned.c	/^out:$/;"	L	function:blkzoned_report_zones	file:
out	server.c	/^out:$/;"	L	function:fio_handle_server_arg	file:
out	stat.c	/^					 struct buf_output *out)$/;"	z	function:show_thread_status_terse_all	typeref:struct:buf_output *	file:
out	stat.c	/^				       struct buf_output *out)$/;"	z	function:show_thread_status	typeref:struct:buf_output *	file:
out	stat.c	/^				      struct buf_output *out)$/;"	z	function:show_thread_status_normal	typeref:struct:buf_output *	file:
out	stat.c	/^				     struct buf_output *out)$/;"	z	function:show_thread_status_terse	typeref:struct:buf_output *	file:
out	stat.c	/^				   int ver, struct buf_output *out)$/;"	z	function:show_mixed_ddir_status_terse	typeref:struct:buf_output *	file:
out	stat.c	/^				   struct buf_output *out)$/;"	z	function:show_ddir_status_terse	typeref:struct:buf_output *	file:
out	stat.c	/^				   struct buf_output *out)$/;"	z	function:show_mixed_ddir_status	typeref:struct:buf_output *	file:
out	stat.c	/^				  const char *pre, struct buf_output *out)$/;"	z	function:show_clat_percentiles	typeref:struct:buf_output *	file:
out	stat.c	/^			     enum fio_ddir ddir, struct buf_output *out)$/;"	z	function:show_ddir_status	typeref:struct:buf_output *	file:
out	stat.c	/^			     fio_fp64_t *plist, struct buf_output *out)$/;"	z	function:show_block_infos	typeref:struct:buf_output *	file:
out	stat.c	/^			   struct buf_output *out)$/;"	z	function:show_agg_stats	typeref:struct:buf_output *	file:
out	stat.c	/^			struct buf_output *out)$/;"	z	function:display_lat	typeref:struct:buf_output *	file:
out	stat.c	/^		     const char *msg, struct buf_output *out)$/;"	z	function:show_lat	typeref:struct:buf_output *	file:
out	stat.c	/^		     int terse, struct buf_output *out)$/;"	z	function:print_disk_util	typeref:struct:buf_output *	file:
out	stat.c	/^		    struct buf_output *out)$/;"	z	function:show_disk_util	typeref:struct:buf_output *	file:
out	stat.c	/^static void show_lat_m(double *io_u_lat_m, struct buf_output *out)$/;"	z	function:show_lat_m	typeref:struct:buf_output *	file:
out	stat.c	/^static void show_lat_n(double *io_u_lat_n, struct buf_output *out)$/;"	z	function:show_lat_n	typeref:struct:buf_output *	file:
out	stat.c	/^static void show_lat_u(double *io_u_lat_u, struct buf_output *out)$/;"	z	function:show_lat_u	typeref:struct:buf_output *	file:
out	stat.c	/^static void show_latencies(struct thread_stat *ts, struct buf_output *out)$/;"	z	function:show_latencies	typeref:struct:buf_output *	file:
out	stat.c	/^static void show_ss_normal(struct thread_stat *ts, struct buf_output *out)$/;"	z	function:show_ss_normal	typeref:struct:buf_output *	file:
out	stat.c	/^void show_group_stats(struct group_run_stats *rs, struct buf_output *out)$/;"	z	function:show_group_stats	typeref:struct:buf_output *	file:
out	stat.c	/^void show_mixed_group_stats(struct group_run_stats *rs, struct buf_output *out) $/;"	z	function:show_mixed_group_stats	typeref:struct:buf_output *	file:
out	t/dedupe.c	/^out:$/;"	L	function:col_check	file:
out	t/io_uring.c	/^out:$/;"	L	function:io_uring_probe	file:
out	t/io_uring.c	/^out:$/;"	L	function:show_clat_percentiles	file:
out	verify-state.h	/^static inline void verify_state_gen_name(char *out, size_t size,$/;"	z	function:verify_state_gen_name	typeref:typename:char *	file:
out	zbd.c	/^out:$/;"	L	function:parse_zone_info	file:
out	zbd.c	/^out:$/;"	L	function:zbd_convert_to_open_zone	file:
out	zbd.c	/^out:$/;"	L	function:zbd_open_zone	file:
out	zbd.c	/^out:$/;"	L	function:zbd_set_max_open_zones	file:
out_close	oslib/libmtd.c	/^out_close:$/;"	L	function:mtd_get_info	file:
out_close	oslib/libmtd.c	/^out_close:$/;"	L	function:mtd_write_img	file:
out_close	oslib/libmtd_legacy.c	/^out_close:$/;"	L	function:legacy_get_dev_info	file:
out_error	oslib/libmtd.c	/^out_error:$/;"	L	function:libmtd_open	file:
out_error	oslib/libmtd.c	/^out_error:$/;"	L	function:read_data	file:
out_error	oslib/libmtd.c	/^out_error:$/;"	L	function:read_hex_ll	file:
out_error	oslib/libmtd.c	/^out_error:$/;"	L	function:read_pos_ll	file:
out_fail	smalloc.c	/^out_fail:$/;"	L	function:add_pool	file:
out_free	init.c	/^out_free:$/;"	L	function:parse_cmd_line	file:
out_free	oslib/libmtd.c	/^out_free:$/;"	L	function:mtd_write_img	file:
out_free	oslib/libmtd_legacy.c	/^out_free:$/;"	L	function:proc_parse_start	file:
out_len	lib/pattern.c	/^				unsigned int out_len, unsigned int *filled,$/;"	z	function:parse_format	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^				unsigned int out_len,$/;"	z	function:parse_number	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^				unsigned int out_len,$/;"	z	function:parse_string	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^			      unsigned int out_len,$/;"	z	function:parse_file	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^			   char *out, unsigned int out_len,$/;"	z	function:parse_and_fill_pattern	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^		 char *out, unsigned int out_len, void *priv)$/;"	z	function:paste_format	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^		char *out, unsigned int out_len)$/;"	z	function:cpy_pattern	typeref:typename:unsigned int	file:
out_len	lib/pattern.c	/^static int dup_pattern(char *out, unsigned int out_len, unsigned int pattern_len)$/;"	z	function:dup_pattern	typeref:typename:unsigned int	file:
out_len	lib/pattern.h	/^			   char *out, unsigned int out_len,$/;"	z	prototype:parse_and_fill_pattern	typeref:typename:unsigned int	file:
out_len	lib/pattern.h	/^		 char *out, unsigned int out_len, void *priv);$/;"	z	prototype:paste_format	typeref:typename:unsigned int	file:
out_len	lib/pattern.h	/^		char *out, unsigned int out_len);$/;"	z	prototype:cpy_pattern	typeref:typename:unsigned int	file:
out_pdu	server.c	/^static inline void __fio_net_prep_tail(z_stream *stream, void *out_pdu,$/;"	z	function:__fio_net_prep_tail	typeref:typename:void *	file:
out_pdu	server.c	/^static int __deflate_pdu_buffer(void *next_in, unsigned int next_sz, void **out_pdu,$/;"	z	function:__deflate_pdu_buffer	typeref:typename:void **	file:
output	crc/test.c	/^	uint32_t output;$/;"	m	struct:test_type	typeref:typename:uint32_t	file:
output	idletime.c	/^void show_idle_prof_stats(int output, struct json_object *parent,$/;"	z	function:show_idle_prof_stats	typeref:typename:int	file:
output	stat.c	/^				   fio_fp64_t *plist, unsigned long long **output,$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long long **	file:
output	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:unsigned long long **	file:
output	t/genzipf.c	/^	double output;$/;"	m	struct:output_sum	typeref:typename:double	file:
output	t/io_uring.c	/^				   unsigned long **output,$/;"	z	function:calc_clat_percentiles	typeref:typename:unsigned long **	file:
output	t/read-to-pipe-async.c	/^				     unsigned int **output)$/;"	z	function:calc_percentiles	typeref:typename:unsigned int **	file:
output	t/readonly.py	/^        output = run_fio(fio_path, test, index)$/;"	v
output	t/steadystate_tests.py	/^        output = subprocess.call([args.fio] + parameters)$/;"	v
output	t/steadystate_tests.py	/^        output = subprocess.check_output([args.fio] + test['args'])$/;"	v
output_ascii	t/btrace2fio.c	/^static int output_ascii = 1;$/;"	v	typeref:typename:int	file:
output_csv	t/genzipf.c	/^static void output_csv(struct node *nodes, unsigned long nnodes)$/;"	f	typeref:typename:void	file:
output_format	init.c	/^int output_format = FIO_OUTPUT_NORMAL;$/;"	v	typeref:typename:int
output_interval_data	tools/hist/fiologparser_hist.py	/^def output_interval_data(ctx,directions):$/;"	f
output_normal	t/genzipf.c	/^static void output_normal(struct node *nodes, unsigned long nnodes,$/;"	f	typeref:typename:void	file:
output_nranges	t/genzipf.c	/^static unsigned long output_nranges = DEF_NR_OUTPUT;$/;"	v	typeref:typename:unsigned long	file:
output_p	t/btrace2fio.c	/^static int output_p(void)$/;"	f	typeref:typename:int	file:
output_sum	t/genzipf.c	/^struct output_sum {$/;"	s	file:
output_sym	configure	/^output_sym() {$/;"	f
output_type	t/genzipf.c	/^static int output_type = OUTPUT_NORMAL;$/;"	v	typeref:typename:int	file:
output_weighted_interval_data	tools/hist/fiologparser_hist.py	/^def output_weighted_interval_data(ctx,printdirs):$/;"	f
outstanding_events	engines/nfs.c	/^	int outstanding_events; \/* IOs issued to libnfs, that have not returned yet *\/$/;"	m	struct:fio_libnfs_options	typeref:typename:int	file:
oval	parse.h	/^	unsigned long long oval;\/* output value *\/$/;"	m	struct:value_pair	typeref:typename:unsigned long long
ovals	gclient.c	/^static GtkWidget *gfio_output_clat_percentiles(unsigned long long *ovals,$/;"	z	function:gfio_output_clat_percentiles	typeref:typename:unsigned long long *	file:
ovals	gclient.c	/^static struct graph *setup_clat_graph(char *title, unsigned long long *ovals,$/;"	z	function:setup_clat_graph	typeref:typename:unsigned long long *	file:
over	t/read-to-pipe-async.c	/^	unsigned int over;$/;"	m	struct:stats	typeref:typename:unsigned int	file:
overflow	os/linux/io_uring.h	/^	__u32 overflow;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
overlap	lib/prio_tree.c	/^static inline int overlap(struct prio_tree_iter *iter,$/;"	f	typeref:typename:int	file:
overlap_check	backend.c	/^pthread_mutex_t overlap_check = PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP;$/;"	v	typeref:typename:pthread_mutex_t
overlap_check	backend.c	/^pthread_mutex_t overlap_check = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
overlap_test	t/axmap.c	/^struct overlap_test {$/;"	s	file:
override16	engines/sg.c	/^			    unsigned long long nr_blocks, bool override16)$/;"	z	function:fio_sgio_rw_lba	typeref:typename:bool	file:
override_sync	thread_options.h	/^	uint32_t override_sync;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
override_sync	thread_options.h	/^	unsigned int override_sync;$/;"	m	struct:thread_options	typeref:typename:unsigned int
overwrite	thread_options.h	/^	uint32_t overwrite;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
overwrite	thread_options.h	/^	unsigned int overwrite;$/;"	m	struct:thread_options	typeref:typename:unsigned int
p	engines/http.c	/^static char *_conv_hex(const unsigned char *p, size_t len)$/;"	z	function:_conv_hex	typeref:typename:const unsigned char *	file:
p	engines/http.c	/^static char *_gen_hex_md5(const char *p, size_t len)$/;"	z	function:_gen_hex_md5	typeref:typename:const char *	file:
p	engines/http.c	/^static char *_gen_hex_sha256(const char *p, size_t len)$/;"	z	function:_gen_hex_sha256	typeref:typename:const char *	file:
p	engines/io_uring.c	/^static int fio_ioring_mmap(struct ioring_data *ld, struct io_uring_params *p)$/;"	z	function:fio_ioring_mmap	typeref:struct:io_uring_params *	file:
p	eta.c	/^static int gen_eta_str(struct jobs_eta *je, char *p, size_t left,$/;"	z	function:gen_eta_str	typeref:typename:char *	file:
p	gclient.c	/^				 struct gfio_client *gc, struct cmd_du_pdu *p)$/;"	z	function:__gfio_disk_util_show	typeref:struct:cmd_du_pdu *	file:
p	gclient.c	/^static int on_expose_lat_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_lat_drawing_area	typeref:typename:gpointer	file:
p	gfio.c	/^static int on_expose_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_drawing_area	typeref:typename:gpointer	file:
p	goptions.c	/^				       unsigned long long *p, unsigned int idx)$/;"	z	function:__gopt_new_int	typeref:typename:unsigned long long *	file:
p	goptions.c	/^				     unsigned long long *p, unsigned int idx)$/;"	z	function:gopt_new_str_val	typeref:typename:unsigned long long *	file:
p	goptions.c	/^				    struct fio_option *o, unsigned long long *p,$/;"	z	function:gopt_new_ullong	typeref:typename:unsigned long long *	file:
p	goptions.c	/^static void gopt_int_set_val(struct gopt_int *i, unsigned long long p)$/;"	z	function:gopt_int_set_val	typeref:typename:unsigned long long	file:
p	graph.h	/^extern int graph_contains_xy(struct graph *p, int x, int y);$/;"	z	prototype:graph_contains_xy	typeref:struct:graph *	file:
p	init.c	/^static void dump_print_option(struct print_option *p)$/;"	z	function:dump_print_option	typeref:struct:print_option *	file:
p	io_u.h	/^static inline void dprint_io_u(struct io_u *io_u, const char *p)$/;"	z	function:dprint_io_u	typeref:typename:const char *	file:
p	iolog.c	/^void setup_log(struct io_log **log, struct log_params *p,$/;"	z	function:setup_log	typeref:struct:log_params *	file:
p	lib/rbtree.h	/^static inline void rb_set_parent(struct fio_rb_node *rb, struct fio_rb_node *p)$/;"	z	function:rb_set_parent	typeref:struct:fio_rb_node *	file:
p	parse.c	/^int check_str_bytes(const char *p, long long *val, void *data)$/;"	z	function:check_str_bytes	typeref:typename:const char *	file:
p	parse.c	/^int check_str_time(const char *p, long long *val, int is_seconds)$/;"	z	function:check_str_time	typeref:typename:const char *	file:
p	parse.c	/^static int check_int(const char *p, int *val)$/;"	z	function:check_int	typeref:typename:const char *	file:
p	parse.c	/^static unsigned long long __get_mult_bytes(const char *p, void *data,$/;"	z	function:__get_mult_bytes	typeref:typename:const char *	file:
p	parse.c	/^void strip_blank_end(char *p)$/;"	z	function:strip_blank_end	typeref:typename:char *	file:
p	parse.c	/^void strip_blank_front(char **p)$/;"	z	function:strip_blank_front	typeref:typename:char **	file:
p	parse.h	/^extern int check_str_bytes(const char *p, long long *val, void *data);$/;"	z	prototype:check_str_bytes	typeref:typename:const char *	file:
p	parse.h	/^extern int check_str_time(const char *p, long long *val, int);$/;"	z	prototype:check_str_time	typeref:typename:const char *	file:
p	server.c	/^static int fio_send_data(int sk, const void *p, unsigned int len)$/;"	z	function:fio_send_data	typeref:typename:const void *	file:
p	t/btrace2fio.c	/^	struct btrace_pid *p;$/;"	m	struct:inflight	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int __output_p(struct btrace_pid *p, unsigned long *ios)$/;"	z	function:__output_p	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int __output_p_fio(struct btrace_pid *p, unsigned long *ios,$/;"	z	function:__output_p_fio	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int btrace_add_file(struct btrace_pid *p, uint32_t devno)$/;"	z	function:btrace_add_file	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int handle_queue_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_queue_trace	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int handle_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int handle_trace_discard(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace_discard	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static int handle_trace_fs(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace_fs	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static void __output_p_ascii(struct btrace_pid *p, unsigned long *ios)$/;"	z	function:__output_p_ascii	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static void check_merges(struct btrace_pid *p, struct flist_head *pidlist)$/;"	z	function:check_merges	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static void free_p(struct btrace_pid *p)$/;"	z	function:free_p	typeref:struct:btrace_pid *	file:
p	t/btrace2fio.c	/^static void inflight_add(struct btrace_pid *p, uint64_t sector, uint32_t len)$/;"	z	function:inflight_add	typeref:struct:btrace_pid *	file:
p	t/io_uring.c	/^static int io_uring_setup(unsigned entries, struct io_uring_params *p)$/;"	z	function:io_uring_setup	typeref:struct:io_uring_params *	file:
p	tools/hist/fiologparser_hist.py	/^    p = argparse.ArgumentParser()$/;"	v
p	tools/hist/half-bins.py	/^    p = argparse.ArgumentParser()$/;"	v
p	verify.c	/^static void __fill_buffer(struct thread_options *o, uint64_t seed, void *p,$/;"	z	function:__fill_buffer	typeref:typename:void *	file:
p	verify.c	/^static void fill_crc16(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc16	typeref:typename:void *	file:
p	verify.c	/^static void fill_crc32(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32	typeref:typename:void *	file:
p	verify.c	/^static void fill_crc32c(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc32c	typeref:typename:void *	file:
p	verify.c	/^static void fill_crc64(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc64	typeref:typename:void *	file:
p	verify.c	/^static void fill_crc7(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_crc7	typeref:typename:void *	file:
p	verify.c	/^static void fill_md5(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_md5	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha1(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha1	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha256	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha3(struct fio_sha3_ctx *sha3_ctx, void *p, unsigned int len)$/;"	z	function:fill_sha3	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha3_224(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_224	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha3_256(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_256	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha3_384(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_384	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha3_512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha3_512	typeref:typename:void *	file:
p	verify.c	/^static void fill_sha512(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_sha512	typeref:typename:void *	file:
p	verify.c	/^static void fill_xxhash(struct verify_header *hdr, void *p, unsigned int len)$/;"	z	function:fill_xxhash	typeref:typename:void *	file:
p	verify.c	/^void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len)$/;"	z	function:fill_buffer_pattern	typeref:typename:void *	file:
p	verify.c	/^void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len,$/;"	z	function:fill_verify_pattern	typeref:typename:void *	file:
p	verify.c	/^void verify_assign_state(struct thread_data *td, void *p)$/;"	z	function:verify_assign_state	typeref:typename:void *	file:
p	verify.h	/^extern void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len);$/;"	z	prototype:fill_buffer_pattern	typeref:typename:void *	file:
p	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:typename:void *	file:
p1	engines/cpu.c	/^static int stress_qsort_cmp_1(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_1	typeref:typename:const void *	file:
p1	engines/cpu.c	/^static int stress_qsort_cmp_2(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_2	typeref:typename:const void *	file:
p1	engines/cpu.c	/^static int stress_qsort_cmp_3(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_3	typeref:typename:const void *	file:
p1	engines/rbd.c	/^static int rbd_io_u_cmp(const void *p1, const void *p2)$/;"	z	function:rbd_io_u_cmp	typeref:typename:const void *	file:
p1	gettime.c	/^static int clock_cmp(const void *p1, const void *p2)$/;"	z	function:clock_cmp	typeref:typename:const void *	file:
p1	options.c	/^static int bs_cmp(const void *p1, const void *p2)$/;"	z	function:bs_cmp	typeref:typename:const void *	file:
p1	options.c	/^static int fio_split_prio_cmp(const void *p1, const void *p2)$/;"	z	function:fio_split_prio_cmp	typeref:typename:const void *	file:
p1	parse.c	/^static int opt_cmp(const void *p1, const void *p2)$/;"	z	function:opt_cmp	typeref:typename:const void *	file:
p1	parse.c	/^static int vp_cmp(const void *p1, const void *p2)$/;"	z	function:vp_cmp	typeref:typename:const void *	file:
p1	t/genzipf.c	/^static int node_cmp(const void *p1, const void *p2)$/;"	z	function:node_cmp	typeref:typename:const void *	file:
p2	engines/cpu.c	/^static int stress_qsort_cmp_1(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_1	typeref:typename:const void *	file:
p2	engines/cpu.c	/^static int stress_qsort_cmp_2(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_2	typeref:typename:const void *	file:
p2	engines/cpu.c	/^static int stress_qsort_cmp_3(const void *p1, const void *p2)$/;"	z	function:stress_qsort_cmp_3	typeref:typename:const void *	file:
p2	engines/rbd.c	/^static int rbd_io_u_cmp(const void *p1, const void *p2)$/;"	z	function:rbd_io_u_cmp	typeref:typename:const void *	file:
p2	gettime.c	/^static int clock_cmp(const void *p1, const void *p2)$/;"	z	function:clock_cmp	typeref:typename:const void *	file:
p2	options.c	/^static int bs_cmp(const void *p1, const void *p2)$/;"	z	function:bs_cmp	typeref:typename:const void *	file:
p2	options.c	/^static int fio_split_prio_cmp(const void *p1, const void *p2)$/;"	z	function:fio_split_prio_cmp	typeref:typename:const void *	file:
p2	parse.c	/^static int opt_cmp(const void *p1, const void *p2)$/;"	z	function:opt_cmp	typeref:typename:const void *	file:
p2	parse.c	/^static int vp_cmp(const void *p1, const void *p2)$/;"	z	function:vp_cmp	typeref:typename:const void *	file:
p2	t/genzipf.c	/^static int node_cmp(const void *p1, const void *p2)$/;"	z	function:node_cmp	typeref:typename:const void *	file:
p_ld	engines/libzbc.c	/^			   struct libzbc_data **p_ld)$/;"	z	function:libzbc_open_dev	typeref:struct:libzbc_data **	file:
pack754	lib/ieee754.c	/^uint64_t pack754(long double f, unsigned bits, unsigned expbits)$/;"	f	typeref:typename:uint64_t
pack754	lib/ieee754.h	/^extern uint64_t pack754(long double f, unsigned bits, unsigned expbits);$/;"	p	typeref:typename:uint64_t
pad	diskutil.h	/^	uint32_t pad;$/;"	m	struct:disk_util_agg	typeref:typename:uint32_t
pad	engines/cpu.c	/^	void *pad;$/;"	m	struct:cpu_options	typeref:typename:void *	file:
pad	engines/dfs.c	/^	void		*pad;$/;"	m	struct:daos_fio_options	typeref:typename:void *	file:
pad	engines/e4defrag.c	/^	void *pad;$/;"	m	struct:e4defrag_options	typeref:typename:void *	file:
pad	engines/exec.c	/^	void *pad;$/;"	m	struct:exec_options	typeref:typename:void *	file:
pad	engines/filestat.c	/^	void *pad;$/;"	m	struct:filestat_options	typeref:typename:void *	file:
pad	engines/gfapi.h	/^	void *pad;$/;"	m	struct:gf_options	typeref:typename:void *
pad	engines/http.c	/^	void *pad;$/;"	m	struct:http_options	typeref:typename:void *	file:
pad	engines/libhdfs.c	/^	void *pad;			\/* needed because offset can't be 0 for an option defined used offsetof *\/$/;"	m	struct:hdfsio_options	typeref:typename:void *	file:
pad	engines/libiscsi.c	/^	void	*pad;$/;"	m	struct:iscsi_options	typeref:typename:void *	file:
pad	engines/librpma_fio.h	/^	void *pad;$/;"	m	struct:librpma_fio_options_values	typeref:typename:void *
pad	engines/mmap.c	/^	void *pad;$/;"	m	struct:mmap_options	typeref:typename:void *	file:
pad	engines/mtd.c	/^	void *pad; \/* avoid off1 == 0 *\/$/;"	m	struct:fio_mtd_options	typeref:typename:void *	file:
pad	engines/rados.c	/^	void *pad;$/;"	m	struct:rados_options	typeref:typename:void *	file:
pad	engines/rbd.c	/^	void *pad;$/;"	m	struct:rbd_options	typeref:typename:void *	file:
pad	engines/sg.c	/^	void *pad;$/;"	m	struct:sg_options	typeref:typename:void *	file:
pad	engines/skeleton_external.c	/^	void *pad; \/* avoid ->off1 of fio_option becomes 0 *\/$/;"	m	struct:fio_skeleton_options	typeref:typename:void *	file:
pad	engines/sync.c	/^	void *pad;$/;"	m	struct:psyncv2_options	typeref:typename:void *	file:
pad	os/linux/io_uring.h	/^	__u32	pad;$/;"	m	struct:io_uring_getevents_arg	typeref:typename:__u32
pad	profiles/act.c	/^	unsigned int pad;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
pad	profiles/tiobench.c	/^	unsigned int pad;$/;"	m	struct:tiobench_options	typeref:typename:unsigned int	file:
pad	stat.h	/^	uint32_t pad;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
pad	thread_options.h	/^	uint32_t pad;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pad	thread_options.h	/^	uint8_t pad[6];$/;"	m	struct:zone_split	typeref:typename:uint8_t[6]
pad2	stat.h	/^		uint32_t pad2;$/;"	m	union:thread_stat::__anon1c8a8417010a	typeref:typename:uint32_t
pad2	thread_options.h	/^	uint32_t pad2;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pad3	stat.h	/^	uint32_t pad3;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
pad3	thread_options.h	/^	uint32_t pad3;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pad4	stat.h	/^		uint64_t pad4;$/;"	m	union:thread_stat::__anon1c8a8417020a	typeref:typename:uint64_t
pad4	thread_options.h	/^	uint32_t pad4;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pad5	stat.h	/^		uint64_t pad5;$/;"	m	union:thread_stat::__anon1c8a8417030a	typeref:typename:uint64_t
pad5	thread_options.h	/^	uint32_t pad5;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pad6	stat.h	/^		uint64_t pad6;$/;"	m	union:thread_stat::__anon1c8a8417040a	typeref:typename:uint64_t
padding	engines/nbd.c	/^	void *padding;$/;"	m	struct:nbd_options	typeref:typename:void *	file:
padding	engines/xnvme.c	/^	void *padding;$/;"	m	struct:xnvme_fioe_options	typeref:typename:void *	file:
page	gfio.c	/^				     guint page, gpointer data)$/;"	z	function:notebook_switch_page	typeref:typename:guint	file:
page_label	gfio.h	/^	GtkWidget *page_label;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
page_mask	libfio.c	/^uintptr_t page_mask = 0;$/;"	v	typeref:typename:uintptr_t
page_nr	printing.c	/^			      GtkPrintContext *context, gint page_nr,$/;"	z	function:results_draw_page	typeref:typename:gint	file:
page_num	gfio.h	/^	gint page_num;$/;"	m	struct:gui_entry	typeref:typename:gint
page_setup	printing.c	/^	GtkPageSetup *page_setup;$/;"	m	struct:printing_parameters	typeref:typename:GtkPageSetup *	file:
page_size	libfio.c	/^uintptr_t page_size = 0;$/;"	v	typeref:typename:uintptr_t
pair	json.c	/^static int json_object_add_pair(struct json_object *obj, struct json_pair *pair)$/;"	z	function:json_object_add_pair	typeref:struct:json_pair *	file:
pair	json.c	/^static int json_pair_level(struct json_pair *pair)$/;"	z	function:json_pair_level	typeref:struct:json_pair *	file:
pair	json.c	/^static int json_pair_level(struct json_pair *pair);$/;"	z	prototype:json_pair_level	typeref:struct:json_pair *	file:
pair	json.c	/^static void json_free_pair(struct json_pair *pair)$/;"	z	function:json_free_pair	typeref:struct:json_pair *	file:
pair	json.c	/^static void json_free_pair(struct json_pair *pair);$/;"	z	prototype:json_free_pair	typeref:struct:json_pair *	file:
pair	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *);$/;"	z	prototype:json_print_pair	typeref:struct:json_pair *	file:
pair	json.c	/^static void json_print_pair(struct json_pair *pair, struct buf_output *out)$/;"	z	function:json_print_pair	typeref:struct:json_pair *	file:
pair_cnt	json.h	/^	int pair_cnt;$/;"	m	struct:json_object	typeref:typename:int
pairs	json.h	/^	struct json_pair **pairs;$/;"	m	struct:json_object	typeref:struct:json_pair **
parameters	t/steadystate_tests.py	/^        parameters = [ "--max-jobs=16", "--name=job{0}".format(jobnum) ]$/;"	v
parent	fio.h	/^	struct thread_data *parent;$/;"	m	struct:thread_data	typeref:struct:thread_data *
parent	goptions.c	/^				      struct fio_option *parent,$/;"	z	function:gopt_set_children_visible	typeref:struct:fio_option *	file:
parent	graph.c	/^	struct graph *parent;$/;"	m	struct:graph_label	typeref:struct:graph *	file:
parent	idletime.c	/^void show_idle_prof_stats(int output, struct json_object *parent,$/;"	z	function:show_idle_prof_stats	typeref:struct:json_object *	file:
parent	init.c	/^static struct thread_data *get_new_job(bool global, struct thread_data *parent,$/;"	z	function:get_new_job	typeref:struct:thread_data *	file:
parent	json.h	/^	struct json_object *parent;$/;"	m	struct:json_pair	typeref:struct:json_object *
parent	json.h	/^	struct json_value *parent;$/;"	m	struct:json_array	typeref:struct:json_value *
parent	json.h	/^	struct json_value *parent;$/;"	m	struct:json_object	typeref:struct:json_value *
parent	lib/prio_tree.h	/^	struct prio_tree_node	*parent;$/;"	m	struct:prio_tree_node	typeref:struct:prio_tree_node *
parent	lib/rbtree.c	/^			     struct fio_rb_node *parent,$/;"	z	function:__rb_erase_color	typeref:struct:fio_rb_node *	file:
parent	lib/rbtree.h	/^				struct fio_rb_node * parent,$/;"	z	function:rb_link_node	typeref:struct:fio_rb_node *	file:
parent	parse.h	/^	const char *parent;		\/* parent option *\/$/;"	m	struct:fio_option	typeref:typename:const char *
parent	stat.c	/^				 struct json_object *parent)$/;"	z	function:add_ddir_status_json	typeref:struct:json_object *	file:
parent	stat.c	/^		struct group_run_stats *rs, struct json_object *parent)$/;"	z	function:add_mixed_ddir_status_json	typeref:struct:json_object *	file:
parent	stat.c	/^void show_disk_util(int terse, struct json_object *parent,$/;"	z	function:show_disk_util	typeref:struct:json_object *	file:
parent	stat.h	/^				struct disk_util_agg *agg, struct json_array *parent);$/;"	z	prototype:json_array_add_disk_util	typeref:struct:json_array *	file:
parent_array	json.h	/^		struct json_array *parent_array;$/;"	m	union:json_value::__anon078191b5020a	typeref:struct:json_array *
parent_pair	json.h	/^		struct json_pair *parent_pair;$/;"	m	union:json_value::__anon078191b5020a	typeref:struct:json_pair *
parent_tv	stat.c	/^static int __add_samples(struct thread_data *td, struct timespec *parent_tv,$/;"	z	function:__add_samples	typeref:struct:timespec *	file:
parent_type	json.h	/^	int parent_type;$/;"	m	struct:json_value	typeref:typename:int
parent_update_ramp	time.c	/^static bool parent_update_ramp(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
pareto_h	fio.h	/^		double pareto_h;$/;"	m	union:thread_data::__anon0f7035d90a0a	typeref:typename:double
pareto_h	thread_options.h	/^	fio_fp64_t pareto_h;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
pareto_h	thread_options.h	/^	fio_fp64_t pareto_h;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
pareto_init	lib/zipf.c	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	f	typeref:typename:void
pareto_init	lib/zipf.h	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	p	typeref:typename:void
pareto_next	lib/zipf.c	/^uint64_t pareto_next(struct zipf_state *zs)$/;"	f	typeref:typename:uint64_t
pareto_next	lib/zipf.h	/^uint64_t pareto_next(struct zipf_state *zs);$/;"	p	typeref:typename:uint64_t
pareto_pow	lib/zipf.h	/^	double pareto_pow;$/;"	m	struct:zipf_state	typeref:typename:double
parse.o	Makefile	/^parse.o: lex.yy.o y.tab.o$/;"	t
parse_and_fill_pattern	lib/pattern.c	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	f	typeref:typename:int
parse_and_fill_pattern	lib/pattern.h	/^int parse_and_fill_pattern(const char *in, unsigned int in_len,$/;"	p	typeref:typename:int
parse_args	t/jsonplus2csv_test.py	/^def parse_args():$/;"	f
parse_args	t/latency_percentiles.py	/^def parse_args():$/;"	f
parse_args	t/readonly.py	/^def parse_args():$/;"	f
parse_args	t/run-fio-tests.py	/^def parse_args():$/;"	f
parse_args	t/sgunmap-perf.py	/^def parse_args():$/;"	f
parse_args	t/sgunmap-test.py	/^def parse_args():$/;"	f
parse_args	t/steadystate_tests.py	/^def parse_args():$/;"	f
parse_args	t/strided.py	/^def parse_args():$/;"	f
parse_args	tools/fio_jsonplus_clat2csv	/^def parse_args():$/;"	f
parse_args	tools/fiologparser.py	/^def parse_args():$/;"	f
parse_cmd_client	init.c	/^static void parse_cmd_client(void *client, char *opt)$/;"	f	typeref:typename:void	file:
parse_cmd_line	fio.h	/^extern int parse_cmd_line(int, char **, int);$/;"	p	typeref:typename:int
parse_cmd_line	init.c	/^int parse_cmd_line(int argc, char *argv[], int client_type)$/;"	f	typeref:typename:int
parse_cmd_option	parse.c	/^int parse_cmd_option(const char *opt, const char *val,$/;"	f	typeref:typename:int
parse_cmd_option	parse.h	/^extern int parse_cmd_option(const char *t, const char *l,$/;"	p	typeref:typename:int
parse_cmdline	tools/genfio	/^parse_cmdline() {$/;"	f
parse_cmdprio_bssplit_entry	options.c	/^static int parse_cmdprio_bssplit_entry(struct thread_options *o,$/;"	f	typeref:typename:int	file:
parse_dryrun	fio.h	/^extern bool parse_dryrun(void);$/;"	p	typeref:typename:bool
parse_dryrun	init.c	/^bool parse_dryrun(void)$/;"	f	typeref:typename:bool
parse_file	lib/pattern.c	/^static const char *parse_file(const char *beg, char *out,$/;"	f	typeref:typename:const char *	file:
parse_format	lib/pattern.c	/^static const char *parse_format(const char *in, char *out, unsigned int parsed,$/;"	f	typeref:typename:const char *	file:
parse_global_files	tools/plot/fio2gnuplot	/^def parse_global_files(fio_data_file, global_search):$/;"	f
parse_hist_file	tools/hist/fio-histo-log-pctiles.py	/^def parse_hist_file(logfn, buckets_per_interval, log_hist_msec):$/;"	f
parse_is_percent	parse.h	/^static inline int parse_is_percent(unsigned long long val)$/;"	f	typeref:typename:int
parse_is_percent_uncapped	parse.h	/^static inline int parse_is_percent_uncapped(unsigned long long val)$/;"	f	typeref:typename:int
parse_is_zone	parse.h	/^static inline int parse_is_zone(unsigned long long val)$/;"	f	typeref:typename:int
parse_jobs_ini	fio.h	/^extern int parse_jobs_ini(char *, int, int, int);$/;"	p	typeref:typename:int
parse_jobs_ini	init.c	/^int parse_jobs_ini(char *file, int is_buf, int stonewall_flag, int type)$/;"	f	typeref:typename:int
parse_number	lib/pattern.c	/^static const char *parse_number(const char *beg, char *out,$/;"	f	typeref:typename:const char *	file:
parse_only	init.c	/^static bool parse_only;$/;"	v	typeref:typename:bool	file:
parse_option	parse.c	/^int parse_option(char *opt, const char *input, const struct fio_option *options,$/;"	f	typeref:typename:int
parse_option	parse.h	/^extern int parse_option(char *, const char *, const struct fio_option *,$/;"	p	typeref:typename:int
parse_options	fio.h	/^extern int __must_check parse_options(int, char **);$/;"	p	typeref:typename:int __must_check
parse_options	init.c	/^int parse_options(int argc, char *argv[])$/;"	f	typeref:typename:int
parse_options	t/genzipf.c	/^static int parse_options(int argc, char *argv[])$/;"	f	typeref:typename:int	file:
parse_options	t/read-to-pipe-async.c	/^static int parse_options(int argc, char *argv[])$/;"	f	typeref:typename:int	file:
parse_output_format	init.c	/^static int parse_output_format(const char *optarg)$/;"	f	typeref:typename:int	file:
parse_res	engines/cmdprio.c	/^				     struct cmdprio_parse_result *parse_res)$/;"	z	function:fio_cmdprio_bssplit_parse	typeref:struct:cmdprio_parse_result *	file:
parse_res	engines/cmdprio.c	/^				 struct cmdprio_parse_result *parse_res,$/;"	z	function:fio_cmdprio_generate_bsprio_desc	typeref:struct:cmdprio_parse_result *	file:
parse_string	lib/pattern.c	/^static const char *parse_string(const char *beg, char *out,$/;"	f	typeref:typename:const char *	file:
parse_zone_info	zbd.c	/^static int parse_zone_info(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
parse_zoned_distribution	options.c	/^static int parse_zoned_distribution(struct thread_data *td, const char *input,$/;"	f	typeref:typename:int	file:
parsed	lib/pattern.c	/^static const char *parse_format(const char *in, char *out, unsigned int parsed,$/;"	z	function:parse_format	typeref:typename:unsigned int	file:
parser_value_type	y.tab.c	/^	struct parser_value_type {$/;"	s	union:valtype	file:
parser_value_type	y.tab.c	/^struct parser_value_type {$/;"	s	file:
parser_value_type	y.tab.h	/^	struct parser_value_type {$/;"	s	union:valtype
parsing	t/steadystate_tests.py	/^    parsing = [ { 'args': ["--parse-only", "--debug=parse", "--ss_dur=10s", "--ss=iops:10", "--s/;"	v
partial	crc/sha3.h	/^	unsigned int	partial;$/;"	m	struct:fio_sha3_ctx	typeref:typename:unsigned int
pass	engines/http.c	/^	char *pass;$/;"	m	struct:http_options	typeref:typename:char *	file:
passed	t/readonly.py	/^            passed = passed + 1$/;"	v
passed	t/readonly.py	/^    passed = 0$/;"	v
passed	t/steadystate_tests.py	/^                                passed = passed + 1$/;"	v
passed	t/steadystate_tests.py	/^                    passed = passed + 1$/;"	v
passed	t/steadystate_tests.py	/^            passed = passed + 1$/;"	v
passed	t/steadystate_tests.py	/^    passed = 0$/;"	v
passed	t/strided.py	/^            passed = passed + 1$/;"	v
passed	t/strided.py	/^    passed = 0$/;"	v
paste	lib/pattern.h	/^	int (*paste)(char *buf, unsigned int len, void *priv);$/;"	m	struct:pattern_fmt_desc	typeref:typename:int (*)(char * buf,unsigned int len,void * priv)
paste_blockoff	verify.c	/^int paste_blockoff(char *buf, unsigned int len, void *priv)$/;"	f	typeref:typename:int
paste_blockoff	verify.h	/^extern int paste_blockoff(char *buf, unsigned int len, void *priv);$/;"	p	typeref:typename:int
paste_format	lib/pattern.c	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	f	typeref:typename:int
paste_format	lib/pattern.h	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	p	typeref:typename:int
paste_format_inplace	lib/pattern.c	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	f	typeref:typename:int
paste_format_inplace	lib/pattern.h	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	p	typeref:typename:int
path	cgroup.c	/^static int cgroup_write_pid(struct thread_data *td, char *path, bool cgroup2)$/;"	z	function:cgroup_write_pid	typeref:typename:char *	file:
path	cgroup.c	/^static int write_int_to_file(struct thread_data *td, const char *path,$/;"	z	function:write_int_to_file	typeref:typename:const char *	file:
path	cgroup.h	/^	char *path;$/;"	m	struct:cgroup_mnt	typeref:typename:char *
path	diskutil.c	/^						   char *path)$/;"	z	function:__init_per_file_disk_util	typeref:typename:char *	file:
path	diskutil.c	/^				       int mindev, char *path)$/;"	z	function:disk_util_add	typeref:typename:char *	file:
path	diskutil.c	/^		int majdev, int mindev, char *path);$/;"	z	prototype:__init_per_file_disk_util	typeref:typename:char *	file:
path	diskutil.c	/^static int check_dev_match(int majdev, int mindev, char *path)$/;"	z	function:check_dev_match	typeref:typename:char *	file:
path	diskutil.c	/^static int find_block_dir(int majdev, int mindev, char *path, int link_ok)$/;"	z	function:find_block_dir	typeref:typename:char *	file:
path	diskutil.c	/^static int read_block_dev_entry(char *path, int *maj, int *min)$/;"	z	function:read_block_dev_entry	typeref:typename:char *	file:
path	diskutil.c	/^static void find_add_disk_slaves(struct thread_data *td, char *path,$/;"	z	function:find_add_disk_slaves	typeref:typename:char *	file:
path	diskutil.h	/^	char path[PATH_MAX];$/;"	m	struct:disk_util	typeref:typename:char[]
path	engines/net.c	/^					const char *path)$/;"	z	function:fio_netio_setup_connect_unix	typeref:typename:const char *	file:
path	engines/net.c	/^static int fio_netio_setup_listen_unix(struct thread_data *td, const char *path)$/;"	z	function:fio_netio_setup_listen_unix	typeref:typename:const char *	file:
path	filesetup.c	/^int add_dir_files(struct thread_data *td, const char *path)$/;"	z	function:add_dir_files	typeref:typename:const char *	file:
path	filesetup.c	/^int longest_existing_path(char *path) {$/;"	z	function:longest_existing_path	typeref:typename:char *	file:
path	gfio.c	/^static void set_menu_entry_text(struct gui *ui, const char *path,$/;"	z	function:set_menu_entry_text	typeref:typename:const char *	file:
path	gfio.c	/^static void set_menu_entry_visible(struct gui *ui, const char *path, int show)$/;"	z	function:set_menu_entry_visible	typeref:typename:const char *	file:
path	iolog.c	/^static bool is_socket(const char *path)$/;"	z	function:is_socket	typeref:typename:const char *	file:
path	iolog.c	/^static int open_socket(const char *path)$/;"	z	function:open_socket	typeref:typename:const char *	file:
path	os/os-android.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-dragonfly.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-freebsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-linux.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-netbsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-openbsd.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-solaris.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/os-windows.h	/^int lstat(const char * path, struct stat * buf);$/;"	z	prototype:lstat	typeref:typename:const char *	file:
path	os/os-windows.h	/^static inline int fio_mkdir(const char *path, mode_t mode) {$/;"	z	function:fio_mkdir	typeref:typename:const char *	file:
path	os/os.h	/^static inline unsigned long long get_fs_free_size(const char *path)$/;"	z	function:get_fs_free_size	typeref:typename:const char *	file:
path	os/windows/posix.c	/^char *basename(char *path)$/;"	z	function:basename	typeref:typename:char *	file:
path	os/windows/posix.c	/^int lstat(const char *path, struct stat *buf)$/;"	z	function:lstat	typeref:typename:const char *	file:
path	os/windows/posix/include/libgen.h	/^char *basename(char *path);$/;"	z	prototype:basename	typeref:typename:char *	file:
path	oslib/libmtd.c	/^static char *mkpath(const char *path, const char *name)$/;"	z	function:mkpath	typeref:typename:const char *	file:
path	oslib/linux-blkzoned.c	/^static char *read_file(const char *path)$/;"	z	function:read_file	typeref:typename:const char *	file:
path	oslib/linux-dev-lookup.c	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	function:blktrace_lookup_device	typeref:typename:char *	file:
path	oslib/linux-dev-lookup.h	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	prototype:blktrace_lookup_device	typeref:typename:char *	file:
path	server.h	/^	uint8_t path[FIO_NET_NAME_MAX];$/;"	m	struct:cmd_sendfile	typeref:typename:uint8_t[]
pathname	oslib/statx.c	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	function:statx	typeref:typename:const char *	file:
pathname	oslib/statx.h	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	z	prototype:statx	typeref:typename:const char *	file:
pathspec	engines/pmemblk.c	/^static fio_pmemblk_file_t pmb_open(const char *pathspec, int flags)$/;"	z	function:pmb_open	typeref:typename:const char *	file:
pathspec	engines/pmemblk.c	/^static void pmb_parse_path(const char *pathspec, char **ppath, uint64_t *pbsize,$/;"	z	function:pmb_parse_path	typeref:typename:const char *	file:
patt	oslib/libmtd.c	/^static int check_pattern(const void *buf, uint8_t patt, int size)$/;"	z	function:check_pattern	typeref:typename:uint8_t	file:
patt	oslib/libmtd.c	/^static int dev_read_data(const char *patt, int mtd_num, void *buf, int buf_len)$/;"	z	function:dev_read_data	typeref:typename:const char *	file:
patt	oslib/libmtd.c	/^static int dev_read_hex_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_hex_int	typeref:typename:const char *	file:
patt	oslib/libmtd.c	/^static int dev_read_pos_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_pos_int	typeref:typename:const char *	file:
patt	oslib/libmtd.c	/^static int dev_read_pos_ll(const char *patt, int mtd_num, long long *value)$/;"	z	function:dev_read_pos_ll	typeref:typename:const char *	file:
pattern	lib/pattern.c	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	z	function:cmp_pattern	typeref:typename:const char *	file:
pattern	lib/pattern.c	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	z	function:cpy_pattern	typeref:typename:const char *	file:
pattern	lib/pattern.c	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	z	function:paste_format	typeref:typename:const char *	file:
pattern	lib/pattern.c	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	z	function:paste_format_inplace	typeref:typename:char *	file:
pattern	lib/pattern.h	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	z	prototype:cmp_pattern	typeref:typename:const char *	file:
pattern	lib/pattern.h	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	z	prototype:cpy_pattern	typeref:typename:const char *	file:
pattern	lib/pattern.h	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	z	prototype:paste_format	typeref:typename:const char *	file:
pattern	lib/pattern.h	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	z	prototype:paste_format_inplace	typeref:typename:char *	file:
pattern	lib/rand.c	/^				    char *pattern, unsigned int pbytes)$/;"	z	function:fill_random_buf_percentage	typeref:typename:char *	file:
pattern	lib/rand.c	/^				  char *pattern, unsigned int pbytes)$/;"	z	function:__fill_random_buf_percentage	typeref:typename:char *	file:
pattern_fmt	lib/pattern.h	/^struct pattern_fmt {$/;"	s
pattern_fmt_desc	lib/pattern.h	/^struct pattern_fmt_desc {$/;"	s
pattern_len	lib/pattern.c	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	z	function:cpy_pattern	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.c	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	z	function:paste_format	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.c	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	z	function:paste_format_inplace	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.c	/^static int dup_pattern(char *out, unsigned int out_len, unsigned int pattern_len)$/;"	z	function:dup_pattern	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.h	/^int cpy_pattern(const char *pattern, unsigned int pattern_len,$/;"	z	prototype:cpy_pattern	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.h	/^int paste_format(const char *pattern, unsigned int pattern_len,$/;"	z	prototype:paste_format	typeref:typename:unsigned int	file:
pattern_len	lib/pattern.h	/^int paste_format_inplace(char *pattern, unsigned int pattern_len,$/;"	z	prototype:paste_format_inplace	typeref:typename:unsigned int	file:
pattern_size	lib/pattern.c	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	z	function:cmp_pattern	typeref:typename:unsigned int	file:
pattern_size	lib/pattern.h	/^int cmp_pattern(const char *pattern, unsigned int pattern_size,$/;"	z	prototype:cmp_pattern	typeref:typename:unsigned int	file:
patterns	oslib/libmtd.c	/^static uint8_t patterns[] = {0xa5, 0x5a, 0x0};$/;"	v	typeref:typename:uint8_t[]	file:
payload	server.h	/^	uint8_t payload[];	\/* payload *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint8_t[]
pbsize	engines/pmemblk.c	/^static void pmb_parse_path(const char *pathspec, char **ppath, uint64_t *pbsize,$/;"	z	function:pmb_parse_path	typeref:typename:uint64_t *	file:
pbytes	lib/rand.c	/^				    char *pattern, unsigned int pbytes)$/;"	z	function:fill_random_buf_percentage	typeref:typename:unsigned int	file:
pbytes	lib/rand.c	/^				  char *pattern, unsigned int pbytes)$/;"	z	function:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
pd	engines/rdma.c	/^	struct ibv_pd *pd;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_pd *	file:
pdu	client.c	/^					      struct cmd_iolog_pdu *pdu)$/;"	z	function:convert_iolog_gz	typeref:struct:cmd_iolog_pdu *	file:
pdu	client.c	/^static int fio_send_file(struct fio_client *client, struct cmd_sendfile *pdu,$/;"	z	function:fio_send_file	typeref:struct:cmd_sendfile *	file:
pdu	server.c	/^			     const void *pdu, uint32_t pdu_len, uint64_t tag)$/;"	z	function:fio_init_net_cmd	typeref:typename:const void *	file:
pdu	server.c	/^static void fio_net_cmd_crc_pdu(struct fio_net_cmd *cmd, const void *pdu)$/;"	z	function:fio_net_cmd_crc_pdu	typeref:typename:const void *	file:
pdu_crc16	server.h	/^	uint16_t pdu_crc16;	\/* payload checksum *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint16_t
pdu_len	blktrace_api.h	/^	__u16 pdu_len;		\/* length of data after this trace *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u16
pdu_len	server.c	/^			       uint32_t pdu_len, uint64_t tag)$/;"	z	function:__fio_init_net_cmd	typeref:typename:uint32_t	file:
pdu_len	server.c	/^			     const void *pdu, uint32_t pdu_len, uint64_t tag)$/;"	z	function:fio_init_net_cmd	typeref:typename:uint32_t	file:
pdu_len	server.h	/^	uint32_t pdu_len;	\/* length of post-cmd layload *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint32_t
peer	engines/librpma_fio.h	/^	struct rpma_peer *peer;$/;"	m	struct:librpma_fio_client_data	typeref:struct:rpma_peer *
peer	engines/librpma_fio.h	/^	struct rpma_peer *peer;$/;"	m	struct:librpma_fio_server_data	typeref:struct:rpma_peer *
pending	client.h	/^	unsigned int pending;$/;"	m	struct:client_eta	typeref:typename:unsigned int
pending	iolog.h	/^	struct io_logs *pending;$/;"	m	struct:io_log	typeref:struct:io_logs *
pending	profiles/act.c	/^	unsigned int pending;$/;"	m	struct:act_run_data	typeref:typename:unsigned int	file:
pending_ios	t/io_uring.c	/^	unsigned pending_ios;$/;"	m	struct:file	typeref:typename:unsigned	file:
per_job	init.c	/^			 const char *suf, int per_job)$/;"	z	function:gen_log_name	typeref:typename:int	file:
per_job_logs	thread_options.h	/^	uint32_t per_job_logs;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
per_job_logs	thread_options.h	/^	unsigned int per_job_logs;$/;"	m	struct:thread_options	typeref:typename:unsigned int
per_label_limit	graph.c	/^	int per_label_limit;$/;"	m	struct:graph	typeref:typename:int	file:
per_label_limit	graph.c	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit)$/;"	z	function:line_graph_set_data_count_limit	typeref:typename:int	file:
per_label_limit	graph.h	/^void line_graph_set_data_count_limit(struct graph *g, int per_label_limit);$/;"	z	prototype:line_graph_set_data_count_limit	typeref:typename:int	file:
per_unit_log	iolog.h	/^static inline bool per_unit_log(struct io_log *log)$/;"	f	typeref:typename:bool
perc	engines/cmdprio.h	/^	uint32_t perc;$/;"	m	struct:cmdprio_prio	typeref:typename:uint32_t
perc	gclient.c	/^					  double perc)$/;"	z	function:gfio_update_thread_status_all	typeref:typename:double	file:
perc	gclient.c	/^				      char *status_message, double perc)$/;"	z	function:gfio_update_thread_status	typeref:typename:double	file:
perc	thread_options.h	/^	uint32_t perc;$/;"	m	struct:bssplit	typeref:typename:uint32_t
perc	thread_options.h	/^	uint32_t perc;$/;"	m	struct:split_prio	typeref:typename:uint32_t
perc_entry	engines/cmdprio.h	/^	struct cmdprio_prio perc_entry[CMDPRIO_RWDIR_CNT];$/;"	m	struct:cmdprio	typeref:struct:cmdprio_prio[]
perc_rand	thread_options.h	/^	uint32_t perc_rand[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
perc_rand	thread_options.h	/^	unsigned int perc_rand[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
percent	parse.c	/^					   int *percent)$/;"	z	function:__get_mult_bytes	typeref:typename:int *	file:
percent	parse.c	/^					 int *percent)$/;"	z	function:get_mult_bytes	typeref:typename:int *	file:
percentage	engines/cmdprio.h	/^	unsigned int percentage[CMDPRIO_RWDIR_CNT];$/;"	m	struct:cmdprio_options	typeref:typename:unsigned int[]
percentage	lib/rand.c	/^				    unsigned int percentage,$/;"	z	function:fill_random_buf_percentage	typeref:typename:unsigned int	file:
percentage	lib/rand.c	/^				  unsigned int percentage,$/;"	z	function:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
percentage	t/genzipf.c	/^static double percentage;$/;"	v	typeref:typename:double	file:
percentile	tools/fio_jsonplus_clat2csv	/^def percentile(idx, run_total):$/;"	f
percentile	tools/fiologparser.py	/^def percentile(values, p):$/;"	f
percentile_list	stat.h	/^	fio_fp64_t percentile_list[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t[]
percentile_list	thread_options.h	/^	fio_fp64_t percentile_list[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t[]
percentile_list	thread_options.h	/^	fio_fp64_t percentile_list[FIO_IO_U_LIST_MAX_LEN];$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t[]
percentile_precision	stat.h	/^	uint64_t percentile_precision;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
percentile_precision	thread_options.h	/^	uint32_t percentile_precision;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
percentile_precision	thread_options.h	/^	unsigned int percentile_precision;	\/* digits after decimal for percentiles *\/$/;"	m	struct:thread_options	typeref:typename:unsigned int
percentiles	stat.c	/^					     uint32_t percentiles,$/;"	z	function:add_ddir_lat_json	typeref:typename:uint32_t	file:
percentiles	stat.c	/^				  fio_fp64_t *plist, unsigned int **percentiles,$/;"	z	function:calc_block_percentiles	typeref:typename:unsigned int **	file:
percs	tools/hist/fiologparser_hist.py	/^percs = None$/;"	v
personality	os/linux/io_uring.h	/^	__u16	personality;$/;"	m	struct:io_uring_sqe	typeref:typename:__u16
pfds	engines/libiscsi.c	/^	struct pollfd		 *pfds;$/;"	m	struct:iscsi_info	typeref:struct:pollfd *	file:
pfds	engines/sg.c	/^	struct pollfd *pfds;$/;"	m	struct:sgio_data	typeref:struct:pollfd *	file:
pfds	engines/sg.c	/^static int pollin_events(struct pollfd *pfds, int fds)$/;"	z	function:pollin_events	typeref:struct:pollfd *	file:
pflags	engines/pmemblk.c	/^static int pmb_get_flags(struct thread_data *td, uint64_t *pflags)$/;"	z	function:pmb_get_flags	typeref:typename:uint64_t *	file:
pfsize	engines/pmemblk.c	/^			   uint64_t *pfsize)$/;"	z	function:pmb_parse_path	typeref:typename:uint64_t *	file:
pi	os/windows/posix.c	/^static BOOL windows_create_process(PROCESS_INFORMATION *pi, const char *args, HANDLE *hjob)$/;"	z	function:windows_create_process	typeref:typename:PROCESS_INFORMATION *	file:
pi	os/windows/posix.c	/^static bool monitor_process_till_connect(PROCESS_INFORMATION *pi, HANDLE *hpipe)$/;"	z	function:monitor_process_till_connect	typeref:typename:PROCESS_INFORMATION *	file:
pi	oslib/libmtd_legacy.c	/^static int proc_parse_next(struct proc_parse_info *pi)$/;"	z	function:proc_parse_next	typeref:struct:proc_parse_info *	file:
pi	oslib/libmtd_legacy.c	/^static int proc_parse_start(struct proc_parse_info *pi)$/;"	z	function:proc_parse_start	typeref:struct:proc_parse_info *	file:
pick_random_zone_idx	zbd.c	/^static uint32_t pick_random_zone_idx(const struct fio_file *f,$/;"	f	typeref:typename:uint32_t	file:
pickle	doc/Makefile	/^pickle:$/;"	t
pid	blktrace_api.h	/^	__u32 pid;		\/* who did it *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
pid	blktrace_api.h	/^	__u32 pid;$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u32
pid	engines/exec.c	/^	pid_t pid;$/;"	m	struct:exec_options	typeref:typename:pid_t	file:
pid	fio.h	/^	pid_t pid;$/;"	m	struct:thread_data	typeref:typename:pid_t
pid	os/os-dragonfly.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	z	function:fio_getaffinity	typeref:typename:int	file:
pid	os/os-dragonfly.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t mask)$/;"	z	function:fio_setaffinity	typeref:typename:int	file:
pid	os/os-freebsd.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	z	function:fio_getaffinity	typeref:typename:int	file:
pid	os/os-freebsd.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:int	file:
pid	os/os-windows.h	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask);$/;"	z	prototype:fio_getaffinity	typeref:typename:int	file:
pid	os/os-windows.h	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask);$/;"	z	prototype:fio_setaffinity	typeref:typename:int	file:
pid	os/os-windows.h	/^int kill(pid_t pid, int sig);$/;"	z	prototype:kill	typeref:typename:pid_t	file:
pid	os/os.h	/^static inline int fio_getaffinity(int pid, os_cpu_mask_t *cpumask)$/;"	z	function:fio_getaffinity	typeref:typename:int	file:
pid	os/os.h	/^static inline int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:int	file:
pid	os/windows/cpu-affinity.c	/^int fio_getaffinity(int pid, os_cpu_mask_t *mask)$/;"	z	function:fio_getaffinity	typeref:typename:int	file:
pid	os/windows/cpu-affinity.c	/^int fio_setaffinity(int pid, os_cpu_mask_t cpumask)$/;"	z	function:fio_setaffinity	typeref:typename:int	file:
pid	os/windows/posix.c	/^int kill(pid_t pid, int sig)$/;"	z	function:kill	typeref:typename:pid_t	file:
pid	os/windows/posix.c	/^pid_t waitpid(pid_t pid, int *stat_loc, int options)$/;"	z	function:waitpid	typeref:typename:pid_t	file:
pid	server.c	/^	pid_t pid;$/;"	m	struct:fio_fork_item	typeref:typename:pid_t	file:
pid	server.c	/^static int write_pid(pid_t pid, const char *pidfile)$/;"	z	function:write_pid	typeref:typename:pid_t	file:
pid	server.c	/^static void fio_server_add_conn_pid(struct flist_head *conn_list, pid_t pid)$/;"	z	function:fio_server_add_conn_pid	typeref:typename:pid_t	file:
pid	server.c	/^static void fio_server_add_fork_item(pid_t pid, struct flist_head *list)$/;"	z	function:fio_server_add_fork_item	typeref:typename:pid_t	file:
pid	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pid_t pid)$/;"	z	function:fio_server_add_job_pid	typeref:typename:pid_t	file:
pid	stat.h	/^	uint32_t pid;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
pid	t/btrace2fio.c	/^	pid_t pid;$/;"	m	struct:btrace_pid	typeref:typename:pid_t	file:
pid	t/btrace2fio.c	/^static struct btrace_pid *pid_hash_find(pid_t pid, struct flist_head *list)$/;"	z	function:pid_hash_find	typeref:typename:pid_t	file:
pid	t/btrace2fio.c	/^static struct btrace_pid *pid_hash_get(pid_t pid)$/;"	z	function:pid_hash_get	typeref:typename:pid_t	file:
pid_hash	t/btrace2fio.c	/^static struct flist_head pid_hash[PID_HASH_SIZE];$/;"	v	typeref:struct:flist_head[]	file:
pid_hash_find	t/btrace2fio.c	/^static struct btrace_pid *pid_hash_find(pid_t pid, struct flist_head *list)$/;"	f	typeref:struct:btrace_pid *	file:
pid_hash_get	t/btrace2fio.c	/^static struct btrace_pid *pid_hash_get(pid_t pid)$/;"	f	typeref:struct:btrace_pid *	file:
pid_list	t/btrace2fio.c	/^	struct flist_head pid_list;$/;"	m	struct:btrace_pid	typeref:struct:flist_head	file:
pida	t/btrace2fio.c	/^static int entries_close(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	z	function:entries_close	typeref:struct:btrace_pid *	file:
pida	t/btrace2fio.c	/^static int merge_entries(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	z	function:merge_entries	typeref:struct:btrace_pid *	file:
pidb	t/btrace2fio.c	/^static int entries_close(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	z	function:entries_close	typeref:struct:btrace_pid *	file:
pidb	t/btrace2fio.c	/^static int merge_entries(struct btrace_pid *pida, struct btrace_pid *pidb)$/;"	z	function:merge_entries	typeref:struct:btrace_pid *	file:
pidfile	server.c	/^int fio_start_server(char *pidfile)$/;"	z	function:fio_start_server	typeref:typename:char *	file:
pidfile	server.c	/^static int check_existing_pidfile(const char *pidfile)$/;"	z	function:check_existing_pidfile	typeref:typename:const char *	file:
pidfile	server.c	/^static int write_pid(pid_t pid, const char *pidfile)$/;"	z	function:write_pid	typeref:typename:const char *	file:
pidlist	t/btrace2fio.c	/^static void check_merges(struct btrace_pid *p, struct flist_head *pidlist)$/;"	z	function:check_merges	typeref:struct:flist_head *	file:
pingpong	engines/net.c	/^	unsigned int pingpong;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
pinned_mem	fio.h	/^	void *pinned_mem;$/;"	m	struct:thread_data	typeref:typename:void *
pipe	engines/splice.c	/^	int pipe[2];$/;"	m	struct:spliceio_data	typeref:typename:int[2]	file:
pipe	helper_thread.c	/^	int pipe[2]; \/* 0: read end; 1: write end. *\/$/;"	m	struct:helper_data	typeref:typename:int[2]	file:
pipe_name	os/windows/posix.c	/^static HANDLE create_named_pipe(char *pipe_name, int wait_connect_time)$/;"	z	function:create_named_pipe	typeref:typename:char *	file:
pipe_over_loopback	helper_thread.c	/^int pipe_over_loopback(int fd[2])$/;"	f	typeref:typename:int
pipes	engines/net.c	/^	int pipes[2];$/;"	m	struct:netio_data	typeref:typename:int[2]	file:
plat	t/io_uring.c	/^	unsigned long *plat;$/;"	m	struct:submitter	typeref:typename:unsigned long *	file:
plat	t/read-to-pipe-async.c	/^	unsigned int plat[PLAT_NR];$/;"	m	struct:stats	typeref:typename:unsigned int[]	file:
plat_entry	iolog.h	/^	struct io_u_plat_entry *plat_entry;$/;"	m	union:io_sample_data	typeref:struct:io_u_plat_entry *
plat_idx_to_val	stat.c	/^static unsigned long long plat_idx_to_val(unsigned int idx)$/;"	f	typeref:typename:unsigned long long	file:
plat_idx_to_val	t/io_uring.c	/^static unsigned long plat_idx_to_val(unsigned int idx)$/;"	f	typeref:typename:unsigned long	file:
plat_idx_to_val	t/read-to-pipe-async.c	/^static unsigned int plat_idx_to_val(unsigned int idx)$/;"	f	typeref:typename:unsigned int	file:
plat_idx_to_val_coarse	tools/hist/fiologparser_hist.py	/^def plat_idx_to_val_coarse(idx, coarseness, edge=0.5):$/;"	f
plat_val_to_idx	stat.c	/^static unsigned int plat_val_to_idx(unsigned long long val)$/;"	f	typeref:typename:unsigned int	file:
plat_val_to_idx	t/io_uring.c	/^static unsigned int plat_val_to_idx(unsigned long val)$/;"	f	typeref:typename:unsigned int	file:
plat_val_to_idx	t/read-to-pipe-async.c	/^static unsigned int plat_val_to_idx(unsigned int val)$/;"	f	typeref:typename:unsigned int	file:
plist	gclient.c	/^					       fio_fp64_t *plist,$/;"	z	function:gfio_output_clat_percentiles	typeref:typename:fio_fp64_t *	file:
plist	gclient.c	/^				      fio_fp64_t *plist,$/;"	z	function:setup_clat_graph	typeref:typename:fio_fp64_t *	file:
plist	stat.c	/^				   fio_fp64_t *plist, unsigned long long **output,$/;"	z	function:calc_clat_percentiles	typeref:typename:fio_fp64_t *	file:
plist	stat.c	/^				  fio_fp64_t *plist, unsigned int **percentiles,$/;"	z	function:calc_block_percentiles	typeref:typename:fio_fp64_t *	file:
plist	stat.c	/^				  fio_fp64_t *plist, unsigned int precision,$/;"	z	function:show_clat_percentiles	typeref:typename:fio_fp64_t *	file:
plist	stat.c	/^			     fio_fp64_t *plist, struct buf_output *out)$/;"	z	function:show_block_infos	typeref:typename:fio_fp64_t *	file:
plist	stat.h	/^extern unsigned int calc_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr, fio_fp64_t/;"	z	prototype:calc_clat_percentiles	typeref:typename:fio_fp64_t *	file:
plist	t/io_uring.c	/^static float plist[] = { 1.0, 5.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0, 70.0,$/;"	v	typeref:typename:float[]	file:
plist	t/read-to-pipe-async.c	/^static double plist[PLAT_LIST_MAX] = { 50.0, 75.0, 90.0, 95.0, 99.0, 99.5, 99.9, 99.99, 99.999, /;"	v	typeref:typename:double[]	file:
plist_len	t/io_uring.c	/^static int plist_len = 17;$/;"	v	typeref:typename:int	file:
plot	tools/fio_generate_plots	/^plot () {$/;"	f
pmb	engines/pmemblk.c	/^static void fio_pmemblk_cache_insert(fio_pmemblk_file_t pmb)$/;"	z	function:fio_pmemblk_cache_insert	typeref:typename:fio_pmemblk_file_t	file:
pmb	engines/pmemblk.c	/^static void fio_pmemblk_cache_remove(fio_pmemblk_file_t pmb)$/;"	z	function:fio_pmemblk_cache_remove	typeref:typename:fio_pmemblk_file_t	file:
pmb	engines/pmemblk.c	/^static void pmb_close(fio_pmemblk_file_t pmb, const bool keep)$/;"	z	function:pmb_close	typeref:typename:fio_pmemblk_file_t	file:
pmb_bsize	engines/pmemblk.c	/^	size_t pmb_bsize;$/;"	m	struct:fio_pmemblk_file	typeref:typename:size_t	file:
pmb_close	engines/pmemblk.c	/^static void pmb_close(fio_pmemblk_file_t pmb, const bool keep)$/;"	f	typeref:typename:void	file:
pmb_filename	engines/pmemblk.c	/^	char *pmb_filename;$/;"	m	struct:fio_pmemblk_file	typeref:typename:char *	file:
pmb_get_flags	engines/pmemblk.c	/^static int pmb_get_flags(struct thread_data *td, uint64_t *pflags)$/;"	f	typeref:typename:int	file:
pmb_nblocks	engines/pmemblk.c	/^	size_t pmb_nblocks;$/;"	m	struct:fio_pmemblk_file	typeref:typename:size_t	file:
pmb_next	engines/pmemblk.c	/^	fio_pmemblk_file_t pmb_next;$/;"	m	struct:fio_pmemblk_file	typeref:typename:fio_pmemblk_file_t	file:
pmb_open	engines/pmemblk.c	/^static fio_pmemblk_file_t pmb_open(const char *pathspec, int flags)$/;"	f	typeref:typename:fio_pmemblk_file_t	file:
pmb_parse_path	engines/pmemblk.c	/^static void pmb_parse_path(const char *pathspec, char **ppath, uint64_t *pbsize,$/;"	f	typeref:typename:void	file:
pmb_pool	engines/pmemblk.c	/^	PMEMblkpool *pmb_pool;$/;"	m	struct:fio_pmemblk_file	typeref:typename:PMEMblkpool *	file:
pmb_refcnt	engines/pmemblk.c	/^	uint64_t pmb_refcnt;$/;"	m	struct:fio_pmemblk_file	typeref:typename:uint64_t	file:
pmemblk_LIBS	Makefile	/^  pmemblk_LIBS = -lpmemblk$/;"	m
pmemblk_SRCS	Makefile	/^  pmemblk_SRCS = engines\/pmemblk.c$/;"	m
poh	engines/dfs.c	/^daos_handle_t		poh;  \/* pool handle *\/$/;"	v	typeref:typename:daos_handle_t
poisson_state	fio.h	/^	struct frand_state poisson_state[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:struct:frand_state[]
poll	os/windows/posix.c	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout)$/;"	f	typeref:typename:int
poll	os/windows/posix/include/poll.h	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout);$/;"	p	typeref:typename:int
poll32_events	os/linux/io_uring.h	/^		__u32		poll32_events;	\/* word-reversed for BE *\/$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
poll_events	os/linux/io_uring.h	/^		__u16		poll_events;	\/* compatibility *\/$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u16
poll_wait	engines/net.c	/^static int poll_wait(struct thread_data *td, int fd, short events)$/;"	f	typeref:typename:int	file:
polled	t/io_uring.c	/^static int polled = 1;		\/* use IO polling *\/$/;"	v	typeref:typename:int	file:
pollin_events	engines/sg.c	/^static int pollin_events(struct pollfd *pfds, int fds)$/;"	f	typeref:typename:int	file:
pool	engines/dfs.c	/^	char		*pool;   \/* Pool UUID *\/$/;"	m	struct:daos_fio_options	typeref:typename:char *	file:
pool	smalloc.c	/^static bool add_pool(struct pool *pool, unsigned int alloc_size)$/;"	z	function:add_pool	typeref:struct:pool *	file:
pool	smalloc.c	/^static inline int ptr_valid(struct pool *pool, void *ptr)$/;"	z	function:ptr_valid	typeref:struct:pool *	file:
pool	smalloc.c	/^static int blocks_free(struct pool *pool, unsigned int pool_idx,$/;"	z	function:blocks_free	typeref:struct:pool *	file:
pool	smalloc.c	/^static int blocks_iter(struct pool *pool, unsigned int pool_idx,$/;"	z	function:blocks_iter	typeref:struct:pool *	file:
pool	smalloc.c	/^static unsigned int find_best_index(struct pool *pool)$/;"	z	function:find_best_index	typeref:struct:pool *	file:
pool	smalloc.c	/^static void *__smalloc_pool(struct pool *pool, size_t size)$/;"	z	function:__smalloc_pool	typeref:struct:pool *	file:
pool	smalloc.c	/^static void *smalloc_pool(struct pool *pool, size_t size)$/;"	z	function:smalloc_pool	typeref:struct:pool *	file:
pool	smalloc.c	/^static void cleanup_pool(struct pool *pool)$/;"	z	function:cleanup_pool	typeref:struct:pool *	file:
pool	smalloc.c	/^static void clear_blocks(struct pool *pool, unsigned int pool_idx,$/;"	z	function:clear_blocks	typeref:struct:pool *	file:
pool	smalloc.c	/^static void set_blocks(struct pool *pool, unsigned int pool_idx,$/;"	z	function:set_blocks	typeref:struct:pool *	file:
pool	smalloc.c	/^static void sfree_pool(struct pool *pool, void *ptr)$/;"	z	function:sfree_pool	typeref:struct:pool *	file:
pool	smalloc.c	/^static void smalloc_print_bitmap(struct pool *pool)$/;"	z	function:smalloc_print_bitmap	typeref:struct:pool *	file:
pool	smalloc.c	/^struct pool {$/;"	s	file:
pool_idx	smalloc.c	/^static int blocks_free(struct pool *pool, unsigned int pool_idx,$/;"	z	function:blocks_free	typeref:typename:unsigned int	file:
pool_idx	smalloc.c	/^static int blocks_iter(struct pool *pool, unsigned int pool_idx,$/;"	z	function:blocks_iter	typeref:typename:unsigned int	file:
pool_idx	smalloc.c	/^static void clear_blocks(struct pool *pool, unsigned int pool_idx,$/;"	z	function:clear_blocks	typeref:typename:unsigned int	file:
pool_idx	smalloc.c	/^static void set_blocks(struct pool *pool, unsigned int pool_idx,$/;"	z	function:set_blocks	typeref:typename:unsigned int	file:
pool_name	engines/rados.c	/^	char *pool_name;$/;"	m	struct:rados_options	typeref:typename:char *	file:
pool_name	engines/rbd.c	/^	char *pool_name;$/;"	m	struct:rbd_options	typeref:typename:char *	file:
popts	init.c	/^		int nested, char *name, char ***popts, int *aopts, int *nopts)$/;"	z	function:__parse_jobs_ini	typeref:typename:char ***	file:
populate_hdr	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void	file:
populate_hdr	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	p	typeref:typename:void	file:
populate_verify_io_u	verify.c	/^void populate_verify_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
populate_verify_io_u	verify.h	/^extern void populate_verify_io_u(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
port	client.c	/^					   int port)$/;"	z	function:fio_client_add_explicit	typeref:typename:int	file:
port	client.h	/^	int port;$/;"	m	struct:fio_client	typeref:typename:int
port	engines/libhdfs.c	/^	unsigned int port;$/;"	m	struct:hdfsio_options	typeref:typename:unsigned int	file:
port	engines/librpma_fio.h	/^	char *port;$/;"	m	struct:librpma_fio_options_values	typeref:typename:char *
port	engines/net.c	/^					const char *host, unsigned short port)$/;"	z	function:fio_netio_setup_connect_inet	typeref:typename:unsigned short	file:
port	engines/net.c	/^	unsigned int port;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
port	engines/net.c	/^static int fio_netio_setup_listen_inet(struct thread_data *td, short port)$/;"	z	function:fio_netio_setup_listen_inet	typeref:typename:short	file:
port	engines/rdma.c	/^				    unsigned short port)$/;"	z	function:fio_rdmaio_setup_connect	typeref:typename:unsigned short	file:
port	engines/rdma.c	/^	unsigned int port;$/;"	m	struct:rdmaio_options	typeref:typename:unsigned int	file:
port	engines/rdma.c	/^static int fio_rdmaio_setup_listen(struct thread_data *td, short port)$/;"	z	function:fio_rdmaio_setup_listen	typeref:typename:short	file:
port	gfio.h	/^	int port;$/;"	m	struct:gui_entry	typeref:typename:int
port	server.c	/^			    int *port, struct in_addr *inp,$/;"	z	function:fio_server_parse_string	typeref:typename:int *	file:
port_base_str	engines/librpma_fio.c	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	z	function:librpma_fio_td_port	typeref:typename:const char *	file:
port_base_str	engines/librpma_fio.h	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	z	prototype:librpma_fio_td_port	typeref:typename:const char *	file:
port_out	engines/librpma_fio.c	/^		char *port_out)$/;"	z	function:librpma_fio_td_port	typeref:typename:char *	file:
port_out	engines/librpma_fio.h	/^		char *port_out);$/;"	z	prototype:librpma_fio_td_port	typeref:typename:char *	file:
pos	engines/http.c	/^	size_t pos;$/;"	m	struct:http_curl_stream	typeref:typename:size_t	file:
pos_h	os/os-linux.h	/^static inline void make_pos_h_l(unsigned long *pos_h, unsigned long *pos_l,$/;"	z	function:make_pos_h_l	typeref:typename:unsigned long *	file:
pos_l	os/os-linux.h	/^static inline void make_pos_h_l(unsigned long *pos_h, unsigned long *pos_l,$/;"	z	function:make_pos_h_l	typeref:typename:unsigned long *	file:
position	gcompat.c	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position,$/;"	z	function:gtk_combo_box_text_insert_text	typeref:typename:gint	file:
position	gcompat.h	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position, const gchar *text/;"	z	prototype:gtk_combo_box_text_insert_text	typeref:typename:gint	file:
position	gcompat.h	/^void gtk_combo_box_text_remove(GtkComboBoxText *combo_box, gint position);$/;"	z	prototype:gtk_combo_box_text_remove	typeref:typename:gint	file:
posix_fadvise	helpers.c	/^int posix_fadvise(int fd, off_t offset, off_t len, int advice)$/;"	f	typeref:typename:int
posix_fadvise	helpers.h	/^extern int posix_fadvise(int fd, off_t offset, off_t len, int advice);$/;"	p	typeref:typename:int
posix_fallocate	helpers.c	/^int posix_fallocate(int fd, off_t offset, off_t len)$/;"	f	typeref:typename:int
posix_fallocate	helpers.h	/^extern int posix_fallocate(int fd, off_t offset, off_t len);$/;"	p	typeref:typename:int
posix_madvise	os/os-android.h	/^#define posix_madvise /;"	d
posix_madvise	os/os-hpux.h	/^#define posix_madvise(/;"	d
posix_madvise	os/os-solaris.h	/^#define posix_madvise	/;"	d
posix_madvise	os/windows/posix.c	/^int posix_madvise(void *addr, size_t len, int advice)$/;"	f	typeref:typename:int
posix_madvise	os/windows/posix/include/sys/mman.h	/^int posix_madvise(void *addr, size_t len, int advice);$/;"	p	typeref:typename:int
posixaio_data	engines/posixaio.c	/^struct posixaio_data {$/;"	s	file:
post	parse.c	/^			     struct flist_head *dump_list, const char *post)$/;"	z	function:add_to_dump_list	typeref:typename:const char *	file:
post	parse.c	/^get_option(char *opt, const struct fio_option *options, char **post)$/;"	z	function:get_option	typeref:typename:char **	file:
post_init	ioengines.h	/^	int (*post_init)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *)
postred_ptr	smalloc.c	/^static void *postred_ptr(struct block_hdr *hdr)$/;"	f	typeref:typename:void *	file:
poststat	engines/glusterfs_async.c	/^			struct glfs_stat *poststat, void *data)$/;"	z	function:gf_async_cb	typeref:struct:glfs_stat *	file:
posval	parse.h	/^	struct value_pair posval[PARSE_MAX_VP];\/* possible values *\/$/;"	m	struct:fio_option	typeref:struct:value_pair[]
posval_sort	parse.c	/^static void posval_sort(const struct fio_option *o, struct value_pair *vpmap)$/;"	f	typeref:typename:void	file:
pow2	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	z	function:num2str	typeref:typename:int	file:
pow2	parse.h	/^	int pow2;			\/* must be a power-of-2 *\/$/;"	m	struct:fio_option	typeref:typename:int
pow2	unittests/lib/num2str.c	/^	int pow2;$/;"	m	struct:testcase	typeref:typename:int	file:
power_of_ten	tickmarks.c	/^		int *power_of_ten, int use_KMG_symbols, int base_offset)$/;"	z	function:calc_tickmarks	typeref:typename:int *	file:
power_of_ten	tickmarks.c	/^static void shorten(struct tickmark *tm, int nticks, int *power_of_ten,$/;"	z	function:shorten	typeref:typename:int *	file:
power_of_ten	tickmarks.h	/^			int *power_of_ten, int use_KMG_symbols, int base_off);$/;"	z	prototype:calc_tickmarks	typeref:typename:int *	file:
pp	t/steadystate_tests.py	/^    pp = pprint.PrettyPrinter(indent=4)$/;"	v
ppath	engines/pmemblk.c	/^static void pmb_parse_path(const char *pathspec, char **ppath, uint64_t *pbsize,$/;"	z	function:pmb_parse_path	typeref:typename:char **	file:
pre	stat.c	/^				  const char *pre, struct buf_output *out)$/;"	z	function:show_clat_percentiles	typeref:typename:const char *	file:
pre_read	thread_options.h	/^	uint32_t pre_read;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
pre_read	thread_options.h	/^	unsigned int pre_read;$/;"	m	struct:thread_options	typeref:typename:unsigned int
pre_read_file	filesetup.c	/^static bool pre_read_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:bool	file:
pre_read_files	file.h	/^extern bool __must_check pre_read_files(struct thread_data *);$/;"	p	typeref:typename:bool __must_check
pre_read_files	filesetup.c	/^bool pre_read_files(struct thread_data *td)$/;"	f	typeref:typename:bool
pre_sleep_flush_fn	workqueue.h	/^	workqueue_pre_sleep_flush_fn *pre_sleep_flush_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_pre_sleep_flush_fn *
pre_sleep_fn	workqueue.h	/^	workqueue_pre_sleep_fn *pre_sleep_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_pre_sleep_fn *
pread	os/os-windows.h	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);$/;"	p	typeref:typename:ssize_t
pread	os/windows/posix.c	/^ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset)$/;"	f	typeref:typename:ssize_t
preadv2	os/os-linux.h	/^static inline ssize_t preadv2(int fd, const struct iovec *iov, int iovcnt,$/;"	f	typeref:typename:ssize_t
precision	stat.c	/^				  fio_fp64_t *plist, unsigned int precision,$/;"	z	function:show_clat_percentiles	typeref:typename:unsigned int	file:
precision	t/io_uring.c	/^				  unsigned int precision)$/;"	z	function:show_clat_percentiles	typeref:typename:unsigned int	file:
preferences	gfio.c	/^static void preferences(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
prefix	Makefile	/^prefix = $(INSTALL_PREFIX)$/;"	m
prefix	verify-state.h	/^					 const char *name, const char *prefix,$/;"	z	function:verify_state_gen_name	typeref:typename:const char *	file:
prefix	verify.c	/^				   const char *prefix)$/;"	z	function:write_thread_list_state	typeref:typename:const char *	file:
prefix	verify.c	/^int verify_load_state(struct thread_data *td, const char *prefix)$/;"	z	function:verify_load_state	typeref:typename:const char *	file:
prefix	verify.c	/^static int open_state_file(const char *name, const char *prefix, int num,$/;"	z	function:open_state_file	typeref:typename:const char *	file:
prefix	verify.c	/^void __verify_save_state(struct all_io_list *state, const char *prefix)$/;"	z	function:__verify_save_state	typeref:typename:const char *	file:
prep	ioengines.h	/^	int (*prep)(struct thread_data *, struct io_u *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct io_u *)
prep	profiles/act.c	/^	unsigned int prep;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
prep_cmd	profile.h	/^	int (*prep_cmd)(void);$/;"	m	struct:profile_ops	typeref:typename:int (*)(void)
prep_more_ios_aio	t/io_uring.c	/^static int prep_more_ios_aio(struct submitter *s, int max_ios, struct iocb *iocbs)$/;"	f	typeref:typename:int	file:
prep_more_ios_uring	t/io_uring.c	/^static int prep_more_ios_uring(struct submitter *s, int max_ios)$/;"	f	typeref:typename:int	file:
prepare_connection	engines/librpma_fio.h	/^	librpma_fio_prepare_connection_t prepare_connection;$/;"	m	struct:librpma_fio_server_data	typeref:typename:librpma_fio_prepare_connection_t
prepare_connection	engines/librpma_gpspm.c	/^static int prepare_connection(struct thread_data *td,$/;"	f	typeref:typename:int	file:
prepare_spin	lib/lfsr.c	/^static int prepare_spin(struct fio_lfsr *fl, unsigned int spin)$/;"	f	typeref:typename:int	file:
prepopulate_file	ioengines.h	/^	int (*prepopulate_file)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
prepped	engines/io_uring.c	/^	int prepped;$/;"	m	struct:ioring_data	typeref:typename:int	file:
prered	smalloc.c	/^	unsigned int prered;$/;"	m	struct:block_hdr	typeref:typename:unsigned int	file:
preserve_eo	init.c	/^				       bool preserve_eo, const char *jobname)$/;"	z	function:get_new_job	typeref:typename:bool	file:
prestat	engines/glusterfs_async.c	/^static void gf_async_cb(glfs_fd_t * fd, ssize_t ret, struct glfs_stat *prestat,$/;"	z	function:gf_async_cb	typeref:struct:glfs_stat *	file:
prev	engines/xnvme.c	/^	int32_t prev;$/;"	m	struct:xnvme_fioe_data	typeref:typename:int32_t	file:
prev	flist.h	/^				  struct flist_head *prev,$/;"	z	function:__flist_splice	typeref:struct:flist_head *	file:
prev	flist.h	/^			       struct flist_head *prev,$/;"	z	function:__flist_add	typeref:struct:flist_head *	file:
prev	flist.h	/^	struct flist_head *next, *prev;$/;"	m	struct:flist_head	typeref:struct:flist_head *
prev	flist.h	/^static inline void __flist_del(struct flist_head *prev,$/;"	z	function:__flist_del	typeref:struct:flist_head *	file:
prev_bytes	steadystate.h	/^	uint64_t prev_bytes;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
prev_group_jobs	init.c	/^static int prev_group_jobs;$/;"	v	typeref:typename:int	file:
prev_io_bytes	eta.c	/^		      unsigned long long *prev_io_bytes, uint64_t *rate)$/;"	z	function:calc_rate	typeref:typename:unsigned long long *	file:
prev_io_iops	eta.c	/^		      unsigned long long *prev_io_iops, unsigned int *iops)$/;"	z	function:calc_iops	typeref:typename:unsigned long long *	file:
prev_iops	steadystate.h	/^	uint64_t prev_iops;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
prev_requested_event_index	engines/nfs.c	/^	int prev_requested_event_index; \/* event last returned via fio_libnfs_event *\/$/;"	m	struct:fio_libnfs_options	typeref:typename:int	file:
prev_time	steadystate.h	/^	struct timespec prev_time;$/;"	m	struct:steadystate_data	typeref:struct:timespec
print_all_stats	tools/fiologparser.py	/^def print_all_stats(ctx, series):$/;"	f
print_all_stats	tools/hist/fiologparser_hist.py	/^def print_all_stats(ctx, end, mn, ss_cnt, vs, ws, mx, dir=dir):$/;"	f
print_averages	tools/fiologparser.py	/^def print_averages(ctx, series):$/;"	f
print_config	configure	/^print_config() {$/;"	f
print_default	tools/fiologparser.py	/^def print_default(ctx, series):$/;"	f
print_disk_util	stat.c	/^void print_disk_util(struct disk_util_stat *dus, struct disk_util_agg *agg,$/;"	f	typeref:typename:void
print_disk_util	stat.h	/^extern void print_disk_util(struct disk_util_stat *, struct disk_util_agg *, int terse, struct b/;"	p	typeref:typename:void
print_error	printing.c	/^static void printing_error_dialog(GtkWidget *window, GError *print_error)$/;"	z	function:printing_error_dialog	typeref:typename:GError *	file:
print_full	tools/fiologparser.py	/^def print_full(ctx, series):$/;"	f
print_help	tools/plot/fio2gnuplot	/^def print_help():$/;"	f
print_mask	os/windows/cpu-affinity.c	/^static void print_mask(os_cpu_mask_t *cpumask)$/;"	f	typeref:typename:void	file:
print_option	parse.c	/^static void print_option(const struct fio_option *o)$/;"	f	typeref:typename:void	file:
print_option	parse.h	/^struct print_option {$/;"	s
print_params	printing.c	/^} print_params = { 0 };$/;"	v	typeref:struct:printing_parameters
print_progress	t/dedupe.c	/^static unsigned int print_progress = 1;$/;"	v	typeref:typename:unsigned int	file:
print_status_init	eta.c	/^void print_status_init(int thr_number)$/;"	f	typeref:typename:void
print_status_init	fio.h	/^extern void print_status_init(int);$/;"	p	typeref:typename:void
print_sums	tools/fiologparser.py	/^def print_sums(ctx, series):$/;"	f
print_thread_status	eta.c	/^void print_thread_status(void)$/;"	f	typeref:typename:void
print_thread_status	fio.h	/^extern void print_thread_status(void);$/;"	p	typeref:typename:void
printing.o	Makefile	/^printing.o: printing.c printing.h$/;"	t
printing_error_dialog	printing.c	/^static void printing_error_dialog(GtkWidget *window, GError *print_error)$/;"	f	typeref:typename:void	file:
printing_parameters	printing.c	/^static struct printing_parameters {$/;"	s	file:
prio	engines/cmdprio.c	/^				int32_t prio)$/;"	z	function:find_clat_prio_index	typeref:typename:int32_t	file:
prio	engines/cmdprio.c	/^static void assign_clat_prio_index(struct cmdprio_prio *prio,$/;"	z	function:assign_clat_prio_index	typeref:struct:cmdprio_prio *	file:
prio	engines/cmdprio.h	/^	int32_t prio;$/;"	m	struct:cmdprio_prio	typeref:typename:int32_t
prio	parse.h	/^	int prio;$/;"	m	struct:fio_option	typeref:typename:int
prio	thread_options.h	/^	int32_t prio;$/;"	m	struct:split_prio	typeref:typename:int32_t
prio_state	fio.h	/^	struct frand_state prio_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
prio_tree	graph.c	/^	struct prio_tree_root prio_tree;$/;"	m	struct:graph_label	typeref:struct:prio_tree_root	file:
prio_tree_empty	lib/prio_tree.h	/^static inline int prio_tree_empty(const struct prio_tree_root *root)$/;"	f	typeref:typename:int
prio_tree_entry	lib/prio_tree.h	/^#define prio_tree_entry(/;"	d
prio_tree_expand	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_expand(struct prio_tree_root *root,$/;"	f	typeref:struct:prio_tree_node *	file:
prio_tree_first	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_first(struct prio_tree_iter *iter)$/;"	f	typeref:struct:prio_tree_node *	file:
prio_tree_init	lib/prio_tree.c	/^static void fio_init prio_tree_init(void)$/;"	f	typeref:typename:void fio_init	file:
prio_tree_insert	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,$/;"	f	typeref:struct:prio_tree_node *
prio_tree_insert	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,$/;"	p	typeref:struct:prio_tree_node *
prio_tree_iter	lib/prio_tree.h	/^struct prio_tree_iter {$/;"	s
prio_tree_iter_init	lib/prio_tree.h	/^static inline void prio_tree_iter_init(struct prio_tree_iter *iter,$/;"	f	typeref:typename:void
prio_tree_left	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_left(struct prio_tree_iter *iter,$/;"	f	typeref:struct:prio_tree_node *	file:
prio_tree_left_empty	lib/prio_tree.h	/^static inline int prio_tree_left_empty(const struct prio_tree_node *node)$/;"	f	typeref:typename:int
prio_tree_maxindex	lib/prio_tree.c	/^static inline unsigned long prio_tree_maxindex(unsigned int bits)$/;"	f	typeref:typename:unsigned long	file:
prio_tree_next	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_next(struct prio_tree_iter *iter)$/;"	f	typeref:struct:prio_tree_node *
prio_tree_next	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_next(struct prio_tree_iter *iter);$/;"	p	typeref:struct:prio_tree_node *
prio_tree_node	lib/prio_tree.h	/^	struct prio_tree_node	*prio_tree_node;$/;"	m	struct:prio_tree_root	typeref:struct:prio_tree_node *
prio_tree_node	lib/prio_tree.h	/^struct prio_tree_node {$/;"	s
prio_tree_parent	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_parent(struct prio_tree_iter *iter)$/;"	f	typeref:struct:prio_tree_node *	file:
prio_tree_remove	lib/prio_tree.c	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node)$/;"	f	typeref:typename:void
prio_tree_remove	lib/prio_tree.h	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node);$/;"	p	typeref:typename:void
prio_tree_replace	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,$/;"	f	typeref:struct:prio_tree_node *
prio_tree_replace	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,$/;"	p	typeref:struct:prio_tree_node *
prio_tree_right	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_right(struct prio_tree_iter *iter,$/;"	f	typeref:struct:prio_tree_node *	file:
prio_tree_right_empty	lib/prio_tree.h	/^static inline int prio_tree_right_empty(const struct prio_tree_node *node)$/;"	f	typeref:typename:int
prio_tree_root	lib/prio_tree.h	/^static inline int prio_tree_root(const struct prio_tree_node *node)$/;"	f	typeref:typename:int
prio_tree_root	lib/prio_tree.h	/^struct prio_tree_root {$/;"	s
priority	iolog.h	/^	uint16_t priority;$/;"	m	struct:io_sample	typeref:typename:uint16_t
priority	os/os-android.h	/^static inline bool ioprio_value_is_class_rt(unsigned int priority)$/;"	z	function:ioprio_value_is_class_rt	typeref:typename:unsigned int	file:
priority	os/os-linux.h	/^static inline bool ioprio_value_is_class_rt(unsigned int priority)$/;"	z	function:ioprio_value_is_class_rt	typeref:typename:unsigned int	file:
priority	os/windows/posix.c	/^void syslog(int priority, const char *message, ... \/* argument *\/)$/;"	z	function:syslog	typeref:typename:int	file:
priority	stat.c	/^			     unsigned int priority)$/;"	z	function:__add_log_sample	typeref:typename:unsigned int	file:
prios	engines/cmdprio.c	/^	unsigned int *prios;$/;"	m	struct:cmdprio_values	typeref:typename:unsigned int *	file:
prios	engines/cmdprio.h	/^	struct cmdprio_prio *prios;$/;"	m	struct:cmdprio_bsprio	typeref:struct:cmdprio_prio *
priv	flist.h	/^extern void flist_sort(void *priv, struct flist_head *head,$/;"	z	prototype:flist_sort	typeref:typename:void *	file:
priv	lib/flist_sort.c	/^static struct flist_head *merge(void *priv,$/;"	z	function:merge	typeref:typename:void *	file:
priv	lib/flist_sort.c	/^static void merge_and_restore_back_links(void *priv,$/;"	z	function:merge_and_restore_back_links	typeref:typename:void *	file:
priv	lib/flist_sort.c	/^void flist_sort(void *priv, struct flist_head *head,$/;"	z	function:flist_sort	typeref:typename:void *	file:
priv	lib/pattern.c	/^			 void *priv)$/;"	z	function:paste_format_inplace	typeref:typename:void *	file:
priv	lib/pattern.c	/^		 char *out, unsigned int out_len, void *priv)$/;"	z	function:paste_format	typeref:typename:void *	file:
priv	lib/pattern.h	/^			 void *priv);$/;"	z	prototype:paste_format_inplace	typeref:typename:void *	file:
priv	lib/pattern.h	/^		 char *out, unsigned int out_len, void *priv);$/;"	z	prototype:paste_format	typeref:typename:void *	file:
priv	t/btrace2fio.c	/^static int entry_cmp(void *priv, struct flist_head *a, struct flist_head *b)$/;"	z	function:entry_cmp	typeref:typename:void *	file:
priv	verify.c	/^int paste_blockoff(char *buf, unsigned int len, void *priv)$/;"	z	function:paste_blockoff	typeref:typename:void *	file:
priv	verify.h	/^extern int paste_blockoff(char *buf, unsigned int len, void *priv);$/;"	z	prototype:paste_blockoff	typeref:typename:void *	file:
priv	workqueue.h	/^	void *priv;$/;"	m	struct:submit_worker	typeref:typename:void *
private	engines/null.c	/^private:$/;"	L	struct:NullData	file:
private_data	engines/libiscsi.c	/^		     void *command_data, void *private_data)$/;"	z	function:iscsi_cb	typeref:typename:void *	file:
private_data	engines/nfs.c	/^                       void *private_data)$/;"	z	function:nfs_callback	typeref:typename:void *	file:
probe	client.h	/^	client_cmd_op		*probe;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
probe	gfio.h	/^	struct probe_widget probe;$/;"	m	struct:gui	typeref:struct:probe_widget
probe	gfio.h	/^	struct probe_widget probe;$/;"	m	struct:gui_entry	typeref:struct:probe_widget
probe_client	client.c	/^static void probe_client(struct fio_client *client)$/;"	f	typeref:typename:void	file:
probe_widget	gfio.h	/^struct probe_widget {$/;"	s
proc_parse_info	oslib/libmtd_legacy.c	/^struct proc_parse_info$/;"	s	file:
proc_parse_next	oslib/libmtd_legacy.c	/^static int proc_parse_next(struct proc_parse_info *pi)$/;"	f	typeref:typename:int	file:
proc_parse_start	oslib/libmtd_legacy.c	/^static int proc_parse_start(struct proc_parse_info *pi)$/;"	f	typeref:typename:int	file:
process_interval	tools/hist/fiologparser_hist.py	/^def process_interval(ctx, iHist, iEnd, dir):$/;"	f
process_weighted_interval	tools/hist/fiologparser_hist.py	/^def process_weighted_interval(ctx, samples, iStart, iEnd, printdirs):$/;"	f
processor_group	os/windows/cpu-affinity.c	/^static int mask_to_group_mask(os_cpu_mask_t *cpumask, int *processor_group, uint64_t *affinity_m/;"	z	function:mask_to_group_mask	typeref:typename:int *	file:
product	t/time-test.c	/^		    unsigned long long product[2])$/;"	z	function:do_mult	typeref:typename:unsigned long long[2]	file:
prof_data	fio.h	/^	void *prof_data;$/;"	m	struct:thread_data	typeref:typename:void *
prof_io_ops	fio.h	/^	struct prof_io_ops prof_io_ops;$/;"	m	struct:thread_data	typeref:struct:prof_io_ops
prof_io_ops	profile.h	/^struct prof_io_ops {$/;"	s
prof_name	options.c	/^void invalidate_profile_options(const char *prof_name)$/;"	z	function:invalidate_profile_options	typeref:typename:const char *	file:
prof_name	parse.h	/^	const char *prof_name;		\/* only valid for specific profile *\/$/;"	m	struct:fio_option	typeref:typename:const char *
prof_opts	parse.h	/^	void *prof_opts;$/;"	m	struct:fio_option	typeref:typename:void *
profile	profile.c	/^int load_profile(const char *profile)$/;"	z	function:load_profile	typeref:typename:const char *	file:
profile	profile.c	/^struct profile_ops *find_profile(const char *profile)$/;"	z	function:find_profile	typeref:typename:const char *	file:
profile	thread_options.h	/^	char *profile;$/;"	m	struct:thread_options	typeref:typename:char *
profile	thread_options.h	/^	uint8_t profile[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
profile_add_hooks	profile.c	/^void profile_add_hooks(struct thread_data *td)$/;"	f	typeref:typename:void
profile_add_hooks	profile.h	/^void profile_add_hooks(struct thread_data *);$/;"	p	typeref:typename:void
profile_ops	profile.h	/^struct profile_ops {$/;"	s
profile_td_exit	profile.c	/^void profile_td_exit(struct thread_data *td)$/;"	f	typeref:typename:void
profile_td_exit	profile.h	/^void profile_td_exit(struct thread_data *);$/;"	p	typeref:typename:void
profile_td_init	profile.c	/^int profile_td_init(struct thread_data *td)$/;"	f	typeref:typename:int
profile_td_init	profile.h	/^int profile_td_init(struct thread_data *);$/;"	p	typeref:typename:int
program	engines/exec.c	/^	char *program;$/;"	m	struct:exec_options	typeref:typename:char *	file:
project	doc/conf.py	/^project = 'fio'$/;"	v
prot	os/windows/posix.c	/^void *mmap(void *addr, size_t len, int prot, int flags, int fildes, off_t off)$/;"	z	function:mmap	typeref:typename:int	file:
prot	os/windows/posix/include/sys/mman.h	/^void *mmap(void *addr, size_t len, int prot, int flags,$/;"	z	prototype:mmap	typeref:typename:int	file:
proto	engines/net.c	/^	unsigned int proto;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
prune_done_entries	t/read-to-pipe-async.c	/^static void prune_done_entries(struct writer_thread *wt)$/;"	f	typeref:typename:void	file:
prune_entry	t/btrace2fio.c	/^static int prune_entry(struct btrace_out *o)$/;"	f	typeref:typename:int	file:
prune_io_piece_log	iolog.c	/^void prune_io_piece_log(struct thread_data *td)$/;"	f	typeref:typename:void
prune_io_piece_log	iolog.h	/^extern void prune_io_piece_log(struct thread_data *);$/;"	p	typeref:typename:void
pseudoxml	doc/Makefile	/^pseudoxml:$/;"	t
psyncv2_options	engines/sync.c	/^struct psyncv2_options {$/;"	s	file:
pthread_double_lock	rate-submit.c	/^static void pthread_double_lock(pthread_mutex_t *lock1, pthread_mutex_t *lock2)$/;"	f	typeref:typename:void	file:
pthread_double_unlock	rate-submit.c	/^static void pthread_double_unlock(pthread_mutex_t *lock1,$/;"	f	typeref:typename:void	file:
ptr	crc/xxhash.c	/^static uint32_t XXH_readLE32(const uint32_t* ptr, XXH_endianess endian) { return XXH_readLE32_al/;"	z	function:XXH_readLE32	typeref:typename:const uint32_t *	file:
ptr	crc/xxhash.c	/^static uint32_t XXH_readLE32_align(const uint32_t* ptr, XXH_endianess endian, XXH_alignment alig/;"	z	function:XXH_readLE32_align	typeref:typename:const uint32_t *	file:
ptr	engines/http.c	/^static size_t _http_read(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_read	typeref:typename:void *	file:
ptr	engines/http.c	/^static size_t _http_write(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_write	typeref:typename:void *	file:
ptr	engines/io_uring.c	/^	void *ptr;$/;"	m	struct:ioring_mmap	typeref:typename:void *	file:
ptr	err.h	/^static inline int PTR_ERR_OR_ZERO(const void *ptr)$/;"	z	function:PTR_ERR_OR_ZERO	typeref:typename:const void *	file:
ptr	err.h	/^static inline uintptr_t IS_ERR(const void *ptr)$/;"	z	function:IS_ERR	typeref:typename:const void *	file:
ptr	err.h	/^static inline uintptr_t IS_ERR_OR_NULL(const void *ptr)$/;"	z	function:IS_ERR_OR_NULL	typeref:typename:const void *	file:
ptr	err.h	/^static inline uintptr_t PTR_ERR(const void *ptr)$/;"	z	function:PTR_ERR	typeref:typename:const void *	file:
ptr	fio.h	/^static inline void fio_memfree(void *ptr, size_t size, bool shared)$/;"	z	function:fio_memfree	typeref:typename:void *	file:
ptr	gettime.c	/^static inline uint32_t atomic32_compare_and_swap(uint32_t *ptr, uint32_t old,$/;"	z	function:atomic32_compare_and_swap	typeref:typename:uint32_t *	file:
ptr	hash.h	/^static inline unsigned long hash_ptr(void *ptr, unsigned int bits)$/;"	z	function:hash_ptr	typeref:typename:void *	file:
ptr	iolog.c	/^static void iolog_put_deferred(struct io_log *log, void *ptr)$/;"	z	function:iolog_put_deferred	typeref:typename:void *	file:
ptr	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	z	function:yyrealloc	typeref:typename:void *	file:
ptr	lex.yy.c	/^void yyfree (void * ptr )$/;"	z	function:yyfree	typeref:typename:void *	file:
ptr	lib/memalign.c	/^void __fio_memfree(void *ptr, size_t size, free_fn fn)$/;"	z	function:__fio_memfree	typeref:typename:void *	file:
ptr	lib/memalign.h	/^extern void __fio_memfree(void *ptr, size_t size, free_fn fn);$/;"	z	prototype:__fio_memfree	typeref:typename:void *	file:
ptr	options.c	/^char *get_next_str(char **ptr)$/;"	z	function:get_next_str	typeref:typename:char **	file:
ptr	options.h	/^char *get_next_str(char **ptr);$/;"	z	prototype:get_next_str	typeref:typename:char **	file:
ptr	oslib/libmtd_xalloc.h	/^static void *xrealloc(void *ptr, size_t size)$/;"	z	function:xrealloc	typeref:typename:void *	file:
ptr	parse.c	/^static int __handle_option(const struct fio_option *o, const char *ptr,$/;"	z	function:__handle_option	typeref:typename:const char *	file:
ptr	server.c	/^int fio_server_parse_string(const char *str, char **ptr, bool *is_sock,$/;"	z	function:fio_server_parse_string	typeref:typename:char **	file:
ptr	smalloc.c	/^static inline int ptr_valid(struct pool *pool, void *ptr)$/;"	z	function:ptr_valid	typeref:typename:void *	file:
ptr	smalloc.c	/^static void sfree_pool(struct pool *pool, void *ptr)$/;"	z	function:sfree_pool	typeref:typename:void *	file:
ptr	smalloc.c	/^void sfree(void *ptr)$/;"	z	function:sfree	typeref:typename:void *	file:
ptr_valid	smalloc.c	/^static inline int ptr_valid(struct pool *pool, void *ptr)$/;"	f	typeref:typename:int	file:
pure_sum	stat.c	/^static void sum_stat(struct io_stat *dst, struct io_stat *src, bool pure_sum)$/;"	z	function:sum_stat	typeref:typename:bool	file:
put_act_ref	profiles/act.c	/^static void put_act_ref(struct thread_data *td)$/;"	f	typeref:typename:void	file:
put_file	file.h	/^extern int __must_check put_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
put_file	filesetup.c	/^int put_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
put_file_log	file.h	/^extern void put_file_log(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:void
put_file_log	io_u.c	/^void put_file_log(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void
put_filelock	filelock.c	/^static void put_filelock(struct fio_filelock *ff)$/;"	f	typeref:typename:void	file:
put_io_u	io_u.c	/^void put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
put_io_u	io_u.h	/^extern void put_io_u(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
put_job	init.c	/^static void put_job(struct thread_data *td)$/;"	f	typeref:typename:void	file:
pvt	oslib/getopt_long.c	/^} pvt;$/;"	v	typeref:struct:getopt_private_state
pwrite	os/os-windows.h	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	p	typeref:typename:ssize_t
pwrite	os/windows/posix.c	/^ssize_t pwrite(int fildes, const void *buf, size_t nbyte,$/;"	f	typeref:typename:ssize_t
pwritev2	os/os-linux.h	/^static inline ssize_t pwritev2(int fd, const struct iovec *iov, int iovcnt,$/;"	f	typeref:typename:ssize_t
pygments_style	doc/conf.py	/^pygments_style = 'sphinx'$/;"	v
q	backend.c	/^bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u)$/;"	z	function:in_flight_overlap	typeref:struct:io_u_queue *	file:
q	fio.h	/^extern bool in_flight_overlap(struct io_u_queue *q, struct io_u *io_u);$/;"	z	prototype:in_flight_overlap	typeref:struct:io_u_queue *	file:
q	io_u_queue.c	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared)$/;"	z	function:io_u_qinit	typeref:struct:io_u_queue *	file:
q	io_u_queue.c	/^void io_u_qexit(struct io_u_queue *q, bool shared)$/;"	z	function:io_u_qexit	typeref:struct:io_u_queue *	file:
q	io_u_queue.h	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared);$/;"	z	prototype:io_u_qinit	typeref:struct:io_u_queue *	file:
q	io_u_queue.h	/^static inline int io_u_qempty(const struct io_u_queue *q)$/;"	z	function:io_u_qempty	typeref:typename:const struct io_u_queue *	file:
q	io_u_queue.h	/^static inline struct io_u *io_u_qpop(struct io_u_queue *q)$/;"	z	function:io_u_qpop	typeref:struct:io_u_queue *	file:
q	io_u_queue.h	/^static inline void io_u_qpush(struct io_u_queue *q, struct io_u *io_u)$/;"	z	function:io_u_qpush	typeref:struct:io_u_queue *	file:
q	io_u_queue.h	/^void io_u_qexit(struct io_u_queue *q, bool shared);$/;"	z	prototype:io_u_qexit	typeref:struct:io_u_queue *	file:
q	zbd.c	/^static void zbd_queue_io(struct thread_data *td, struct io_u *io_u, int q,$/;"	z	function:zbd_queue_io	typeref:typename:int	file:
qp	engines/rdma.c	/^	struct ibv_qp *qp;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_qp *	file:
qsort_cleanup	engines/cpu.c	/^static int qsort_cleanup(struct thread_data *td)$/;"	f	typeref:typename:int	file:
qsort_data	engines/cpu.c	/^	int32_t *qsort_data;$/;"	m	struct:cpu_options	typeref:typename:int32_t *	file:
qsort_init	engines/cpu.c	/^static int qsort_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
qsort_size	engines/cpu.c	/^size_t qsort_size = (256 * (1ULL << 10)); \/\/ 256KB$/;"	v	typeref:typename:size_t
qthelp	doc/Makefile	/^qthelp:$/;"	t
queue	engines/xnvme.c	/^	struct xnvme_queue *queue;$/;"	m	struct:xnvme_fioe_fwrap	typeref:struct:xnvme_queue *	file:
queue	ioengines.h	/^	enum fio_q_status (*queue)(struct thread_data *, struct io_u *);$/;"	m	struct:ioengine_ops	typeref:enum:fio_q_status (*)(struct thread_data *,struct io_u *)
queue_depth	engines/nfs.c	/^	unsigned int queue_depth; \/* nfs_callback needs this info, but doesn't have fio td structure t/;"	m	struct:fio_libnfs_options	typeref:typename:unsigned int	file:
queue_full	io_u.c	/^bool queue_full(const struct thread_data *td)$/;"	f	typeref:typename:bool
queue_full	io_u.h	/^bool queue_full(const struct thread_data *);$/;"	p	typeref:typename:bool
queue_io	engines/filecreate.c	/^static enum fio_q_status queue_io(struct thread_data *td,$/;"	f	typeref:enum:fio_q_status	file:
queue_io	engines/filedelete.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	f	typeref:enum:fio_q_status	file:
queue_io	engines/filestat.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	f	typeref:enum:fio_q_status	file:
queue_io_piece	iolog.c	/^void queue_io_piece(struct thread_data *td, struct io_piece *ipo)$/;"	f	typeref:typename:void
queue_io_piece	iolog.h	/^extern void queue_io_piece(struct thread_data *, struct io_piece *);$/;"	p	typeref:typename:void
queue_read	engines/nfs.c	/^static int queue_read(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	f	typeref:typename:int	file:
queue_trace	blktrace.c	/^static bool queue_trace(struct thread_data *td, struct blk_io_trace *t,$/;"	f	typeref:typename:bool	file:
queue_work	t/read-to-pipe-async.c	/^static void queue_work(struct reader_thread *rt, struct work_item *work)$/;"	f	typeref:typename:void	file:
queue_write	engines/nfs.c	/^static int queue_write(struct fio_libnfs_options *o, struct io_u *io_u) {$/;"	f	typeref:typename:int	file:
queued	engines/dfs.c	/^	int		queued;$/;"	m	struct:daos_data	typeref:typename:int	file:
queued	engines/ime.c	/^	unsigned int 	queued;			\/* iovecs\/io_us in the queue *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
queued	engines/io_uring.c	/^	int queued;$/;"	m	struct:ioring_data	typeref:typename:int	file:
queued	engines/libaio.c	/^	unsigned int queued;$/;"	m	struct:libaio_data	typeref:typename:unsigned int	file:
queued	engines/null.c	/^	int queued;$/;"	m	struct:null_data	typeref:typename:int	file:
queued	engines/posixaio.c	/^	unsigned int queued;$/;"	m	struct:posixaio_data	typeref:typename:unsigned int	file:
queued	engines/sync.c	/^	unsigned int queued;$/;"	m	struct:syncio_data	typeref:typename:unsigned int	file:
queued_bytes	engines/sync.c	/^	unsigned long queued_bytes;$/;"	m	struct:syncio_data	typeref:typename:unsigned long	file:
quiet	t/time-test.c	/^			    int quiet, int delta_ticks, int delta_nsec)$/;"	z	function:test_clock	typeref:typename:int	file:
quit	client.h	/^	client_cmd_op		*quit;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
quit_clicked	gfio.c	/^static void quit_clicked(__attribute__((unused)) GtkWidget *widget,$/;"	f	typeref:typename:void	file:
r	crc/murmur3.c	/^static inline uint32_t rotl32(uint32_t x, int8_t r)$/;"	z	function:rotl32	typeref:typename:int8_t	file:
r	ghelpers.c	/^					gfloat r, gfloat g, gfloat b)$/;"	z	function:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
r	ghelpers.c	/^static void fill_color_from_rgb(GdkColor *c, gfloat r, gfloat g, gfloat b)$/;"	z	function:fill_color_from_rgb	typeref:typename:gfloat	file:
r	ghelpers.h	/^					gfloat r, gfloat g, gfloat b);$/;"	z	prototype:new_info_entry_in_frame_rgb	typeref:typename:gfloat	file:
r	goptions.c	/^				      struct gopt_range *r,$/;"	z	function:gopt_handle_range_changed	typeref:struct:gopt_range *	file:
r	goptions.c	/^static void gopt_int_range_set_val(struct gopt_range *r, unsigned int *vals)$/;"	z	function:gopt_int_range_set_val	typeref:struct:gopt_range *	file:
r	graph.c	/^	double r, g, b;$/;"	m	struct:graph_label	typeref:typename:double	file:
r	io_u_queue.h	/^static inline struct io_u *io_u_rpop(struct io_u_ring *r)$/;"	z	function:io_u_rpop	typeref:struct:io_u_ring *	file:
r	io_u_queue.h	/^static inline void io_u_rpush(struct io_u_ring *r, struct io_u *io_u)$/;"	z	function:io_u_rpush	typeref:struct:io_u_ring *	file:
r	lib/gauss.h	/^	struct frand_state r;$/;"	m	struct:gauss_state	typeref:struct:frand_state
r	os/os-solaris.h	/^	unsigned short r[3];$/;"	m	struct:solaris_rand_seed	typeref:typename:unsigned short[3]
r_index	lib/prio_tree.c	/^		unsigned long *r_index, unsigned long *h_index)$/;"	z	function:prio_tree_left	typeref:typename:unsigned long *	file:
r_index	lib/prio_tree.c	/^		unsigned long *r_index, unsigned long *h_index)$/;"	z	function:prio_tree_right	typeref:typename:unsigned long *	file:
r_index	lib/prio_tree.c	/^		unsigned long r_index, unsigned long h_index)$/;"	z	function:overlap	typeref:typename:unsigned long	file:
r_index	lib/prio_tree.h	/^		struct prio_tree_root *root, uint64_t r_index, uint64_t h_index)$/;"	z	function:prio_tree_iter_init	typeref:typename:uint64_t	file:
r_index	lib/prio_tree.h	/^	uint64_t		r_index;$/;"	m	struct:prio_tree_iter	typeref:typename:uint64_t
r_usage	os/windows/posix.c	/^int getrusage(int who, struct rusage *r_usage)$/;"	z	function:getrusage	typeref:struct:rusage *	file:
r_usage	os/windows/posix/include/sys/resource.h	/^int getrusage(int who, struct rusage *r_usage);$/;"	z	prototype:getrusage	typeref:struct:rusage *	file:
radix	lib/prio_tree.c	/^		      unsigned long *radix, unsigned long *heap)$/;"	z	function:get_index	typeref:typename:unsigned long *	file:
rados	engines/rados.c	/^static void _fio_rados_disconnect(struct rados_data *rados)$/;"	z	function:_fio_rados_disconnect	typeref:struct:rados_data *	file:
rados	engines/rados.c	/^static void _fio_rados_rm_objects(struct thread_data *td, struct rados_data *rados)$/;"	z	function:_fio_rados_rm_objects	typeref:struct:rados_data *	file:
rados_LIBS	Makefile	/^  rados_LIBS = -lrados$/;"	m
rados_SRCS	Makefile	/^  rados_SRCS = engines\/rados.c$/;"	m
rados_data	engines/rados.c	/^struct rados_data {$/;"	s	file:
rados_data_ptr	engines/rados.c	/^				struct rados_data **rados_data_ptr)$/;"	z	function:_fio_setup_rados_data	typeref:struct:rados_data **	file:
rados_options	engines/rados.c	/^struct rados_options {$/;"	s	file:
ramp_time	steadystate.h	/^	unsigned long long ramp_time;$/;"	m	struct:steadystate_data	typeref:typename:unsigned long long
ramp_time	thread_options.h	/^	uint64_t ramp_time;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
ramp_time	thread_options.h	/^	unsigned long long ramp_time;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
ramp_time_over	fio.h	/^	bool ramp_time_over;$/;"	m	struct:thread_data	typeref:typename:bool
ramp_time_over	fio_time.h	/^extern bool ramp_time_over(struct thread_data *);$/;"	p	typeref:typename:bool
ramp_time_over	time.c	/^bool ramp_time_over(struct thread_data *td)$/;"	f	typeref:typename:bool
rand	lib/zipf.h	/^	struct frand_state rand;$/;"	m	struct:zipf_state	typeref:struct:frand_state
rand	verify-state.h	/^	struct thread_rand_state rand;$/;"	m	struct:thread_io_list	typeref:struct:thread_rand_state
rand32_upto	lib/rand.h	/^static inline uint32_t rand32_upto(struct frand_state *state, uint32_t end)$/;"	f	typeref:typename:uint32_t
rand64_upto	lib/rand.h	/^static inline uint64_t rand64_upto(struct frand_state *state, uint64_t end)$/;"	f	typeref:typename:uint64_t
rand_between	lib/rand.h	/^static inline uint64_t rand_between(struct frand_state *state, uint64_t start,$/;"	f	typeref:typename:uint64_t
rand_max	lib/rand.h	/^static inline uint64_t rand_max(struct frand_state *state)$/;"	f	typeref:typename:uint64_t
rand_off	lib/gauss.h	/^	unsigned int rand_off;$/;"	m	struct:gauss_state	typeref:typename:unsigned int
rand_off	lib/zipf.h	/^	uint64_t rand_off;$/;"	m	struct:zipf_state	typeref:typename:uint64_t
rand_repeatable	thread_options.h	/^	uint32_t rand_repeatable;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
rand_repeatable	thread_options.h	/^	unsigned int rand_repeatable;$/;"	m	struct:thread_options	typeref:typename:unsigned int
rand_seed	io_u.h	/^	uint64_t rand_seed;$/;"	m	struct:io_u	typeref:typename:uint64_t
rand_seed	thread_options.h	/^	uint64_t rand_seed;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
rand_seed	thread_options.h	/^	unsigned long long rand_seed;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
rand_seed	verify.c	/^		       unsigned int header_len, uint64_t rand_seed)$/;"	z	function:__fill_hdr	typeref:typename:uint64_t	file:
rand_seed	verify.c	/^		       unsigned int header_len, uint64_t rand_seed);$/;"	z	prototype:__fill_hdr	typeref:typename:uint64_t	file:
rand_seed	verify.c	/^		     unsigned int header_len, uint64_t rand_seed)$/;"	z	function:fill_hdr	typeref:typename:uint64_t	file:
rand_seed	verify.h	/^	uint64_t rand_seed;$/;"	m	struct:verify_header	typeref:typename:uint64_t
rand_seeds	fio.h	/^	uint64_t rand_seeds[FIO_RAND_NR_OFFS];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
rand_seeds	os/os-windows.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	z	function:init_random_seeds	typeref:typename:uint64_t *	file:
rand_seeds	os/os.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	z	function:init_random_seeds	typeref:typename:uint64_t *	file:
rand_state	engines/rdma.c	/^	struct frand_state rand_state;$/;"	m	struct:rdmaio_data	typeref:struct:frand_state	file:
rand_state	engines/sync.c	/^	struct frand_state rand_state;$/;"	m	struct:syncio_data	typeref:struct:frand_state	file:
rand_state	t/io_uring.c	/^	struct taus258_state rand_state;$/;"	m	struct:submitter	typeref:struct:taus258_state	file:
random_center	fio.h	/^	double random_center;$/;"	m	struct:thread_data	typeref:typename:double
random_center	thread_options.h	/^	fio_fp64_t random_center;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
random_center	thread_options.h	/^	fio_fp64_t random_center;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
random_diff	t/btrace2fio.c	/^static unsigned int random_diff = 5;$/;"	v	typeref:typename:unsigned int	file:
random_distribution	thread_options.h	/^	uint32_t random_distribution;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
random_distribution	thread_options.h	/^	unsigned int random_distribution;$/;"	m	struct:thread_options	typeref:typename:unsigned int
random_generator	thread_options.h	/^	uint32_t random_generator;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
random_generator	thread_options.h	/^	unsigned int random_generator;$/;"	m	struct:thread_options	typeref:typename:unsigned int
random_io	t/io_uring.c	/^static int random_io = 1;	\/* random or sequential IO *\/$/;"	v	typeref:typename:int	file:
random_map_free	io_u.c	/^static bool random_map_free(struct fio_file *f, const uint64_t block)$/;"	f	typeref:typename:bool	file:
random_state	fio.h	/^	struct frand_state random_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
randread	t/sgunmap-perf.py	/^    randread, rrmean = runtests(args.fioc, args.cdev, 16, 1, 'randread',$/;"	v
randread	t/sgunmap-perf.py	/^    randread, rrmean = runtests(args.fior, args.cdev, 16, 1, 'randread',$/;"	v
randwrite	t/sgunmap-perf.py	/^    randwrite, rwmean = runtests(args.fioc, args.cdev, 16, 1, 'randwrite',$/;"	v
randwrite	t/sgunmap-perf.py	/^    randwrite, rwmean = runtests(args.fior, args.cdev, 16, 1, 'randwrite',$/;"	v
range_value_changed	goptions.c	/^static void range_value_changed(GtkSpinButton *spin, gpointer data)$/;"	f	typeref:typename:void	file:
ranges	stat.c	/^static bool show_lat(double *io_u_lat, int nr, const char **ranges,$/;"	z	function:show_lat	typeref:typename:const char **	file:
rate	eta.c	/^		      unsigned long long *prev_io_bytes, uint64_t *rate)$/;"	z	function:calc_rate	typeref:typename:uint64_t *	file:
rate	thread_options.h	/^	uint64_t rate[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:uint64_t[]
rate	thread_options.h	/^	uint64_t rate[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
rate_bps	fio.h	/^	uint64_t rate_bps[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
rate_ddir	io_u.c	/^static enum fio_ddir rate_ddir(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:enum:fio_ddir	file:
rate_ign_think	thread_options.h	/^	uint32_t rate_ign_think;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
rate_ign_think	thread_options.h	/^	unsigned int rate_ign_think;$/;"	m	struct:thread_options	typeref:typename:unsigned int
rate_io_issue_bytes	fio.h	/^	unsigned long long rate_io_issue_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:unsigned long long[]
rate_iops	thread_options.h	/^	uint32_t rate_iops[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
rate_iops	thread_options.h	/^	unsigned int rate_iops[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
rate_iops_min	thread_options.h	/^	uint32_t rate_iops_min[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
rate_iops_min	thread_options.h	/^	unsigned int rate_iops_min[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
rate_next_io_time	fio.h	/^	uint64_t rate_next_io_time[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
rate_process	thread_options.h	/^	uint32_t rate_process;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
rate_process	thread_options.h	/^	unsigned int rate_process;$/;"	m	struct:thread_options	typeref:typename:unsigned int
rate_str	eta.c	/^		       char **rate_str, char **iops_str)$/;"	z	function:gen_eta_str	typeref:typename:char **	file:
rate_submit_exit	rate-submit.c	/^void rate_submit_exit(struct thread_data *td)$/;"	f	typeref:typename:void
rate_submit_exit	rate-submit.h	/^void rate_submit_exit(struct thread_data *);$/;"	p	typeref:typename:void
rate_submit_init	rate-submit.c	/^int rate_submit_init(struct thread_data *td, struct sk_out *sk_out)$/;"	f	typeref:typename:int
rate_submit_init	rate-submit.h	/^int rate_submit_init(struct thread_data *, struct sk_out *);$/;"	p	typeref:typename:int
rate_threshold	t/btrace2fio.c	/^static unsigned int rate_threshold;$/;"	v	typeref:typename:unsigned int	file:
ratecycle	thread_options.h	/^	uint32_t ratecycle;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ratecycle	thread_options.h	/^	unsigned int ratecycle;$/;"	m	struct:thread_options	typeref:typename:unsigned int
rated_wq_ops	rate-submit.c	/^static struct workqueue_ops rated_wq_ops = {$/;"	v	typeref:struct:workqueue_ops	file:
ratemin	thread_options.h	/^	uint64_t ratemin[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:uint64_t[]
ratemin	thread_options.h	/^	uint64_t ratemin[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
rb	lib/rbtree.h	/^static inline void rb_set_color(struct fio_rb_node *rb, int color)$/;"	z	function:rb_set_color	typeref:struct:fio_rb_node *	file:
rb	lib/rbtree.h	/^static inline void rb_set_parent(struct fio_rb_node *rb, struct fio_rb_node *p)$/;"	z	function:rb_set_parent	typeref:struct:fio_rb_node *	file:
rb_color	lib/rbtree.h	/^#define rb_color(/;"	d
rb_entry	lib/rbtree.h	/^#define	rb_entry(/;"	d
rb_erase	lib/rbtree.c	/^void rb_erase(struct fio_rb_node *node, struct rb_root *root)$/;"	f	typeref:typename:void
rb_erase	lib/rbtree.h	/^extern void rb_erase(struct fio_rb_node *, struct rb_root *);$/;"	p	typeref:typename:void
rb_first	lib/rbtree.c	/^struct fio_rb_node *rb_first(struct rb_root *root)$/;"	f	typeref:struct:fio_rb_node *
rb_first	lib/rbtree.h	/^extern struct fio_rb_node *rb_first(struct rb_root *);$/;"	p	typeref:struct:fio_rb_node *
rb_insert_color	lib/rbtree.c	/^void rb_insert_color(struct fio_rb_node *node, struct rb_root *root)$/;"	f	typeref:typename:void
rb_insert_color	lib/rbtree.h	/^extern void rb_insert_color(struct fio_rb_node *, struct rb_root *);$/;"	p	typeref:typename:void
rb_is_black	lib/rbtree.h	/^#define rb_is_black(/;"	d
rb_is_red	lib/rbtree.h	/^#define rb_is_red(/;"	d
rb_left	lib/rbtree.h	/^	struct fio_rb_node *rb_left;$/;"	m	struct:fio_rb_node	typeref:struct:fio_rb_node *
rb_link	lib/rbtree.h	/^				struct fio_rb_node ** rb_link)$/;"	z	function:rb_link_node	typeref:struct:fio_rb_node **	file:
rb_link_node	lib/rbtree.h	/^static inline void rb_link_node(struct fio_rb_node * node,$/;"	f	typeref:typename:void
rb_lock	t/dedupe.c	/^static struct fio_sem *rb_lock;$/;"	v	typeref:struct:fio_sem *	file:
rb_next	lib/rbtree.c	/^struct fio_rb_node *rb_next(const struct fio_rb_node *node)$/;"	f	typeref:struct:fio_rb_node *
rb_next	lib/rbtree.h	/^extern struct fio_rb_node *rb_next(const struct fio_rb_node *);$/;"	p	typeref:struct:fio_rb_node *
rb_node	iolog.h	/^		struct fio_rb_node rb_node;$/;"	m	union:io_piece::__anona1301755060a	typeref:struct:fio_rb_node
rb_node	lib/rbtree.h	/^	struct fio_rb_node *rb_node;$/;"	m	struct:rb_root	typeref:struct:fio_rb_node *
rb_node	t/dedupe.c	/^	struct fio_rb_node rb_node;$/;"	m	struct:chunk	typeref:struct:fio_rb_node	file:
rb_parent	lib/rbtree.h	/^#define rb_parent(/;"	d
rb_parent_color	lib/rbtree.h	/^	intptr_t rb_parent_color;$/;"	m	struct:fio_rb_node	typeref:typename:intptr_t
rb_right	lib/rbtree.h	/^	struct fio_rb_node *rb_right;$/;"	m	struct:fio_rb_node	typeref:struct:fio_rb_node *
rb_root	lib/rbtree.h	/^struct rb_root$/;"	s
rb_root	t/dedupe.c	/^static struct rb_root rb_root;$/;"	v	typeref:struct:rb_root	file:
rb_set_black	lib/rbtree.h	/^#define rb_set_black(/;"	d
rb_set_color	lib/rbtree.h	/^static inline void rb_set_color(struct fio_rb_node *rb, int color)$/;"	f	typeref:typename:void
rb_set_parent	lib/rbtree.h	/^static inline void rb_set_parent(struct fio_rb_node *rb, struct fio_rb_node *p)$/;"	f	typeref:typename:void
rb_set_red	lib/rbtree.h	/^#define rb_set_red(/;"	d
rbd	engines/rbd.c	/^static bool _fio_rbd_setup_poll(struct rbd_data *rbd)$/;"	z	function:_fio_rbd_setup_poll	typeref:struct:rbd_data *	file:
rbd	engines/rbd.c	/^static inline int fri_check_complete(struct rbd_data *rbd, struct io_u *io_u,$/;"	z	function:fri_check_complete	typeref:struct:rbd_data *	file:
rbd	engines/rbd.c	/^static void _fio_rbd_disconnect(struct rbd_data *rbd)$/;"	z	function:_fio_rbd_disconnect	typeref:struct:rbd_data *	file:
rbd_LIBS	Makefile	/^  rbd_LIBS = -lrbd -lrados$/;"	m
rbd_SRCS	Makefile	/^  rbd_SRCS = engines\/rbd.c$/;"	m
rbd_data	engines/rbd.c	/^struct rbd_data {$/;"	s	file:
rbd_data_ptr	engines/rbd.c	/^			       struct rbd_data **rbd_data_ptr)$/;"	z	function:_fio_setup_rbd_data	typeref:struct:rbd_data **	file:
rbd_io_u_cmp	engines/rbd.c	/^static int rbd_io_u_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
rbd_io_u_seen	engines/rbd.c	/^static inline int rbd_io_u_seen(struct io_u *io_u)$/;"	f	typeref:typename:int	file:
rbd_io_u_wait_complete	engines/rbd.c	/^static void rbd_io_u_wait_complete(struct io_u *io_u)$/;"	f	typeref:typename:void	file:
rbd_iter_events	engines/rbd.c	/^static int rbd_iter_events(struct thread_data *td, unsigned int *events,$/;"	f	typeref:typename:int	file:
rbd_name	engines/rbd.c	/^	char *rbd_name;$/;"	m	struct:rbd_options	typeref:typename:char *	file:
rbd_options	engines/rbd.c	/^struct rbd_options {$/;"	s	file:
rc	lex.yy.c	/^			int rc;$/;"	v	typeref:typename:int
rc	lex.yy.c	/^		int rc, intval;$/;"	v	typeref:typename:int
rdma_LIBS	Makefile	/^  rdma_LIBS = -libverbs -lrdmacm$/;"	m
rdma_SRCS	Makefile	/^  rdma_SRCS = engines\/rdma.c$/;"	m
rdma_info_blk	engines/rdma.c	/^struct rdma_info_blk {$/;"	s	file:
rdma_io_mode	engines/rdma.c	/^enum rdma_io_mode {$/;"	g	file:
rdma_io_u_data	engines/rdma.c	/^struct rdma_io_u_data {$/;"	s	file:
rdma_poll_wait	engines/rdma.c	/^static int rdma_poll_wait(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	f	typeref:typename:int	file:
rdma_protocol	engines/rdma.c	/^	enum rdma_io_mode rdma_protocol;$/;"	m	struct:rdmaio_data	typeref:enum:rdma_io_mode	file:
rdma_sgl	engines/rdma.c	/^	struct ibv_sge rdma_sgl;$/;"	m	struct:rdma_io_u_data	typeref:struct:ibv_sge	file:
rdmaio_data	engines/rdma.c	/^struct rdmaio_data {$/;"	s	file:
rdmaio_options	engines/rdma.c	/^struct rdmaio_options {$/;"	s	file:
reStructuredText	README.rst	/^.. _reStructuredText: http:\/\/www.sphinx-doc.org\/rest.html$/;"	T	section:Documentation
re_read	engines/sg.c	/^re_read:$/;"	L	function:fio_sgio_getevents	file:
read_barrier	arch/arch-aarch64.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-alpha.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-arm.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-generic.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-hppa.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-ia64.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-mips.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-ppc.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-s390.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-sh.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-sparc.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-sparc64.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-x86.h	/^#define read_barrier(/;"	d
read_barrier	arch/arch-x86_64.h	/^#define read_barrier(/;"	d
read_beyond_wp	thread_options.h	/^	unsigned int read_beyond_wp;$/;"	m	struct:thread_options	typeref:typename:unsigned int
read_blktrace	blktrace.c	/^bool read_blktrace(struct thread_data* td)$/;"	f	typeref:typename:bool
read_blktrace	blktrace.h	/^bool read_blktrace(struct thread_data* td);$/;"	p	typeref:typename:bool
read_blktrace	blktrace.h	/^static inline bool read_blktrace(struct thread_data* td)$/;"	f	typeref:typename:bool
read_block	t/dedupe.c	/^static int read_block(int fd, void *buf, off_t offset)$/;"	f	typeref:typename:int	file:
read_block_dev_entry	diskutil.c	/^static int read_block_dev_entry(char *path, int *maj, int *min)$/;"	f	typeref:typename:int	file:
read_blocks	t/dedupe.c	/^static unsigned int read_blocks(int fd, void *buf, off_t offset, size_t size)$/;"	f	typeref:typename:unsigned int	file:
read_bw	gfio.h	/^	GtkWidget *read_bw;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
read_bw	gfio.h	/^	graph_label_t read_bw;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
read_chunk	tools/hist/fiologparser_hist.py	/^def read_chunk(rdr, sz):$/;"	f
read_data	client.c	/^static int read_data(int fd, void *data, size_t size)$/;"	f	typeref:typename:int	file:
read_data	oslib/libmtd.c	/^static int read_data(const char *file, void *buf, int buf_len)$/;"	f	typeref:typename:int	file:
read_data	tools/fiologparser.py	/^    def read_data(self, fn):$/;"	m	class:TimeSeries
read_file	oslib/linux-blkzoned.c	/^static char *read_file(const char *path)$/;"	f	typeref:typename:char *	file:
read_from_pipe	helper_thread.c	/^static int read_from_pipe(int fd, void *buf, size_t len)$/;"	f	typeref:typename:int	file:
read_hex_int	oslib/libmtd.c	/^static int read_hex_int(const char *file, int *value)$/;"	f	typeref:typename:int	file:
read_hex_ll	oslib/libmtd.c	/^static int read_hex_ll(const char *file, long long *value)$/;"	f	typeref:typename:int	file:
read_ini_data	client.c	/^static int read_ini_data(int fd, void *data, size_t size)$/;"	f	typeref:typename:int	file:
read_iolog	iolog.c	/^static bool read_iolog(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
read_iolog	iolog.c	/^static bool read_iolog(struct thread_data *td);$/;"	p	typeref:typename:bool	file:
read_iolog_chunked	thread_options.h	/^	bool read_iolog_chunked;$/;"	m	struct:thread_options	typeref:typename:bool
read_iolog_file	thread_options.h	/^	char *read_iolog_file;$/;"	m	struct:thread_options	typeref:typename:char *
read_iolog_file	thread_options.h	/^	uint8_t read_iolog_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
read_iolog_get	iolog.c	/^int read_iolog_get(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
read_iolog_get	iolog.h	/^extern int __must_check read_iolog_get(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int __must_check
read_iops	gfio.h	/^	GtkWidget *read_iops;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
read_iops	gfio.h	/^	graph_label_t read_iops;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
read_major	oslib/libmtd.c	/^static int read_major(const char *file, int *major, int *minor)$/;"	f	typeref:typename:int	file:
read_only	init.c	/^bool read_only = false;$/;"	v	typeref:typename:bool
read_pos_int	oslib/libmtd.c	/^static int read_pos_int(const char *file, int *value)$/;"	f	typeref:typename:int	file:
read_pos_ll	oslib/libmtd.c	/^static int read_pos_ll(const char *file, long long *value)$/;"	f	typeref:typename:int	file:
read_seqlock_begin	lib/seqlock.h	/^static inline unsigned int read_seqlock_begin(struct seqlock *s)$/;"	f	typeref:typename:unsigned int
read_seqlock_retry	lib/seqlock.h	/^static inline bool read_seqlock_retry(struct seqlock *s, unsigned int seq)$/;"	f	typeref:typename:bool
read_skip	blktrace.c	/^read_skip:$/;"	L	function:read_trace	file:
read_trace	blktrace.c	/^static int read_trace(struct thread_data *td, struct blktrace_cursor *bc)$/;"	f	typeref:typename:int	file:
read_tsc_rate	t/io_uring.c	/^static void read_tsc_rate(void)$/;"	f	typeref:typename:void	file:
readdir	os/windows/posix.c	/^struct dirent *readdir(DIR *dirp)$/;"	f	typeref:struct:dirent *
readdir	os/windows/posix/include/dirent.h	/^struct dirent *readdir(DIR *dirp);$/;"	p	typeref:struct:dirent *
reader	t/read-to-pipe-async.c	/^	struct reader_thread *reader;$/;"	m	struct:work_item	typeref:struct:reader_thread *	file:
reader_fn	t/read-to-pipe-async.c	/^static void *reader_fn(void *data)$/;"	f	typeref:typename:void *	file:
reader_one_off	t/read-to-pipe-async.c	/^static void *reader_one_off(void *data)$/;"	f	typeref:typename:void *	file:
reader_thread	t/read-to-pipe-async.c	/^static struct reader_thread reader_thread;$/;"	v	typeref:struct:reader_thread	file:
reader_thread	t/read-to-pipe-async.c	/^struct reader_thread {$/;"	s	file:
reader_work	t/read-to-pipe-async.c	/^static void reader_work(struct work_item *work)$/;"	f	typeref:typename:void	file:
readfua	engines/sg.c	/^	unsigned int readfua;$/;"	m	struct:sg_options	typeref:typename:unsigned int	file:
reads	profiles/act.c	/^static int act_add_rw(const char *dev, int reads)$/;"	z	function:act_add_rw	typeref:typename:int	file:
reads	t/steadystate_tests.py	/^    reads = [ {'s': True, 'timeout': 100, 'numjobs': 1, 'ss_dur': 5, 'ss_ramp': 3, 'iops': True,/;"	v
readv	os/windows/posix.c	/^ssize_t readv(int fildes, const struct iovec *iov, int iovcnt)$/;"	f	typeref:typename:ssize_t
readv	os/windows/posix/include/sys/uio.h	/^ ssize_t readv(int fildes, const struct iovec *iov, int iovcnt);$/;"	p	typeref:typename:ssize_t
real_fd	t/io_uring.c	/^	int real_fd;$/;"	m	struct:file	typeref:typename:int	file:
real_file_size	file.h	/^	uint64_t real_file_size;$/;"	m	struct:fio_file	typeref:typename:uint64_t
reap	backend.c	/^reap:$/;"	L	function:do_io	file:
reap	backend.c	/^reap:$/;"	L	function:do_verify	file:
reap	backend.c	/^reap:$/;"	L	function:run_threads	file:
reap_events_aio	t/io_uring.c	/^static int reap_events_aio(struct submitter *s, struct io_event *events, int evs)$/;"	f	typeref:typename:int	file:
reap_events_uring	t/io_uring.c	/^static int reap_events_uring(struct submitter *s)$/;"	f	typeref:typename:int	file:
reap_threads	backend.c	/^static void reap_threads(unsigned int *nr_running, uint64_t *t_rate,$/;"	f	typeref:typename:void	file:
reaped	backend.c	/^reaped:$/;"	L	function:reap_threads	file:
reaps	t/io_uring.c	/^	unsigned long reaps;$/;"	m	struct:submitter	typeref:typename:unsigned long	file:
reason	t/io_uring.c	/^static void do_finish(const char *reason)$/;"	z	function:do_finish	typeref:typename:const char *	file:
recent_open	gfio.c	/^static void recent_open(GtkAction *action, gpointer data)$/;"	f	typeref:typename:void	file:
recent_ui_id	gfio.h	/^	guint recent_ui_id;$/;"	m	struct:gui	typeref:typename:guint
recentmanager	gfio.h	/^	GtkRecentManager *recentmanager;$/;"	m	struct:gui	typeref:typename:GtkRecentManager *
recurse_dir	filesetup.c	/^static bool recurse_dir(struct thread_data *td, const char *dirname)$/;"	f	typeref:typename:bool	file:
recursed	init.c	/^		   int recursed, int client_type)$/;"	z	function:add_job	typeref:typename:int	file:
recv_buf	engines/rdma.c	/^	struct rdma_info_blk recv_buf;$/;"	m	struct:rdmaio_data	typeref:struct:rdma_info_blk	file:
recv_mr	engines/rdma.c	/^	struct ibv_mr *recv_mr;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_mr *	file:
recv_sgl	engines/rdma.c	/^	struct ibv_sge recv_sgl;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_sge	file:
red	graph.c	/^void graph_set_color(struct graph *gr, graph_label_t label, double red,$/;"	z	function:graph_set_color	typeref:typename:double	file:
red	graph.h	/^		double red, double green, double blue);$/;"	z	prototype:graph_set_color	typeref:typename:double	file:
redirect	oslib/linux-dev-lookup.c	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	function:blktrace_lookup_device	typeref:typename:const char *	file:
redirect	oslib/linux-dev-lookup.h	/^int blktrace_lookup_device(const char *redirect, char *path, unsigned int maj,$/;"	z	prototype:blktrace_lookup_device	typeref:typename:const char *	file:
refcount	engines/glusterfs.c	/^	int			refcount;$/;"	m	struct:glfs_info	typeref:typename:int	file:
refcount	zbd.h	/^	uint32_t		refcount;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
references	file.h	/^	int references;$/;"	m	struct:fio_file	typeref:typename:int
references	filelock.c	/^	unsigned int references;$/;"	m	struct:fio_filelock	typeref:typename:unsigned int	file:
refill_buffers	thread_options.h	/^	uint32_t refill_buffers;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
refill_buffers	thread_options.h	/^	unsigned int refill_buffers;$/;"	m	struct:thread_options	typeref:typename:unsigned int
refill_fifo	t/btrace2fio.c	/^static int refill_fifo(struct fifo *fifo, int fd)$/;"	f	typeref:typename:int	file:
refs	client.h	/^	unsigned int refs;$/;"	m	struct:fio_client	typeref:typename:unsigned int
refs	flow.c	/^	unsigned int refs;$/;"	m	struct:fio_flow	typeref:typename:unsigned int	file:
refs	server.h	/^	unsigned int refs;	\/* frees sk_out when it drops to zero.$/;"	m	struct:sk_out	typeref:typename:unsigned int
reg	arch/arch-ppc.h	/^static inline unsigned int mfspr(unsigned int reg)$/;"	z	function:mfspr	typeref:typename:unsigned int	file:
regidx	oslib/libmtd.c	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo)$/;"	z	function:mtd_regioninfo	typeref:typename:int	file:
regidx	oslib/libmtd.h	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo);$/;"	z	prototype:mtd_regioninfo	typeref:typename:int	file:
reginfo	oslib/libmtd.c	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo)$/;"	z	function:mtd_regioninfo	typeref:struct:region_info_user *	file:
reginfo	oslib/libmtd.h	/^int mtd_regioninfo(int fd, int regidx, struct region_info_user *reginfo);$/;"	z	prototype:mtd_regioninfo	typeref:struct:region_info_user *	file:
region_cnt	oslib/libmtd.h	/^	int region_cnt;$/;"	m	struct:mtd_dev_info	typeref:typename:int
register_files	t/io_uring.c	/^static int register_files = 1;	\/* use fixed files *\/$/;"	v	typeref:typename:int	file:
register_ioengine	ioengines.c	/^void register_ioengine(struct ioengine_ops *ops)$/;"	f	typeref:typename:void
register_ioengine	ioengines.h	/^extern void register_ioengine(struct ioengine_ops *);$/;"	p	typeref:typename:void
register_op	os/linux/io_uring.h	/^		__u8 register_op; \/* IORING_RESTRICTION_REGISTER_OP *\/$/;"	m	union:io_uring_restriction::__anon2bbba9270b0a	typeref:typename:__u8
register_profile	profile.c	/^int register_profile(struct profile_ops *ops)$/;"	f	typeref:typename:int
register_profile	profile.h	/^int register_profile(struct profile_ops *);$/;"	p	typeref:typename:int
register_ring	t/io_uring.c	/^static int register_ring = 1;	\/* register ring *\/$/;"	v	typeref:typename:int	file:
registerfiles	engines/io_uring.c	/^	unsigned int registerfiles;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
regrow_agg_logs	iolog.h	/^void regrow_agg_logs(void);$/;"	p	typeref:typename:void
regrow_agg_logs	stat.c	/^void regrow_agg_logs(void)$/;"	f	typeref:typename:void
regrow_log	stat.c	/^static struct io_logs *regrow_log(struct io_log *iolog)$/;"	f	typeref:struct:io_logs *	file:
regrow_logs	iolog.h	/^void regrow_logs(struct thread_data *);$/;"	p	typeref:typename:void
regrow_logs	stat.c	/^void regrow_logs(struct thread_data *td)$/;"	f	typeref:typename:void
rel_time_since	fio_time.h	/^extern int64_t rel_time_since(const struct timespec *,$/;"	p	typeref:typename:int64_t
rel_time_since	gettime.c	/^int64_t rel_time_since(const struct timespec *s, const struct timespec *e)$/;"	f	typeref:typename:int64_t
release	doc/conf.py	/^version, release = fio_version()$/;"	v
remote	client.c	/^			bool remote)$/;"	z	function:fio_client_send_ini	typeref:typename:bool	file:
remote	client.c	/^int fio_client_add_ini_file(void *cookie, const char *ini_file, bool remote)$/;"	z	function:fio_client_add_ini_file	typeref:typename:bool	file:
remote	client.h	/^	bool remote;$/;"	m	struct:client_file	typeref:typename:bool
remote_u	engines/rdma.c	/^struct remote_u {$/;"	s	file:
remove_client	client.c	/^static void remove_client(struct fio_client *client)$/;"	f	typeref:typename:void	file:
remove_ddir	t/btrace2fio.c	/^static void remove_ddir(struct btrace_out *o, int rw)$/;"	f	typeref:typename:void	file:
remove_file_hash	filehash.c	/^void remove_file_hash(struct fio_file *f)$/;"	f	typeref:typename:void
remove_file_hash	filehash.h	/^extern void remove_file_hash(struct fio_file *);$/;"	p	typeref:typename:void
remove_reply_cmd	client.c	/^static bool remove_reply_cmd(struct fio_client *client, struct fio_net_cmd *cmd)$/;"	f	typeref:typename:bool	file:
remove_trim_entry	trim.h	/^static inline void remove_trim_entry(struct thread_data *td, struct io_piece *ipo)$/;"	f	typeref:typename:void
removed	client.h	/^	client_timed_out_op	*removed;$/;"	m	struct:client_ops	typeref:typename:client_timed_out_op *
rename_flags	os/linux/io_uring.h	/^		__u32		rename_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
render_gnuplot	tools/plot/fio2gnuplot	/^def render_gnuplot(fio_data_file, gnuplot_output_dir):$/;"	f
render_option	tools/fiograph/fiograph.py	/^def render_option(section, label, display, option, color_override=None):$/;"	f
render_options	tools/fiograph/fiograph.py	/^def render_options(fio_file, section_name):$/;"	f
render_section	tools/fiograph/fiograph.py	/^def render_section(current_graph, fio_file, section_name, label):$/;"	f
rep	client.c	/^static void sendfile_reply(int fd, struct cmd_sendfile_reply *rep,$/;"	z	function:sendfile_reply	typeref:struct:cmd_sendfile_reply *	file:
rep	engines/exec.c	/^char *str_replace(char *orig, const char *rep, const char *with)$/;"	z	function:str_replace	typeref:typename:const char *	file:
repeat	lib/prio_tree.c	/^repeat:$/;"	L	function:prio_tree_next	file:
replace	options.c	/^	char *replace;$/;"	m	struct:fio_keyword	typeref:typename:char *	file:
replay_align	iolog.h	/^static inline void ipo_bytes_align(unsigned int replay_align, struct io_piece *ipo)$/;"	z	function:ipo_bytes_align	typeref:typename:unsigned int	file:
replay_align	thread_options.h	/^	uint32_t replay_align;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
replay_align	thread_options.h	/^	unsigned int replay_align;$/;"	m	struct:thread_options	typeref:typename:unsigned int
replay_redirect	thread_options.h	/^	char *replay_redirect;$/;"	m	struct:thread_options	typeref:typename:char *
replay_redirect	thread_options.h	/^	uint8_t replay_redirect[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
replay_scale	thread_options.h	/^	uint32_t replay_scale;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
replay_scale	thread_options.h	/^	unsigned int replay_scale;$/;"	m	struct:thread_options	typeref:typename:unsigned int
replay_skip	thread_options.h	/^	uint32_t replay_skip;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
replay_skip	thread_options.h	/^	unsigned int replay_skip;$/;"	m	struct:thread_options	typeref:typename:unsigned int
replay_time_scale	thread_options.h	/^	uint32_t replay_time_scale;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
replay_time_scale	thread_options.h	/^	unsigned int replay_time_scale;$/;"	m	struct:thread_options	typeref:typename:unsigned int
reply	client.c	/^			      struct fio_net_cmd_reply *reply)$/;"	z	function:handle_cmd_timeout	typeref:struct:fio_net_cmd_reply *	file:
report_error	gerror.c	/^static void report_error(struct gui_entry *ge, GError *error)$/;"	f	typeref:typename:void	file:
report_zones	ioengines.h	/^	int (*report_zones)(struct thread_data *, struct fio_file *,$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *,uint64_t,struct zbd_zone *,unsigned int)
req	oslib/libmtd.c	/^static int mtd_xlock(const struct mtd_dev_info *mtd, int fd, int eb, int req,$/;"	z	function:mtd_xlock	typeref:typename:int	file:
request_client_etas	client.c	/^static void request_client_etas(struct client_ops *ops)$/;"	f	typeref:typename:void	file:
requeue	backend.c	/^requeue:$/;"	L	function:fio_io_sync	file:
requeue_io_u	io_u.c	/^void requeue_io_u(struct thread_data *td, struct io_u **io_u)$/;"	f	typeref:typename:void
requeue_io_u	io_u.h	/^extern void requeue_io_u(struct thread_data *, struct io_u **);$/;"	p	typeref:typename:void
required	zbd.c	/^			  uint64_t required)$/;"	z	function:zbd_zone_full	typeref:typename:uint64_t	file:
required_argument	oslib/getopt.h	/^	required_argument = 1,$/;"	e	enum:__anon316b4bb60103
res	engines/net.c	/^			 void *dst, struct addrinfo **res)$/;"	z	function:fio_fill_addr	typeref:struct:addrinfo **	file:
res	engines/nfs.c	/^static void nfs_callback(int res, struct nfs_context *nfs, void *data,$/;"	z	function:nfs_callback	typeref:typename:int	file:
res	os/linux/io_uring.h	/^	__s32	res;		\/* result code for this event *\/$/;"	m	struct:io_uring_cqe	typeref:typename:__s32
res_notebook	gclient.c	/^static int __gfio_disk_util_show(GtkWidget *res_notebook,$/;"	z	function:__gfio_disk_util_show	typeref:typename:GtkWidget *	file:
reserved	engines/e4defrag.c	/^	__u32 reserved;         \/* should be zero *\/$/;"	m	struct:move_extent	typeref:typename:__u32	file:
reserved	oslib/linux-blkzoned.c	/^	__u8	reserved[24];$/;"	m	struct:blk_zone_v2	typeref:typename:__u8[24]	file:
reset	oslib/linux-blkzoned.c	/^	__u8	reset;          \/* Reset write pointer recommended *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u8	file:
reset_all_stats	fio.h	/^extern void reset_all_stats(struct thread_data *);$/;"	p	typeref:typename:void
reset_all_stats	libfio.c	/^void reset_all_stats(struct thread_data *td)$/;"	f	typeref:typename:void
reset_clat_prio_stats	stat.c	/^static inline void reset_clat_prio_stats(struct thread_stat *ts)$/;"	f	typeref:typename:void	file:
reset_fio_state	fio.h	/^extern void reset_fio_state(void);$/;"	p	typeref:typename:void
reset_fio_state	libfio.c	/^void reset_fio_state(void)$/;"	f	typeref:typename:void
reset_io_counters	libfio.c	/^static void reset_io_counters(struct thread_data *td, int all)$/;"	f	typeref:typename:void	file:
reset_io_stat	stat.c	/^static inline void reset_io_stat(struct io_stat *ios)$/;"	f	typeref:typename:void	file:
reset_io_stats	stat.c	/^void reset_io_stats(struct thread_data *td)$/;"	f	typeref:typename:void
reset_io_stats	stat.h	/^extern void reset_io_stats(struct thread_data *);$/;"	p	typeref:typename:void
reset_io_u_plat	stat.c	/^static inline void reset_io_u_plat(uint64_t *io_u_plat)$/;"	f	typeref:typename:void	file:
reset_timers	helper_thread.c	/^static int reset_timers(struct interval_timer timer[], int num_timers,$/;"	f	typeref:typename:int	file:
reset_wp	ioengines.h	/^	int (*reset_wp)(struct thread_data *, struct fio_file *,$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *,uint64_t,uint64_t)
reset_zone	zbd.h	/^	unsigned int		reset_zone:1;$/;"	m	struct:fio_zone_info	typeref:typename:unsigned int:1
resid	io_u.h	/^	unsigned long long resid;$/;"	m	struct:io_u	typeref:typename:unsigned long long
response	gerror.c	/^static void on_info_bar_response(GtkWidget *widget, gint response,$/;"	z	function:on_info_bar_response	typeref:typename:gint	file:
response	goptions.c	/^static gint gopt_dialog_cancel(gint response)$/;"	z	function:gopt_dialog_cancel	typeref:typename:gint	file:
response	goptions.c	/^static gint gopt_dialog_done(gint response)$/;"	z	function:gopt_dialog_done	typeref:typename:gint	file:
restart	engines/posixaio.c	/^restart:$/;"	L	function:fio_posixaio_getevents	file:
restart	iolog.c	/^restart:$/;"	L	function:log_io_piece	file:
result	lex.yy.c	/^extern int yyerror(long long *result, double *dresult,$/;"	z	prototype:yyerror	typeref:typename:long long *	file:
result	printing.c	/^			GtkPrintOperationResult result, gpointer data)$/;"	z	function:results_print_done	typeref:typename:GtkPrintOperationResult	file:
result	t/steadystate_tests.py	/^                    result = 'FAILED '$/;"	v
result	y.tab.c	/^int yyerror(__attribute__((unused)) long long *result,$/;"	z	function:yyerror	typeref:typename:long long *	file:
result	y.tab.c	/^int yyerror(__attribute__((unused)) long long *result,$/;"	z	prototype:yyerror	typeref:typename:long long *	file:
result	y.tab.c	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:long long *	file:
result	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:long long *	file:
result	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:long long *	file:
result	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:long long *	file:
result	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:long long *	file:
result	y.tab.c	/^yyparse (long long *result, double *dresult, int *has_error, int *units_specified)$/;"	z	function:yyparse	typeref:typename:long long *	file:
result	y.tab.h	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:long long *	file:
resultp	io_u.h	/^		aio_result_t resultp;$/;"	m	union:io_u::__anon04db5ec7040a	typeref:typename:aio_result_t
results	gfio.h	/^	struct end_results *results;$/;"	m	struct:gfio_client	typeref:struct:end_results *
results_close	gclient.c	/^static void results_close(GtkWidget *w, gpointer *data)$/;"	f	typeref:typename:void	file:
results_draw_page	printing.c	/^static void results_draw_page(GtkPrintOperation *operation,$/;"	f	typeref:typename:void	file:
results_menu	gfio.h	/^	GtkWidget *results_menu;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
results_menu_items	gclient.c	/^static GtkActionEntry results_menu_items[] = {$/;"	v	typeref:typename:GtkActionEntry[]	file:
results_nmenu_items	gclient.c	/^static gint results_nmenu_items = FIO_ARRAY_SIZE(results_menu_items);$/;"	v	typeref:typename:gint	file:
results_notebook	gfio.h	/^	GtkWidget *results_notebook;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
results_print	gclient.c	/^static void results_print(GtkWidget *w, gpointer *data)$/;"	f	typeref:typename:void	file:
results_print_done	printing.c	/^static void results_print_done(GtkPrintOperation *operation,$/;"	f	typeref:typename:void	file:
results_ui_string	gclient.c	/^static const gchar *results_ui_string = " \\$/;"	v	typeref:typename:const gchar *	file:
results_uimanager	gfio.h	/^	GtkUIManager *results_uimanager;$/;"	m	struct:gui_entry	typeref:typename:GtkUIManager *
results_window	gfio.h	/^	GtkWidget *results_window;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
results_window_delete	gclient.c	/^static gboolean results_window_delete(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:gboolean	file:
resv	os/linux/io_uring.h	/^	__u16 resv;$/;"	m	struct:io_uring_probe	typeref:typename:__u16
resv	os/linux/io_uring.h	/^	__u32 resv;$/;"	m	struct:io_uring_files_update	typeref:typename:__u32
resv	os/linux/io_uring.h	/^	__u32 resv;$/;"	m	struct:io_uring_rsrc_register	typeref:typename:__u32
resv	os/linux/io_uring.h	/^	__u32 resv;$/;"	m	struct:io_uring_rsrc_update	typeref:typename:__u32
resv	os/linux/io_uring.h	/^	__u32 resv;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__u32
resv	os/linux/io_uring.h	/^	__u32 resv[3];$/;"	m	struct:io_uring_params	typeref:typename:__u32[3]
resv	os/linux/io_uring.h	/^	__u8 resv;$/;"	m	struct:io_uring_probe_op	typeref:typename:__u8
resv	os/linux/io_uring.h	/^	__u8 resv;$/;"	m	struct:io_uring_restriction	typeref:typename:__u8
resv	oslib/linux-blkzoned.c	/^	__u8	resv[4];$/;"	m	struct:blk_zone_v2	typeref:typename:__u8[4]	file:
resv1	os/linux/io_uring.h	/^	__u32 resv1;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
resv1	os/linux/io_uring.h	/^	__u32 resv1;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
resv2	os/linux/io_uring.h	/^	__u32 resv2;$/;"	m	struct:io_uring_probe_op	typeref:typename:__u32
resv2	os/linux/io_uring.h	/^	__u32 resv2;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__u32
resv2	os/linux/io_uring.h	/^	__u32 resv2[3];$/;"	m	struct:io_uring_probe	typeref:typename:__u32[3]
resv2	os/linux/io_uring.h	/^	__u32 resv2[3];$/;"	m	struct:io_uring_restriction	typeref:typename:__u32[3]
resv2	os/linux/io_uring.h	/^	__u64 resv2;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u64
resv2	os/linux/io_uring.h	/^	__u64 resv2;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u64
resv2	os/linux/io_uring.h	/^	__u64 resv2;$/;"	m	struct:io_uring_rsrc_register	typeref:typename:__u64
ret	backend.c	/^int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	function:io_queue_event	typeref:typename:int *	file:
ret	engines/glusterfs_async.c	/^static void gf_async_cb(glfs_fd_t * fd, ssize_t ret, struct glfs_stat *prestat,$/;"	z	function:gf_async_cb	typeref:typename:ssize_t	file:
ret	engines/ime.c	/^static int fio_ime_psync_end(struct thread_data *td, struct io_u *io_u, ssize_t ret)$/;"	z	function:fio_ime_psync_end	typeref:typename:ssize_t	file:
ret	engines/sync.c	/^static int fio_io_end(struct thread_data *td, struct io_u *io_u, int ret)$/;"	z	function:fio_io_end	typeref:typename:int	file:
ret	fio.h	/^extern int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	prototype:io_queue_event	typeref:typename:int *	file:
ret	io_u.c	/^ret:$/;"	L	function:__get_next_rand_offset	file:
ret	t/axmap.c	/^	unsigned int ret;$/;"	m	struct:overlap_test	typeref:typename:unsigned int	file:
retire_commands	engines/nbd.c	/^static unsigned retire_commands(struct nbd_handle *nbd)$/;"	f	typeref:typename:unsigned	file:
retptr	backend.c	/^				int *retptr)$/;"	z	function:break_on_this_error	typeref:typename:int *	file:
retry	engines/io_uring.c	/^retry:$/;"	L	function:fio_ioring_queue_init	file:
retry	filelock.c	/^static struct fio_filelock *get_filelock(int trylock, int *retry)$/;"	z	function:get_filelock	typeref:typename:int *	file:
retry	rate-submit.c	/^retry:$/;"	L	function:check_overlap	file:
retry	zbd.c	/^retry:$/;"	L	function:zbd_convert_to_open_zone	file:
right	lib/prio_tree.h	/^	struct prio_tree_node	*right;$/;"	m	struct:prio_tree_node	typeref:struct:prio_tree_node *
right_extra	graph.c	/^	double right_extra;$/;"	m	struct:graph	typeref:typename:double	file:
right_percent	graph.c	/^			   double right_percent, double top_percent,$/;"	z	function:graph_add_extra_space	typeref:typename:double	file:
right_percent	graph.h	/^void graph_add_extra_space(struct graph *g, double left_percent, double right_percent,$/;"	z	prototype:graph_add_extra_space	typeref:typename:double	file:
ring	io_u_queue.c	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr)$/;"	z	function:io_u_rinit	typeref:struct:io_u_ring *	file:
ring	io_u_queue.c	/^void io_u_rexit(struct io_u_ring *ring)$/;"	z	function:io_u_rexit	typeref:struct:io_u_ring *	file:
ring	io_u_queue.h	/^	struct io_u **ring;$/;"	m	struct:io_u_ring	typeref:struct:io_u **
ring	io_u_queue.h	/^bool io_u_rinit(struct io_u_ring *ring, unsigned int nr);$/;"	z	prototype:io_u_rinit	typeref:struct:io_u_ring *	file:
ring	io_u_queue.h	/^static inline int io_u_rempty(struct io_u_ring *ring)$/;"	z	function:io_u_rempty	typeref:struct:io_u_ring *	file:
ring	io_u_queue.h	/^void io_u_rexit(struct io_u_ring *ring);$/;"	z	prototype:io_u_rexit	typeref:struct:io_u_ring *	file:
ring_entries	engines/io_uring.c	/^	unsigned *ring_entries;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
ring_entries	engines/io_uring.c	/^	unsigned *ring_entries;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
ring_entries	os/linux/io_uring.h	/^	__u32 ring_entries;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
ring_entries	os/linux/io_uring.h	/^	__u32 ring_entries;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
ring_entries	t/io_uring.c	/^	unsigned *ring_entries;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
ring_entries	t/io_uring.c	/^	unsigned *ring_entries;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
ring_fd	engines/io_uring.c	/^	int ring_fd;$/;"	m	struct:ioring_data	typeref:typename:int	file:
ring_fd	t/io_uring.c	/^	int ring_fd;$/;"	m	struct:submitter	typeref:typename:int	file:
ring_inc	engines/libaio.c	/^static inline void ring_inc(struct libaio_data *ld, unsigned int *val,$/;"	f	typeref:typename:void	file:
ring_mask	engines/io_uring.c	/^	unsigned *ring_mask;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
ring_mask	engines/io_uring.c	/^	unsigned *ring_mask;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
ring_mask	os/linux/io_uring.h	/^	__u32 ring_mask;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
ring_mask	os/linux/io_uring.h	/^	__u32 ring_mask;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
ring_mask	t/io_uring.c	/^	unsigned *ring_mask;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
ring_mask	t/io_uring.c	/^	unsigned *ring_mask;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
rkey	engines/rdma.c	/^	uint32_t rkey;$/;"	m	struct:remote_u	typeref:typename:uint32_t	file:
rmt_nr	engines/rdma.c	/^	int rmt_nr;$/;"	m	struct:rdmaio_data	typeref:typename:int	file:
rmt_us	engines/rdma.c	/^	struct remote_u *rmt_us;$/;"	m	struct:rdmaio_data	typeref:struct:remote_u *	file:
rmt_us	engines/rdma.c	/^	struct remote_u rmt_us[FIO_RDMA_MAX_IO_DEPTH];$/;"	m	struct:rdma_info_blk	typeref:struct:remote_u[]	file:
rmtp	os/os-windows.h	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp);$/;"	z	prototype:nanosleep	typeref:struct:timespec *	file:
rmtp	os/windows/posix.c	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp)$/;"	z	function:nanosleep	typeref:struct:timespec *	file:
rol32	hash.h	/^static inline uint32_t rol32(uint32_t word, uint32_t shift)$/;"	f	typeref:typename:uint32_t
root	cgroup.c	/^	char *root;$/;"	m	struct:cgroup_member	typeref:typename:char *	file:
root	client.c	/^static struct json_object *root = NULL;$/;"	v	typeref:struct:json_object *	file:
root	lib/prio_tree.c	/^static struct prio_tree_node *prio_tree_expand(struct prio_tree_root *root,$/;"	z	function:prio_tree_expand	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,$/;"	z	function:prio_tree_insert	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.c	/^struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,$/;"	z	function:prio_tree_replace	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.c	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node)$/;"	z	function:prio_tree_remove	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.h	/^		struct prio_tree_root *root, uint64_t r_index, uint64_t h_index)$/;"	z	function:prio_tree_iter_init	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.h	/^	struct prio_tree_root	*root;$/;"	m	struct:prio_tree_iter	typeref:struct:prio_tree_root *
root	lib/prio_tree.h	/^static inline int prio_tree_empty(const struct prio_tree_root *root)$/;"	z	function:prio_tree_empty	typeref:typename:const struct prio_tree_root *	file:
root	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_insert(struct prio_tree_root *root,$/;"	z	prototype:prio_tree_insert	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.h	/^struct prio_tree_node *prio_tree_replace(struct prio_tree_root *root,$/;"	z	prototype:prio_tree_replace	typeref:struct:prio_tree_root *	file:
root	lib/prio_tree.h	/^void prio_tree_remove(struct prio_tree_root *root, struct prio_tree_node *node);$/;"	z	prototype:prio_tree_remove	typeref:struct:prio_tree_root *	file:
root	lib/rbtree.c	/^			     struct rb_root *root)$/;"	z	function:__rb_erase_color	typeref:struct:rb_root *	file:
root	lib/rbtree.c	/^static void __rb_rotate_left(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:__rb_rotate_left	typeref:struct:rb_root *	file:
root	lib/rbtree.c	/^static void __rb_rotate_right(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:__rb_rotate_right	typeref:struct:rb_root *	file:
root	lib/rbtree.c	/^struct fio_rb_node *rb_first(struct rb_root *root)$/;"	z	function:rb_first	typeref:struct:rb_root *	file:
root	lib/rbtree.c	/^void rb_erase(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:rb_erase	typeref:struct:rb_root *	file:
root	lib/rbtree.c	/^void rb_insert_color(struct fio_rb_node *node, struct rb_root *root)$/;"	z	function:rb_insert_color	typeref:struct:rb_root *	file:
root	stat.c	/^static void json_add_job_opts(struct json_object *root, const char *name,$/;"	z	function:json_add_job_opts	typeref:struct:json_object *	file:
root	t/run-fio-tests.py	/^    def root(cls):$/;"	m	class:Requirements
ror32	crc/sha256.c	/^static inline uint32_t ror32(uint32_t word, unsigned int shift)$/;"	f	typeref:typename:uint32_t	file:
rotl32	crc/murmur3.c	/^static inline uint32_t rotl32(uint32_t x, int8_t r)$/;"	f	typeref:typename:uint32_t	file:
round	tickmarks.c	/^static double nicenum(double x, int round)$/;"	z	function:nicenum	typeref:typename:int	file:
roundup_pow2	lib/roundup.h	/^static inline unsigned roundup_pow2(unsigned depth)$/;"	f	typeref:typename:unsigned
row	os/os-windows-7.h	/^	uint64_t row[FIO_CPU_MASK_ROWS];$/;"	m	struct:__anon08f18c4a0108	typeref:typename:uint64_t[]
row	os/windows/cpu-affinity.c	/^static void cpu_to_row_offset(int cpu, int *row, int *offset)$/;"	z	function:cpu_to_row_offset	typeref:typename:int *	file:
rq_wr	engines/rdma.c	/^	struct ibv_recv_wr rq_wr;$/;"	m	struct:rdma_io_u_data	typeref:struct:ibv_recv_wr	file:
rq_wr	engines/rdma.c	/^	struct ibv_recv_wr rq_wr;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_recv_wr	file:
rqtp	os/os-windows.h	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp);$/;"	z	prototype:nanosleep	typeref:typename:const struct timespec *	file:
rqtp	os/windows/posix.c	/^int nanosleep(const struct timespec *rqtp, struct timespec *rmtp)$/;"	z	function:nanosleep	typeref:typename:const struct timespec *	file:
rrmean	t/sgunmap-perf.py	/^    randread, rrmean = runtests(args.fioc, args.cdev, 16, 1, 'randread',$/;"	v
rrmean	t/sgunmap-perf.py	/^    randread, rrmean = runtests(args.fior, args.cdev, 16, 1, 'randread',$/;"	v
rs	gclient.c	/^				       struct group_run_stats *rs)$/;"	z	function:__gfio_display_end_results	typeref:struct:group_run_stats *	file:
rs	gclient.c	/^				  struct group_run_stats *rs,$/;"	z	function:gfio_show_ddir_status	typeref:struct:group_run_stats *	file:
rs	gclient.c	/^				 struct group_run_stats *rs)$/;"	z	function:gfio_add_end_results	typeref:struct:group_run_stats *	file:
rs	gclient.c	/^			    struct group_run_stats *rs)$/;"	z	function:gfio_display_ts	typeref:struct:group_run_stats *	file:
rs	gclient.c	/^			    struct group_run_stats *rs);$/;"	z	prototype:gfio_display_ts	typeref:struct:group_run_stats *	file:
rs	io_u.c	/^static void save_buf_state(struct thread_data *td, struct frand_state *rs)$/;"	z	function:save_buf_state	typeref:struct:frand_state *	file:
rs	server.c	/^void fio_server_send_gs(struct group_run_stats *rs)$/;"	z	function:fio_server_send_gs	typeref:struct:group_run_stats *	file:
rs	server.c	/^void fio_server_send_ts(struct thread_stat *ts, struct group_run_stats *rs)$/;"	z	function:fio_server_send_ts	typeref:struct:group_run_stats *	file:
rs	server.h	/^	struct group_run_stats rs;$/;"	m	struct:cmd_ts_pdu	typeref:struct:group_run_stats
rs	stat.c	/^						   struct group_run_stats *rs,$/;"	z	function:show_thread_status_json	typeref:struct:group_run_stats *	file:
rs	stat.c	/^					 struct group_run_stats *rs, int ver,$/;"	z	function:show_thread_status_terse_all	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				       struct group_run_stats *rs,$/;"	z	function:show_thread_status	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				      struct group_run_stats *rs,$/;"	z	function:show_thread_status_normal	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				     struct group_run_stats *rs,$/;"	z	function:show_thread_status_terse	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				   struct group_run_stats *rs,$/;"	z	function:show_ddir_status_terse	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				   struct group_run_stats *rs,$/;"	z	function:show_mixed_ddir_status_terse	typeref:struct:group_run_stats *	file:
rs	stat.c	/^				 struct group_run_stats *rs, enum fio_ddir ddir,$/;"	z	function:add_ddir_status_json	typeref:struct:group_run_stats *	file:
rs	stat.c	/^		struct group_run_stats *rs, struct json_object *parent)$/;"	z	function:add_mixed_ddir_status_json	typeref:struct:group_run_stats *	file:
rs	stat.c	/^static double convert_agg_kbytes_percent(struct group_run_stats *rs,$/;"	z	function:convert_agg_kbytes_percent	typeref:struct:group_run_stats *	file:
rs	stat.c	/^static void show_ddir_status(struct group_run_stats *rs, struct thread_stat *ts,$/;"	z	function:show_ddir_status	typeref:struct:group_run_stats *	file:
rs	stat.c	/^static void show_mixed_ddir_status(struct group_run_stats *rs,$/;"	z	function:show_mixed_ddir_status	typeref:struct:group_run_stats *	file:
rs	stat.c	/^void show_group_stats(struct group_run_stats *rs, struct buf_output *out)$/;"	z	function:show_group_stats	typeref:struct:group_run_stats *	file:
rs	stat.c	/^void show_mixed_group_stats(struct group_run_stats *rs, struct buf_output *out) $/;"	z	function:show_mixed_group_stats	typeref:struct:group_run_stats *	file:
rs	stat.h	/^extern struct json_object * show_thread_status(struct thread_stat *ts, struct group_run_stats *r/;"	z	prototype:show_thread_status	typeref:struct:group_run_stats *	file:
rs	stat.h	/^extern void show_group_stats(struct group_run_stats *rs, struct buf_output *);$/;"	z	prototype:show_group_stats	typeref:struct:group_run_stats *	file:
rsiz	crc/sha3.h	/^	unsigned int	rsiz;$/;"	m	struct:fio_sha3_ctx	typeref:typename:unsigned int
rsizw	crc/sha3.h	/^	unsigned int	rsizw;$/;"	m	struct:fio_sha3_ctx	typeref:typename:unsigned int
rstr	eta.c	/^static void update_condensed_str(char *rstr, char *run_str_condensed)$/;"	z	function:update_condensed_str	typeref:typename:char *	file:
rsvd	t/io_uring.c	/^	__u64	rsvd[2];$/;"	m	struct:io_uring_map_buffers	typeref:typename:__u64[2]	file:
rt	t/read-to-pipe-async.c	/^static void queue_work(struct reader_thread *rt, struct work_item *work)$/;"	z	function:queue_work	typeref:struct:reader_thread *	file:
rt_threshold	t/btrace2fio.c	/^static unsigned int rt_threshold = 1000000;$/;"	v	typeref:typename:unsigned int	file:
ru	lib/getrusage.c	/^int fio_getrusage(struct rusage *ru)$/;"	z	function:fio_getrusage	typeref:struct:rusage *	file:
ru	lib/getrusage.h	/^extern int fio_getrusage(struct rusage *ru);$/;"	z	prototype:fio_getrusage	typeref:struct:rusage *	file:
ru_end	fio.h	/^	struct rusage ru_end;$/;"	m	struct:thread_data	typeref:struct:rusage
ru_majflt	os/windows/posix/include/sys/resource.h	/^	int ru_majflt;$/;"	m	struct:rusage	typeref:typename:int
ru_minflt	os/windows/posix/include/sys/resource.h	/^	int ru_minflt;$/;"	m	struct:rusage	typeref:typename:int
ru_nivcsw	os/windows/posix/include/sys/resource.h	/^	int ru_nivcsw;$/;"	m	struct:rusage	typeref:typename:int
ru_nvcsw	os/windows/posix/include/sys/resource.h	/^	int ru_nvcsw;$/;"	m	struct:rusage	typeref:typename:int
ru_start	fio.h	/^	struct rusage ru_start;$/;"	m	struct:thread_data	typeref:struct:rusage
ru_stime	os/windows/posix/include/sys/resource.h	/^	struct timeval ru_stime;$/;"	m	struct:rusage	typeref:struct:timeval
ru_utime	os/windows/posix/include/sys/resource.h	/^	struct timeval ru_utime;$/;"	m	struct:rusage	typeref:struct:timeval
run	t/run-fio-tests.py	/^    def run(self):$/;"	m	class:FioExeTest
run	t/run-fio-tests.py	/^    def run(self):$/;"	m	class:FioJobTest
run	t/run-fio-tests.py	/^    def run(self):$/;"	m	class:FioTest
run_dedupe_threads	t/dedupe.c	/^static int run_dedupe_threads(struct fio_file *f, uint64_t dev_size,$/;"	f	typeref:typename:int	file:
run_fio	t/jsonplus2csv_test.py	/^def run_fio(fio):$/;"	f
run_fio	t/latency_percentiles.py	/^    def run_fio(self, fio_path):$/;"	m	class:FioLatTest
run_fio	t/readonly.py	/^def run_fio(fio, test, index):$/;"	f
run_fio	t/strided.py	/^def run_fio(fio, test, index):$/;"	f
run_fio	t/zbd/test-zbd-support	/^run_fio() {$/;"	f
run_one_fio_job	t/zbd/test-zbd-support	/^run_one_fio_job() {$/;"	f
run_pre_job	t/run-fio-tests.py	/^    def run_pre_job(self):$/;"	m	class:FioJobTest
run_str	eta.c	/^static char run_str[__THREAD_RUNSTR_SZ(REAL_MAX_JOBS) + 1];$/;"	v	typeref:typename:char[]	file:
run_str_condensed	eta.c	/^static void update_condensed_str(char *rstr, char *run_str_condensed)$/;"	z	function:update_condensed_str	typeref:typename:char *	file:
run_threads	backend.c	/^static void run_threads(struct sk_out *sk_out)$/;"	f	typeref:typename:void	file:
runalltests	t/sgunmap-test.py	/^def runalltests(args, qd, batch):$/;"	f
runascmd	tools/hist/fiologparser_hist.py	/^    runascmd = True$/;"	v
runascmd	tools/hist/fiologparser_hist.py	/^runascmd = False$/;"	v
runcdevtrimtest	t/sgunmap-test.py	/^def runcdevtrimtest(args, qd, batch):$/;"	f
running	engines/libcufile.c	/^static int running = 0;$/;"	v	typeref:typename:int	file:
running_lock	engines/libcufile.c	/^static pthread_mutex_t running_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
runstate	fio.h	/^	volatile int runstate;$/;"	m	struct:thread_data	typeref:typename:volatile int
runstate	fio.h	/^extern const char *runstate_to_name(int runstate);$/;"	z	prototype:runstate_to_name	typeref:typename:int	file:
runstate	libfio.c	/^const char *runstate_to_name(int runstate)$/;"	z	function:runstate_to_name	typeref:typename:int	file:
runstate	libfio.c	/^void td_set_runstate(struct thread_data *td, int runstate)$/;"	z	function:td_set_runstate	typeref:typename:int	file:
runstate_to_name	fio.h	/^extern const char *runstate_to_name(int runstate);$/;"	p	typeref:typename:const char *
runstate_to_name	libfio.c	/^const char *runstate_to_name(int runstate)$/;"	f	typeref:typename:const char *
runtest	t/sgunmap-perf.py	/^def runtest(fio, dev, rw, qd, batch, bs='512', runtime='30s'):$/;"	f
runtests	t/sgunmap-perf.py	/^def runtests(fio, dev, qd, batch, rw, bs='512', trials=5):$/;"	f
runtime	stat.h	/^	uint64_t runtime[DDIR_RWDIR_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
runtime	t/io_uring.c	/^static int runtime = 0;		\/* runtime *\/$/;"	v	typeref:typename:int	file:
runtime_exceeded	backend.c	/^static inline bool runtime_exceeded(struct thread_data *td, struct timespec *t)$/;"	f	typeref:typename:bool	file:
rusage	os/windows/posix/include/sys/resource.h	/^struct rusage$/;"	s
rusage_sem	fio.h	/^	struct fio_sem *rusage_sem;$/;"	m	struct:thread_data	typeref:struct:fio_sem *
rw	blktrace.c	/^		      unsigned int bytes, int rw, unsigned long long ttime,$/;"	z	function:store_ipo	typeref:typename:int	file:
rw	t/btrace2fio.c	/^static unsigned long o_to_kib_rate(struct btrace_out *o, int rw)$/;"	z	function:o_to_kib_rate	typeref:typename:int	file:
rw	t/btrace2fio.c	/^static void __add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:__add_bs	typeref:typename:int	file:
rw	t/btrace2fio.c	/^static void add_bs(struct btrace_out *o, unsigned int len, int rw)$/;"	z	function:add_bs	typeref:typename:int	file:
rw	t/btrace2fio.c	/^static void inflight_merge(struct inflight *i, int rw, unsigned int size)$/;"	z	function:inflight_merge	typeref:typename:int	file:
rw	t/btrace2fio.c	/^static void remove_ddir(struct btrace_out *o, int rw)$/;"	z	function:remove_ddir	typeref:typename:int	file:
rw_flags	os/linux/io_uring.h	/^		__kernel_rwf_t	rw_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__kernel_rwf_t
rw_min_bs	thread_options.h	/^	uint64_t rw_min_bs;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
rw_min_bs	thread_options.h	/^	unsigned long long rw_min_bs;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
rw_seq	io_u.c	/^			  enum fio_ddir ddir, int rw_seq,$/;"	z	function:get_next_block	typeref:typename:int	file:
rw_seq	thread_options.h	/^	uint32_t rw_seq;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
rw_seq	thread_options.h	/^	unsigned int rw_seq;$/;"	m	struct:thread_options	typeref:typename:unsigned int
rw_verify	options.c	/^static int rw_verify(const struct fio_option *o, void *data)$/;"	f	typeref:typename:int	file:
rwlock	file.h	/^		struct fio_rwlock *rwlock;$/;"	m	union:fio_file::__anonfd762ebb030a	typeref:struct:fio_rwlock *
rwmean	t/sgunmap-perf.py	/^    randwrite, rwmean = runtests(args.fioc, args.cdev, 16, 1, 'randwrite',$/;"	v
rwmean	t/sgunmap-perf.py	/^    randwrite, rwmean = runtests(args.fior, args.cdev, 16, 1, 'randwrite',$/;"	v
rwmix	thread_options.h	/^	uint32_t rwmix[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
rwmix	thread_options.h	/^	unsigned int rwmix[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
rwmix_ddir	fio.h	/^	enum fio_ddir rwmix_ddir;$/;"	m	struct:thread_data	typeref:enum:fio_ddir
rwmix_issues	fio.h	/^	unsigned long rwmix_issues;$/;"	m	struct:thread_data	typeref:typename:unsigned long
rwmix_state	fio.h	/^	struct frand_state rwmix_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
rwmixcycle	thread_options.h	/^	uint32_t rwmixcycle;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
rwmixcycle	thread_options.h	/^	unsigned int rwmixcycle;$/;"	m	struct:thread_options	typeref:typename:unsigned int
s	diskutil.h	/^	struct disk_util_stats s;$/;"	m	struct:disk_util_stat	typeref:struct:disk_util_stats
s	gettime.c	/^int64_t rel_time_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:rel_time_since	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t mtime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:mtime_since	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t mtime_since_now(const struct timespec *s)$/;"	z	function:mtime_since_now	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t mtime_since_tv(const struct timeval *s, const struct timeval *e)$/;"	z	function:mtime_since_tv	typeref:typename:const struct timeval *	file:
s	gettime.c	/^uint64_t ntime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:ntime_since	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t ntime_since_now(const struct timespec *s)$/;"	z	function:ntime_since_now	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t time_since_now(const struct timespec *s)$/;"	z	function:time_since_now	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:utime_since	typeref:typename:const struct timespec *	file:
s	gettime.c	/^uint64_t utime_since_now(const struct timespec *s)$/;"	z	function:utime_since_now	typeref:typename:const struct timespec *	file:
s	gfio.c	/^static const char *get_button_tooltip(struct button_spec *s, int sensitive)$/;"	z	function:get_button_tooltip	typeref:struct:button_spec *	file:
s	goptions.c	/^					struct gopt_str_val *s,$/;"	z	function:gopt_handle_str_val_changed	typeref:struct:gopt_str_val *	file:
s	goptions.c	/^				    struct gopt_str *s, struct fio_option *o)$/;"	z	function:gopt_handle_str_changed	typeref:struct:gopt_str *	file:
s	goptions.c	/^static void gopt_str_store_set_val(struct gopt_str *s, const char *text)$/;"	z	function:gopt_str_store_set_val	typeref:struct:gopt_str *	file:
s	iolog.h	/^	struct io_sample s;$/;"	m	struct:io_sample_offset	typeref:struct:io_sample
s	lex.yy.c	/^static int yy_flex_strlen (const char * s )$/;"	z	function:yy_flex_strlen	typeref:typename:const char *	file:
s	lib/seqlock.h	/^static inline bool read_seqlock_retry(struct seqlock *s, unsigned int seq)$/;"	z	function:read_seqlock_retry	typeref:struct:seqlock *	file:
s	lib/seqlock.h	/^static inline unsigned int read_seqlock_begin(struct seqlock *s)$/;"	z	function:read_seqlock_begin	typeref:struct:seqlock *	file:
s	lib/seqlock.h	/^static inline void seqlock_init(struct seqlock *s)$/;"	z	function:seqlock_init	typeref:struct:seqlock *	file:
s	lib/seqlock.h	/^static inline void write_seqlock_begin(struct seqlock *s)$/;"	z	function:write_seqlock_begin	typeref:struct:seqlock *	file:
s	lib/seqlock.h	/^static inline void write_seqlock_end(struct seqlock *s)$/;"	z	function:write_seqlock_end	typeref:struct:seqlock *	file:
s	oslib/libmtd_xalloc.h	/^static char *xstrdup(const char *s)$/;"	z	function:xstrdup	typeref:typename:const char *	file:
s	oslib/strndup.c	/^char *strndup(const char *s, size_t n)$/;"	z	function:strndup	typeref:typename:const char *	file:
s	oslib/strndup.h	/^char *strndup(const char *s, size_t n);$/;"	z	prototype:strndup	typeref:typename:const char *	file:
s	t/io_uring.c	/^static int io_uring_enter(struct submitter *s, unsigned int to_submit,$/;"	z	function:io_uring_enter	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int io_uring_map_buffers(struct submitter *s)$/;"	z	function:io_uring_map_buffers	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int io_uring_register_buffers(struct submitter *s)$/;"	z	function:io_uring_register_buffers	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int io_uring_register_files(struct submitter *s)$/;"	z	function:io_uring_register_files	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int io_uring_register_ring(struct submitter *s)$/;"	z	function:io_uring_register_ring	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int prep_more_ios_aio(struct submitter *s, int max_ios, struct iocb *iocbs)$/;"	z	function:prep_more_ios_aio	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int prep_more_ios_uring(struct submitter *s, int max_ios)$/;"	z	function:prep_more_ios_uring	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int reap_events_aio(struct submitter *s, struct io_event *events, int evs)$/;"	z	function:reap_events_aio	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int reap_events_uring(struct submitter *s)$/;"	z	function:reap_events_uring	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int setup_aio(struct submitter *s)$/;"	z	function:setup_aio	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int setup_ring(struct submitter *s)$/;"	z	function:setup_ring	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static int submitter_init(struct submitter *s)$/;"	z	function:submitter_init	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static unsigned file_depth(struct submitter *s)$/;"	z	function:file_depth	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static void add_stat(struct submitter *s, int clock_index, int nr)$/;"	z	function:add_stat	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static void init_io(struct submitter *s, unsigned index)$/;"	z	function:init_io	typeref:struct:submitter *	file:
s	t/io_uring.c	/^static void io_uring_unregister_ring(struct submitter *s)$/;"	z	function:io_uring_unregister_ring	typeref:struct:submitter *	file:
s	t/read-to-pipe-async.c	/^	struct stats s;$/;"	m	struct:reader_thread	typeref:struct:stats	file:
s	t/read-to-pipe-async.c	/^	struct stats s;$/;"	m	struct:writer_thread	typeref:struct:stats	file:
s	t/read-to-pipe-async.c	/^static void add_lat(struct stats *s, unsigned int us, const char *name)$/;"	z	function:add_lat	typeref:struct:stats *	file:
s	t/read-to-pipe-async.c	/^static void show_latencies(struct stats *s, const char *msg)$/;"	z	function:show_latencies	typeref:struct:stats *	file:
s	t/read-to-pipe-async.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	z	function:utime_since	typeref:typename:const struct timespec *	file:
s	t/verify-state.c	/^static void show(struct thread_io_list *s, size_t size)$/;"	z	function:show	typeref:struct:thread_io_list *	file:
s	t/verify-state.c	/^static void show_s(struct thread_io_list *s, unsigned int no_s)$/;"	z	function:show_s	typeref:struct:thread_io_list *	file:
s	verify-state.h	/^	uint32_t s[4];$/;"	m	struct:thread_rand32_state	typeref:typename:uint32_t[4]
s	verify-state.h	/^	uint64_t s[6];$/;"	m	struct:thread_rand64_state	typeref:typename:uint64_t[6]
s	verify-state.h	/^static inline size_t thread_io_list_sz(struct thread_io_list *s)$/;"	z	function:thread_io_list_sz	typeref:struct:thread_io_list *	file:
s	verify-state.h	/^static inline struct thread_io_list *io_list_next(struct thread_io_list *s)$/;"	z	function:io_list_next	typeref:struct:thread_io_list *	file:
s	verify.c	/^				   struct thread_io_list *s,$/;"	z	function:__fill_file_completions	typeref:struct:thread_io_list *	file:
s	verify.c	/^				 struct thread_io_list *s, unsigned int *index)$/;"	z	function:fill_file_completions	typeref:struct:thread_io_list *	file:
s	verify.c	/^int verify_state_hdr(struct verify_state_hdr *hdr, struct thread_io_list *s)$/;"	z	function:verify_state_hdr	typeref:struct:thread_io_list *	file:
s	verify.c	/^static int write_thread_list_state(struct thread_io_list *s,$/;"	z	function:write_thread_list_state	typeref:struct:thread_io_list *	file:
s0	crc/sha256.c	/^#define s0(/;"	d	file:
s0	crc/sha512.c	/^#define s0(/;"	d	file:
s1	crc/sha256.c	/^#define s1(/;"	d	file:
s1	crc/sha512.c	/^#define s1(/;"	d	file:
s1	lex.yy.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	z	function:yy_flex_strncpy	typeref:typename:char *	file:
s1	lib/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s1	lib/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s1	oslib/strcasestr.c	/^char *strcasestr(const char *s1, const char *s2)$/;"	z	function:strcasestr	typeref:typename:const char *	file:
s1	parse.c	/^int string_distance(const char *s1, const char *s2)$/;"	z	function:string_distance	typeref:typename:const char *	file:
s1	parse.h	/^extern int string_distance(const char *s1, const char *s2);$/;"	z	prototype:string_distance	typeref:typename:const char *	file:
s1	parse.h	/^extern int string_distance_ok(const char *s1, int dist);$/;"	z	prototype:string_distance_ok	typeref:typename:const char *	file:
s2	lex.yy.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	z	function:yy_flex_strncpy	typeref:typename:const char *	file:
s2	lib/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s2	lib/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s2	oslib/strcasestr.c	/^char *strcasestr(const char *s1, const char *s2)$/;"	z	function:strcasestr	typeref:typename:const char *	file:
s2	parse.c	/^int string_distance(const char *s1, const char *s2)$/;"	z	function:string_distance	typeref:typename:const char *	file:
s2	parse.h	/^extern int string_distance(const char *s1, const char *s2);$/;"	z	prototype:string_distance	typeref:typename:const char *	file:
s3	lib/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s3	lib/rand.h	/^	unsigned int s1, s2, s3;$/;"	m	struct:taus88_state	typeref:typename:unsigned int
s3_key	engines/http.c	/^	char *s3_key;$/;"	m	struct:http_options	typeref:typename:char *	file:
s3_keyid	engines/http.c	/^	char *s3_keyid;$/;"	m	struct:http_options	typeref:typename:char *	file:
s3_region	engines/http.c	/^	char *s3_region;$/;"	m	struct:http_options	typeref:typename:char *	file:
s4	lib/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
s5	lib/rand.h	/^	uint64_t s1, s2, s3, s4, s5;$/;"	m	struct:taus258_state	typeref:typename:uint64_t
sa_family_t	os/windows/posix/include/sys/un.h	/^typedef int sa_family_t;$/;"	t	typeref:typename:int
sa_flags	os/os-windows.h	/^	int sa_flags;$/;"	m	struct:sigaction	typeref:typename:int
sa_handler	os/os-windows.h	/^	void (*sa_handler)(int);$/;"	m	struct:sigaction	typeref:typename:void (*)(int)
sa_mask	os/os-windows.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	typeref:typename:sigset_t
sa_sigaction	os/os-windows.h	/^	void* (*sa_sigaction)(int, siginfo_t *, void*);$/;"	m	struct:sigaction	typeref:typename:void * (*)(int,siginfo_t *,void *)
saddr_in	server.c	/^static struct sockaddr_in saddr_in;$/;"	v	typeref:struct:sockaddr_in	file:
saddr_in6	server.c	/^static struct sockaddr_in6 saddr_in6;$/;"	v	typeref:struct:sockaddr_in6	file:
sample	iolog.h	/^					     uint64_t sample)$/;"	z	function:__get_sample	typeref:typename:uint64_t	file:
sample	iolog.h	/^					   uint64_t sample)$/;"	z	function:get_sample	typeref:typename:uint64_t	file:
sample_plat	iolog.h	/^#define sample_plat(/;"	d
sample_size	client.c	/^				      uint64_t sample_size)$/;"	z	function:client_flush_hist_samples	typeref:typename:uint64_t	file:
sample_size	iolog.c	/^			       uint64_t sample_size)$/;"	z	function:flush_hist_samples	typeref:typename:uint64_t	file:
sample_size	iolog.c	/^void flush_samples(FILE *f, void *samples, uint64_t sample_size)$/;"	z	function:flush_samples	typeref:typename:uint64_t	file:
sample_tv	profiles/act.c	/^	struct timespec sample_tv;$/;"	m	struct:act_prof_data	typeref:struct:timespec	file:
sample_val	iolog.h	/^#define sample_val(/;"	d
samples	client.c	/^static void client_flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:client_flush_hist_samples	typeref:typename:void *	file:
samples	iolog.c	/^	void *samples;$/;"	m	struct:iolog_flush_data	typeref:typename:void *	file:
samples	iolog.c	/^static void flush_hist_samples(FILE *f, int hist_coarseness, void *samples,$/;"	z	function:flush_hist_samples	typeref:typename:void *	file:
samples	iolog.c	/^void flush_samples(FILE *f, void *samples, uint64_t sample_size)$/;"	z	function:flush_samples	typeref:typename:void *	file:
samples	iolog.h	/^	uint64_t samples;$/;"	m	struct:io_hist	typeref:typename:uint64_t
samples	iolog.h	/^	uint64_t samples;$/;"	m	struct:io_stat	typeref:typename:uint64_t
samples	iolog.h	/^static inline struct io_sample *__get_sample(void *samples, int log_offset,$/;"	z	function:__get_sample	typeref:typename:void *	file:
samples	server.h	/^	struct io_sample samples[0];$/;"	m	struct:cmd_iolog_pdu	typeref:struct:io_sample[0]
save_buf_state	io_u.c	/^static void save_buf_state(struct thread_data *td, struct frand_state *rs)$/;"	f	typeref:typename:void	file:
save_mask	verify.c	/^struct all_io_list *get_all_io_list(int save_mask, size_t *sz)$/;"	z	function:get_all_io_list	typeref:typename:int	file:
saved_tag	server.h	/^	uint64_t saved_tag;$/;"	m	struct:fio_net_cmd_reply	typeref:typename:uint64_t
sb	engines/sg.c	/^	unsigned char sb[MAX_SB];   \/\/ add sense block to commands$/;"	m	struct:sgio_cmd	typeref:typename:unsigned char[]	file:
sb	t/dedupe.c	/^static uint64_t get_size(struct fio_file *f, struct stat *sb)$/;"	z	function:get_size	typeref:struct:stat *	file:
scalar	blktrace.h	/^	int			scalar;	\/\/ scale percentage$/;"	m	struct:blktrace_cursor	typeref:typename:int
scale	gclient.c	/^					       unsigned int scale)$/;"	z	function:gfio_output_clat_percentiles	typeref:typename:unsigned int	file:
scalloc	smalloc.c	/^void *scalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
scalloc	smalloc.h	/^extern void *scalloc(size_t, size_t);$/;"	p	typeref:typename:void *
scleanup	smalloc.c	/^void scleanup(void)$/;"	f	typeref:typename:void
scleanup	smalloc.h	/^extern void scleanup(void);$/;"	p	typeref:typename:void
scramble_buffers	thread_options.h	/^	uint32_t scramble_buffers;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
scramble_buffers	thread_options.h	/^	unsigned int scramble_buffers;$/;"	m	struct:thread_options	typeref:typename:unsigned int
scsi_task	engines/libiscsi.c	/^	struct scsi_task	*scsi_task;$/;"	m	struct:iscsi_task	typeref:struct:scsi_task *	file:
sctx	crc/sha256.c	/^void fio_sha256_final(struct fio_sha256_ctx *sctx)$/;"	z	function:fio_sha256_final	typeref:struct:fio_sha256_ctx *	file:
sctx	crc/sha256.c	/^void fio_sha256_init(struct fio_sha256_ctx *sctx)$/;"	z	function:fio_sha256_init	typeref:struct:fio_sha256_ctx *	file:
sctx	crc/sha256.c	/^void fio_sha256_update(struct fio_sha256_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha256_update	typeref:struct:fio_sha256_ctx *	file:
sctx	crc/sha3.c	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha3_update	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^static void fio_sha3_init(struct fio_sha3_ctx *sctx, unsigned int digest_sz)$/;"	z	function:fio_sha3_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^void fio_sha3_224_init(struct fio_sha3_ctx *sctx)$/;"	z	function:fio_sha3_224_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^void fio_sha3_256_init(struct fio_sha3_ctx *sctx)$/;"	z	function:fio_sha3_256_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^void fio_sha3_384_init(struct fio_sha3_ctx *sctx)$/;"	z	function:fio_sha3_384_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^void fio_sha3_512_init(struct fio_sha3_ctx *sctx)$/;"	z	function:fio_sha3_512_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.c	/^void fio_sha3_final(struct fio_sha3_ctx *sctx)$/;"	z	function:fio_sha3_final	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^int fio_sha3_update(struct fio_sha3_ctx *sctx, const uint8_t *data,$/;"	z	prototype:fio_sha3_update	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^void fio_sha3_224_init(struct fio_sha3_ctx *sctx);$/;"	z	prototype:fio_sha3_224_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^void fio_sha3_256_init(struct fio_sha3_ctx *sctx);$/;"	z	prototype:fio_sha3_256_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^void fio_sha3_384_init(struct fio_sha3_ctx *sctx);$/;"	z	prototype:fio_sha3_384_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^void fio_sha3_512_init(struct fio_sha3_ctx *sctx);$/;"	z	prototype:fio_sha3_512_init	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha3.h	/^void fio_sha3_final(struct fio_sha3_ctx *sctx);$/;"	z	prototype:fio_sha3_final	typeref:struct:fio_sha3_ctx *	file:
sctx	crc/sha512.c	/^void fio_sha512_init(struct fio_sha512_ctx *sctx)$/;"	z	function:fio_sha512_init	typeref:struct:fio_sha512_ctx *	file:
sctx	crc/sha512.c	/^void fio_sha512_update(struct fio_sha512_ctx *sctx, const uint8_t *data,$/;"	z	function:fio_sha512_update	typeref:struct:fio_sha512_ctx *	file:
sd	engines/sg.c	/^static void sgio_hdr_init(struct sgio_data *sd, struct sg_io_hdr *hdr,$/;"	z	function:sgio_hdr_init	typeref:struct:sgio_data *	file:
sd	engines/sync.c	/^static void fio_vsyncio_set_iov(struct syncio_data *sd, struct io_u *io_u,$/;"	z	function:fio_vsyncio_set_iov	typeref:struct:syncio_data *	file:
section1	t/zbd/run-tests-against-nullb	/^section1()$/;"	f
section10	t/zbd/run-tests-against-nullb	/^section10()$/;"	f
section11	t/zbd/run-tests-against-nullb	/^section11()$/;"	f
section12	t/zbd/run-tests-against-nullb	/^section12()$/;"	f
section13	t/zbd/run-tests-against-nullb	/^section13()$/;"	f
section2	t/zbd/run-tests-against-nullb	/^section2()$/;"	f
section3	t/zbd/run-tests-against-nullb	/^section3()$/;"	f
section4	t/zbd/run-tests-against-nullb	/^section4()$/;"	f
section5	t/zbd/run-tests-against-nullb	/^section5()$/;"	f
section6	t/zbd/run-tests-against-nullb	/^section6()$/;"	f
section7	t/zbd/run-tests-against-nullb	/^section7()$/;"	f
section8	t/zbd/run-tests-against-nullb	/^section8()$/;"	f
section9	t/zbd/run-tests-against-nullb	/^section9()$/;"	f
sections=	t/zbd/run-tests-against-nullb	/^sections=()$/;"	f
sector	blktrace_api.h	/^	__u64 sector;		\/* disk offset *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u64
sector	blktrace_api.h	/^	__u64 sector;$/;"	m	struct:blk_io_trace_remap	typeref:typename:__u64
sector	oslib/linux-blkzoned.c	/^	__u64	sector;$/;"	m	struct:blk_zone_report_v2	typeref:typename:__u64	file:
sector	t/btrace2fio.c	/^static struct inflight *inflight_find(uint64_t sector)$/;"	z	function:inflight_find	typeref:typename:uint64_t	file:
sector	t/btrace2fio.c	/^static void inflight_add(struct btrace_pid *p, uint64_t sector, uint32_t len)$/;"	z	function:inflight_add	typeref:typename:uint64_t	file:
sectors	diskutil.h	/^	uint64_t sectors[2];$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t[2]
sectors	diskutil.h	/^	uint64_t sectors[2];$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t[2]
sectors_with_data	zbd.h	/^	uint64_t		sectors_with_data;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint64_t
seed	arch/arch-x86_64.h	/^static inline int arch_rand_seed(unsigned long *seed)$/;"	z	function:arch_rand_seed	typeref:typename:unsigned long *	file:
seed	crc/murmur3.c	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed)$/;"	z	function:murmurhash3	typeref:typename:uint32_t	file:
seed	crc/murmur3.h	/^uint32_t murmurhash3(const void *key, uint32_t len, uint32_t seed);$/;"	z	prototype:murmurhash3	typeref:typename:uint32_t	file:
seed	crc/xxhash.c	/^XXH_errorcode XXH32_resetState(void* state_in, uint32_t seed)$/;"	z	function:XXH32_resetState	typeref:typename:uint32_t	file:
seed	crc/xxhash.c	/^static uint32_t XXH32_endian_align(const void* input, int len, uint32_t seed, XXH_endianess endi/;"	z	function:XXH32_endian_align	typeref:typename:uint32_t	file:
seed	crc/xxhash.c	/^uint32_t XXH32(const void* input, uint32_t len, uint32_t seed)$/;"	z	function:XXH32	typeref:typename:uint32_t	file:
seed	crc/xxhash.c	/^void* XXH32_init (uint32_t seed)$/;"	z	function:XXH32_init	typeref:typename:uint32_t	file:
seed	crc/xxhash.h	/^    uint32_t seed;$/;"	m	struct:XXH_state32_t	typeref:typename:uint32_t
seed	crc/xxhash.h	/^XXH_errorcode XXH32_resetState(void* state, uint32_t seed);$/;"	z	prototype:XXH32_resetState	typeref:typename:uint32_t	file:
seed	crc/xxhash.h	/^uint32_t XXH32 (const void* input, uint32_t len, uint32_t seed);$/;"	z	prototype:XXH32	typeref:typename:uint32_t	file:
seed	crc/xxhash.h	/^void*         XXH32_init   (uint32_t seed);$/;"	z	prototype:XXH32_init	typeref:typename:uint32_t	file:
seed	lib/bloom.c	/^	unsigned int seed;$/;"	m	struct:bloom_hash	typeref:typename:unsigned int	file:
seed	lib/bloom.c	/^static uint32_t bloom_crc32c(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_crc32c	typeref:typename:uint32_t	file:
seed	lib/bloom.c	/^static uint32_t bloom_fnv(const void *buf, uint32_t len, uint32_t seed)$/;"	z	function:bloom_fnv	typeref:typename:uint32_t	file:
seed	lib/gauss.c	/^		double center, unsigned int seed)$/;"	z	function:gauss_init	typeref:typename:unsigned int	file:
seed	lib/gauss.h	/^		double center, unsigned int seed);$/;"	z	prototype:gauss_init	typeref:typename:unsigned int	file:
seed	lib/lfsr.c	/^int lfsr_init(struct fio_lfsr *fl, uint64_t nums, uint64_t seed,$/;"	z	function:lfsr_init	typeref:typename:uint64_t	file:
seed	lib/lfsr.c	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed)$/;"	z	function:lfsr_reset	typeref:typename:uint64_t	file:
seed	lib/lfsr.h	/^	      uint64_t seed, unsigned int spin);$/;"	z	prototype:lfsr_init	typeref:typename:uint64_t	file:
seed	lib/lfsr.h	/^int lfsr_reset(struct fio_lfsr *fl, uint64_t seed);$/;"	z	prototype:lfsr_reset	typeref:typename:uint64_t	file:
seed	lib/rand.c	/^static void __init_rand32(struct taus88_state *state, unsigned int seed)$/;"	z	function:__init_rand32	typeref:typename:unsigned int	file:
seed	lib/rand.c	/^void __fill_random_buf(void *buf, unsigned int len, uint64_t seed)$/;"	z	function:__fill_random_buf	typeref:typename:uint64_t	file:
seed	lib/rand.c	/^void __fill_random_buf_percentage(uint64_t seed, void *buf,$/;"	z	function:__fill_random_buf_percentage	typeref:typename:uint64_t	file:
seed	lib/rand.c	/^void __init_rand64(struct taus258_state *state, uint64_t seed)$/;"	z	function:__init_rand64	typeref:typename:uint64_t	file:
seed	lib/rand.c	/^void init_rand_seed(struct frand_state *state, uint64_t seed, bool use64)$/;"	z	function:init_rand_seed	typeref:typename:uint64_t	file:
seed	lib/rand.h	/^extern void __fill_random_buf(void *buf, unsigned int len, uint64_t seed);$/;"	z	prototype:__fill_random_buf	typeref:typename:uint64_t	file:
seed	lib/rand.h	/^extern void init_rand_seed(struct frand_state *, uint64_t seed, bool);$/;"	z	prototype:init_rand_seed	typeref:typename:uint64_t	file:
seed	lib/rand.h	/^void __init_rand64(struct taus258_state *state, uint64_t seed);$/;"	z	prototype:__init_rand64	typeref:typename:uint64_t	file:
seed	lib/zipf.c	/^			     double center, unsigned int seed)$/;"	z	function:shared_rand_init	typeref:typename:unsigned int	file:
seed	lib/zipf.c	/^		 double center, unsigned int seed)$/;"	z	function:pareto_init	typeref:typename:unsigned int	file:
seed	lib/zipf.c	/^	       double center, unsigned int seed)$/;"	z	function:zipf_init	typeref:typename:unsigned int	file:
seed	lib/zipf.h	/^		 double center, unsigned int seed);$/;"	z	prototype:pareto_init	typeref:typename:unsigned int	file:
seed	lib/zipf.h	/^	       double center, unsigned int seed);$/;"	z	prototype:zipf_init	typeref:typename:unsigned int	file:
seed	t/axmap.c	/^static int test_next_free(uint64_t size, int seed)$/;"	z	function:test_next_free	typeref:typename:int	file:
seed	t/axmap.c	/^static int test_regular(uint64_t size, int seed)$/;"	z	function:test_regular	typeref:typename:int	file:
seed	verify.c	/^				 uint64_t seed, int use_seed)$/;"	z	function:fill_pattern_headers	typeref:typename:uint64_t	file:
seed	verify.c	/^			 struct io_u *io_u, uint64_t seed, int use_seed)$/;"	z	function:fill_verify_pattern	typeref:typename:uint64_t	file:
seed	verify.c	/^static void __fill_buffer(struct thread_options *o, uint64_t seed, void *p,$/;"	z	function:__fill_buffer	typeref:typename:uint64_t	file:
seed	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:typename:uint64_t	file:
seen	io_u.h	/^		unsigned int seen;$/;"	m	union:io_u::__anon04db5ec7020a	typeref:typename:unsigned int
segment	lib/rand.c	/^				    unsigned int segment, unsigned int len,$/;"	z	function:fill_random_buf_percentage	typeref:typename:unsigned int	file:
segment	lib/rand.c	/^				  unsigned int segment, unsigned int len,$/;"	z	function:__fill_random_buf_percentage	typeref:typename:unsigned int	file:
segments	init.c	/^struct thread_segment segments[REAL_MAX_SEG];$/;"	v	typeref:struct:thread_segment[]
seldata	gfio.c	/^				   gint x, gint y, GtkSelectionData *seldata,$/;"	z	function:drag_and_drop_received	typeref:typename:GtkSelectionData *	file:
sem	fio.h	/^	struct fio_sem *sem;$/;"	m	struct:thread_data	typeref:struct:fio_sem *
sem	fio_sem.c	/^bool fio_sem_down_trylock(struct fio_sem *sem)$/;"	z	function:fio_sem_down_trylock	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^int __fio_sem_init(struct fio_sem *sem, int value)$/;"	z	function:__fio_sem_init	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^int fio_sem_down_timeout(struct fio_sem *sem, unsigned int msecs)$/;"	z	function:fio_sem_down_timeout	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^void __fio_sem_remove(struct fio_sem *sem)$/;"	z	function:__fio_sem_remove	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^void fio_sem_down(struct fio_sem *sem)$/;"	z	function:fio_sem_down	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^void fio_sem_remove(struct fio_sem *sem)$/;"	z	function:fio_sem_remove	typeref:struct:fio_sem *	file:
sem	fio_sem.c	/^void fio_sem_up(struct fio_sem *sem)$/;"	z	function:fio_sem_up	typeref:struct:fio_sem *	file:
sem	gettime-thread.c	/^	struct fio_sem *sem;$/;"	m	struct:gtod_cpu_data	typeref:struct:fio_sem *	file:
sem	profiles/act.c	/^	struct fio_sem *sem;$/;"	m	struct:act_run_data	typeref:struct:fio_sem *	file:
sem_timed_out	fio_sem.c	/^static bool sem_timed_out(struct timespec *t, unsigned int msecs)$/;"	f	typeref:typename:bool	file:
send_buf	engines/rdma.c	/^	struct rdma_info_blk send_buf;$/;"	m	struct:rdmaio_data	typeref:struct:rdma_info_blk	file:
send_clicked	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data)$/;"	f	typeref:typename:void	file:
send_clicked	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data);$/;"	p	typeref:typename:void	file:
send_client_cmd_line	client.c	/^static int send_client_cmd_line(struct fio_client *client)$/;"	f	typeref:typename:int	file:
send_job_entry	gfio.c	/^static void send_job_entry(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
send_job_file	gfio.c	/^static int send_job_file(struct gui_entry *ge)$/;"	f	typeref:typename:int	file:
send_mr	engines/rdma.c	/^	struct ibv_mr *send_mr;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_mr *	file:
send_sgl	engines/rdma.c	/^	struct ibv_sge send_sgl;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_sge	file:
send_update_job_reply	server.c	/^static int send_update_job_reply(uint64_t __tag, int error)$/;"	f	typeref:typename:int	file:
send_vec_entry	server.c	/^static int send_vec_entry(struct sk_out *sk_out, struct sk_entry *first)$/;"	f	typeref:typename:int	file:
sendfile_reply	client.c	/^static void sendfile_reply(int fd, struct cmd_sendfile_reply *rep,$/;"	f	typeref:typename:void	file:
sensitive	gfio.c	/^static const char *get_button_tooltip(struct button_spec *s, int sensitive)$/;"	z	function:get_button_tooltip	typeref:typename:int	file:
sent_job	client.h	/^	bool sent_job;$/;"	m	struct:fio_client	typeref:typename:bool
separate_writer	t/read-to-pipe-async.c	/^static int separate_writer = 1;$/;"	v	typeref:typename:int	file:
seq	engines/net.c	/^	uint64_t seq;$/;"	m	struct:udp_seq	typeref:typename:uint64_t	file:
seq	gettime.c	/^	uint32_t *seq;$/;"	m	struct:clock_thread	typeref:typename:uint32_t *	file:
seq	gettime.c	/^	uint32_t seq;$/;"	m	struct:clock_entry	typeref:typename:uint32_t	file:
seq	iolog.c	/^	unsigned int seq;$/;"	m	struct:inflate_chunk_iter	typeref:typename:unsigned int	file:
seq	iolog.c	/^static struct iolog_compress *get_new_chunk(unsigned int seq)$/;"	z	function:get_new_chunk	typeref:typename:unsigned int	file:
seq	iolog.h	/^	unsigned int seq;$/;"	m	struct:iolog_compress	typeref:typename:unsigned int
seq	lib/seqlock.h	/^static inline bool read_seqlock_retry(struct seqlock *s, unsigned int seq)$/;"	z	function:read_seqlock_retry	typeref:typename:unsigned int	file:
seq	t/btrace2fio.c	/^	uint64_t seq[DDIR_RWDIR_CNT];$/;"	m	struct:btrace_out	typeref:typename:uint64_t[]	file:
seq	t/read-to-pipe-async.c	/^	int seq;$/;"	m	struct:work_item	typeref:typename:int	file:
seq	t/read-to-pipe-async.c	/^static struct work_item *find_seq(struct writer_thread *w, unsigned int seq)$/;"	z	function:find_seq	typeref:typename:unsigned int	file:
seq	workqueue.h	/^	uint64_t seq;$/;"	m	struct:submit_worker	typeref:typename:uint64_t
seq_off	engines/net.c	/^	int seq_off;$/;"	m	struct:netio_data	typeref:typename:int	file:
seq_rand_state	fio.h	/^	struct frand_state seq_rand_state[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:struct:frand_state[]
seqlock	gettime.h	/^	struct seqlock seqlock;$/;"	m	struct:fio_ts	typeref:struct:seqlock
seqlock	lib/seqlock.h	/^struct seqlock {$/;"	s
seqlock_init	lib/seqlock.h	/^static inline void seqlock_init(struct seqlock *s)$/;"	f	typeref:typename:void
sequence	blktrace_api.h	/^	__u32 sequence;		\/* event number *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u32
sequence	lib/seqlock.h	/^	std::atomic<unsigned int> sequence;$/;"	m	struct:seqlock	typeref:typename:std::atomic<unsigned int>
serialize_overlap	thread_options.h	/^	uint32_t serialize_overlap;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
serialize_overlap	thread_options.h	/^	unsigned int serialize_overlap;$/;"	m	struct:thread_options	typeref:typename:unsigned int
series	tools/fiologparser.py	/^    series = []$/;"	v
server	server.h	/^	uint8_t server[128];$/;"	m	struct:cmd_client_probe_pdu	typeref:typename:uint8_t[128]
server_cleanup	engines/librpma_gpspm.c	/^static void server_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
server_cmpl_process	engines/librpma_gpspm.c	/^static int server_cmpl_process(struct thread_data *td)$/;"	f	typeref:typename:int	file:
server_data	engines/librpma_fio.h	/^	void *server_data;$/;"	m	struct:librpma_fio_server_data	typeref:typename:void *
server_data	engines/librpma_gpspm.c	/^struct server_data {$/;"	s	file:
server_init	engines/librpma_gpspm.c	/^static int server_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
server_ip	engines/librpma_fio.h	/^	char *server_ip;$/;"	m	struct:librpma_fio_options_values	typeref:typename:char *
server_mr	engines/librpma_fio.h	/^	struct rpma_mr_remote *server_mr;$/;"	m	struct:librpma_fio_client_data	typeref:struct:rpma_mr_remote *
server_mr_flush_type	engines/librpma_fio.h	/^	enum rpma_flush_type server_mr_flush_type;$/;"	m	struct:librpma_fio_client_data	typeref:enum:rpma_flush_type
server_name	client.c	/^static const char *server_name(struct fio_client *client, char *buf,$/;"	f	typeref:typename:const char *	file:
server_open_file	engines/librpma_apm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
server_open_file	engines/librpma_gpspm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
server_post_init	engines/librpma_gpspm.c	/^static int server_post_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
server_qe_process	engines/librpma_gpspm.c	/^static int server_qe_process(struct thread_data *td, struct ibv_wc *wc)$/;"	f	typeref:typename:int	file:
server_queue	engines/librpma_apm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
server_queue	engines/librpma_gpspm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
server_queue_process	engines/librpma_gpspm.c	/^static inline int server_queue_process(struct thread_data *td)$/;"	f	typeref:typename:int	file:
server_recv	engines/rdma.c	/^static int server_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	f	typeref:typename:int	file:
server_start	gfio.h	/^	int server_start;$/;"	m	struct:gui_entry	typeref:typename:int
server_t	gfio.h	/^	pthread_t server_t;$/;"	m	struct:gui	typeref:typename:pthread_t
server_thread	gfio.c	/^static void *server_thread(void *arg)$/;"	f	typeref:typename:void *	file:
set	filehash.c	/^bool file_bloom_exists(const char *fname, bool set)$/;"	z	function:file_bloom_exists	typeref:typename:bool	file:
set	filesetup.c	/^static bool __is_already_allocated(const char *fname, bool set)$/;"	z	function:__is_already_allocated	typeref:typename:bool	file:
set	graph.c	/^void graph_set_graph_all_zeroes(struct graph *g, unsigned int set)$/;"	z	function:graph_set_graph_all_zeroes	typeref:typename:unsigned int	file:
set	graph.h	/^extern void graph_set_graph_all_zeroes(struct graph *g, unsigned int set);$/;"	z	prototype:graph_set_graph_all_zeroes	typeref:typename:unsigned int	file:
set	lib/bloom.c	/^			  bool set)$/;"	z	function:__bloom_check	typeref:typename:bool	file:
set	lib/bloom.c	/^		  bool set)$/;"	z	function:bloom_string	typeref:typename:bool	file:
setUp	tools/hist/fio-histo-log-pctiles.py	/^    def setUp(self):$/;"	m	class:Test
setUpClass	tools/hist/fio-histo-log-pctiles.py	/^    def setUpClass(cls):$/;"	m	class:Test
setW	crc/sha1.c	/^#define setW(/;"	d	file:
set_already_allocated	filesetup.c	/^static void set_already_allocated(const char *fname)$/;"	f	typeref:typename:void	file:
set_bits	lib/axmap.c	/^	unsigned int set_bits;$/;"	m	struct:axmap_set_data	typeref:typename:unsigned int	file:
set_blocks	smalloc.c	/^static void set_blocks(struct pool *pool, unsigned int pool_idx,$/;"	f	typeref:typename:void	file:
set_ci_target_os	ci/common.sh	/^function set_ci_target_os {$/;"	f
set_cpu_affinity	idletime.c	/^static int set_cpu_affinity(struct idle_prof_thread *ipt)$/;"	f	typeref:typename:int	file:
set_cpus_allowed	options.c	/^static int set_cpus_allowed(struct thread_data *td, os_cpu_mask_t *mask,$/;"	f	typeref:typename:int	file:
set_debug	init.c	/^static int set_debug(const char *string)$/;"	f	typeref:typename:int	file:
set_epoch_time	fio_time.h	/^extern void set_epoch_time(struct thread_data *, int, clockid_t);$/;"	p	typeref:typename:void
set_epoch_time	time.c	/^void set_epoch_time(struct thread_data *td, int log_alternate_epoch, clockid_t clock_id)$/;"	f	typeref:typename:void
set_file_buffer	iolog.c	/^static void *set_file_buffer(FILE *f)$/;"	f	typeref:typename:void *	file:
set_genesis_time	fio_time.h	/^extern void set_genesis_time(void);$/;"	p	typeref:typename:void
set_genesis_time	time.c	/^void set_genesis_time(void)$/;"	f	typeref:typename:void
set_io_scheduler	t/zbd/test-zbd-support	/^set_io_scheduler() {$/;"	f
set_io_u_file	io_u.c	/^static long set_io_u_file(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:long	file:
set_ioscheduler	backend.c	/^static int set_ioscheduler(struct thread_data *td, struct fio_file *file)$/;"	f	typeref:typename:int	file:
set_job_menu_visible	gfio.c	/^static void set_job_menu_visible(struct gui *ui, int visible)$/;"	f	typeref:typename:void	file:
set_menu_entry_text	gfio.c	/^static void set_menu_entry_text(struct gui *ui, const char *path,$/;"	f	typeref:typename:void	file:
set_menu_entry_visible	gfio.c	/^static void set_menu_entry_visible(struct gui *ui, const char *path, int show)$/;"	f	typeref:typename:void	file:
set_mss	engines/net.c	/^static int set_mss(struct thread_data *td, int fd)$/;"	f	typeref:typename:int	file:
set_name_idx	options.c	/^int set_name_idx(char *target, size_t tlen, char *input, int index,$/;"	f	typeref:typename:int
set_name_idx	options.h	/^int set_name_idx(char *, size_t, char *, int, bool);$/;"	p	typeref:typename:int
set_options	thread_options.h	/^	uint64_t set_options[NR_OPTS_SZ];$/;"	m	struct:thread_options	typeref:typename:uint64_t[]
set_options	thread_options.h	/^	uint64_t set_options[NR_OPTS_SZ];$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t[]
set_rate	t/btrace2fio.c	/^static unsigned int set_rate;$/;"	v	typeref:typename:unsigned int	file:
set_rw_ddir	io_u.c	/^static void set_rw_ddir(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
set_rwmix_bytes	io_u.c	/^static void set_rwmix_bytes(struct thread_data *td)$/;"	f	typeref:typename:void	file:
set_sig_handlers	backend.c	/^static void set_sig_handlers(void)$/;"	f	typeref:typename:void	file:
set_sig_handlers	server.c	/^static void set_sig_handlers(void)$/;"	f	typeref:typename:void	file:
set_suffix_value	lex.yy.c	/^#define set_suffix_value(/;"	d	file:
set_view_results_visible	gfio.c	/^static void set_view_results_visible(struct gui *ui, int visible)$/;"	f	typeref:typename:void	file:
set_window_size	engines/net.c	/^static int set_window_size(struct thread_data *td, int fd)$/;"	f	typeref:typename:int	file:
setgid	os/os-windows.h	/^int setgid(gid_t gid);$/;"	p	typeref:typename:int
setgid	os/windows/posix.c	/^int setgid(gid_t gid)$/;"	f	typeref:typename:int
setsid	os/os-windows.h	/^pid_t setsid(void);$/;"	p	typeref:typename:pid_t
setsid	os/windows/posix.c	/^pid_t setsid(void)$/;"	f	typeref:typename:pid_t
setstring	graph.c	/^static void setstring(char **str, const char *value)$/;"	f	typeref:typename:void	file:
settings	gfio.c	/^void gfio_ui_setup(GtkSettings *settings, GtkWidget *menubar,$/;"	z	function:gfio_ui_setup	typeref:typename:GtkSettings *	file:
settings	printing.c	/^	GtkPrintSettings *settings;$/;"	m	struct:printing_parameters	typeref:typename:GtkPrintSettings *	file:
setuid	os/os-windows.h	/^int setuid(uid_t uid);$/;"	p	typeref:typename:int
setuid	os/windows/posix.c	/^int setuid(uid_t uid)$/;"	f	typeref:typename:int
setup	ioengines.h	/^	int (*setup)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *)
setup	t/run-fio-tests.py	/^    def setup(self, artifact_root, testnum):$/;"	m	class:FioJobTest
setup	t/run-fio-tests.py	/^    def setup(self, artifact_root, testnum):$/;"	m	class:FioTest
setup	tools/plot/samples/Makefile	/^setup:$/;"	t
setup_aio	t/io_uring.c	/^static int setup_aio(struct submitter *s)$/;"	f	typeref:typename:int	file:
setup_bandwidth_graph	gfio.c	/^static void setup_bandwidth_graph(struct gfio_graphs *gg)$/;"	f	typeref:typename:void	file:
setup_clat_graph	gclient.c	/^static struct graph *setup_clat_graph(char *title, unsigned long long *ovals,$/;"	f	typeref:struct:graph *	file:
setup_commandline	tools/fiograph/fiograph.py	/^def setup_commandline():$/;"	f
setup_disk_util	diskutil.c	/^void setup_disk_util(void)$/;"	f	typeref:typename:void
setup_disk_util	diskutil.h	/^#define setup_disk_util(/;"	d
setup_disk_util	diskutil.h	/^extern void setup_disk_util(void);$/;"	p	typeref:typename:void
setup_files	file.h	/^extern int __must_check setup_files(struct thread_data *);$/;"	p	typeref:typename:int __must_check
setup_files	filesetup.c	/^int setup_files(struct thread_data *td)$/;"	f	typeref:typename:int
setup_graphs	gfio.c	/^static void setup_graphs(struct gfio_graphs *g)$/;"	f	typeref:typename:void	file:
setup_iops_graph	gfio.c	/^static void setup_iops_graph(struct gfio_graphs *gg)$/;"	f	typeref:typename:void	file:
setup_lat_bucket_graph	gclient.c	/^static struct graph *setup_lat_bucket_graph(const char *title, double *lat,$/;"	f	typeref:struct:graph *	file:
setup_log	iolog.c	/^void setup_log(struct io_log **log, struct log_params *p,$/;"	f	typeref:typename:void
setup_log	iolog.h	/^extern void setup_log(struct io_log **, struct log_params *, const char *);$/;"	p	typeref:typename:void
setup_random_seeds	init.c	/^static int setup_random_seeds(struct thread_data *td)$/;"	f	typeref:typename:int	file:
setup_rate	init.c	/^static int setup_rate(struct thread_data *td)$/;"	f	typeref:typename:int	file:
setup_ring	t/io_uring.c	/^static int setup_ring(struct submitter *s)$/;"	f	typeref:typename:int	file:
setup_strided_zone_mode	io_u.c	/^static void setup_strided_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
setup_tests	lib/memcpy.c	/^static int setup_tests(void)$/;"	f	typeref:typename:int	file:
setup_to_parse_string	y.tab.c	/^static void setup_to_parse_string(const char *string)$/;"	f	typeref:typename:void	file:
setup_zbd_zone_mode	zbd.c	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
setup_zbd_zone_mode	zbd.h	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:typename:void
sfree	smalloc.c	/^void sfree(void *ptr)$/;"	f	typeref:typename:void
sfree	smalloc.h	/^extern void sfree(void *);$/;"	p	typeref:typename:void
sfree_check_redzone	smalloc.c	/^static void sfree_check_redzone(struct block_hdr *hdr)$/;"	f	typeref:typename:void	file:
sfree_pool	smalloc.c	/^static void sfree_pool(struct pool *pool, void *ptr)$/;"	f	typeref:typename:void	file:
sg_fd_read	engines/sg.c	/^static int sg_fd_read(int fd, void *data, size_t size)$/;"	f	typeref:typename:int	file:
sg_options	engines/sg.c	/^struct sg_options {$/;"	s	file:
sgbuf	engines/sg.c	/^	void *sgbuf;$/;"	m	struct:sgio_data	typeref:typename:void *	file:
sgio_cmd	engines/sg.c	/^struct sgio_cmd {$/;"	s	file:
sgio_data	engines/sg.c	/^struct sgio_data {$/;"	s	file:
sgio_get_be16	engines/sg.c	/^static inline uint16_t sgio_get_be16(uint8_t *buf)$/;"	f	typeref:typename:uint16_t	file:
sgio_get_be32	engines/sg.c	/^static inline uint32_t sgio_get_be32(uint8_t *buf)$/;"	f	typeref:typename:uint32_t	file:
sgio_get_be64	engines/sg.c	/^static inline uint64_t sgio_get_be64(uint8_t *buf)$/;"	f	typeref:typename:uint64_t	file:
sgio_hdr_init	engines/sg.c	/^static void sgio_hdr_init(struct sgio_data *sd, struct sg_io_hdr *hdr,$/;"	f	typeref:typename:void	file:
sgio_set_be16	engines/sg.c	/^static inline void sgio_set_be16(uint16_t val, uint8_t *buf)$/;"	f	typeref:typename:void	file:
sgio_set_be32	engines/sg.c	/^static inline void sgio_set_be32(uint32_t val, uint8_t *buf)$/;"	f	typeref:typename:void	file:
sgio_set_be64	engines/sg.c	/^static inline void sgio_set_be64(uint64_t val, uint8_t *buf)$/;"	f	typeref:typename:void	file:
sgio_trim	engines/sg.c	/^struct sgio_trim {$/;"	s	file:
sgio_unbuffered	engines/sg.c	/^static inline bool sgio_unbuffered(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
sgl	engines/dfs.c	/^	d_sg_list_t	sgl;$/;"	m	struct:daos_iou	typeref:typename:d_sg_list_t	file:
sha	crc/sha3.h	/^	uint8_t		*sha;$/;"	m	struct:fio_sha3_ctx	typeref:typename:uint8_t *
sha	verify.c	/^			    struct fio_sha3_ctx *sha3_ctx, uint8_t *sha,$/;"	z	function:verify_io_u_sha3	typeref:typename:uint8_t *	file:
sha	verify.h	/^	uint8_t sha[224 \/ 8];$/;"	m	struct:vhdr_sha3_224	typeref:typename:uint8_t[]
sha	verify.h	/^	uint8_t sha[256 \/ 8];$/;"	m	struct:vhdr_sha3_256	typeref:typename:uint8_t[]
sha	verify.h	/^	uint8_t sha[384 \/ 8];$/;"	m	struct:vhdr_sha3_384	typeref:typename:uint8_t[]
sha	verify.h	/^	uint8_t sha[512 \/ 8];$/;"	m	struct:vhdr_sha3_512	typeref:typename:uint8_t[]
sha1	verify.h	/^	uint32_t sha1[5];$/;"	m	struct:vhdr_sha1	typeref:typename:uint32_t[5]
sha256	verify.h	/^	uint8_t sha256[64];$/;"	m	struct:vhdr_sha256	typeref:typename:uint8_t[64]
sha256_transform	crc/sha256.c	/^static void sha256_transform(uint32_t *state, const uint8_t *input)$/;"	f	typeref:typename:void	file:
sha3_ctx	verify.c	/^			    struct fio_sha3_ctx *sha3_ctx, uint8_t *sha,$/;"	z	function:verify_io_u_sha3	typeref:struct:fio_sha3_ctx *	file:
sha3_ctx	verify.c	/^static void fill_sha3(struct fio_sha3_ctx *sha3_ctx, void *p, unsigned int len)$/;"	z	function:fill_sha3	typeref:struct:fio_sha3_ctx *	file:
sha512	verify.h	/^	uint8_t sha512[128];$/;"	m	struct:vhdr_sha512	typeref:typename:uint8_t[128]
sha512_K	crc/sha512.c	/^static const uint64_t sha512_K[80] = {$/;"	v	typeref:typename:const uint64_t[80]	file:
sha512_transform	crc/sha512.c	/^static void sha512_transform(uint64_t *state, uint64_t *W, const uint8_t *input)$/;"	f	typeref:typename:void	file:
sha_size	verify.c	/^			    unsigned int sha_size, const char *name)$/;"	z	function:verify_io_u_sha3	typeref:typename:unsigned int	file:
shadow_fd	file.h	/^	int shadow_fd;$/;"	m	struct:fio_file	typeref:typename:int
shape	tools/fiograph/fiograph.conf	/^shape=box$/;"	k	section:fio_jobs
shape_color	tools/fiograph/fiograph.conf	/^shape_color=blue$/;"	k	section:fio_jobs
shared	fio.h	/^static inline void *fio_memalign(size_t alignment, size_t size, bool shared)$/;"	z	function:fio_memalign	typeref:typename:bool	file:
shared	fio.h	/^static inline void fio_memfree(void *ptr, size_t size, bool shared)$/;"	z	function:fio_memfree	typeref:typename:bool	file:
shared	io_u_queue.c	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared)$/;"	z	function:io_u_qinit	typeref:typename:bool	file:
shared	io_u_queue.c	/^void io_u_qexit(struct io_u_queue *q, bool shared)$/;"	z	function:io_u_qexit	typeref:typename:bool	file:
shared	io_u_queue.h	/^bool io_u_qinit(struct io_u_queue *q, unsigned int nr, bool shared);$/;"	z	prototype:io_u_qinit	typeref:typename:bool	file:
shared	io_u_queue.h	/^void io_u_qexit(struct io_u_queue *q, bool shared);$/;"	z	prototype:io_u_qexit	typeref:typename:bool	file:
shared_rand_init	lib/zipf.c	/^static void shared_rand_init(struct zipf_state *zs, uint64_t nranges,$/;"	f	typeref:typename:void	file:
sharedir	Makefile	/^sharedir = $(prefix)\/share\/fio$/;"	m
sharedir	Makefile	/^sharedir = \/usr\/share\/fio$/;"	m
shift	crc/sha256.c	/^static inline uint32_t ror32(uint32_t word, unsigned int shift)$/;"	z	function:ror32	typeref:typename:unsigned int	file:
shift	debug.h	/^	unsigned long shift;$/;"	m	struct:debug_level	typeref:typename:unsigned long
shift	hash.h	/^static inline uint32_t rol32(uint32_t word, uint32_t shift)$/;"	z	function:rol32	typeref:typename:uint32_t	file:
shift	t/time-test.c	/^static void calc_mult_shift(int mode, void *mult, unsigned int *shift,$/;"	z	function:calc_mult_shift	typeref:typename:unsigned int *	file:
shm_atime	os/windows/posix/include/sys/shm.h	/^	time_t          shm_atime;  \/* time of last shmat() *\/$/;"	m	struct:shmid_ds	typeref:typename:time_t
shm_attach_to_open_removed	os/os-dragonfly.h	/^static inline int shm_attach_to_open_removed(void)$/;"	f	typeref:typename:int
shm_attach_to_open_removed	os/os-freebsd.h	/^static inline int shm_attach_to_open_removed(void)$/;"	f	typeref:typename:int
shm_attach_to_open_removed	os/os-linux.h	/^static inline int shm_attach_to_open_removed(void)$/;"	f	typeref:typename:int
shm_attach_to_open_removed	os/os-openbsd.h	/^static inline int shm_attach_to_open_removed(void)$/;"	f	typeref:typename:int
shm_attach_to_open_removed	os/os.h	/^static inline int shm_attach_to_open_removed(void)$/;"	f	typeref:typename:int
shm_cpid	os/windows/posix/include/sys/shm.h	/^	pid_t           shm_cpid;   \/* process ID of creator *\/$/;"	m	struct:shmid_ds	typeref:typename:pid_t
shm_ctime	os/windows/posix/include/sys/shm.h	/^	time_t          shm_ctime;  \/* time of last change by shmctl() *\/$/;"	m	struct:shmid_ds	typeref:typename:time_t
shm_dtime	os/windows/posix/include/sys/shm.h	/^	time_t          shm_dtime;  \/* time of last shmdt() *\/$/;"	m	struct:shmid_ds	typeref:typename:time_t
shm_id	fio.h	/^	int shm_id;$/;"	m	struct:thread_data	typeref:typename:int
shm_id	fio.h	/^	int shm_id;$/;"	m	struct:thread_segment	typeref:typename:int
shm_lpid	os/windows/posix/include/sys/shm.h	/^	pid_t           shm_lpid;   \/* process ID of last shared memory operation *\/$/;"	m	struct:shmid_ds	typeref:typename:pid_t
shm_nattch	os/windows/posix/include/sys/shm.h	/^	shmatt_t        shm_nattch; \/* number of current attaches *\/$/;"	m	struct:shmid_ds	typeref:typename:shmatt_t
shm_perm	os/windows/posix/include/sys/shm.h	/^	struct ipc_perm shm_perm;   \/* operation permission structure *\/$/;"	m	struct:shmid_ds	typeref:struct:ipc_perm
shm_segsz	os/windows/posix/include/sys/shm.h	/^	size_t          shm_segsz;  \/* size of segment in bytes *\/$/;"	m	struct:shmid_ds	typeref:typename:size_t
shmaddr	os/windows/posix.c	/^int shmdt(const void *shmaddr)$/;"	z	function:shmdt	typeref:typename:const void *	file:
shmaddr	os/windows/posix.c	/^void *shmat(int shmid, const void *shmaddr, int shmflg)$/;"	z	function:shmat	typeref:typename:const void *	file:
shmaddr	os/windows/posix/include/sys/shm.h	/^int shmdt(const void *shmaddr);$/;"	z	prototype:shmdt	typeref:typename:const void *	file:
shmaddr	os/windows/posix/include/sys/shm.h	/^void *shmat(int shmid, const void *shmaddr, int shmflg);$/;"	z	prototype:shmat	typeref:typename:const void *	file:
shmat	os/os-android.h	/^static inline void *shmat(int __shmid, const void *__shmaddr, int __shmflg)$/;"	f	typeref:typename:void *
shmat	os/windows/posix.c	/^void *shmat(int shmid, const void *shmaddr, int shmflg)$/;"	f	typeref:typename:void *
shmat	os/windows/posix/include/sys/shm.h	/^void *shmat(int shmid, const void *shmaddr, int shmflg);$/;"	p	typeref:typename:void *
shmatt_t	os/windows/posix/include/sys/shm.h	/^typedef int shmatt_t;$/;"	t	typeref:typename:int
shmctl	os/os-android.h	/^static inline int shmctl(int __shmid, int __cmd, struct shmid_ds *__buf)$/;"	f	typeref:typename:int
shmctl	os/windows/posix.c	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf)$/;"	f	typeref:typename:int
shmctl	os/windows/posix/include/sys/shm.h	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf);$/;"	p	typeref:typename:int
shmdt	os/os-android.h	/^static inline int shmdt (const void *__shmaddr)$/;"	f	typeref:typename:int
shmdt	os/windows/posix.c	/^int shmdt(const void *shmaddr)$/;"	f	typeref:typename:int
shmdt	os/windows/posix/include/sys/shm.h	/^int shmdt(const void *shmaddr);$/;"	p	typeref:typename:int
shmflg	os/windows/posix.c	/^int shmget(key_t key, size_t size, int shmflg)$/;"	z	function:shmget	typeref:typename:int	file:
shmflg	os/windows/posix.c	/^void *shmat(int shmid, const void *shmaddr, int shmflg)$/;"	z	function:shmat	typeref:typename:int	file:
shmflg	os/windows/posix/include/sys/shm.h	/^int shmget(key_t key, size_t size, int shmflg);$/;"	z	prototype:shmget	typeref:typename:int	file:
shmflg	os/windows/posix/include/sys/shm.h	/^void *shmat(int shmid, const void *shmaddr, int shmflg);$/;"	z	prototype:shmat	typeref:typename:int	file:
shmget	os/os-android.h	/^static inline int shmget(key_t __key, size_t __size, int __shmflg)$/;"	f	typeref:typename:int
shmget	os/windows/posix.c	/^int shmget(key_t key, size_t size, int shmflg)$/;"	f	typeref:typename:int
shmget	os/windows/posix/include/sys/shm.h	/^int shmget(key_t key, size_t size, int shmflg);$/;"	p	typeref:typename:int
shmid	os/windows/posix.c	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf)$/;"	z	function:shmctl	typeref:typename:int	file:
shmid	os/windows/posix.c	/^void *shmat(int shmid, const void *shmaddr, int shmflg)$/;"	z	function:shmat	typeref:typename:int	file:
shmid	os/windows/posix/include/sys/shm.h	/^int shmctl(int shmid, int cmd, struct shmid_ds *buf);$/;"	z	prototype:shmctl	typeref:typename:int	file:
shmid	os/windows/posix/include/sys/shm.h	/^void *shmat(int shmid, const void *shmaddr, int shmflg);$/;"	z	prototype:shmat	typeref:typename:int	file:
shmid_ds	os/os-android.h	/^#define shmid_ds /;"	d
shmid_ds	os/windows/posix/include/sys/shm.h	/^struct shmid_ds$/;"	s
short_io_u	stat.h	/^	uint64_t short_io_u[DDIR_RWDIR_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
shorten	tickmarks.c	/^static void shorten(struct tickmark *tm, int nticks, int *power_of_ten,$/;"	f	typeref:typename:void	file:
should_account	io_u.c	/^static bool should_account(struct thread_data *td)$/;"	f	typeref:typename:bool	file:
should_check_rate	fio.h	/^static inline bool should_check_rate(struct thread_data *td)$/;"	f	typeref:typename:bool
should_do_random	io_u.c	/^static bool should_do_random(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:typename:bool	file:
should_fsync	fio.h	/^static inline bool should_fsync(struct thread_data *td)$/;"	f	typeref:typename:bool
should_not_get_here	tools/hist/fio-histo-log-pctiles.py	/^  should_not_get_here = False$/;"	v
show	gfio.c	/^static void set_menu_entry_visible(struct gui *ui, const char *path, int show)$/;"	z	function:set_menu_entry_visible	typeref:typename:int	file:
show	t/verify-state.c	/^static void show(struct thread_io_list *s, size_t size)$/;"	f	typeref:typename:void	file:
show_agg_stats	stat.c	/^static void show_agg_stats(struct disk_util_agg *agg, int terse,$/;"	f	typeref:typename:void	file:
show_block_infos	stat.c	/^static void show_block_infos(int nr_block_infos, uint32_t *block_infos,$/;"	f	typeref:typename:void	file:
show_chunk	t/dedupe.c	/^static void show_chunk(struct chunk *c)$/;"	f	typeref:typename:void	file:
show_clat_percentiles	stat.c	/^static void show_clat_percentiles(uint64_t *io_u_plat, unsigned long long nr,$/;"	f	typeref:typename:void	file:
show_clat_percentiles	t/io_uring.c	/^static void show_clat_percentiles(unsigned long *io_u_plat, unsigned long nr,$/;"	f	typeref:typename:void	file:
show_closest_option	init.c	/^static void show_closest_option(const char *name)$/;"	f	typeref:typename:void	file:
show_closest_option	options.c	/^static void show_closest_option(const char *opt)$/;"	f	typeref:typename:void	file:
show_cmd_help	parse.c	/^int show_cmd_help(const struct fio_option *options, const char *name)$/;"	f	typeref:typename:int
show_cmd_help	parse.h	/^extern int show_cmd_help(const struct fio_option *, const char *);$/;"	p	typeref:typename:int
show_ddir_status	stat.c	/^static void show_ddir_status(struct group_run_stats *rs, struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_ddir_status_terse	stat.c	/^static void show_ddir_status_terse(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_debug_categories	init.c	/^static void show_debug_categories(void)$/;"	f	typeref:typename:void	file:
show_device	t/one-core-peak.sh	/^show_device() {$/;"	f
show_disk_util	stat.c	/^void show_disk_util(int terse, struct json_object *parent,$/;"	f	typeref:typename:void
show_file	t/verify-state.c	/^static int show_file(const char *file)$/;"	f	typeref:typename:int	file:
show_group_stats	stat.c	/^void show_group_stats(struct group_run_stats *rs, struct buf_output *out)$/;"	f	typeref:typename:void
show_group_stats	stat.h	/^extern void show_group_stats(struct group_run_stats *rs, struct buf_output *);$/;"	p	typeref:typename:void
show_help	tools/genfio	/^show_help() {$/;"	f
show_idle_prof_stats	idletime.c	/^void show_idle_prof_stats(int output, struct json_object *parent,$/;"	f	typeref:typename:void
show_idle_prof_stats	idletime.h	/^extern void show_idle_prof_stats(int, struct json_object *, struct buf_output *);$/;"	p	typeref:typename:void
show_kernel_config_item	t/one-core-peak.sh	/^show_kernel_config_item() {$/;"	f
show_lat	stat.c	/^static bool show_lat(double *io_u_lat, int nr, const char **ranges,$/;"	f	typeref:typename:bool	file:
show_lat_m	stat.c	/^static void show_lat_m(double *io_u_lat_m, struct buf_output *out)$/;"	f	typeref:typename:void	file:
show_lat_n	stat.c	/^static void show_lat_n(double *io_u_lat_n, struct buf_output *out)$/;"	f	typeref:typename:void	file:
show_lat_u	stat.c	/^static void show_lat_u(double *io_u_lat_u, struct buf_output *out)$/;"	f	typeref:typename:void	file:
show_latencies	stat.c	/^static void show_latencies(struct thread_stat *ts, struct buf_output *out)$/;"	f	typeref:typename:void	file:
show_latencies	t/read-to-pipe-async.c	/^static void show_latencies(struct stats *s, const char *msg)$/;"	f	typeref:typename:void	file:
show_mixed_ddir_status	stat.c	/^static void show_mixed_ddir_status(struct group_run_stats *rs,$/;"	f	typeref:typename:void	file:
show_mixed_ddir_status_terse	stat.c	/^static void show_mixed_ddir_status_terse(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_mixed_group_stats	stat.c	/^void show_mixed_group_stats(struct group_run_stats *rs, struct buf_output *out) $/;"	f	typeref:typename:void
show_nullb_config	t/zbd/run-tests-against-nullb	/^show_nullb_config()$/;"	f
show_nvme	t/one-core-peak.sh	/^show_nvme() {$/;"	f
show_option_help	parse.c	/^static void show_option_help(const struct fio_option *o, int is_err)$/;"	f	typeref:typename:void	file:
show_option_range	parse.c	/^static void show_option_range(const struct fio_option *o,$/;"	f	typeref:typename:void	file:
show_option_values	parse.c	/^static void show_option_values(const struct fio_option *o)$/;"	f	typeref:typename:void	file:
show_progress	t/dedupe.c	/^static void show_progress(struct worker_thread *threads, unsigned long total)$/;"	f	typeref:typename:void	file:
show_running_run_stats	stat.c	/^void show_running_run_stats(void)$/;"	f	typeref:typename:void
show_running_run_stats	stat.h	/^extern void show_running_run_stats(void);$/;"	p	typeref:typename:void
show_s	t/verify-state.c	/^static void show_s(struct thread_io_list *s, unsigned int no_s)$/;"	f	typeref:typename:void	file:
show_slice	profiles/act.c	/^static int show_slice(struct act_slice *slice, unsigned int slice_num)$/;"	f	typeref:typename:int	file:
show_ss_normal	stat.c	/^static void show_ss_normal(struct thread_stat *ts, struct buf_output *out)$/;"	f	typeref:typename:void	file:
show_stat	t/dedupe.c	/^static void show_stat(uint64_t nextents, uint64_t nchunks, uint64_t ndupextents,$/;"	f	typeref:typename:void	file:
show_system	t/one-core-peak.sh	/^show_system() {$/;"	f
show_thread_status	stat.c	/^struct json_object *show_thread_status(struct thread_stat *ts,$/;"	f	typeref:struct:json_object *
show_thread_status	stat.h	/^extern struct json_object * show_thread_status(struct thread_stat *ts, struct group_run_stats *r/;"	p	typeref:struct:json_object *
show_thread_status_json	stat.c	/^static struct json_object *show_thread_status_json(struct thread_stat *ts,$/;"	f	typeref:struct:json_object *	file:
show_thread_status_normal	stat.c	/^static void show_thread_status_normal(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_thread_status_terse	stat.c	/^static void show_thread_status_terse(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_thread_status_terse_all	stat.c	/^static void show_thread_status_terse_all(struct thread_stat *ts,$/;"	f	typeref:typename:void	file:
show_verify_state	t/verify-state.c	/^static void show_verify_state(void *buf, size_t size)$/;"	f	typeref:typename:void	file:
shutdown_worker	workqueue.c	/^static void shutdown_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	f	typeref:typename:void	file:
sig	backend.c	/^static void sig_int(int sig)$/;"	z	function:sig_int	typeref:typename:int	file:
sig	backend.c	/^void sig_show_status(int sig)$/;"	z	function:sig_show_status	typeref:typename:int	file:
sig	client.c	/^static void sig_int(int sig)$/;"	z	function:sig_int	typeref:typename:int	file:
sig	engines/solarisaio.c	/^static void fio_solarisaio_sigio(int sig)$/;"	z	function:fio_solarisaio_sigio	typeref:typename:int	file:
sig	fio.h	/^	int sig;$/;"	m	struct:thread_data	typeref:typename:int
sig	fio.h	/^extern void sig_show_status(int sig);$/;"	z	prototype:sig_show_status	typeref:typename:int	file:
sig	os/os-windows.h	/^int kill(pid_t pid, int sig);$/;"	z	prototype:kill	typeref:typename:int	file:
sig	os/os-windows.h	/^int sigaction(int sig, const struct sigaction *act,$/;"	z	prototype:sigaction	typeref:typename:int	file:
sig	os/windows/posix.c	/^int kill(pid_t pid, int sig)$/;"	z	function:kill	typeref:typename:int	file:
sig	os/windows/posix.c	/^int sigaction(int sig, const struct sigaction *act, struct sigaction *oact)$/;"	z	function:sigaction	typeref:typename:int	file:
sig	server.c	/^static void sig_int(int sig)$/;"	z	function:sig_int	typeref:typename:int	file:
sig	t/io_uring.c	/^static void sig_int(int sig)$/;"	z	function:sig_int	typeref:typename:int	file:
sig_figs	stat.h	/^	uint32_t sig_figs;$/;"	m	struct:group_run_stats	typeref:typename:uint32_t
sig_figs	stat.h	/^	uint32_t sig_figs;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
sig_figs	thread_options.h	/^	uint32_t sig_figs;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
sig_figs	thread_options.h	/^	unsigned int sig_figs;$/;"	m	struct:thread_options	typeref:typename:unsigned int
sig_handler	goptions.c	/^	gulong sig_handler;$/;"	m	struct:gopt	typeref:typename:gulong	file:
sig_int	backend.c	/^static void sig_int(int sig)$/;"	f	typeref:typename:void	file:
sig_int	client.c	/^static void sig_int(int sig)$/;"	f	typeref:typename:void	file:
sig_int	server.c	/^static void sig_int(int sig)$/;"	f	typeref:typename:void	file:
sig_int	t/io_uring.c	/^static void sig_int(int sig)$/;"	f	typeref:typename:void	file:
sig_show_status	backend.c	/^void sig_show_status(int sig)$/;"	f	typeref:typename:void
sig_show_status	fio.h	/^extern void sig_show_status(int sig);$/;"	p	typeref:typename:void
sigaction	os/os-windows.h	/^int sigaction(int sig, const struct sigaction *act,$/;"	p	typeref:typename:int
sigaction	os/os-windows.h	/^struct sigaction$/;"	s
sigaction	os/windows/posix.c	/^int sigaction(int sig, const struct sigaction *act, struct sigaction *oact)$/;"	f	typeref:typename:int
siginfo_t	os/os-windows.h	/^typedef int siginfo_t;$/;"	t	typeref:typename:int
sigmask	os/linux/io_uring.h	/^	__u64	sigmask;$/;"	m	struct:io_uring_getevents_arg	typeref:typename:__u64
sigmask_sz	os/linux/io_uring.h	/^	__u32	sigmask_sz;$/;"	m	struct:io_uring_getevents_arg	typeref:typename:__u32
signal	client.h	/^	int signal;$/;"	m	struct:fio_client	typeref:typename:int
signal	server.c	/^	int signal;$/;"	m	struct:fio_fork_item	typeref:typename:int	file:
signal	server.c	/^static int fio_net_queue_stop(int error, int signal)$/;"	z	function:fio_net_queue_stop	typeref:typename:int	file:
signal	server.c	/^static int fio_net_send_ack(struct fio_net_cmd *cmd, int error, int signal)$/;"	z	function:fio_net_send_ack	typeref:typename:int	file:
signal	server.c	/^void fio_server_got_signal(int signal)$/;"	z	function:fio_server_got_signal	typeref:typename:int	file:
signal	server.h	/^	uint32_t signal;$/;"	m	struct:cmd_end_pdu	typeref:typename:uint32_t
sigset_t	os/os-windows.h	/^typedef int sigset_t;$/;"	t	typeref:typename:int
similar	t/latency_percentiles.py	/^    def similar(approximation, actual):$/;"	m	class:FioLatTest
simple_memcpy	lib/memcpy.c	/^static void simple_memcpy(void *dst, void const *src, size_t len)$/;"	f	typeref:typename:void	file:
simple_strtoX	oslib/libmtd_common.h	/^#define simple_strtoX(/;"	d
single_instance	engines/libhdfs.c	/^	unsigned int single_instance;$/;"	m	struct:hdfsio_options	typeref:typename:unsigned int	file:
singlehtml	doc/Makefile	/^singlehtml:$/;"	t
sinit	smalloc.c	/^void sinit(void)$/;"	f	typeref:typename:void
sinit	smalloc.h	/^extern void sinit(void);$/;"	p	typeref:typename:void
sioreq	engines/ime.c	/^		struct imesio_req	*sioreq;	\/* pointer to the only syncio request *\/$/;"	m	union:ime_data::__anon63d57a09010a	typeref:struct:imesio_req *	file:
size	client.c	/^			   size_t size, uint64_t tag)$/;"	z	function:sendfile_reply	typeref:typename:size_t	file:
size	client.c	/^static int read_data(int fd, void *data, size_t size)$/;"	z	function:read_data	typeref:typename:size_t	file:
size	client.c	/^static int read_ini_data(int fd, void *data, size_t size)$/;"	z	function:read_ini_data	typeref:typename:size_t	file:
size	crc/sha1.h	/^	unsigned long long size;$/;"	m	struct:fio_sha1_ctx	typeref:typename:unsigned long long
size	crc/test.c	/^static void t_crc16(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc16	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_crc32(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_crc32c(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32c	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_crc64(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc64	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_crc7(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc7	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_fnv(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_fnv	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_jhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_jhash	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_md5(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_md5	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_murmur3(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_murmur3	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha1(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha1	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha256	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha3_224(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_224	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha3_256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_256	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha3_384(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_384	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha3_512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_512	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_sha512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha512	typeref:typename:size_t	file:
size	crc/test.c	/^static void t_xxhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_xxhash	typeref:typename:size_t	file:
size	engines/dfs.c	/^	daos_size_t	size;$/;"	m	struct:daos_iou	typeref:typename:daos_size_t	file:
size	engines/http.c	/^	     char *data, size_t size,$/;"	z	function:_curl_trace	typeref:typename:size_t	file:
size	engines/http.c	/^static size_t _http_read(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_read	typeref:typename:size_t	file:
size	engines/http.c	/^static size_t _http_write(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_write	typeref:typename:size_t	file:
size	engines/librpma_fio.c	/^		size_t size, struct librpma_fio_mem *mem)$/;"	z	function:librpma_fio_allocate_pmem	typeref:typename:size_t	file:
size	engines/librpma_fio.c	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	z	function:librpma_fio_allocate_dram	typeref:typename:size_t	file:
size	engines/librpma_fio.h	/^		size_t size, struct librpma_fio_mem *mem);$/;"	z	prototype:librpma_fio_allocate_pmem	typeref:typename:size_t	file:
size	engines/librpma_fio.h	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	z	prototype:librpma_fio_allocate_dram	typeref:typename:size_t	file:
size	engines/rdma.c	/^	uint32_t size;$/;"	m	struct:remote_u	typeref:typename:uint32_t	file:
size	engines/sg.c	/^static int sg_fd_read(int fd, void *data, size_t size)$/;"	z	function:sg_fd_read	typeref:typename:size_t	file:
size	eta.c	/^struct jobs_eta *get_jobs_eta(bool force, size_t *size)$/;"	z	function:get_jobs_eta	typeref:typename:size_t *	file:
size	fifo.c	/^struct fifo *fifo_alloc(unsigned int size)$/;"	z	function:fifo_alloc	typeref:typename:unsigned int	file:
size	fifo.h	/^	unsigned int size;	\/* the size of the allocated buffer *\/$/;"	m	struct:fifo	typeref:typename:unsigned int
size	fio.h	/^	uint64_t size;$/;"	m	struct:zone_split_index	typeref:typename:uint64_t
size	fio.h	/^static inline void *fio_memalign(size_t alignment, size_t size, bool shared)$/;"	z	function:fio_memalign	typeref:typename:size_t	file:
size	fio.h	/^static inline void fio_memfree(void *ptr, size_t size, bool shared)$/;"	z	function:fio_memfree	typeref:typename:size_t	file:
size	init.c	/^static void gen_log_name(char *name, size_t size, const char *logtype,$/;"	z	function:gen_log_name	typeref:typename:size_t	file:
size	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	z	function:yy_create_buffer	typeref:typename:int	file:
size	lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );$/;"	z	prototype:yy_create_buffer	typeref:typename:int	file:
size	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	z	function:yy_scan_buffer	typeref:typename:yy_size_t	file:
size	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );$/;"	z	prototype:yy_scan_buffer	typeref:typename:yy_size_t	file:
size	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	z	function:yyalloc	typeref:typename:yy_size_t	file:
size	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	z	function:yyrealloc	typeref:typename:yy_size_t	file:
size	lib/lfsr.c	/^static uint8_t *find_lfsr(uint64_t size)$/;"	z	function:find_lfsr	typeref:typename:uint64_t	file:
size	lib/lfsr.h	/^int lfsr_init(struct fio_lfsr *fl, uint64_t size,$/;"	z	prototype:lfsr_init	typeref:typename:uint64_t	file:
size	lib/memalign.c	/^void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn)$/;"	z	function:__fio_memalign	typeref:typename:size_t	file:
size	lib/memalign.c	/^void __fio_memfree(void *ptr, size_t size, free_fn fn)$/;"	z	function:__fio_memfree	typeref:typename:size_t	file:
size	lib/memalign.h	/^extern void *__fio_memalign(size_t alignment, size_t size, malloc_fn fn);$/;"	z	prototype:__fio_memalign	typeref:typename:size_t	file:
size	lib/memalign.h	/^extern void __fio_memfree(void *ptr, size_t size, free_fn fn);$/;"	z	prototype:__fio_memfree	typeref:typename:size_t	file:
size	lib/memcpy.c	/^	size_t size;$/;"	m	struct:memcpy_test	typeref:typename:size_t	file:
size	lib/nowarn_snprintf.h	/^static inline int nowarn_snprintf(char *str, size_t size, const char *format,$/;"	z	function:nowarn_snprintf	typeref:typename:size_t	file:
size	os/os-windows.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	z	function:init_random_seeds	typeref:typename:int	file:
size	os/os.h	/^static inline int init_random_seeds(uint64_t *rand_seeds, int size)$/;"	z	function:init_random_seeds	typeref:typename:int	file:
size	os/windows/posix.c	/^int shmget(key_t key, size_t size, int shmflg)$/;"	z	function:shmget	typeref:typename:size_t	file:
size	os/windows/posix/include/sys/shm.h	/^int shmget(key_t key, size_t size, int shmflg);$/;"	z	prototype:shmget	typeref:typename:size_t	file:
size	oslib/libmtd.c	/^static int check_pattern(const void *buf, uint8_t patt, int size)$/;"	z	function:check_pattern	typeref:typename:int	file:
size	oslib/libmtd.h	/^	long long size;$/;"	m	struct:mtd_dev_info	typeref:typename:long long
size	oslib/libmtd_legacy.c	/^	long long size;$/;"	m	struct:proc_parse_info	typeref:typename:long long	file:
size	oslib/libmtd_xalloc.h	/^static void *xcalloc(size_t nmemb, size_t size)$/;"	z	function:xcalloc	typeref:typename:size_t	file:
size	oslib/libmtd_xalloc.h	/^static void *xmalloc(size_t size)$/;"	z	function:xmalloc	typeref:typename:size_t	file:
size	oslib/libmtd_xalloc.h	/^static void *xrealloc(void *ptr, size_t size)$/;"	z	function:xrealloc	typeref:typename:size_t	file:
size	oslib/libmtd_xalloc.h	/^static void *xzalloc(size_t size)$/;"	z	function:xzalloc	typeref:typename:size_t	file:
size	profiles/tiobench.c	/^	unsigned long long size;$/;"	m	struct:tiobench_options	typeref:typename:unsigned long long	file:
size	profiles/tiobench.c	/^static unsigned long long size;$/;"	v	typeref:typename:unsigned long long	file:
size	server.c	/^					 size_t size, uint64_t *tagptr,$/;"	z	function:fio_net_prep_cmd	typeref:typename:size_t	file:
size	server.c	/^				off_t size, uint64_t tag, uint32_t flags)$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:off_t	file:
size	server.c	/^	off_t size;$/;"	m	struct:sk_entry	typeref:typename:off_t	file:
size	server.c	/^	size_t size;$/;"	m	struct:cmd_reply	typeref:typename:size_t	file:
size	server.c	/^int fio_net_send_cmd(int fd, uint16_t opcode, const void *buf, off_t size,$/;"	z	function:fio_net_send_cmd	typeref:typename:off_t	file:
size	server.c	/^static int fio_net_queue_cmd(uint16_t opcode, void *buf, off_t size,$/;"	z	function:fio_net_queue_cmd	typeref:typename:off_t	file:
size	server.h	/^	uint32_t size;$/;"	m	struct:cmd_sendfile_reply	typeref:typename:uint32_t
size	smalloc.c	/^	size_t size;$/;"	m	struct:block_hdr	typeref:typename:size_t	file:
size	smalloc.c	/^static inline size_t size_to_blocks(size_t size)$/;"	z	function:size_to_blocks	typeref:typename:size_t	file:
size	smalloc.c	/^static size_t size_to_alloc_size(size_t size)$/;"	z	function:size_to_alloc_size	typeref:typename:size_t	file:
size	smalloc.c	/^static void *__smalloc_pool(struct pool *pool, size_t size)$/;"	z	function:__smalloc_pool	typeref:typename:size_t	file:
size	smalloc.c	/^static void *smalloc_pool(struct pool *pool, size_t size)$/;"	z	function:smalloc_pool	typeref:typename:size_t	file:
size	smalloc.c	/^void *scalloc(size_t nmemb, size_t size)$/;"	z	function:scalloc	typeref:typename:size_t	file:
size	smalloc.c	/^void *smalloc(size_t size)$/;"	z	function:smalloc	typeref:typename:size_t	file:
size	smalloc.c	/^void smalloc_debug(size_t size)$/;"	z	function:smalloc_debug	typeref:typename:size_t	file:
size	stat.h	/^extern struct jobs_eta *get_jobs_eta(bool force, size_t *size);$/;"	z	prototype:get_jobs_eta	typeref:typename:size_t *	file:
size	t/axmap.c	/^static int test_multi(uint64_t size, unsigned int bit_off)$/;"	z	function:test_multi	typeref:typename:uint64_t	file:
size	t/axmap.c	/^static int test_next_free(uint64_t size, int seed)$/;"	z	function:test_next_free	typeref:typename:uint64_t	file:
size	t/axmap.c	/^static int test_regular(uint64_t size, int seed)$/;"	z	function:test_regular	typeref:typename:uint64_t	file:
size	t/btrace2fio.c	/^static void inflight_merge(struct inflight *i, int rw, unsigned int size)$/;"	z	function:inflight_merge	typeref:typename:unsigned int	file:
size	t/dedupe.c	/^	uint64_t size;$/;"	m	struct:worker_thread	typeref:typename:uint64_t	file:
size	t/dedupe.c	/^static int get_work(uint64_t *offset, uint64_t *size)$/;"	z	function:get_work	typeref:typename:uint64_t *	file:
size	t/dedupe.c	/^static unsigned int read_blocks(int fd, void *buf, off_t offset, size_t size)$/;"	z	function:read_blocks	typeref:typename:size_t	file:
size	t/fuzz/fuzz_parseini.c	/^int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	z	function:LLVMFuzzerTestOneInput	typeref:typename:size_t	file:
size	t/stest.c	/^	unsigned int size;$/;"	m	struct:elem	typeref:typename:unsigned int	file:
size	t/verify-state.c	/^static void show(struct thread_io_list *s, size_t size)$/;"	z	function:show	typeref:typename:size_t	file:
size	t/verify-state.c	/^static void show_verify_state(void *buf, size_t size)$/;"	z	function:show_verify_state	typeref:typename:size_t	file:
size	thread_options.h	/^	uint64_t size;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
size	thread_options.h	/^	uint64_t size;$/;"	m	struct:zone_split	typeref:typename:uint64_t
size	thread_options.h	/^	unsigned long long size;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
size	verify-state.h	/^	uint64_t size;$/;"	m	struct:verify_state_hdr	typeref:typename:uint64_t
size	verify-state.h	/^static inline void verify_state_gen_name(char *out, size_t size,$/;"	z	function:verify_state_gen_name	typeref:typename:size_t	file:
size_level	lib/prio_tree.h	/^	int			size_level;$/;"	m	struct:prio_tree_iter	typeref:typename:int
size_lock	t/dedupe.c	/^static struct fio_sem *size_lock;$/;"	v	typeref:struct:fio_sem *	file:
size_mmap	engines/librpma_fio.h	/^	size_t size_mmap;$/;"	m	struct:librpma_fio_mem	typeref:typename:size_t
size_nz	thread_options.h	/^	uint32_t size_nz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
size_nz	thread_options.h	/^	unsigned int size_nz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
size_perc	fio.h	/^	uint8_t size_perc;$/;"	m	struct:zone_split_index	typeref:typename:uint8_t
size_perc	thread_options.h	/^	uint8_t size_perc;$/;"	m	struct:zone_split	typeref:typename:uint8_t
size_perc_prev	fio.h	/^	uint8_t size_perc_prev;$/;"	m	struct:zone_split_index	typeref:typename:uint8_t
size_percent	thread_options.h	/^	uint32_t size_percent;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
size_percent	thread_options.h	/^	unsigned int size_percent;$/;"	m	struct:thread_options	typeref:typename:unsigned int
size_prev	fio.h	/^	uint64_t size_prev;$/;"	m	struct:zone_split_index	typeref:typename:uint64_t
size_to_alloc_size	smalloc.c	/^static size_t size_to_alloc_size(size_t size)$/;"	f	typeref:typename:size_t	file:
size_to_blocks	smalloc.c	/^static inline size_t size_to_blocks(size_t size)$/;"	f	typeref:typename:size_t	file:
sk	os/os-windows.h	/^HANDLE windows_handle_connection(HANDLE hjob, int sk);$/;"	z	prototype:windows_handle_connection	typeref:typename:int	file:
sk	os/windows/posix.c	/^HANDLE windows_handle_connection(HANDLE hjob, int sk)$/;"	z	function:windows_handle_connection	typeref:typename:int	file:
sk	server.c	/^int fio_net_send_quit(int sk)$/;"	z	function:fio_net_send_quit	typeref:typename:int	file:
sk	server.c	/^int fio_net_send_simple_cmd(int sk, uint16_t opcode, uint64_t tag,$/;"	z	function:fio_net_send_simple_cmd	typeref:typename:int	file:
sk	server.c	/^static int fio_net_send_simple_stack_cmd(int sk, uint16_t opcode, uint64_t tag)$/;"	z	function:fio_net_send_simple_stack_cmd	typeref:typename:int	file:
sk	server.c	/^static int fio_recv_data(int sk, void *buf, unsigned int len, bool wait)$/;"	z	function:fio_recv_data	typeref:typename:int	file:
sk	server.c	/^static int fio_send_cmd_ext_pdu(int sk, uint16_t opcode, const void *buf,$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:int	file:
sk	server.c	/^static int fio_send_data(int sk, const void *p, unsigned int len)$/;"	z	function:fio_send_data	typeref:typename:int	file:
sk	server.c	/^static int fio_sendv_data(int sk, struct iovec *iov, int count)$/;"	z	function:fio_sendv_data	typeref:typename:int	file:
sk	server.c	/^static int get_my_addr_str(int sk)$/;"	z	function:get_my_addr_str	typeref:typename:int	file:
sk	server.c	/^struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait)$/;"	z	function:fio_net_recv_cmd	typeref:typename:int	file:
sk	server.h	/^	int sk;			\/* socket fd to talk to client *\/$/;"	m	struct:sk_out	typeref:typename:int
sk	server.h	/^extern int fio_net_send_quit(int sk);$/;"	z	prototype:fio_net_send_quit	typeref:typename:int	file:
sk	server.h	/^extern struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait);$/;"	z	prototype:fio_net_recv_cmd	typeref:typename:int	file:
sk_entry	server.c	/^struct sk_entry {$/;"	s	file:
sk_lock	server.c	/^static void sk_lock(struct sk_out *sk_out)$/;"	f	typeref:typename:void	file:
sk_out	backend.c	/^	struct sk_out *sk_out;$/;"	m	struct:fork_data	typeref:struct:sk_out *	file:
sk_out	backend.c	/^int fio_backend(struct sk_out *sk_out)$/;"	z	function:fio_backend	typeref:struct:sk_out *	file:
sk_out	backend.c	/^static void run_threads(struct sk_out *sk_out)$/;"	z	function:run_threads	typeref:struct:sk_out *	file:
sk_out	helper_thread.c	/^	struct sk_out *sk_out;$/;"	m	struct:helper_data	typeref:struct:sk_out *	file:
sk_out	helper_thread.c	/^int helper_thread_create(struct fio_sem *startup_sem, struct sk_out *sk_out)$/;"	z	function:helper_thread_create	typeref:struct:sk_out *	file:
sk_out	iolog.c	/^int iolog_compress_init(struct thread_data *td, struct sk_out *sk_out)$/;"	z	function:iolog_compress_init	typeref:struct:sk_out *	file:
sk_out	rate-submit.c	/^int rate_submit_init(struct thread_data *td, struct sk_out *sk_out)$/;"	z	function:rate_submit_init	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int __sk_out_drop(struct sk_out *sk_out)$/;"	z	function:__sk_out_drop	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_command(struct sk_out *sk_out, struct flist_head *job_list,$/;"	z	function:handle_command	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_connection(struct sk_out *sk_out)$/;"	z	function:handle_connection	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_run_cmd(struct sk_out *sk_out, struct flist_head *job_list,$/;"	z	function:handle_run_cmd	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry)$/;"	z	function:handle_sk_entry	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_sk_entry(struct sk_out *sk_out, struct sk_entry *entry);$/;"	z	prototype:handle_sk_entry	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int handle_xmits(struct sk_out *sk_out)$/;"	z	function:handle_xmits	typeref:struct:sk_out *	file:
sk_out	server.c	/^static int send_vec_entry(struct sk_out *sk_out, struct sk_entry *first)$/;"	z	function:send_vec_entry	typeref:struct:sk_out *	file:
sk_out	server.c	/^static void sk_lock(struct sk_out *sk_out)$/;"	z	function:sk_lock	typeref:struct:sk_out *	file:
sk_out	server.c	/^static void sk_out_free(struct sk_out *sk_out)$/;"	z	function:sk_out_free	typeref:struct:sk_out *	file:
sk_out	server.c	/^static void sk_unlock(struct sk_out *sk_out)$/;"	z	function:sk_unlock	typeref:struct:sk_out *	file:
sk_out	server.c	/^void sk_out_assign(struct sk_out *sk_out)$/;"	z	function:sk_out_assign	typeref:struct:sk_out *	file:
sk_out	server.h	/^struct sk_out {$/;"	s
sk_out	workqueue.c	/^			struct sk_out *sk_out)$/;"	z	function:start_worker	typeref:struct:sk_out *	file:
sk_out	workqueue.c	/^		   struct sk_out *sk_out)$/;"	z	function:workqueue_init	typeref:struct:sk_out *	file:
sk_out	workqueue.h	/^	struct sk_out *sk_out;$/;"	m	struct:submit_worker	typeref:struct:sk_out *
sk_out	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	z	prototype:workqueue_init	typeref:struct:sk_out *	file:
sk_out_assign	fio.h	/^void sk_out_assign(struct sk_out *);$/;"	p	typeref:typename:void
sk_out_assign	server.c	/^void sk_out_assign(struct sk_out *sk_out)$/;"	f	typeref:typename:void
sk_out_drop	fio.h	/^void sk_out_drop(void);$/;"	p	typeref:typename:void
sk_out_drop	server.c	/^void sk_out_drop(void)$/;"	f	typeref:typename:void
sk_out_free	server.c	/^static void sk_out_free(struct sk_out *sk_out)$/;"	f	typeref:typename:void	file:
sk_out_key	server.c	/^static pthread_key_t sk_out_key;$/;"	v	typeref:typename:pthread_key_t	file:
sk_unlock	server.c	/^static void sk_unlock(struct sk_out *sk_out)$/;"	f	typeref:typename:void	file:
skip_bad	engines/mtd.c	/^	unsigned int skip_bad;$/;"	m	struct:fio_mtd_options	typeref:typename:unsigned int	file:
skip_data	graph.c	/^skip_data:$/;"	L	function:line_graph_draw	file:
skip_flags	filesetup.c	/^skip_flags:$/;"	L	function:generic_open_file	file:
skip_newline	client.h	/^	bool skip_newline;$/;"	m	struct:fio_client	typeref:typename:bool
skip_this_section	init.c	/^static int skip_this_section(const char *name)$/;"	f	typeref:typename:int	file:
slat_log	fio.h	/^	struct io_log *slat_log;$/;"	m	struct:thread_data	typeref:struct:io_log *
slat_percentiles	stat.h	/^	uint32_t slat_percentiles;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
slat_percentiles	thread_options.h	/^	uint32_t slat_percentiles;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
slat_percentiles	thread_options.h	/^	unsigned int slat_percentiles;$/;"	m	struct:thread_options	typeref:typename:unsigned int
slat_stat	stat.h	/^	struct io_stat slat_stat[DDIR_RWDIR_CNT]; \/* submission latency *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat[]
slavecount	diskutil.h	/^	uint32_t slavecount;$/;"	m	struct:disk_util_agg	typeref:typename:uint32_t
slavelist	diskutil.h	/^	struct flist_head slavelist;$/;"	m	struct:disk_util	typeref:struct:flist_head
slaves	diskutil.h	/^	struct flist_head slaves;$/;"	m	struct:disk_util	typeref:struct:flist_head
sleep_accuracy_ms	helper_thread.c	/^static int sleep_accuracy_ms;$/;"	v	typeref:typename:int	file:
slice	profiles/act.c	/^static int show_slice(struct act_slice *slice, unsigned int slice_num)$/;"	z	function:show_slice	typeref:struct:act_slice *	file:
slice_num	profiles/act.c	/^static int show_slice(struct act_slice *slice, unsigned int slice_num)$/;"	z	function:show_slice	typeref:typename:unsigned int	file:
slices	profiles/act.c	/^	struct act_slice *slices;$/;"	m	struct:act_prof_data	typeref:struct:act_slice *	file:
slices	profiles/act.c	/^	struct act_slice *slices;$/;"	m	struct:act_run_data	typeref:struct:act_slice *	file:
slist	engines/http.c	/^static void _add_aws_auth_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_aws_auth_header	typeref:struct:curl_slist *	file:
slist	engines/http.c	/^static void _add_swift_header(CURL *curl, struct curl_slist *slist, struct http_options *o,$/;"	z	function:_add_swift_header	typeref:struct:curl_slist *	file:
slope	steadystate.h	/^	double slope;$/;"	m	struct:steadystate_data	typeref:typename:double
small_content_scramble	io_u.c	/^static void small_content_scramble(struct io_u *io_u)$/;"	f	typeref:typename:void	file:
smalloc	smalloc.c	/^void *smalloc(size_t size)$/;"	f	typeref:typename:void *
smalloc	smalloc.h	/^extern void *smalloc(size_t);$/;"	p	typeref:typename:void *
smalloc_debug	smalloc.c	/^void smalloc_debug(size_t size)$/;"	f	typeref:typename:void
smalloc_debug	smalloc.h	/^extern void smalloc_debug(size_t);$/;"	p	typeref:typename:void
smalloc_pool	smalloc.c	/^static void *smalloc_pool(struct pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
smalloc_pool_size	smalloc.c	/^unsigned int smalloc_pool_size = INITIAL_SIZE;$/;"	v	typeref:typename:unsigned int
smalloc_print_bitmap	smalloc.c	/^static void smalloc_print_bitmap(struct pool *pool)$/;"	f	typeref:typename:void	file:
smalloc_strdup	smalloc.c	/^char *smalloc_strdup(const char *str)$/;"	f	typeref:typename:char *
smalloc_strdup	smalloc.h	/^extern char *smalloc_strdup(const char *);$/;"	p	typeref:typename:char *
smatch	oslib/getopt_long.c	/^					 const char *opt_name, int smatch)$/;"	z	function:option_matches	typeref:typename:int	file:
sock_init	helper_thread.c	/^static void sock_init(void)$/;"	f	typeref:typename:void	file:
sockaddr_un	os/windows/posix/include/sys/un.h	/^ struct sockaddr_un$/;"	s
socklen_t	os/os.h	/^typedef unsigned int socklen_t;$/;"	t	typeref:typename:unsigned int
socklen_t	os/windows/posix/include/arpa/inet.h	/^typedef int socklen_t;$/;"	t	typeref:typename:int
softrandommap	thread_options.h	/^	uint32_t softrandommap;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
softrandommap	thread_options.h	/^	unsigned int softrandommap;$/;"	m	struct:thread_options	typeref:typename:unsigned int
solaris_rand_seed	os/os-solaris.h	/^struct solaris_rand_seed {$/;"	s
solarisaio_data	engines/solarisaio.c	/^struct solarisaio_data {$/;"	s	file:
sort_events	engines/rbd.c	/^	struct io_u **sort_events;$/;"	m	struct:rbd_data	typeref:struct:io_u **	file:
sort_options	parse.c	/^void sort_options(char **opts, const struct fio_option *options, int num_opts)$/;"	f	typeref:typename:void
sort_options	parse.h	/^extern void sort_options(char **, const struct fio_option *, int);$/;"	p	typeref:typename:void
source_suffix	doc/conf.py	/^source_suffix = '.rst'$/;"	v
specific_options	tools/fiograph/fiograph.conf	/^specific_options=clustername  pool  clientname  busy_poll  touch_objects$/;"	k	section:ioengine_rados
specific_options	tools/fiograph/fiograph.conf	/^specific_options=clustername  rbdname  pool  clientname  busy_poll$/;"	k	section:ioengine_rbd
specific_options	tools/fiograph/fiograph.conf	/^specific_options=cpuload cpumode cpuchunks exit_on_io_done$/;"	k	section:ioengine_cpuio
specific_options	tools/fiograph/fiograph.conf	/^specific_options=donorname  inplace$/;"	k	section:ioengine_e4defrag
specific_options	tools/fiograph/fiograph.conf	/^specific_options=gpu_dev_ids  cuda_io$/;"	k	section:ioengine_libcufile
specific_options	tools/fiograph/fiograph.conf	/^specific_options=hipri  cmdprio_percentage  cmdprio_class  cmdprio  cmdprio_bssplit  fixedbufs  /;"	k	section:ioengine_io_uring
specific_options	tools/fiograph/fiograph.conf	/^specific_options=hipri  hipri_percentage  uncached  nowait  sync  psync  vsync  pvsync$/;"	k	section:ioengine_pvsync2
specific_options	tools/fiograph/fiograph.conf	/^specific_options=hipri  readfua  writefua  sg_write_mode  sg$/;"	k	section:ioengine_sg
specific_options	tools/fiograph/fiograph.conf	/^specific_options=hostname  bindname  port  verb$/;"	k	section:ioengine_rdma
specific_options	tools/fiograph/fiograph.conf	/^specific_options=hostname  port  protocol  nodelay  listen  pingpong  interface  ttl  window_siz/;"	k	section:ioengine_net
specific_options	tools/fiograph/fiograph.conf	/^specific_options=https  http_host  http_user  http_pass  http_s3_key  http_s3_keyid  http_swift_/;"	k	section:ioengine_http
specific_options	tools/fiograph/fiograph.conf	/^specific_options=ime_psync  ime_psyncv$/;"	k	section:ioengine_ime_aio
specific_options	tools/fiograph/fiograph.conf	/^specific_options=initiator$/;"	k	section:ioengine_libiscsi
specific_options	tools/fiograph/fiograph.conf	/^specific_options=librpma_apm_client$/;"	k	section:ioengine_librpma_apm_server
specific_options	tools/fiograph/fiograph.conf	/^specific_options=librpma_gpspm_client$/;"	k	section:ioengine_librpma_gpspm_server
specific_options	tools/fiograph/fiograph.conf	/^specific_options=namenode  hostname  port  hdfsdirectory  chunk_size  single_instance  hdfs_use_/;"	k	section:ioengine_libhdfs
specific_options	tools/fiograph/fiograph.conf	/^specific_options=nfs_url$/;"	k	section:ioengine_nfs
specific_options	tools/fiograph/fiograph.conf	/^specific_options=pool  cont  chunk_size  object_class  svcl$/;"	k	section:ioengine_dfs
specific_options	tools/fiograph/fiograph.conf	/^specific_options=program arguments grace_time std_redirect$/;"	k	section:ioengine_exec
specific_options	tools/fiograph/fiograph.conf	/^specific_options=serverip  port  direct_write_to_pmem$/;"	k	section:ioengine_busy_wait_polling
specific_options	tools/fiograph/fiograph.conf	/^specific_options=skip_bad$/;"	k	section:ioengine_mtd
specific_options	tools/fiograph/fiograph.conf	/^specific_options=stat_type$/;"	k	section:ioengine_filestat
specific_options	tools/fiograph/fiograph.conf	/^specific_options=thp$/;"	k	section:ioengine_mmap
specific_options	tools/fiograph/fiograph.conf	/^specific_options=uri$/;"	k	section:ioengine_nbd
specific_options	tools/fiograph/fiograph.conf	/^specific_options=userspace_reap  cmdprio_percentage  cmdprio_class  cmdprio  cmdprio_bssplit  no/;"	k	section:ioengine_libaio
specific_options	tools/fiograph/fiograph.conf	/^specific_options=volume  brick$/;"	k	section:ioengine_single-instance
specific_options_color	tools/fiograph/fiograph.conf	/^specific_options_color=darkblue$/;"	k	section:ioengine
spent	stat.c	/^		   unsigned int bytes, unsigned long long spent)$/;"	z	function:add_bw_sample	typeref:typename:unsigned long long	file:
sphinx_ok	doc/make.bat	/^:sphinx_ok$/;"	l
sphinx_python	doc/make.bat	/^:sphinx_python$/;"	l
spin	goptions.c	/^	GtkWidget *spin;$/;"	m	struct:gopt_int	typeref:typename:GtkWidget *	file:
spin	goptions.c	/^	GtkWidget *spin;$/;"	m	struct:gopt_str_val	typeref:typename:GtkWidget *	file:
spin	goptions.c	/^static void gopt_int_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_int_changed	typeref:typename:GtkSpinButton *	file:
spin	goptions.c	/^static void gopt_str_val_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_str_val_changed	typeref:typename:GtkSpinButton *	file:
spin	goptions.c	/^static void gopt_str_val_spin_wrapped(GtkSpinButton *spin, gpointer data)$/;"	z	function:gopt_str_val_spin_wrapped	typeref:typename:GtkSpinButton *	file:
spin	goptions.c	/^static void range_value_changed(GtkSpinButton *spin, gpointer data)$/;"	z	function:range_value_changed	typeref:typename:GtkSpinButton *	file:
spin	lib/lfsr.c	/^	      unsigned int spin)$/;"	z	function:lfsr_init	typeref:typename:unsigned int	file:
spin	lib/lfsr.c	/^static inline void __lfsr_next(struct fio_lfsr *fl, unsigned int spin)$/;"	z	function:__lfsr_next	typeref:typename:unsigned int	file:
spin	lib/lfsr.c	/^static int prepare_spin(struct fio_lfsr *fl, unsigned int spin)$/;"	z	function:prepare_spin	typeref:typename:unsigned int	file:
spin	lib/lfsr.h	/^	      uint64_t seed, unsigned int spin);$/;"	z	prototype:lfsr_init	typeref:typename:unsigned int	file:
spin	lib/lfsr.h	/^	unsigned int spin;$/;"	m	struct:fio_lfsr	typeref:typename:unsigned int
spins	goptions.c	/^	GtkWidget *spins[GOPT_RANGE_SPIN];$/;"	m	struct:gopt_range	typeref:typename:GtkWidget * []	file:
splice_fd_in	os/linux/io_uring.h	/^		__s32	splice_fd_in;$/;"	m	union:io_uring_sqe::__anon2bbba927050a	typeref:typename:__s32
splice_flags	os/linux/io_uring.h	/^		__u32		splice_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
splice_in	engines/net.c	/^static int splice_in(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
splice_io_u	engines/net.c	/^static int splice_io_u(int fdin, int fdout, unsigned int len)$/;"	f	typeref:typename:int	file:
splice_off_in	os/linux/io_uring.h	/^		__u64	splice_off_in;$/;"	m	union:io_uring_sqe::__anon2bbba927020a	typeref:typename:__u64
splice_out	engines/net.c	/^static int splice_out(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
spliceio_data	engines/splice.c	/^struct spliceio_data {$/;"	s	file:
split	options.c	/^int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	z	function:split_parse_ddir	typeref:struct:split *	file:
split	thread_options.h	/^extern int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	z	prototype:split_parse_ddir	typeref:struct:split *	file:
split	thread_options.h	/^struct split {$/;"	s
split_parse_ddir	options.c	/^int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	f	typeref:typename:int
split_parse_ddir	thread_options.h	/^extern int split_parse_ddir(struct thread_options *o, struct split *split,$/;"	p	typeref:typename:int
split_parse_distr	options.c	/^static bool split_parse_distr(const char *str, double *val, double *center)$/;"	f	typeref:typename:bool	file:
split_parse_fn	thread_options.h	/^typedef int (split_parse_fn)(struct thread_options *, void *,$/;"	t	typeref:typename:int ()(struct thread_options *,void *,enum fio_ddir,char *,bool)
split_parse_prio_ddir	options.c	/^int split_parse_prio_ddir(struct thread_options *o, struct split_prio **entries,$/;"	f	typeref:typename:int
split_parse_prio_ddir	thread_options.h	/^extern int split_parse_prio_ddir(struct thread_options *o,$/;"	p	typeref:typename:int
split_prio	thread_options.h	/^struct split_prio {$/;"	s
sq_entries	os/linux/io_uring.h	/^	__u32 sq_entries;$/;"	m	struct:io_uring_params	typeref:typename:__u32
sq_off	os/linux/io_uring.h	/^	struct io_sqring_offsets sq_off;$/;"	m	struct:io_uring_params	typeref:struct:io_sqring_offsets
sq_ring	engines/io_uring.c	/^	struct io_sq_ring sq_ring;$/;"	m	struct:ioring_data	typeref:struct:io_sq_ring	file:
sq_ring	t/io_uring.c	/^	struct io_sq_ring sq_ring;$/;"	m	struct:submitter	typeref:struct:io_sq_ring	file:
sq_ring_mask	engines/io_uring.c	/^	unsigned sq_ring_mask;$/;"	m	struct:ioring_data	typeref:typename:unsigned	file:
sq_ring_mask	t/io_uring.c	/^static unsigned sq_ring_mask, cq_ring_mask;$/;"	v	typeref:typename:unsigned	file:
sq_thread_cpu	os/linux/io_uring.h	/^	__u32 sq_thread_cpu;$/;"	m	struct:io_uring_params	typeref:typename:__u32
sq_thread_cpu	t/io_uring.c	/^static int sq_thread_cpu = -1;	\/* pin above thread to this CPU *\/$/;"	v	typeref:typename:int	file:
sq_thread_idle	os/linux/io_uring.h	/^	__u32 sq_thread_idle;$/;"	m	struct:io_uring_params	typeref:typename:__u32
sq_thread_poll	t/io_uring.c	/^static int sq_thread_poll = 0;	\/* use kernel submission\/poller thread *\/$/;"	v	typeref:typename:int	file:
sq_wr	engines/rdma.c	/^	struct ibv_send_wr sq_wr;$/;"	m	struct:rdma_io_u_data	typeref:struct:ibv_send_wr	file:
sq_wr	engines/rdma.c	/^	struct ibv_send_wr sq_wr;$/;"	m	struct:rdmaio_data	typeref:struct:ibv_send_wr	file:
sqe_flags	os/linux/io_uring.h	/^		__u8 sqe_flags;   \/* IORING_RESTRICTION_SQE_FLAGS_* *\/$/;"	m	union:io_uring_restriction::__anon2bbba9270b0a	typeref:typename:__u8
sqe_op	os/linux/io_uring.h	/^		__u8 sqe_op;      \/* IORING_RESTRICTION_SQE_OP *\/$/;"	m	union:io_uring_restriction::__anon2bbba9270b0a	typeref:typename:__u8
sqes	engines/io_uring.c	/^	struct io_uring_sqe *sqes;$/;"	m	struct:ioring_data	typeref:struct:io_uring_sqe *	file:
sqes	t/io_uring.c	/^	struct io_uring_sqe *sqes;$/;"	m	struct:submitter	typeref:struct:io_uring_sqe *	file:
sqpoll_cpu	engines/io_uring.c	/^	unsigned int sqpoll_cpu;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
sqpoll_set	engines/io_uring.c	/^	unsigned int sqpoll_set;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
sqpoll_thread	engines/io_uring.c	/^	unsigned int sqpoll_thread;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
sqpoll_thread	engines/xnvme.c	/^	unsigned int sqpoll_thread;$/;"	m	struct:xnvme_fioe_options	typeref:typename:unsigned int	file:
src	cconv.c	/^static void __string_to_net(uint8_t *dst, const char *src, size_t dst_size)$/;"	z	function:__string_to_net	typeref:typename:const char *	file:
src	cconv.c	/^static void string_to_cpu(char **dst, const uint8_t *src)$/;"	z	function:string_to_cpu	typeref:typename:const uint8_t *	file:
src	client.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:convert_gs	typeref:struct:group_run_stats *	file:
src	client.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	z	function:convert_io_stat	typeref:struct:io_stat *	file:
src	client.c	/^static void convert_ts(struct thread_stat *dst, struct thread_stat *src)$/;"	z	function:convert_ts	typeref:struct:thread_stat *	file:
src	init.c	/^static void copy_opt_list(struct thread_data *dst, struct thread_data *src)$/;"	z	function:copy_opt_list	typeref:struct:thread_data *	file:
src	lib/memcpy.c	/^	void *src;$/;"	m	struct:memcpy_test	typeref:typename:void *	file:
src	lib/memcpy.c	/^static void simple_memcpy(void *dst, void const *src, size_t len)$/;"	z	function:simple_memcpy	typeref:typename:void const *	file:
src	lib/rand.h	/^				  struct taus258_state *src)$/;"	z	function:__frand64_copy	typeref:struct:taus258_state *	file:
src	lib/rand.h	/^				  struct taus88_state *src)$/;"	z	function:__frand32_copy	typeref:struct:taus88_state *	file:
src	lib/rand.h	/^static inline void frand_copy(struct frand_state *dst, struct frand_state *src)$/;"	z	function:frand_copy	typeref:struct:frand_state *	file:
src	oslib/strlcat.c	/^strlcat(char *dst, const char *src, size_t dsize)$/;"	z	function:strlcat	typeref:typename:const char *	file:
src	oslib/strlcat.h	/^size_t strlcat(char *dst, const char *src, size_t dsize);$/;"	z	prototype:strlcat	typeref:typename:const char *	file:
src	rate-submit.c	/^static void sum_ddir(struct thread_data *dst, struct thread_data *src,$/;"	z	function:sum_ddir	typeref:struct:thread_data *	file:
src	rate-submit.c	/^static void sum_val(uint64_t *dst, uint64_t *src)$/;"	z	function:sum_val	typeref:typename:uint64_t *	file:
src	server.c	/^static void convert_agg(struct disk_util_agg *dst, struct disk_util_agg *src)$/;"	z	function:convert_agg	typeref:struct:disk_util_agg *	file:
src	server.c	/^static void convert_dus(struct disk_util_stat *dst, struct disk_util_stat *src)$/;"	z	function:convert_dus	typeref:struct:disk_util_stat *	file:
src	server.c	/^static void convert_gs(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:convert_gs	typeref:struct:group_run_stats *	file:
src	server.c	/^static void convert_io_stat(struct io_stat *dst, struct io_stat *src)$/;"	z	function:convert_io_stat	typeref:struct:io_stat *	file:
src	stat.c	/^					       struct thread_stat *src,$/;"	z	function:sum_clat_prio_stats_src_single_prio	typeref:struct:thread_stat *	file:
src	stat.c	/^					      struct thread_stat *src,$/;"	z	function:sum_clat_prio_stats_src_multi_prio	typeref:struct:thread_stat *	file:
src	stat.c	/^			  uint64_t *src, int nr)$/;"	z	function:stat_calc_lat	typeref:typename:uint64_t *	file:
src	stat.c	/^static int clat_prio_stats_copy(struct thread_stat *dst, struct thread_stat *src,$/;"	z	function:clat_prio_stats_copy	typeref:struct:thread_stat *	file:
src	stat.c	/^static int sum_clat_prio_stats(struct thread_stat *dst, struct thread_stat *src,$/;"	z	function:sum_clat_prio_stats	typeref:struct:thread_stat *	file:
src	stat.c	/^static void __sum_stat(struct io_stat *dst, struct io_stat *src, bool first)$/;"	z	function:__sum_stat	typeref:struct:io_stat *	file:
src	stat.c	/^static void sum_stat(struct io_stat *dst, struct io_stat *src, bool pure_sum)$/;"	z	function:sum_stat	typeref:struct:io_stat *	file:
src	stat.c	/^void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src)$/;"	z	function:sum_group_stats	typeref:struct:group_run_stats *	file:
src	stat.c	/^void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src)$/;"	z	function:sum_thread_stats	typeref:struct:thread_stat *	file:
src	stat.h	/^extern void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src);$/;"	z	prototype:sum_group_stats	typeref:struct:group_run_stats *	file:
src	stat.h	/^extern void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src);$/;"	z	prototype:sum_thread_stats	typeref:struct:thread_stat *	file:
src_ddir	stat.c	/^					       enum fio_ddir src_ddir)$/;"	z	function:sum_clat_prio_stats_src_single_prio	typeref:enum:fio_ddir	file:
src_ddir	stat.c	/^					      enum fio_ddir src_ddir)$/;"	z	function:sum_clat_prio_stats_src_multi_prio	typeref:enum:fio_ddir	file:
src_ddir	stat.c	/^				enum fio_ddir dst_ddir, enum fio_ddir src_ddir)$/;"	z	function:clat_prio_stats_copy	typeref:enum:fio_ddir	file:
src_ddir	stat.c	/^			       enum fio_ddir dst_ddir, enum fio_ddir src_ddir)$/;"	z	function:sum_clat_prio_stats	typeref:enum:fio_ddir	file:
sreq	oslib/libmtd.c	/^				  const char *sreq)$/;"	z	function:mtd_ioctl_error	typeref:typename:const char *	file:
sreq	oslib/libmtd.c	/^		     const char *sreq)$/;"	z	function:mtd_xlock	typeref:typename:const char *	file:
ss	fio.h	/^	struct steadystate_data ss;$/;"	m	struct:thread_data	typeref:struct:steadystate_data
ss	t/steadystate_tests.py	/^               ss = 'iops'$/;"	v
ss_bw_data	stat.h	/^		uint64_t *ss_bw_data;$/;"	m	union:thread_stat::__anon1c8a8417030a	typeref:typename:uint64_t *
ss_bw_data_offset	stat.h	/^		uint64_t ss_bw_data_offset;$/;"	m	union:thread_stat::__anon1c8a8417030a	typeref:typename:uint64_t
ss_criterion	stat.h	/^	fio_fp64_t ss_criterion;$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t
ss_deviation	stat.h	/^	fio_fp64_t ss_deviation;$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t
ss_dur	stat.h	/^	uint64_t ss_dur;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
ss_dur	thread_options.h	/^	uint64_t ss_dur;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
ss_dur	thread_options.h	/^	unsigned long long ss_dur;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
ss_head	stat.h	/^	uint32_t ss_head;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
ss_iops_data	stat.h	/^		uint64_t *ss_iops_data;$/;"	m	union:thread_stat::__anon1c8a8417020a	typeref:typename:uint64_t *
ss_iops_data_offset	stat.h	/^		uint64_t ss_iops_data_offset;$/;"	m	union:thread_stat::__anon1c8a8417020a	typeref:typename:uint64_t
ss_limit	stat.h	/^	fio_fp64_t ss_limit;$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t
ss_limit	thread_options.h	/^	fio_fp64_t ss_limit;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
ss_limit	thread_options.h	/^	fio_fp64_t ss_limit;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
ss_ramp_time	thread_options.h	/^	uint64_t ss_ramp_time;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
ss_ramp_time	thread_options.h	/^	unsigned long long ss_ramp_time;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
ss_slope	stat.h	/^	fio_fp64_t ss_slope;$/;"	m	struct:thread_stat	typeref:typename:fio_fp64_t
ss_state	stat.h	/^	uint32_t ss_state;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
ss_state	thread_options.h	/^	uint32_t ss_state;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
ss_state	thread_options.h	/^	unsigned int ss_state;$/;"	m	struct:thread_options	typeref:typename:unsigned int
ssw	engines/xnvme.c	/^	uint32_t ssw;$/;"	m	struct:xnvme_fioe_fwrap	typeref:typename:uint32_t	file:
st	crc/sha3.c	/^static void keccakf(uint64_t st[25])$/;"	z	function:keccakf	typeref:typename:uint64_t[25]	file:
st	crc/sha3.h	/^	uint64_t	st[25];$/;"	m	struct:fio_sha3_ctx	typeref:typename:uint64_t[25]
st	engines/libcufile.c	/^static const char *fio_libcufile_get_cuda_error(CUfileError_t st)$/;"	z	function:fio_libcufile_get_cuda_error	typeref:typename:CUfileError_t	file:
st	engines/sg.c	/^static void fio_sgio_unmap_setup(struct sg_io_hdr *hdr, struct sgio_trim *st)$/;"	z	function:fio_sgio_unmap_setup	typeref:struct:sgio_trim *	file:
start	client.h	/^	client_cmd_op		*start;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
start	engines/cmdprio.c	/^				   int implicit_cmdprio, int start, int end)$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:typename:int	file:
start	engines/io_uring.c	/^static void fio_ioring_queued(struct thread_data *td, int start, int nr)$/;"	z	function:fio_ioring_queued	typeref:typename:int	file:
start	engines/posixaio.c	/^static unsigned long long ts_utime_since_now(const struct timespec *start)$/;"	z	function:ts_utime_since_now	typeref:typename:const struct timespec *	file:
start	fio.h	/^	struct timespec start;	\/* start of this loop *\/$/;"	m	struct:thread_data	typeref:struct:timespec
start	lib/prio_tree.h	/^	uint64_t		start;$/;"	m	struct:prio_tree_node	typeref:typename:uint64_t
start	lib/rand.h	/^static inline uint64_t rand_between(struct frand_state *state, uint64_t start,$/;"	z	function:rand_between	typeref:typename:uint64_t	file:
start	os/os-android.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
start	os/os-dragonfly.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
start	os/os-freebsd.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
start	os/os-linux.h	/^static inline int os_trim(struct fio_file *f, unsigned long long start,$/;"	z	function:os_trim	typeref:typename:unsigned long long	file:
start	oslib/libmtd.c	/^		  uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_write_oob	typeref:typename:uint64_t	file:
start	oslib/libmtd.c	/^		 uint64_t start, uint64_t length, void *data)$/;"	z	function:mtd_read_oob	typeref:typename:uint64_t	file:
start	oslib/libmtd.c	/^	      uint64_t start, uint64_t length, void *data, unsigned int cmd64,$/;"	z	function:do_oob_op	typeref:typename:uint64_t	file:
start	oslib/libmtd.h	/^		  uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_write_oob	typeref:typename:uint64_t	file:
start	oslib/libmtd.h	/^		 uint64_t start, uint64_t length, void *data);$/;"	z	prototype:mtd_read_oob	typeref:typename:uint64_t	file:
start	oslib/linux-blkzoned.c	/^	__u64	start;          \/* Zone start sector *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u64	file:
start	smalloc.c	/^static int find_next_zero(int word, int start)$/;"	z	function:find_next_zero	typeref:typename:int	file:
start	t/axmap.c	/^	unsigned int start;$/;"	m	struct:overlap_test	typeref:typename:unsigned int	file:
start	t/axmap.c	/^static int check_next_free(struct axmap *map, uint64_t start, uint64_t expected)$/;"	z	function:check_next_free	typeref:typename:uint64_t	file:
start	t/time-test.c	/^			 unsigned long long start, unsigned long len)$/;"	z	function:discontinuity	typeref:typename:unsigned long long	file:
start	workqueue.c	/^						 unsigned int start,$/;"	z	function:__get_submit_worker	typeref:typename:unsigned int	file:
start	zbd.h	/^	uint64_t		start;$/;"	m	struct:fio_zone_info	typeref:typename:uint64_t
start	zbd_types.h	/^	uint64_t		start;$/;"	m	struct:zbd_zone	typeref:typename:uint64_t
start_count	engines/windowsaio.c	/^static BOOL timeout_expired(DWORD start_count, DWORD end_count)$/;"	z	function:timeout_expired	typeref:typename:DWORD	file:
start_delay	t/btrace2fio.c	/^	uint64_t start_delay;$/;"	m	struct:btrace_out	typeref:typename:uint64_t	file:
start_delay	thread_options.h	/^	uint64_t start_delay;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
start_delay	thread_options.h	/^	unsigned long long start_delay;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
start_delay_high	thread_options.h	/^	uint64_t start_delay_high;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
start_delay_high	thread_options.h	/^	unsigned long long start_delay_high;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
start_delay_orig	thread_options.h	/^	unsigned long long start_delay_orig;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
start_job_clicked	gfio.c	/^static void start_job_clicked(GtkWidget *widget, gpointer data);$/;"	p	typeref:typename:void	file:
start_job_clicked	gfio.c	/^static void start_job_clicked(__attribute__((unused)) GtkWidget *widget,$/;"	f	typeref:typename:void	file:
start_job_entry	gfio.c	/^static void start_job_entry(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
start_lba	blktrace_api.h	/^	__u64 start_lba;$/;"	m	struct:blk_user_trace_setup	typeref:typename:__u64
start_lock	idletime.h	/^	pthread_mutex_t start_lock;$/;"	m	struct:idle_prof_thread	typeref:typename:pthread_mutex_t
start_offset	thread_options.h	/^	uint64_t start_offset;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
start_offset	thread_options.h	/^	unsigned long long start_offset;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
start_offset_align	thread_options.h	/^	uint64_t start_offset_align;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
start_offset_align	thread_options.h	/^	unsigned long long start_offset_align;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
start_offset_nz	thread_options.h	/^	uint32_t start_offset_nz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
start_offset_nz	thread_options.h	/^	unsigned int start_offset_nz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
start_offset_percent	thread_options.h	/^	uint32_t start_offset_percent;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
start_offset_percent	thread_options.h	/^	unsigned int start_offset_percent;$/;"	m	struct:thread_options	typeref:typename:unsigned int
start_sensitive	gfio.c	/^	const int start_sensitive;$/;"	m	struct:button_spec	typeref:typename:const int	file:
start_time	io_u.h	/^	struct timespec start_time;$/;"	m	struct:io_u	typeref:struct:timespec
start_worker	workqueue.c	/^static int start_worker(struct workqueue *wq, unsigned int index,$/;"	f	typeref:typename:int	file:
started	t/read-to-pipe-async.c	/^	int started;$/;"	m	struct:reader_thread	typeref:typename:int	file:
startup_sem	backend.c	/^static struct fio_sem *startup_sem;$/;"	v	typeref:struct:fio_sem *	file:
startup_sem	helper_thread.c	/^	struct fio_sem *startup_sem;$/;"	m	struct:helper_data	typeref:struct:fio_sem *	file:
startup_sem	helper_thread.c	/^int helper_thread_create(struct fio_sem *startup_sem, struct sk_out *sk_out)$/;"	z	function:helper_thread_create	typeref:struct:fio_sem *	file:
stat	stat.c	/^			 struct io_stat *stat, struct io_log *log,$/;"	z	function:__add_samples	typeref:struct:io_stat *	file:
stat_calc_dist	stat.c	/^void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist)$/;"	f	typeref:typename:void
stat_calc_dist	stat.h	/^extern void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist);$/;"	p	typeref:typename:void
stat_calc_lat	stat.c	/^static void stat_calc_lat(struct thread_stat *ts, double *dst,$/;"	f	typeref:typename:void	file:
stat_calc_lat_m	stat.c	/^void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat)$/;"	f	typeref:typename:void
stat_calc_lat_m	stat.h	/^extern void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat);$/;"	p	typeref:typename:void
stat_calc_lat_n	stat.c	/^void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat)$/;"	f	typeref:typename:void
stat_calc_lat_n	stat.h	/^extern void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat);$/;"	p	typeref:typename:void
stat_calc_lat_nu	stat.c	/^static void stat_calc_lat_nu(struct thread_stat *ts, double *io_u_lat_u)$/;"	f	typeref:typename:void	file:
stat_calc_lat_u	stat.c	/^void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat)$/;"	f	typeref:typename:void
stat_calc_lat_u	stat.h	/^extern void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat);$/;"	p	typeref:typename:void
stat_ddir	engines/filecreate.c	/^	enum fio_ddir stat_ddir;$/;"	m	struct:fc_data	typeref:enum:fio_ddir	file:
stat_ddir	engines/filedelete.c	/^	enum fio_ddir stat_ddir;$/;"	m	struct:fc_data	typeref:enum:fio_ddir	file:
stat_ddir	engines/filestat.c	/^	enum fio_ddir stat_ddir;$/;"	m	struct:fc_data	typeref:enum:fio_ddir	file:
stat_exit	stat.c	/^void stat_exit(void)$/;"	f	typeref:typename:void
stat_exit	stat.h	/^extern void stat_exit(void);$/;"	p	typeref:typename:void
stat_file	engines/filestat.c	/^static int stat_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
stat_init	stat.c	/^void stat_init(void)$/;"	f	typeref:typename:void
stat_init	stat.h	/^extern void stat_init(void);$/;"	p	typeref:typename:void
stat_invalidate	engines/filestat.c	/^static int stat_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
stat_io_blocks	fio.h	/^	uint64_t stat_io_blocks[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
stat_io_bytes	fio.h	/^	uint64_t stat_io_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
stat_io_bytes	stat.c	/^			 uint64_t *this_io_bytes, uint64_t *stat_io_bytes,$/;"	z	function:__add_samples	typeref:typename:uint64_t *	file:
stat_loc	os/windows/posix.c	/^pid_t waitpid(pid_t pid, int *stat_loc, int options)$/;"	z	function:waitpid	typeref:typename:int *	file:
stat_loc	os/windows/posix/include/sys/wait.h	/^pid_t waitpid(pid_t, int *stat_loc, int options);$/;"	z	prototype:waitpid	typeref:typename:int *	file:
stat_lock	workqueue.h	/^	pthread_mutex_t stat_lock;$/;"	m	struct:workqueue	typeref:typename:pthread_mutex_t
stat_number	backend.c	/^unsigned int stat_number = 0;$/;"	v	typeref:typename:unsigned int
stat_outputs	server.h	/^	uint32_t stat_outputs;$/;"	m	struct:cmd_start_pdu	typeref:typename:uint32_t
stat_sem	stat.c	/^struct fio_sem *stat_sem;$/;"	v	typeref:struct:fio_sem *
stat_type	engines/filestat.c	/^	unsigned int stat_type;$/;"	m	struct:filestat_options	typeref:typename:unsigned int	file:
state	client.h	/^	int state;$/;"	m	struct:fio_client	typeref:typename:int
state	crc/sha256.c	/^static void sha256_transform(uint32_t *state, const uint8_t *input)$/;"	z	function:sha256_transform	typeref:typename:uint32_t *	file:
state	crc/sha256.h	/^	uint32_t state[SHA256_DIGEST_SIZE \/ 4];$/;"	m	struct:fio_sha256_ctx	typeref:typename:uint32_t[]
state	crc/sha512.c	/^static void sha512_transform(uint64_t *state, uint64_t *W, const uint8_t *input)$/;"	z	function:sha512_transform	typeref:typename:uint64_t *	file:
state	crc/sha512.h	/^	uint64_t state[8];$/;"	m	struct:fio_sha512_ctx	typeref:typename:uint64_t[8]
state	crc/xxhash.h	/^XXH_errorcode XXH32_resetState(void* state, uint32_t seed);$/;"	z	prototype:XXH32_resetState	typeref:typename:void *	file:
state	crc/xxhash.h	/^XXH_errorcode XXH32_update (void* state, const void* input, int len);$/;"	z	prototype:XXH32_update	typeref:typename:void *	file:
state	crc/xxhash.h	/^uint32_t XXH32_digest (void* state);$/;"	z	prototype:XXH32_digest	typeref:typename:void *	file:
state	crc/xxhash.h	/^uint32_t XXH32_intermediateDigest (void* state);$/;"	z	prototype:XXH32_intermediateDigest	typeref:typename:void *	file:
state	gfio.c	/^void gfio_set_state(struct gui_entry *ge, unsigned int state)$/;"	z	function:gfio_set_state	typeref:typename:unsigned int	file:
state	gfio.h	/^	unsigned int state;$/;"	m	struct:gui_entry	typeref:typename:unsigned int
state	gfio.h	/^extern void gfio_set_state(struct gui_entry *ge, unsigned int state);$/;"	z	prototype:gfio_set_state	typeref:typename:unsigned int	file:
state	idletime.h	/^	int state;$/;"	m	struct:idle_prof_thread	typeref:typename:int
state	lib/rand.c	/^static void __init_rand32(struct taus88_state *state, unsigned int seed)$/;"	z	function:__init_rand32	typeref:struct:taus88_state *	file:
state	lib/rand.c	/^void __init_rand64(struct taus258_state *state, uint64_t seed)$/;"	z	function:__init_rand64	typeref:struct:taus258_state *	file:
state	lib/rand.c	/^void init_rand(struct frand_state *state, bool use64)$/;"	z	function:init_rand	typeref:struct:frand_state *	file:
state	lib/rand.c	/^void init_rand_seed(struct frand_state *state, uint64_t seed, bool use64)$/;"	z	function:init_rand_seed	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline double __rand_0_1(struct frand_state *state)$/;"	z	function:__rand_0_1	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline uint32_t rand32_upto(struct frand_state *state, uint32_t end)$/;"	z	function:rand32_upto	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline uint64_t __rand(struct frand_state *state)$/;"	z	function:__rand	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline uint64_t __rand64(struct taus258_state *state)$/;"	z	function:__rand64	typeref:struct:taus258_state *	file:
state	lib/rand.h	/^static inline uint64_t rand64_upto(struct frand_state *state, uint64_t end)$/;"	z	function:rand64_upto	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline uint64_t rand_between(struct frand_state *state, uint64_t start,$/;"	z	function:rand_between	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline uint64_t rand_max(struct frand_state *state)$/;"	z	function:rand_max	typeref:struct:frand_state *	file:
state	lib/rand.h	/^static inline unsigned int __rand32(struct taus88_state *state)$/;"	z	function:__rand32	typeref:struct:taus88_state *	file:
state	lib/rand.h	/^void __init_rand64(struct taus258_state *state, uint64_t seed);$/;"	z	prototype:__init_rand64	typeref:struct:taus258_state *	file:
state	steadystate.h	/^	uint32_t state;$/;"	m	struct:steadystate_data	typeref:typename:uint32_t
state	verify-state.h	/^	struct thread_io_list state[0];$/;"	m	struct:all_io_list	typeref:struct:thread_io_list[0]
state	verify.c	/^void __verify_save_state(struct all_io_list *state, const char *prefix)$/;"	z	function:__verify_save_state	typeref:struct:all_io_list *	file:
state32	lib/rand.h	/^		struct taus88_state state32;$/;"	m	union:frand_state::__anon55577a26010a	typeref:struct:taus88_state
state32	verify-state.h	/^		struct thread_rand32_state state32;$/;"	m	union:thread_rand_state::__anon089b2b5e010a	typeref:struct:thread_rand32_state
state64	lib/rand.h	/^		struct taus258_state state64;$/;"	m	union:frand_state::__anon55577a26010a	typeref:struct:taus258_state
state64	verify-state.h	/^		struct thread_rand64_state state64;$/;"	m	union:thread_rand_state::__anon089b2b5e010a	typeref:struct:thread_rand64_state
state_in	crc/xxhash.c	/^XXH_errorcode XXH32_resetState(void* state_in, uint32_t seed)$/;"	z	function:XXH32_resetState	typeref:typename:void *	file:
state_in	crc/xxhash.c	/^XXH_errorcode XXH32_update (void* state_in, const void* input, int len)$/;"	z	function:XXH32_update	typeref:typename:void *	file:
state_in	crc/xxhash.c	/^static XXH_errorcode XXH32_update_endian (void* state_in, const void* input, int len, XXH_endian/;"	z	function:XXH32_update_endian	typeref:typename:void *	file:
state_in	crc/xxhash.c	/^static uint32_t XXH32_intermediateDigest_endian (void* state_in, XXH_endianess endian)$/;"	z	function:XXH32_intermediateDigest_endian	typeref:typename:void *	file:
state_in	crc/xxhash.c	/^uint32_t XXH32_digest (void* state_in)$/;"	z	function:XXH32_digest	typeref:typename:void *	file:
state_in	crc/xxhash.c	/^uint32_t XXH32_intermediateDigest (void* state_in)$/;"	z	function:XXH32_intermediateDigest	typeref:typename:void *	file:
static_tv_valid	gettime.c	/^static __thread struct tv_valid static_tv_valid;$/;"	v	typeref:struct:tv_valid	file:
statinfo	t/strided.py	/^        statinfo = os.stat(args.filename)$/;"	v
stats	t/io_uring.c	/^static int stats = 0;		\/* generate IO stats *\/$/;"	v	typeref:typename:int	file:
stats	t/read-to-pipe-async.c	/^struct stats {$/;"	s	file:
stats	thread_options.h	/^	uint32_t stats;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
stats	thread_options.h	/^	unsigned int stats;$/;"	m	struct:thread_options	typeref:typename:unsigned int
stats_running	t/io_uring.c	/^static int stats_running;$/;"	v	typeref:typename:int	file:
status	engines/ime.c	/^	ssize_t      		status;			\/* Status of the IME request *\/$/;"	m	struct:imeaio_req	typeref:typename:ssize_t	file:
status	engines/libiscsi.c	/^static void iscsi_cb(struct iscsi_context *iscsi, int status,$/;"	z	function:iscsi_cb	typeref:typename:int	file:
status	idletime.h	/^	int status;$/;"	m	struct:idle_prof_common	typeref:typename:int
status	t/io_uring.c	/^static void usage(char *argv, int status)$/;"	z	function:usage	typeref:typename:int	file:
status	t/readonly.py	/^        status = check_output(output, test)$/;"	v
status	t/strided.py	/^        status = check_output(iops_log, test)$/;"	v
status	zbd.h	/^				  enum fio_q_status status)$/;"	z	function:zbd_queue_io_u	typeref:enum:fio_q_status	file:
status_file_disabled	stat.c	/^static bool status_file_disabled;$/;"	v	typeref:typename:bool	file:
status_interval	init.c	/^int status_interval = 0;$/;"	v	typeref:typename:int
status_message	gclient.c	/^				      char *status_message, double perc)$/;"	z	function:gfio_update_thread_status	typeref:typename:char *	file:
status_message	gclient.c	/^static void gfio_update_thread_status_all(struct gui *ui, char *status_message,$/;"	z	function:gfio_update_thread_status_all	typeref:typename:char *	file:
status_mutex	engines/ime.c	/^	pthread_mutex_t		status_mutex;	\/* Mutex for cond_endio *\/$/;"	m	struct:imeaio_req	typeref:typename:pthread_mutex_t	file:
statx	oslib/statx.c	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	f	typeref:typename:int
statx	oslib/statx.h	/^int statx(int dfd, const char *pathname, int flags, unsigned int mask,$/;"	p	typeref:typename:int
statx	oslib/statx.h	/^struct statx$/;"	s
statx_flags	os/linux/io_uring.h	/^		__u32		statx_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
stay_connected	client.h	/^	int stay_connected;$/;"	m	struct:client_ops	typeref:typename:int
std_redirect	engines/exec.c	/^	unsigned int std_redirect;$/;"	m	struct:exec_options	typeref:typename:unsigned int	file:
stddev	lib/gauss.h	/^	unsigned int stddev;$/;"	m	struct:gauss_state	typeref:typename:unsigned int
steadystate_alloc	steadystate.c	/^static void steadystate_alloc(struct thread_data *td)$/;"	f	typeref:typename:void	file:
steadystate_bw_mean	steadystate.c	/^uint64_t steadystate_bw_mean(struct thread_stat *ts)$/;"	f	typeref:typename:uint64_t
steadystate_bw_mean	steadystate.h	/^extern uint64_t steadystate_bw_mean(struct thread_stat *);$/;"	p	typeref:typename:uint64_t
steadystate_check	steadystate.c	/^int steadystate_check(void)$/;"	f	typeref:typename:int
steadystate_check	steadystate.h	/^extern int steadystate_check(void);$/;"	p	typeref:typename:int
steadystate_data	steadystate.h	/^struct steadystate_data {$/;"	s
steadystate_deviation	steadystate.c	/^static bool steadystate_deviation(uint64_t iops, uint64_t bw,$/;"	f	typeref:typename:bool	file:
steadystate_enabled	steadystate.c	/^bool steadystate_enabled = false;$/;"	v	typeref:typename:bool
steadystate_free	steadystate.c	/^void steadystate_free(struct thread_data *td)$/;"	f	typeref:typename:void
steadystate_free	steadystate.h	/^extern void steadystate_free(struct thread_data *);$/;"	p	typeref:typename:void
steadystate_iops_mean	steadystate.c	/^uint64_t steadystate_iops_mean(struct thread_stat *ts)$/;"	f	typeref:typename:uint64_t
steadystate_iops_mean	steadystate.h	/^extern uint64_t steadystate_iops_mean(struct thread_stat *);$/;"	p	typeref:typename:uint64_t
steadystate_setup	steadystate.c	/^void steadystate_setup(void)$/;"	f	typeref:typename:void
steadystate_setup	steadystate.h	/^extern void steadystate_setup(void);$/;"	p	typeref:typename:void
steadystate_slope	steadystate.c	/^static bool steadystate_slope(uint64_t iops, uint64_t bw,$/;"	f	typeref:typename:bool	file:
stonewall	thread_options.h	/^	uint32_t stonewall;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
stonewall	thread_options.h	/^	unsigned int stonewall;$/;"	m	struct:thread_options	typeref:typename:unsigned int
stonewall_flag	init.c	/^		char *file, int is_buf, int stonewall_flag, int type,$/;"	z	function:__parse_jobs_ini	typeref:typename:int	file:
stonewall_flag	init.c	/^int parse_jobs_ini(char *file, int is_buf, int stonewall_flag, int type)$/;"	z	function:parse_jobs_ini	typeref:typename:int	file:
stop	client.h	/^	client_op		*stop;$/;"	m	struct:client_ops	typeref:typename:client_op *
stop	server.c	/^static void fio_server_check_fork_items(struct flist_head *list, bool stop)$/;"	z	function:fio_server_check_fork_items	typeref:typename:bool	file:
stop	server.c	/^static void fio_server_fork_item_done(struct fio_fork_item *ffi, bool stop)$/;"	z	function:fio_server_fork_item_done	typeref:typename:bool	file:
stop_io	fio.h	/^	int stop_io;$/;"	m	struct:thread_data	typeref:typename:int
store_direct	client.c	/^					   bool *store_direct)$/;"	z	function:convert_iolog	typeref:typename:bool *	file:
store_ipo	blktrace.c	/^static void store_ipo(struct thread_data *td, unsigned long long offset,$/;"	f	typeref:typename:void	file:
store_option_value	parse.c	/^store_option_value:$/;"	L	function:__handle_option	file:
store_udp_seq	engines/net.c	/^static void store_udp_seq(struct netio_data *nd, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
str	debug.c	/^void __dprint(int type, const char *str, ...)$/;"	z	function:__dprint	typeref:typename:const char *	file:
str	debug.h	/^static inline void dprint(int type, const char *str, ...)$/;"	z	function:dprint	typeref:typename:const char *	file:
str	debug.h	/^void __dprint(int type, const char *str, ...) __attribute__((format (printf, 2, 3)));$/;"	z	prototype:__dprint	typeref:typename:const char *	file:
str	engines/cmdprio.c	/^				    enum fio_ddir ddir, char *str, bool data)$/;"	z	function:fio_cmdprio_bssplit_ddir	typeref:typename:char *	file:
str	eta.c	/^void eta_to_str(char *str, unsigned long eta_sec)$/;"	z	function:eta_to_str	typeref:typename:char *	file:
str	graph.c	/^static void setstring(char **str, const char *value)$/;"	z	function:setstring	typeref:typename:char **	file:
str	json.c	/^static char *strdup_escape(const char *str)$/;"	z	function:strdup_escape	typeref:typename:const char *	file:
str	json.c	/^static struct json_value *json_create_value_string(const char *str)$/;"	z	function:json_create_value_string	typeref:typename:const char *	file:
str	lib/nowarn_snprintf.h	/^static inline int nowarn_snprintf(char *str, size_t size, const char *format,$/;"	z	function:nowarn_snprintf	typeref:typename:char *	file:
str	lib/strntol.c	/^long strntol(const char *str, size_t sz, char **end, int base)$/;"	z	function:strntol	typeref:typename:const char *	file:
str	lib/strntol.h	/^long strntol(const char *str, size_t sz, char **end, int base);$/;"	z	prototype:strntol	typeref:typename:const char *	file:
str	log.h	/^extern size_t log_valist(const char *str, va_list);$/;"	z	prototype:log_valist	typeref:typename:const char *	file:
str	log.h	/^extern void log_prevalist(int type, const char *str, va_list);$/;"	z	prototype:log_prevalist	typeref:typename:const char *	file:
str	options.c	/^				       struct split_prio *entry, char *str)$/;"	z	function:parse_cmdprio_bssplit_entry	typeref:typename:char *	file:
str	options.c	/^				char *str)$/;"	z	function:ignore_error_type	typeref:typename:char *	file:
str	options.c	/^			    char *str, bool absolute, unsigned int max_splits)$/;"	z	function:split_parse_ddir	typeref:typename:char *	file:
str	options.c	/^			   enum fio_ddir ddir, char *str, bool absolute)$/;"	z	function:zone_split_ddir	typeref:typename:char *	file:
str	options.c	/^			  int *nr_entries, char *str)$/;"	z	function:split_parse_prio_ddir	typeref:typename:char *	file:
str	options.c	/^			enum fio_ddir ddir, char *str, bool data)$/;"	z	function:bssplit_ddir	typeref:typename:char *	file:
str	options.c	/^int str_split_parse(struct thread_data *td, char *str,$/;"	z	function:str_split_parse	typeref:typename:char *	file:
str	options.c	/^static bool split_parse_distr(const char *str, double *val, double *center)$/;"	z	function:split_parse_distr	typeref:typename:const char *	file:
str	options.c	/^static char *bc_calc(char *str)$/;"	z	function:bc_calc	typeref:typename:char *	file:
str	options.c	/^static char *get_opt_postfix(const char *str)$/;"	z	function:get_opt_postfix	typeref:typename:const char *	file:
str	options.c	/^static int fio_clock_source_cb(void *data, const char *str)$/;"	z	function:fio_clock_source_cb	typeref:typename:const char *	file:
str	options.c	/^static int str2error(char *str)$/;"	z	function:str2error	typeref:typename:char *	file:
str	options.c	/^static int str_fst_cb(void *data, const char *str)$/;"	z	function:str_fst_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_ioengine_external_cb(void *data, const char *str)$/;"	z	function:str_ioengine_external_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_opendir_cb(void *data, const char fio_unused *str)$/;"	z	function:str_opendir_cb	typeref:typename:const char fio_unused *	file:
str	options.c	/^static int str_random_distribution_cb(void *data, const char *str)$/;"	z	function:str_random_distribution_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_rw_cb(void *data, const char *str)$/;"	z	function:str_rw_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_sfr_cb(void *data, const char *str)$/;"	z	function:str_sfr_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_steadystate_cb(void *data, const char *str)$/;"	z	function:str_steadystate_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_write_bw_log_cb(void *data, const char *str)$/;"	z	function:str_write_bw_log_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_write_hist_log_cb(void *data, const char *str)$/;"	z	function:str_write_hist_log_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_write_iops_log_cb(void *data, const char *str)$/;"	z	function:str_write_iops_log_cb	typeref:typename:const char *	file:
str	options.c	/^static int str_write_lat_log_cb(void *data, const char *str)$/;"	z	function:str_write_lat_log_cb	typeref:typename:const char *	file:
str	os/windows/posix.c	/^long long strtoll(const char *restrict str, char **restrict endptr, int base)$/;"	z	function:strtoll	typeref:typename:const char * 	file:
str	oslib/libmtd.c	/^static int type_str2int(const char *str)$/;"	z	function:type_str2int	typeref:typename:const char *	file:
str	parse.c	/^int str_to_decimal(const char *str, long long *val, int kilo, void *data,$/;"	z	function:str_to_decimal	typeref:typename:const char *	file:
str	parse.c	/^int str_to_float(const char *str, double *val, int is_time)$/;"	z	function:str_to_float	typeref:typename:const char *	file:
str	parse.c	/^static int check_range_bytes(const char *str, long long *val, void *data)$/;"	z	function:check_range_bytes	typeref:typename:const char *	file:
str	parse.c	/^static int str_match_len(const struct value_pair *vp, const char *str)$/;"	z	function:str_match_len	typeref:typename:const char *	file:
str	parse.c	/^static size_t opt_len(const char *str)$/;"	z	function:opt_len	typeref:typename:const char *	file:
str	parse.c	/^static unsigned long long get_mult_bytes(const char *str, int len, void *data,$/;"	z	function:get_mult_bytes	typeref:typename:const char *	file:
str	parse.c	/^static unsigned long long get_mult_time(const char *str, int len,$/;"	z	function:get_mult_time	typeref:typename:const char *	file:
str	parse.h	/^extern int str_to_float(const char *str, double *val, int is_time);$/;"	z	prototype:str_to_float	typeref:typename:const char *	file:
str	profiles/act.c	/^static int act_add_opt(const char *str, ...)$/;"	z	function:act_add_opt	typeref:typename:const char *	file:
str	server.c	/^int fio_server_parse_string(const char *str, char **ptr, bool *is_sock,$/;"	z	function:fio_server_parse_string	typeref:typename:const char *	file:
str	smalloc.c	/^char *smalloc_strdup(const char *str)$/;"	z	function:smalloc_strdup	typeref:typename:const char *	file:
str	stat.h	/^extern void eta_to_str(char *str, unsigned long eta_sec);$/;"	z	prototype:eta_to_str	typeref:typename:char *	file:
str	t/debug.c	/^void __dprint(int type, const char *str, ...)$/;"	z	function:__dprint	typeref:typename:const char *	file:
str	thread_options.h	/^				 char *str);$/;"	z	prototype:split_parse_prio_ddir	typeref:typename:char *	file:
str	thread_options.h	/^			    char *str, bool absolute, unsigned int max_splits);$/;"	z	prototype:split_parse_ddir	typeref:typename:char *	file:
str	thread_options.h	/^extern int str_split_parse(struct thread_data *td, char *str,$/;"	z	prototype:str_split_parse	typeref:typename:char *	file:
str2error	options.c	/^static int str2error(char *str)$/;"	f	typeref:typename:int	file:
str_bssplit_cb	options.c	/^static int str_bssplit_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_buffer_compress_cb	options.c	/^static int str_buffer_compress_cb(void *data, unsigned long long *il)$/;"	f	typeref:typename:int	file:
str_buffer_pattern_cb	options.c	/^static int str_buffer_pattern_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_cpumask_cb	options.c	/^static int str_cpumask_cb(void *data, unsigned long long *val)$/;"	f	typeref:typename:int	file:
str_cpus_allowed_cb	options.c	/^static int str_cpus_allowed_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_dedupe_cb	options.c	/^static int str_dedupe_cb(void *data, unsigned long long *il)$/;"	f	typeref:typename:int	file:
str_directory_cb	options.c	/^static int str_directory_cb(void *data, const char fio_unused *unused)$/;"	f	typeref:typename:int	file:
str_exitall_cb	options.c	/^static int str_exitall_cb(void)$/;"	f	typeref:typename:int	file:
str_filename_cb	options.c	/^static int str_filename_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_fst_cb	options.c	/^static int str_fst_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_gtod_reduce_cb	options.c	/^static int str_gtod_reduce_cb(void *data, int *il)$/;"	f	typeref:typename:int	file:
str_hostname_cb	engines/net.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_hostname_cb	engines/net.c	/^static int str_hostname_cb(void *data, const char *input);$/;"	p	typeref:typename:int	file:
str_hostname_cb	engines/rdma.c	/^static int str_hostname_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_ignore_error_cb	options.c	/^static int str_ignore_error_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_io_size_cb	options.c	/^static int str_io_size_cb(void *data, unsigned long long *__val)$/;"	f	typeref:typename:int	file:
str_ioengine_external_cb	options.c	/^static int str_ioengine_external_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_log_cpus_allowed_cb	options.c	/^static int str_log_cpus_allowed_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_match_len	parse.c	/^static int str_match_len(const struct value_pair *vp, const char *str)$/;"	f	typeref:typename:int	file:
str_mem_cb	options.c	/^static int str_mem_cb(void *data, const char *mem)$/;"	f	typeref:typename:int	file:
str_numa_cpunodes_cb	options.c	/^static int str_numa_cpunodes_cb(void *data, char *input)$/;"	f	typeref:typename:int	file:
str_numa_mpol_cb	options.c	/^static int str_numa_mpol_cb(void *data, char *input)$/;"	f	typeref:typename:int	file:
str_offset_cb	options.c	/^static int str_offset_cb(void *data, unsigned long long *__val)$/;"	f	typeref:typename:int	file:
str_offset_increment_cb	options.c	/^static int str_offset_increment_cb(void *data, unsigned long long *__val)$/;"	f	typeref:typename:int	file:
str_opendir_cb	options.c	/^static int str_opendir_cb(void *data, const char fio_unused *str)$/;"	f	typeref:typename:int	file:
str_random_distribution_cb	options.c	/^static int str_random_distribution_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_replace	engines/exec.c	/^char *str_replace(char *orig, const char *rep, const char *with)$/;"	f	typeref:typename:char *
str_replay_skip_cb	options.c	/^static int str_replay_skip_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_rw_cb	options.c	/^static int str_rw_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_rwmix_read_cb	options.c	/^static int str_rwmix_read_cb(void *data, unsigned long long *val)$/;"	f	typeref:typename:int	file:
str_rwmix_write_cb	options.c	/^static int str_rwmix_write_cb(void *data, unsigned long long *val)$/;"	f	typeref:typename:int	file:
str_sfr_cb	options.c	/^static int str_sfr_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_size_cb	options.c	/^static int str_size_cb(void *data, unsigned long long *__val)$/;"	f	typeref:typename:int	file:
str_split_parse	options.c	/^int str_split_parse(struct thread_data *td, char *str,$/;"	f	typeref:typename:int
str_split_parse	thread_options.h	/^extern int str_split_parse(struct thread_data *td, char *str,$/;"	p	typeref:typename:int
str_steadystate_cb	options.c	/^static int str_steadystate_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_to_decimal	parse.c	/^int str_to_decimal(const char *str, long long *val, int kilo, void *data,$/;"	f	typeref:typename:int
str_to_decimal	parse.h	/^extern int str_to_decimal(const char *, long long *, int, void *, int, int);$/;"	p	typeref:typename:int
str_to_float	parse.c	/^int str_to_float(const char *str, double *val, int is_time)$/;"	f	typeref:typename:int
str_to_float	parse.h	/^extern int str_to_float(const char *str, double *val, int is_time);$/;"	p	typeref:typename:int
str_verify_cpus_allowed_cb	options.c	/^static int str_verify_cpus_allowed_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_verify_pattern_cb	options.c	/^static int str_verify_pattern_cb(void *data, const char *input)$/;"	f	typeref:typename:int	file:
str_write_bw_log_cb	options.c	/^static int str_write_bw_log_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_write_hist_log_cb	options.c	/^static int str_write_hist_log_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_write_iops_log_cb	options.c	/^static int str_write_iops_log_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_write_lat_log_cb	options.c	/^static int str_write_lat_log_cb(void *data, const char *str)$/;"	f	typeref:typename:int	file:
str_zoneskip_cb	options.c	/^static int str_zoneskip_cb(void *data, unsigned long long *__val)$/;"	f	typeref:typename:int	file:
strcasestr	oslib/strcasestr.c	/^char *strcasestr(const char *s1, const char *s2)$/;"	f	typeref:typename:char *
strcasestr	oslib/strcasestr.h	/^char *strcasestr(const char *haystack, const char *needle);$/;"	p	typeref:typename:char *
strdup_escape	json.c	/^static char *strdup_escape(const char *str)$/;"	f	typeref:typename:char *	file:
stream	engines/http.c	/^static int _http_seek(void *stream, curl_off_t offset, int origin)$/;"	z	function:_http_seek	typeref:typename:void *	file:
stream	engines/http.c	/^static size_t _http_read(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_read	typeref:typename:void *	file:
stream	engines/http.c	/^static size_t _http_write(void *ptr, size_t size, size_t nmemb, void *stream)$/;"	z	function:_http_write	typeref:typename:void *	file:
stream	iolog.c	/^			    z_stream *stream, struct inflate_chunk_iter *iter)$/;"	z	function:inflate_chunk	typeref:typename:z_stream *	file:
stream	iolog.c	/^static int z_stream_init(z_stream *stream, int gz_hdr)$/;"	z	function:z_stream_init	typeref:typename:z_stream *	file:
stream	iolog.c	/^static void finish_chunk(z_stream *stream, FILE *f,$/;"	z	function:finish_chunk	typeref:typename:z_stream *	file:
stream	server.c	/^				      struct io_logs *cur_log, z_stream *stream)$/;"	z	function:__fio_append_iolog_gz_hist	typeref:typename:z_stream *	file:
stream	server.c	/^				 struct io_logs *cur_log, z_stream *stream)$/;"	z	function:__fio_append_iolog_gz	typeref:typename:z_stream *	file:
stream	server.c	/^				struct sk_entry **last_entry, z_stream *stream,$/;"	z	function:__deflate_pdu_buffer	typeref:typename:z_stream *	file:
stream	server.c	/^static inline void __fio_net_prep_tail(z_stream *stream, void *out_pdu,$/;"	z	function:__fio_net_prep_tail	typeref:typename:z_stream *	file:
stream	t/dedupe.c	/^	z_stream stream;$/;"	m	struct:zlib_ctrl	typeref:typename:z_stream	file:
stream_id	engines/sg.c	/^	uint16_t stream_id;$/;"	m	struct:sg_options	typeref:typename:uint16_t	file:
stream_id	engines/sg.c	/^static int fio_sgio_stream_control(struct fio_file *f, bool open_stream, uint16_t *stream_id)$/;"	z	function:fio_sgio_stream_control	typeref:typename:uint16_t *	file:
stress_mode	engines/cpu.c	/^enum stress_mode {$/;"	g	file:
stress_qsort_cmp_1	engines/cpu.c	/^static int stress_qsort_cmp_1(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
stress_qsort_cmp_2	engines/cpu.c	/^static int stress_qsort_cmp_2(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
stress_qsort_cmp_3	engines/cpu.c	/^static int stress_qsort_cmp_3(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
stride	iolog.c	/^uint64_t hist_sum(int j, int stride, uint64_t *io_u_plat,$/;"	z	function:hist_sum	typeref:typename:int	file:
string	backend.c	/^static int exec_string(struct thread_options *o, const char *string,$/;"	z	function:exec_string	typeref:typename:const char *	file:
string	init.c	/^static int set_debug(const char *string)$/;"	z	function:set_debug	typeref:typename:const char *	file:
string	json.h	/^		char *string;$/;"	m	union:json_value::__anon078191b5010a	typeref:typename:char *
string	tickmarks.h	/^	char string[20];$/;"	m	struct:tickmark	typeref:typename:char[20]
string	y.tab.c	/^static void setup_to_parse_string(const char *string)$/;"	z	function:setup_to_parse_string	typeref:typename:const char *	file:
string_distance	parse.c	/^int string_distance(const char *s1, const char *s2)$/;"	f	typeref:typename:int
string_distance	parse.h	/^extern int string_distance(const char *s1, const char *s2);$/;"	p	typeref:typename:int
string_distance_ok	parse.c	/^int string_distance_ok(const char *opt, int distance)$/;"	f	typeref:typename:int
string_distance_ok	parse.h	/^extern int string_distance_ok(const char *s1, int dist);$/;"	p	typeref:typename:int
string_to_cpu	cconv.c	/^static void string_to_cpu(char **dst, const uint8_t *src)$/;"	f	typeref:typename:void	file:
string_to_net	cconv.c	/^#define string_to_net(/;"	d	file:
stringp	oslib/strsep.c	/^char *strsep(char **stringp, const char *delim)$/;"	z	function:strsep	typeref:typename:char **	file:
strip_blank_end	parse.c	/^void strip_blank_end(char *p)$/;"	f	typeref:typename:void
strip_blank_end	parse.h	/^extern void strip_blank_end(char *);$/;"	p	typeref:typename:void
strip_blank_front	parse.c	/^void strip_blank_front(char **p)$/;"	f	typeref:typename:void
strip_blank_front	parse.h	/^extern void strip_blank_front(char **);$/;"	p	typeref:typename:void
strlcat	oslib/strlcat.c	/^strlcat(char *dst, const char *src, size_t dsize)$/;"	f	typeref:typename:size_t
strlcat	oslib/strlcat.h	/^size_t strlcat(char *dst, const char *src, size_t dsize);$/;"	p	typeref:typename:size_t
strlen	init.c	/^	size_t strlen;$/;"	m	struct:fpre_keyword	typeref:typename:size_t	file:
strndup	oslib/strndup.c	/^char *strndup(const char *s, size_t n)$/;"	f	typeref:typename:char *
strndup	oslib/strndup.h	/^char *strndup(const char *s, size_t n);$/;"	p	typeref:typename:char *
strntol	lib/strntol.c	/^long strntol(const char *str, size_t sz, char **end, int base)$/;"	f	typeref:typename:long
strntol	lib/strntol.h	/^long strntol(const char *str, size_t sz, char **end, int base);$/;"	p	typeref:typename:long
strp	oslib/asprintf.c	/^int asprintf(char **strp, const char *fmt, ...)$/;"	z	function:asprintf	typeref:typename:char **	file:
strp	oslib/asprintf.c	/^int vasprintf(char **strp, const char *fmt, va_list ap)$/;"	z	function:vasprintf	typeref:typename:char **	file:
strp	oslib/asprintf.h	/^int asprintf(char **strp, const char *fmt, ...);$/;"	z	prototype:asprintf	typeref:typename:char **	file:
strp	oslib/asprintf.h	/^int vasprintf(char **strp, const char *fmt, va_list ap);$/;"	z	prototype:vasprintf	typeref:typename:char **	file:
strp	oslib/libmtd_xalloc.h	/^static int xasprintf(char **strp, const char *fmt, ...)$/;"	z	function:xasprintf	typeref:typename:char **	file:
strsep	oslib/strsep.c	/^char *strsep(char **stringp, const char *delim)$/;"	f	typeref:typename:char *
strsep	oslib/strsep.h	/^char *strsep(char **, const char *);$/;"	p	typeref:typename:char *
strtoll	os/windows/posix.c	/^long long strtoll(const char *restrict str, char **restrict endptr, int base)$/;"	f	typeref:typename:long long
style	tools/fiograph/fiograph.conf	/^style=<font color="{}" > x {} <\/font>$/;"	k	section:numjobs
style	tools/fiograph/fiograph.conf	/^style=rounded$/;"	k	section:fio_jobs
subjob_number	fio.h	/^	unsigned int subjob_number;$/;"	m	struct:thread_data	typeref:typename:unsigned int
submit	gclient.c	/^				    int submit)$/;"	z	function:gfio_add_sc_depths_tree	typeref:typename:int	file:
submit	t/io_uring.c	/^submit:$/;"	L	function:submitter_uring_fn	file:
submit_action	helper_thread.c	/^static void submit_action(enum action a)$/;"	f	typeref:typename:void	file:
submit_more	t/io_uring.c	/^submit_more:$/;"	L	function:submitter_uring_fn	file:
submit_worker	workqueue.h	/^struct submit_worker {$/;"	s
submitter	t/io_uring.c	/^static struct submitter *submitter;$/;"	v	typeref:struct:submitter *	file:
submitter	t/io_uring.c	/^struct submitter {$/;"	s	file:
submitter_aio_fn	t/io_uring.c	/^static void *submitter_aio_fn(void *data)$/;"	f	typeref:typename:void *	file:
submitter_init	t/io_uring.c	/^static int submitter_init(struct submitter *s)$/;"	f	typeref:typename:int	file:
submitter_sync_fn	t/io_uring.c	/^static void *submitter_sync_fn(void *data)$/;"	f	typeref:typename:void *	file:
submitter_uring_fn	t/io_uring.c	/^static void *submitter_uring_fn(void *data)$/;"	f	typeref:typename:void *	file:
subpage_size	oslib/libmtd.h	/^	int subpage_size;$/;"	m	struct:mtd_dev_info	typeref:typename:int
success	zbd.c	/^			 bool success)$/;"	z	function:zbd_queue_io	typeref:typename:bool	file:
suf	init.c	/^			 const char *suf, int per_job)$/;"	z	function:gen_log_name	typeref:typename:const char *	file:
sum_clat_prio_stats	stat.c	/^static int sum_clat_prio_stats(struct thread_stat *dst, struct thread_stat *src,$/;"	f	typeref:typename:int	file:
sum_clat_prio_stats_src_multi_prio	stat.c	/^static int sum_clat_prio_stats_src_multi_prio(struct thread_stat *dst,$/;"	f	typeref:typename:int	file:
sum_clat_prio_stats_src_single_prio	stat.c	/^static int sum_clat_prio_stats_src_single_prio(struct thread_stat *dst,$/;"	f	typeref:typename:int	file:
sum_cnt	rate-submit.c	/^					unsigned int *sum_cnt)$/;"	z	function:io_workqueue_exit_worker_fn	typeref:typename:unsigned int *	file:
sum_cnt	workqueue.c	/^static void free_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	z	function:free_worker	typeref:typename:unsigned int *	file:
sum_cnt	workqueue.c	/^static void shutdown_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	z	function:shutdown_worker	typeref:typename:unsigned int *	file:
sum_cnt	workqueue.h	/^					 unsigned int *sum_cnt)$/;"	z	function:workqueue_exit_worker	typeref:typename:unsigned int *	file:
sum_ddir	rate-submit.c	/^static void sum_ddir(struct thread_data *dst, struct thread_data *src,$/;"	f	typeref:typename:void	file:
sum_group_stats	stat.c	/^void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src)$/;"	f	typeref:typename:void
sum_group_stats	stat.h	/^extern void sum_group_stats(struct group_run_stats *dst, struct group_run_stats *src);$/;"	p	typeref:typename:void
sum_stat	stat.c	/^static void sum_stat(struct io_stat *dst, struct io_stat *src, bool pure_sum)$/;"	f	typeref:typename:void	file:
sum_stat_clients	client.c	/^int sum_stat_clients;$/;"	v	typeref:typename:int
sum_stat_nr	client.c	/^static int sum_stat_nr;$/;"	v	typeref:typename:int	file:
sum_stat_nr	gclient.c	/^static int sum_stat_nr;$/;"	v	typeref:typename:int	file:
sum_thread_stats	stat.c	/^void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src)$/;"	f	typeref:typename:void
sum_thread_stats	stat.h	/^extern void sum_thread_stats(struct thread_stat *dst, struct thread_stat *src);$/;"	p	typeref:typename:void
sum_val	rate-submit.c	/^static void sum_val(uint64_t *dst, uint64_t *src)$/;"	f	typeref:typename:void	file:
sum_x	steadystate.h	/^	uint64_t sum_x;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
sum_x_sq	steadystate.h	/^	uint64_t sum_x_sq;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
sum_xy	steadystate.h	/^	uint64_t sum_xy;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
sum_y	steadystate.h	/^	uint64_t sum_y;$/;"	m	struct:steadystate_data	typeref:typename:uint64_t
sun_family	os/windows/posix/include/sys/un.h	/^	sa_family_t	sun_family; \/* Address family *\/$/;"	m	struct:sockaddr_un	typeref:typename:sa_family_t
sun_path	os/windows/posix/include/sys/un.h	/^	char		sun_path[260]; \/* Socket pathname *\/$/;"	m	struct:sockaddr_un	typeref:typename:char[260]
svcl	engines/dfs.c	/^	char		*svcl;   \/* service replica list, deprecated *\/$/;"	m	struct:daos_fio_options	typeref:typename:char *	file:
sw	iolog.c	/^static int gz_init_worker(struct submit_worker *sw)$/;"	z	function:gz_init_worker	typeref:struct:submit_worker *	file:
sw	iolog.c	/^static int gz_work_async(struct submit_worker *sw, struct workqueue_work *work)$/;"	z	function:gz_work_async	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static bool io_workqueue_pre_sleep_flush_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_pre_sleep_flush_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static int io_workqueue_alloc_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_alloc_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static int io_workqueue_fn(struct submit_worker *sw,$/;"	z	function:io_workqueue_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static int io_workqueue_init_worker_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_init_worker_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static void io_workqueue_exit_worker_fn(struct submit_worker *sw,$/;"	z	function:io_workqueue_exit_worker_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static void io_workqueue_free_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_free_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static void io_workqueue_pre_sleep_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_pre_sleep_fn	typeref:struct:submit_worker *	file:
sw	rate-submit.c	/^static void io_workqueue_update_acct_fn(struct submit_worker *sw)$/;"	z	function:io_workqueue_update_acct_fn	typeref:struct:submit_worker *	file:
sw	workqueue.c	/^static void free_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	z	function:free_worker	typeref:struct:submit_worker *	file:
sw	workqueue.c	/^static void handle_list(struct submit_worker *sw, struct flist_head *list)$/;"	z	function:handle_list	typeref:struct:submit_worker *	file:
sw	workqueue.c	/^static void shutdown_worker(struct submit_worker *sw, unsigned int *sum_cnt)$/;"	z	function:shutdown_worker	typeref:struct:submit_worker *	file:
sw	workqueue.h	/^static inline bool workqueue_pre_sleep_check(struct submit_worker *sw)$/;"	z	function:workqueue_pre_sleep_check	typeref:struct:submit_worker *	file:
sw	workqueue.h	/^static inline int workqueue_init_worker(struct submit_worker *sw)$/;"	z	function:workqueue_init_worker	typeref:struct:submit_worker *	file:
sw	workqueue.h	/^static inline void workqueue_exit_worker(struct submit_worker *sw,$/;"	z	function:workqueue_exit_worker	typeref:struct:submit_worker *	file:
sw	workqueue.h	/^static inline void workqueue_pre_sleep(struct submit_worker *sw)$/;"	z	function:workqueue_pre_sleep	typeref:struct:submit_worker *	file:
swap	blktrace.h	/^	int			swap;	\/\/ bitwise reverse required$/;"	m	struct:blktrace_cursor	typeref:typename:int
swap	t/btrace2fio.c	/^static int trace_needs_swap(const char *trace_file, int *swap)$/;"	z	function:trace_needs_swap	typeref:typename:int *	file:
swd_action	zbd.c	/^enum swd_action {$/;"	g	file:
swift_auth_token	engines/http.c	/^	char *swift_auth_token;$/;"	m	struct:http_options	typeref:typename:char *	file:
switch_ioscheduler	backend.c	/^static int switch_ioscheduler(struct thread_data *td)$/;"	f	typeref:typename:int	file:
sync_done	backend.c	/^sync_done:$/;"	L	function:io_queue_event	file:
sync_file_range	helpers.c	/^int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	f	typeref:typename:int
sync_file_range	helpers.h	/^extern int sync_file_range(int fd, uint64_t offset, uint64_t nbytes,$/;"	p	typeref:typename:int
sync_file_range	thread_options.h	/^	uint32_t sync_file_range;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
sync_file_range	thread_options.h	/^	unsigned int sync_file_range;$/;"	m	struct:thread_options	typeref:typename:unsigned int
sync_file_range_nr	fio.h	/^	unsigned int sync_file_range_nr;$/;"	m	struct:thread_data	typeref:typename:unsigned int
sync_io	thread_options.h	/^	uint32_t sync_io;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
sync_io	thread_options.h	/^	unsigned int sync_io;$/;"	m	struct:thread_options	typeref:typename:unsigned int
sync_range_flags	os/linux/io_uring.h	/^		__u32		sync_range_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
sync_stat	stat.h	/^	struct io_stat sync_stat __attribute__((aligned(8)));\/* fsync etc stats *\/$/;"	m	struct:thread_stat	typeref:struct:io_stat
syncio_data	engines/sync.c	/^struct syncio_data {$/;"	s	file:
sys_errmsg	oslib/libmtd_common.h	/^#define sys_errmsg(/;"	d
sys_errmsg_die	oslib/libmtd_common.h	/^#define sys_errmsg_die(/;"	d
sys_time	stat.h	/^	uint64_t sys_time;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
sysconf	os/os-windows.h	/^long sysconf(int name);$/;"	p	typeref:typename:long
sysconf	os/windows/posix.c	/^long sysconf(int name)$/;"	f	typeref:typename:long
sysfs_is_supported	oslib/libmtd.c	/^static int sysfs_is_supported(struct libmtd *lib)$/;"	f	typeref:typename:int	file:
sysfs_mtd	oslib/libmtd_int.h	/^	char *sysfs_mtd;$/;"	m	struct:libmtd	typeref:typename:char *
sysfs_root	diskutil.h	/^	char *sysfs_root;$/;"	m	struct:disk_util	typeref:typename:char *
sysfs_supported	oslib/libmtd.h	/^	unsigned int sysfs_supported:1;$/;"	m	struct:mtd_info	typeref:typename:unsigned int:1
sysfs_supported	oslib/libmtd_int.h	/^	unsigned int sysfs_supported:1;$/;"	m	struct:libmtd	typeref:typename:unsigned int:1
syslog	os/windows/posix.c	/^void syslog(int priority, const char *message, ... \/* argument *\/)$/;"	f	typeref:typename:void
syslog	os/windows/posix/include/syslog.h	/^int syslog();$/;"	p	typeref:typename:int
systemTime	os/windows/posix.c	/^void Time_tToSystemTime(time_t dosTime, SYSTEMTIME *systemTime)$/;"	z	function:Time_tToSystemTime	typeref:typename:SYSTEMTIME *	file:
sz	lib/strntol.c	/^long strntol(const char *str, size_t sz, char **end, int base)$/;"	z	function:strntol	typeref:typename:size_t	file:
sz	lib/strntol.h	/^long strntol(const char *str, size_t sz, char **end, int base);$/;"	z	prototype:strntol	typeref:typename:size_t	file:
sz	verify.c	/^struct all_io_list *get_all_io_list(int save_mask, size_t *sz)$/;"	z	function:get_all_io_list	typeref:typename:size_t *	file:
sz_idx	profiles/tiobench.c	/^static char sz_idx[80], bs_idx[80], loop_idx[80], dir_idx[80], t_idx[80];$/;"	v	typeref:typename:char[80]	file:
t	backend.c	/^static inline bool runtime_exceeded(struct thread_data *td, struct timespec *t)$/;"	z	function:runtime_exceeded	typeref:struct:timespec *	file:
t	blktrace.c	/^				 struct blk_io_trace *t,$/;"	z	function:handle_trace_discard	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static bool handle_trace_flush(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:handle_trace_flush	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static bool handle_trace_fs(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:handle_trace_fs	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static bool handle_trace_notify(struct blk_io_trace *t)$/;"	z	function:handle_trace_notify	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static bool queue_trace(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:queue_trace	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static bool t_is_write(struct blk_io_trace *t)$/;"	z	function:t_is_write	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static enum fio_ddir t_get_ddir(struct blk_io_trace *t)$/;"	z	function:t_get_ddir	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static int discard_pdu(FILE* f, struct blk_io_trace *t)$/;"	z	function:discard_pdu	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static int write_trace(FILE *fp, struct blk_io_trace *t)$/;"	z	function:write_trace	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void byteswap_trace(struct blk_io_trace *t)$/;"	z	function:byteswap_trace	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void depth_dec(struct blk_io_trace *t, int *depth)$/;"	z	function:depth_dec	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void depth_end(struct blk_io_trace *t, int *this_depth, int *depth)$/;"	z	function:depth_end	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void depth_inc(struct blk_io_trace *t, int *depth)$/;"	z	function:depth_inc	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void dump_trace(struct blk_io_trace *t)$/;"	z	function:dump_trace	typeref:struct:blk_io_trace *	file:
t	blktrace.c	/^static void t_bytes_align(struct thread_options *o, struct blk_io_trace *t)$/;"	z	function:t_bytes_align	typeref:struct:blk_io_trace *	file:
t	blktrace.h	/^	struct blk_io_trace	t;	\/\/ current io trace$/;"	m	struct:blktrace_cursor	typeref:struct:blk_io_trace
t	crc/test.c	/^static struct test_type t[] = {$/;"	v	typeref:struct:test_type[]	file:
t	crc/test.c	/^static void t_crc16(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc16	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_crc32(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_crc32c(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc32c	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_crc64(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc64	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_crc7(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_crc7	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_fnv(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_fnv	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_jhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_jhash	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_md5(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_md5	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_murmur3(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_murmur3	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha1(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha1	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha256	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha3_224(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_224	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha3_256(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_256	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha3_384(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_384	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha3_512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha3_512	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_sha512(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_sha512	typeref:struct:test_type *	file:
t	crc/test.c	/^static void t_xxhash(struct test_type *t, void *buf, size_t size)$/;"	z	function:t_xxhash	typeref:struct:test_type *	file:
t	engines/dfs.c	/^			      unsigned int max, const struct timespec *t)$/;"	z	function:daos_fio_getevents	typeref:typename:const struct timespec *	file:
t	engines/glusterfs_async.c	/^			    unsigned int max, const struct timespec *t)$/;"	z	function:fio_gf_getevents	typeref:typename:const struct timespec *	file:
t	engines/http.c	/^	unsigned int max, const struct timespec *t)$/;"	z	function:fio_http_getevents	typeref:typename:const struct timespec *	file:
t	engines/ime.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ime_aio_getevents	typeref:typename:const struct timespec *	file:
t	engines/ime.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ime_psyncv_getevents	typeref:typename:const struct timespec *	file:
t	engines/io_uring.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_ioring_getevents	typeref:typename:const struct timespec *	file:
t	engines/libaio.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_libaio_getevents	typeref:typename:const struct timespec *	file:
t	engines/libiscsi.c	/^			       unsigned int max, const struct timespec *t)$/;"	z	function:fio_iscsi_getevents	typeref:typename:const struct timespec *	file:
t	engines/librpma_fio.c	/^		unsigned int max, const struct timespec *t)$/;"	z	function:librpma_fio_client_getevents	typeref:typename:const struct timespec *	file:
t	engines/librpma_fio.h	/^		unsigned int max, const struct timespec *t);$/;"	z	prototype:librpma_fio_client_getevents	typeref:typename:const struct timespec *	file:
t	engines/nbd.c	/^			 unsigned int max, const struct timespec *t)$/;"	z	function:nbd_getevents	typeref:typename:const struct timespec *	file:
t	engines/nfs.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_libnfs_getevents	typeref:typename:const struct timespec *	file:
t	engines/null.c	/^			       unsigned int max, const struct timespec *t)$/;"	z	function:NullData::fio_null_getevents	typeref:typename:const struct timespec *	file:
t	engines/null.c	/^			      unsigned int max, const struct timespec *t)$/;"	z	function:fio_null_getevents	typeref:typename:const struct timespec *	file:
t	engines/null.c	/^			  const struct timespec fio_unused *t)$/;"	z	function:null_getevents	typeref:typename:const struct timespec fio_unused *	file:
t	engines/posixaio.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_posixaio_getevents	typeref:typename:const struct timespec *	file:
t	engines/rados.c	/^	unsigned int max, const struct timespec *t)$/;"	z	function:fio_rados_getevents	typeref:typename:const struct timespec *	file:
t	engines/rbd.c	/^			     unsigned int max, const struct timespec *t)$/;"	z	function:fio_rbd_getevents	typeref:typename:const struct timespec *	file:
t	engines/rdma.c	/^				unsigned int max, const struct timespec *t)$/;"	z	function:fio_rdmaio_getevents	typeref:typename:const struct timespec *	file:
t	engines/sg.c	/^			      const struct timespec fio_unused *t)$/;"	z	function:fio_sgio_getevents	typeref:typename:const struct timespec fio_unused *	file:
t	engines/skeleton_external.c	/^				  unsigned int max, const struct timespec *t)$/;"	z	function:fio_skeleton_getevents	typeref:typename:const struct timespec *	file:
t	engines/solarisaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_solarisaio_getevents	typeref:typename:const struct timespec *	file:
t	engines/sync.c	/^				 const struct timespec fio_unused *t)$/;"	z	function:fio_vsyncio_getevents	typeref:typename:const struct timespec fio_unused *	file:
t	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowaio_getevents_thread	typeref:typename:const struct timespec *	file:
t	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowsaio_getevents	typeref:typename:const struct timespec *	file:
t	engines/windowsaio.c	/^				    unsigned int max, const struct timespec *t)$/;"	z	function:fio_windowsaio_getevents_nothread	typeref:typename:const struct timespec *	file:
t	engines/xnvme.c	/^				const struct timespec *t)$/;"	z	function:xnvme_fioe_getevents	typeref:typename:const struct timespec *	file:
t	fio_sem.c	/^static bool sem_timed_out(struct timespec *t, unsigned int msecs)$/;"	z	function:sem_timed_out	typeref:struct:timespec *	file:
t	gfio.h	/^	pthread_t t;$/;"	m	struct:gui	typeref:typename:pthread_t
t	ioengines.c	/^		    const struct timespec *t)$/;"	z	function:td_io_getevents	typeref:typename:const struct timespec *	file:
t	lib/memcpy.c	/^static struct memcpy_type t[] = {$/;"	v	typeref:struct:memcpy_type[]	file:
t	os/os-windows.h	/^char* ctime_r(const time_t *t, char *buf);$/;"	z	prototype:ctime_r	typeref:typename:const time_t *	file:
t	os/windows/posix.c	/^char *ctime_r(const time_t *t, char *buf)$/;"	z	function:ctime_r	typeref:typename:const time_t *	file:
t	parse.h	/^extern int parse_cmd_option(const char *t, const char *l,$/;"	z	prototype:parse_cmd_option	typeref:typename:const char *	file:
t	stat.c	/^			     unsigned long t, uint64_t offset,$/;"	z	function:__add_log_sample	typeref:typename:unsigned long	file:
t	stat.c	/^			 struct timespec *t, unsigned int avg_time,$/;"	z	function:__add_samples	typeref:struct:timespec *	file:
t	stat.c	/^static int add_bw_samples(struct thread_data *td, struct timespec *t)$/;"	z	function:add_bw_samples	typeref:struct:timespec *	file:
t	stat.c	/^static int add_iops_samples(struct thread_data *td, struct timespec *t)$/;"	z	function:add_iops_samples	typeref:struct:timespec *	file:
t	t/btrace2fio.c	/^static int discard_pdu(struct fifo *fifo, int fd, struct blk_io_trace *t)$/;"	z	function:discard_pdu	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int handle_queue_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_queue_trace	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int handle_trace(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int handle_trace_discard(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace_discard	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int handle_trace_fs(struct blk_io_trace *t, struct btrace_pid *p)$/;"	z	function:handle_trace_fs	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int handle_trace_notify(struct blk_io_trace *t)$/;"	z	function:handle_trace_notify	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static int t_to_rwdir(struct blk_io_trace *t)$/;"	z	function:t_to_rwdir	typeref:struct:blk_io_trace *	file:
t	t/btrace2fio.c	/^static void byteswap_trace(struct blk_io_trace *t)$/;"	z	function:byteswap_trace	typeref:struct:blk_io_trace *	file:
t	t/time-test.c	/^static unsigned long long _get_nsec(int mode, unsigned long long t)$/;"	z	function:_get_nsec	typeref:typename:unsigned long long	file:
t	t/time-test.c	/^static unsigned long long get_nsec(int mode, unsigned long long t)$/;"	z	function:get_nsec	typeref:typename:unsigned long long	file:
t	t/time-test.c	/^static void update_clock(unsigned long long t)$/;"	z	function:update_clock	typeref:typename:unsigned long long	file:
t	time.c	/^void fill_start_time(struct timespec *t)$/;"	z	function:fill_start_time	typeref:struct:timespec *	file:
t/axmap	Makefile	/^t\/axmap: $(T_AXMAP_OBJS)$/;"	t
t/fio-btrace2fio	Makefile	/^t\/fio-btrace2fio: $(T_BTRACE_FIO_OBJS)$/;"	t
t/fio-dedupe	Makefile	/^t\/fio-dedupe: $(T_DEDUPE_OBJS)$/;"	t
t/fio-genzipf	Makefile	/^t\/fio-genzipf: $(T_ZIPF_OBJS)$/;"	t
t/fio-verify-state	Makefile	/^t\/fio-verify-state: $(T_VS_OBJS)$/;"	t
t/fuzz/fuzz_parseini	Makefile	/^t\/fuzz\/fuzz_parseini: $(T_FUZZ_OBJS)$/;"	t
t/gen-rand	Makefile	/^t\/gen-rand: $(T_GEN_RAND_OBJS)$/;"	t
t/ieee754	Makefile	/^t\/ieee754: $(T_IEEE_OBJS)$/;"	t
t/io_uring	Makefile	/^t\/io_uring: $(T_IOU_RING_OBJS)$/;"	t
t/io_uring.o	Makefile	/^t\/io_uring.o: os\/linux\/io_uring.h$/;"	t
t/lfsr-test	Makefile	/^t\/lfsr-test: $(T_LFSR_TEST_OBJS)$/;"	t
t/memlock	Makefile	/^t\/memlock: $(T_MEMLOCK_OBJS)$/;"	t
t/read-to-pipe-async	Makefile	/^t\/read-to-pipe-async: $(T_PIPE_ASYNC_OBJS)$/;"	t
t/stest	Makefile	/^t\/stest: $(T_SMALLOC_OBJS)$/;"	t
t/time-test	Makefile	/^t\/time-test: $(T_TT_OBJS)$/;"	t
t_bytes_align	blktrace.c	/^static void t_bytes_align(struct thread_options *o, struct blk_io_trace *t)$/;"	f	typeref:typename:void	file:
t_crc16	crc/test.c	/^static void t_crc16(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_crc32	crc/test.c	/^static void t_crc32(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_crc32c	crc/test.c	/^static void t_crc32c(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_crc64	crc/test.c	/^static void t_crc64(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_crc7	crc/test.c	/^static void t_crc7(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_fnv	crc/test.c	/^static void t_fnv(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_get_ddir	blktrace.c	/^static enum fio_ddir t_get_ddir(struct blk_io_trace *t)$/;"	f	typeref:enum:fio_ddir	file:
t_hybrid	lib/memcpy.c	/^static void t_hybrid(struct memcpy_test *test)$/;"	f	typeref:typename:void	file:
t_idx	profiles/tiobench.c	/^static char sz_idx[80], bs_idx[80], loop_idx[80], dir_idx[80], t_idx[80];$/;"	v	typeref:typename:char[80]	file:
t_is_write	blktrace.c	/^static bool t_is_write(struct blk_io_trace *t)$/;"	f	typeref:typename:bool	file:
t_jhash	crc/test.c	/^static void t_jhash(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_md5	crc/test.c	/^static void t_md5(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_memcpy	lib/memcpy.c	/^static void t_memcpy(struct memcpy_test *test)$/;"	f	typeref:typename:void	file:
t_memmove	lib/memcpy.c	/^static void t_memmove(struct memcpy_test *test)$/;"	f	typeref:typename:void	file:
t_murmur3	crc/test.c	/^static void t_murmur3(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_rate	backend.c	/^static void reap_threads(unsigned int *nr_running, uint64_t *t_rate,$/;"	z	function:reap_threads	typeref:typename:uint64_t *	file:
t_sha1	crc/test.c	/^static void t_sha1(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha256	crc/test.c	/^static void t_sha256(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha3_224	crc/test.c	/^static void t_sha3_224(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha3_256	crc/test.c	/^static void t_sha3_256(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha3_384	crc/test.c	/^static void t_sha3_384(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha3_512	crc/test.c	/^static void t_sha3_512(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_sha512	crc/test.c	/^static void t_sha512(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
t_simple	lib/memcpy.c	/^static void t_simple(struct memcpy_test *test)$/;"	f	typeref:typename:void	file:
t_to_rwdir	t/btrace2fio.c	/^static int t_to_rwdir(struct blk_io_trace *t)$/;"	f	typeref:typename:int	file:
t_xxhash	crc/test.c	/^static void t_xxhash(struct test_type *t, void *buf, size_t size)$/;"	f	typeref:typename:void	file:
tag	client.c	/^			      struct thread_options *o, uint64_t *tag)$/;"	z	function:fio_client_update_options	typeref:typename:uint64_t *	file:
tag	client.c	/^			   size_t size, uint64_t tag)$/;"	z	function:sendfile_reply	typeref:typename:uint64_t	file:
tag	client.c	/^			 uint64_t tag)$/;"	z	function:fio_send_file	typeref:typename:uint64_t	file:
tag	client.c	/^int fio_client_wait_for_reply(struct fio_client *client, uint64_t tag)$/;"	z	function:fio_client_wait_for_reply	typeref:typename:uint64_t	file:
tag	server.c	/^				off_t size, uint64_t tag, uint32_t flags)$/;"	z	function:fio_send_cmd_ext_pdu	typeref:typename:uint64_t	file:
tag	server.c	/^			       uint32_t pdu_len, uint64_t tag)$/;"	z	function:__fio_init_net_cmd	typeref:typename:uint64_t	file:
tag	server.c	/^			     const void *pdu, uint32_t pdu_len, uint64_t tag)$/;"	z	function:fio_init_net_cmd	typeref:typename:uint64_t	file:
tag	server.c	/^	uint64_t tag;$/;"	m	struct:sk_entry	typeref:typename:uint64_t	file:
tag	server.c	/^int fio_net_send_simple_cmd(int sk, uint16_t opcode, uint64_t tag,$/;"	z	function:fio_net_send_simple_cmd	typeref:typename:uint64_t	file:
tag	server.c	/^static int fio_net_send_simple_stack_cmd(int sk, uint16_t opcode, uint64_t tag)$/;"	z	function:fio_net_send_simple_stack_cmd	typeref:typename:uint64_t	file:
tag	server.c	/^static uint64_t alloc_reply(uint64_t tag, uint16_t opcode)$/;"	z	function:alloc_reply	typeref:typename:uint64_t	file:
tag	server.c	/^static void add_reply(uint64_t tag, struct flist_head *list)$/;"	z	function:add_reply	typeref:typename:uint64_t	file:
tag	server.c	/^static void free_reply(uint64_t tag)$/;"	z	function:free_reply	typeref:typename:uint64_t	file:
tag	server.h	/^	uint64_t tag;		\/* passed back on reply *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint64_t
tagptr	server.c	/^					 size_t size, uint64_t *tagptr,$/;"	z	function:fio_net_prep_cmd	typeref:typename:uint64_t *	file:
tagptr	server.c	/^			     uint64_t *tagptr, int flags)$/;"	z	function:fio_net_queue_cmd	typeref:typename:uint64_t *	file:
tagptr	server.c	/^		     uint64_t *tagptr, struct flist_head *list)$/;"	z	function:fio_net_send_cmd	typeref:typename:uint64_t *	file:
tags	os/linux/io_uring.h	/^	__aligned_u64 tags;$/;"	m	struct:io_uring_rsrc_register	typeref:typename:__aligned_u64
tags	os/linux/io_uring.h	/^	__aligned_u64 tags;$/;"	m	struct:io_uring_rsrc_update2	typeref:typename:__aligned_u64
tail	engines/ime.c	/^	unsigned int tail;			\/* index used to pop *\/$/;"	m	struct:ime_data	typeref:typename:unsigned int	file:
tail	engines/io_uring.c	/^	unsigned *tail;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
tail	engines/io_uring.c	/^	unsigned *tail;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
tail	engines/libaio.c	/^	unsigned int tail;$/;"	m	struct:libaio_data	typeref:typename:unsigned int	file:
tail	engines/libaio.c	/^	unsigned tail;$/;"	m	struct:aio_ring	typeref:typename:unsigned	file:
tail	io_u_queue.h	/^	unsigned int tail;$/;"	m	struct:io_u_ring	typeref:typename:unsigned int
tail	os/linux/io_uring.h	/^	__u32 tail;$/;"	m	struct:io_cqring_offsets	typeref:typename:__u32
tail	os/linux/io_uring.h	/^	__u32 tail;$/;"	m	struct:io_sqring_offsets	typeref:typename:__u32
tail	steadystate.h	/^	unsigned int tail;$/;"	m	struct:steadystate_data	typeref:typename:unsigned int
tail	t/io_uring.c	/^	unsigned *tail;$/;"	m	struct:io_cq_ring	typeref:typename:unsigned *	file:
tail	t/io_uring.c	/^	unsigned *tail;$/;"	m	struct:io_sq_ring	typeref:typename:unsigned *	file:
taps	lib/lfsr.c	/^static uint64_t lfsr_create_xormask(uint8_t *taps)$/;"	z	function:lfsr_create_xormask	typeref:typename:uint8_t *	file:
taps	lib/lfsr.h	/^	unsigned int taps[FIO_MAX_TAPS];$/;"	m	struct:lfsr_taps	typeref:typename:unsigned int[]
target	options.c	/^int set_name_idx(char *target, size_t tlen, char *input, int index,$/;"	z	function:set_name_idx	typeref:typename:char *	file:
target	t/steadystate_tests.py	/^                        objsame, met, mean, target = check(data=jsonjob['steadystate']['data'],$/;"	v
taus258_state	lib/rand.h	/^struct taus258_state {$/;"	s
taus88_state	lib/rand.h	/^struct taus88_state {$/;"	s
tb_opts	profiles/tiobench.c	/^static const char *tb_opts[] = {$/;"	v	typeref:typename:const char * []	file:
tb_prep_cmdline	profiles/tiobench.c	/^static int tb_prep_cmdline(void)$/;"	f	typeref:typename:int	file:
td	backend.c	/^	struct thread_data *td;$/;"	m	struct:fork_data	typeref:struct:thread_data *	file:
td	backend.c	/^int init_io_u_buffers(struct thread_data *td)$/;"	z	function:init_io_u_buffers	typeref:struct:thread_data *	file:
td	backend.c	/^int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	function:io_queue_event	typeref:struct:thread_data *	file:
td	backend.c	/^static bool __check_min_rate(struct thread_data *td, struct timespec *now,$/;"	z	function:__check_min_rate	typeref:struct:thread_data *	file:
td	backend.c	/^static bool break_on_this_error(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:break_on_this_error	typeref:struct:thread_data *	file:
td	backend.c	/^static bool check_min_rate(struct thread_data *td, struct timespec *now)$/;"	z	function:check_min_rate	typeref:struct:thread_data *	file:
td	backend.c	/^static bool check_mount_writes(struct thread_data *td)$/;"	z	function:check_mount_writes	typeref:struct:thread_data *	file:
td	backend.c	/^static bool exceeds_number_ios(struct thread_data *td)$/;"	z	function:exceeds_number_ios	typeref:struct:thread_data *	file:
td	backend.c	/^static bool fio_io_sync(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_io_sync	typeref:struct:thread_data *	file:
td	backend.c	/^static bool io_bytes_exceeded(struct thread_data *td, uint64_t *this_bytes)$/;"	z	function:io_bytes_exceeded	typeref:struct:thread_data *	file:
td	backend.c	/^static bool io_complete_bytes_exceeded(struct thread_data *td)$/;"	z	function:io_complete_bytes_exceeded	typeref:struct:thread_data *	file:
td	backend.c	/^static bool io_issue_bytes_exceeded(struct thread_data *td)$/;"	z	function:io_issue_bytes_exceeded	typeref:struct:thread_data *	file:
td	backend.c	/^static bool keep_running(struct thread_data *td)$/;"	z	function:keep_running	typeref:struct:thread_data *	file:
td	backend.c	/^static enum fio_q_status io_u_submit(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_submit	typeref:struct:thread_data *	file:
td	backend.c	/^static inline bool io_in_polling(struct thread_data *td)$/;"	z	function:io_in_polling	typeref:struct:thread_data *	file:
td	backend.c	/^static inline bool runtime_exceeded(struct thread_data *td, struct timespec *t)$/;"	z	function:runtime_exceeded	typeref:struct:thread_data *	file:
td	backend.c	/^static inline void __update_ts_cache(struct thread_data *td)$/;"	z	function:__update_ts_cache	typeref:struct:thread_data *	file:
td	backend.c	/^static inline void update_runtime(struct thread_data *td,$/;"	z	function:update_runtime	typeref:struct:thread_data *	file:
td	backend.c	/^static inline void update_ts_cache(struct thread_data *td)$/;"	z	function:update_ts_cache	typeref:struct:thread_data *	file:
td	backend.c	/^static int fio_file_fsync(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_file_fsync	typeref:struct:thread_data *	file:
td	backend.c	/^static int fio_verify_load_state(struct thread_data *td)$/;"	z	function:fio_verify_load_state	typeref:struct:thread_data *	file:
td	backend.c	/^static int init_file_completion_logging(struct thread_data *td,$/;"	z	function:init_file_completion_logging	typeref:struct:thread_data *	file:
td	backend.c	/^static int init_io_u(struct thread_data *td)$/;"	z	function:init_io_u	typeref:struct:thread_data *	file:
td	backend.c	/^static int set_ioscheduler(struct thread_data *td, struct fio_file *file)$/;"	z	function:set_ioscheduler	typeref:struct:thread_data *	file:
td	backend.c	/^static int switch_ioscheduler(struct thread_data *td)$/;"	z	function:switch_ioscheduler	typeref:struct:thread_data *	file:
td	backend.c	/^static int unlink_all_files(struct thread_data *td)$/;"	z	function:unlink_all_files	typeref:struct:thread_data *	file:
td	backend.c	/^static int wait_for_completions(struct thread_data *td, struct timespec *time)$/;"	z	function:wait_for_completions	typeref:struct:thread_data *	file:
td	backend.c	/^static long long usec_for_io(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:usec_for_io	typeref:struct:thread_data *	file:
td	backend.c	/^static uint64_t do_dry_run(struct thread_data *td)$/;"	z	function:do_dry_run	typeref:struct:thread_data *	file:
td	backend.c	/^static void check_update_rusage(struct thread_data *td)$/;"	z	function:check_update_rusage	typeref:struct:thread_data *	file:
td	backend.c	/^static void cleanup_io_u(struct thread_data *td)$/;"	z	function:cleanup_io_u	typeref:struct:thread_data *	file:
td	backend.c	/^static void cleanup_pending_aio(struct thread_data *td)$/;"	z	function:cleanup_pending_aio	typeref:struct:thread_data *	file:
td	backend.c	/^static void do_io(struct thread_data *td, uint64_t *bytes_done)$/;"	z	function:do_io	typeref:struct:thread_data *	file:
td	backend.c	/^static void do_verify(struct thread_data *td, uint64_t verify_bytes)$/;"	z	function:do_verify	typeref:struct:thread_data *	file:
td	backend.c	/^static void free_file_completion_logging(struct thread_data *td)$/;"	z	function:free_file_completion_logging	typeref:struct:thread_data *	file:
td	backend.c	/^static void handle_thinktime(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:handle_thinktime	typeref:struct:thread_data *	file:
td	backend.c	/^static void init_thinktime(struct thread_data *td)$/;"	z	function:init_thinktime	typeref:struct:thread_data *	file:
td	blktrace.c	/^bool init_blktrace_read(struct thread_data *td, const char *filename, int need_swap)$/;"	z	function:init_blktrace_read	typeref:struct:thread_data *	file:
td	blktrace.c	/^bool read_blktrace(struct thread_data* td)$/;"	z	function:read_blktrace	typeref:struct:thread_data *	file:
td	blktrace.c	/^int merge_blktrace_iologs(struct thread_data *td)$/;"	z	function:merge_blktrace_iologs	typeref:struct:thread_data *	file:
td	blktrace.c	/^static bool handle_trace_discard(struct thread_data *td,$/;"	z	function:handle_trace_discard	typeref:struct:thread_data *	file:
td	blktrace.c	/^static bool handle_trace_flush(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:handle_trace_flush	typeref:struct:thread_data *	file:
td	blktrace.c	/^static bool handle_trace_fs(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:handle_trace_fs	typeref:struct:thread_data *	file:
td	blktrace.c	/^static bool queue_trace(struct thread_data *td, struct blk_io_trace *t,$/;"	z	function:queue_trace	typeref:struct:thread_data *	file:
td	blktrace.c	/^static int read_trace(struct thread_data *td, struct blktrace_cursor *bc)$/;"	z	function:read_trace	typeref:struct:thread_data *	file:
td	blktrace.c	/^static int trace_add_file(struct thread_data *td, __u32 device,$/;"	z	function:trace_add_file	typeref:struct:thread_data *	file:
td	blktrace.c	/^static void store_ipo(struct thread_data *td, unsigned long long offset,$/;"	z	function:store_ipo	typeref:struct:thread_data *	file:
td	blktrace.c	/^static void trace_add_open_close_event(struct thread_data *td, int fileno, enum file_log_act act/;"	z	function:trace_add_open_close_event	typeref:struct:thread_data *	file:
td	blktrace.h	/^bool read_blktrace(struct thread_data* td);$/;"	z	prototype:read_blktrace	typeref:struct:thread_data *	file:
td	blktrace.h	/^int merge_blktrace_iologs(struct thread_data *td);$/;"	z	prototype:merge_blktrace_iologs	typeref:struct:thread_data *	file:
td	blktrace.h	/^static inline bool init_blktrace_read(struct thread_data *td, const char *fname,$/;"	z	function:init_blktrace_read	typeref:struct:thread_data *	file:
td	blktrace.h	/^static inline bool read_blktrace(struct thread_data* td)$/;"	z	function:read_blktrace	typeref:struct:thread_data *	file:
td	blktrace.h	/^static inline int merge_blktrace_iologs(struct thread_data *td)$/;"	z	function:merge_blktrace_iologs	typeref:struct:thread_data *	file:
td	cgroup.c	/^int cgroup_setup(struct thread_data *td, struct flist_head *clist, struct cgroup_mnt **mnt)$/;"	z	function:cgroup_setup	typeref:struct:thread_data *	file:
td	cgroup.c	/^static char *get_cgroup_root(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:get_cgroup_root	typeref:struct:thread_data *	file:
td	cgroup.c	/^static int cgroup_del_pid(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_del_pid	typeref:struct:thread_data *	file:
td	cgroup.c	/^static int cgroup_write_pid(struct thread_data *td, char *path, bool cgroup2)$/;"	z	function:cgroup_write_pid	typeref:struct:thread_data *	file:
td	cgroup.c	/^static int write_int_to_file(struct thread_data *td, const char *path,$/;"	z	function:write_int_to_file	typeref:struct:thread_data *	file:
td	cgroup.c	/^static struct cgroup_mnt *find_cgroup_mnt(struct thread_data *td)$/;"	z	function:find_cgroup_mnt	typeref:struct:thread_data *	file:
td	cgroup.c	/^static void add_cgroup(struct thread_data *td, const char *name,$/;"	z	function:add_cgroup	typeref:struct:thread_data *	file:
td	cgroup.c	/^void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_shutdown	typeref:struct:thread_data *	file:
td	cgroup.h	/^static inline int cgroup_setup(struct thread_data *td, struct flist_head *list,$/;"	z	function:cgroup_setup	typeref:struct:thread_data *	file:
td	cgroup.h	/^static inline void cgroup_shutdown(struct thread_data *td, struct cgroup_mnt *mnt)$/;"	z	function:cgroup_shutdown	typeref:struct:thread_data *	file:
td	dedupe.c	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedup)$/;"	z	function:init_dedupe_working_set_seeds	typeref:struct:thread_data *	file:
td	dedupe.h	/^int init_dedupe_working_set_seeds(struct thread_data *td, bool global_dedupe);$/;"	z	prototype:init_dedupe_working_set_seeds	typeref:struct:thread_data *	file:
td	diskutil.c	/^static struct disk_util *__init_disk_util(struct thread_data *td,$/;"	z	function:__init_disk_util	typeref:struct:thread_data *	file:
td	diskutil.c	/^static struct disk_util *__init_per_file_disk_util(struct thread_data *td,$/;"	z	function:__init_per_file_disk_util	typeref:struct:thread_data *	file:
td	diskutil.c	/^static struct disk_util *__init_per_file_disk_util(struct thread_data *td,$/;"	z	prototype:__init_per_file_disk_util	typeref:struct:thread_data *	file:
td	diskutil.c	/^static struct disk_util *disk_util_add(struct thread_data *td, int majdev,$/;"	z	function:disk_util_add	typeref:struct:thread_data *	file:
td	diskutil.c	/^static struct disk_util *init_per_file_disk_util(struct thread_data *td,$/;"	z	function:init_per_file_disk_util	typeref:struct:thread_data *	file:
td	diskutil.c	/^static void find_add_disk_slaves(struct thread_data *td, char *path,$/;"	z	function:find_add_disk_slaves	typeref:struct:thread_data *	file:
td	diskutil.c	/^void init_disk_util(struct thread_data *td)$/;"	z	function:init_disk_util	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	function:fio_cmdprio_set_ioprio	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	function:fio_cmdprio_init	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_parse(struct thread_data *td, const char *input,$/;"	z	function:fio_cmdprio_bssplit_parse	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^static int fio_cmdprio_gen_perc(struct thread_data *td, struct cmdprio *cmdprio)$/;"	z	function:fio_cmdprio_gen_perc	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^static int fio_cmdprio_parse_and_gen(struct thread_data *td,$/;"	z	function:fio_cmdprio_parse_and_gen	typeref:struct:thread_data *	file:
td	engines/cmdprio.c	/^static int fio_cmdprio_parse_and_gen_bssplit(struct thread_data *td,$/;"	z	function:fio_cmdprio_parse_and_gen_bssplit	typeref:struct:thread_data *	file:
td	engines/cmdprio.h	/^bool fio_cmdprio_set_ioprio(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	prototype:fio_cmdprio_set_ioprio	typeref:struct:thread_data *	file:
td	engines/cmdprio.h	/^int fio_cmdprio_init(struct thread_data *td, struct cmdprio *cmdprio,$/;"	z	prototype:fio_cmdprio_init	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static enum fio_q_status fio_cpuio_queue(struct thread_data *td,$/;"	z	function:fio_cpuio_queue	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static int do_qsort(struct thread_data *td)$/;"	z	function:do_qsort	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static int fio_cpuio_init(struct thread_data *td)$/;"	z	function:fio_cpuio_init	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static int fio_cpuio_open(struct thread_data fio_unused *td,$/;"	z	function:fio_cpuio_open	typeref:struct:thread_data fio_unused *	file:
td	engines/cpu.c	/^static int noop_init(struct thread_data *td)$/;"	z	function:noop_init	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static int qsort_cleanup(struct thread_data *td)$/;"	z	function:qsort_cleanup	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static int qsort_init(struct thread_data *td)$/;"	z	function:qsort_init	typeref:struct:thread_data *	file:
td	engines/cpu.c	/^static void fio_cpuio_cleanup(struct thread_data *td)$/;"	z	function:fio_cpuio_cleanup	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^fio_devdax_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_get_file_size	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static enum fio_q_status fio_devdax_queue(struct thread_data *td,$/;"	z	function:fio_devdax_queue	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_close_file	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_devdax_file	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_init(struct thread_data *td)$/;"	z	function:fio_devdax_init	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_devdax_open_file	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep_full	typeref:struct:thread_data *	file:
td	engines/dev-dax.c	/^static int fio_devdax_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_devdax_prep_limited	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static enum fio_q_status daos_fio_queue(struct thread_data *td,$/;"	z	function:daos_fio_queue	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_close	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_get_file_size	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:daos_fio_getevents	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_global_init(struct thread_data *td)$/;"	z	function:daos_fio_global_init	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_init(struct thread_data *td)$/;"	z	function:daos_fio_init	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_invalidate	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:daos_fio_io_u_init	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_open	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_prep(struct thread_data fio_unused *td, struct io_u *io_u)$/;"	z	function:daos_fio_prep	typeref:struct:thread_data fio_unused *	file:
td	engines/dfs.c	/^static int daos_fio_setup(struct thread_data *td)$/;"	z	function:daos_fio_setup	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static int daos_fio_unlink(struct thread_data *td, struct fio_file *f)$/;"	z	function:daos_fio_unlink	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static struct io_u * daos_fio_event(struct thread_data *td, int event)$/;"	z	function:daos_fio_event	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static void daos_fio_cleanup(struct thread_data *td)$/;"	z	function:daos_fio_cleanup	typeref:struct:thread_data *	file:
td	engines/dfs.c	/^static void daos_fio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:daos_fio_io_u_free	typeref:struct:thread_data *	file:
td	engines/e4defrag.c	/^static enum fio_q_status fio_e4defrag_queue(struct thread_data *td,$/;"	z	function:fio_e4defrag_queue	typeref:struct:thread_data *	file:
td	engines/e4defrag.c	/^static int fio_e4defrag_init(struct thread_data *td)$/;"	z	function:fio_e4defrag_init	typeref:struct:thread_data *	file:
td	engines/e4defrag.c	/^static void fio_e4defrag_cleanup(struct thread_data *td)$/;"	z	function:fio_e4defrag_cleanup	typeref:struct:thread_data *	file:
td	engines/exec.c	/^fio_exec_open(struct thread_data fio_unused * td,$/;"	z	function:fio_exec_open	typeref:struct:thread_data fio_unused *	file:
td	engines/exec.c	/^fio_exec_queue(struct thread_data *td, struct io_u fio_unused * io_u)$/;"	z	function:fio_exec_queue	typeref:struct:thread_data *	file:
td	engines/exec.c	/^static int fio_exec_init(struct thread_data *td)$/;"	z	function:fio_exec_init	typeref:struct:thread_data *	file:
td	engines/exec.c	/^static void fio_exec_cleanup(struct thread_data *td)$/;"	z	function:fio_exec_cleanup	typeref:struct:thread_data *	file:
td	engines/falloc.c	/^static enum fio_q_status fio_fallocate_queue(struct thread_data *td,$/;"	z	function:fio_fallocate_queue	typeref:struct:thread_data *	file:
td	engines/falloc.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:open_file	typeref:struct:thread_data *	file:
td	engines/filecreate.c	/^static enum fio_q_status queue_io(struct thread_data *td,$/;"	z	function:queue_io	typeref:struct:thread_data *	file:
td	engines/filecreate.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_file_size	typeref:struct:thread_data *	file:
td	engines/filecreate.c	/^static int init(struct thread_data *td)$/;"	z	function:init	typeref:struct:thread_data *	file:
td	engines/filecreate.c	/^static int open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:open_file	typeref:struct:thread_data *	file:
td	engines/filecreate.c	/^static void cleanup(struct thread_data *td)$/;"	z	function:cleanup	typeref:struct:thread_data *	file:
td	engines/filedelete.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	z	function:queue_io	typeref:struct:thread_data *	file:
td	engines/filedelete.c	/^static int delete_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:delete_file	typeref:struct:thread_data *	file:
td	engines/filedelete.c	/^static int delete_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:delete_invalidate	typeref:struct:thread_data *	file:
td	engines/filedelete.c	/^static int init(struct thread_data *td)$/;"	z	function:init	typeref:struct:thread_data *	file:
td	engines/filedelete.c	/^static void cleanup(struct thread_data *td)$/;"	z	function:cleanup	typeref:struct:thread_data *	file:
td	engines/filestat.c	/^static enum fio_q_status queue_io(struct thread_data *td, struct io_u fio_unused *io_u)$/;"	z	function:queue_io	typeref:struct:thread_data *	file:
td	engines/filestat.c	/^static int init(struct thread_data *td)$/;"	z	function:init	typeref:struct:thread_data *	file:
td	engines/filestat.c	/^static int stat_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:stat_file	typeref:struct:thread_data *	file:
td	engines/filestat.c	/^static int stat_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:stat_invalidate	typeref:struct:thread_data *	file:
td	engines/filestat.c	/^static void cleanup(struct thread_data *td)$/;"	z	function:cleanup	typeref:struct:thread_data *	file:
td	engines/ftruncate.c	/^static enum fio_q_status fio_ftruncate_queue(struct thread_data *td,$/;"	z	function:fio_ftruncate_queue	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern int fio_gf_close_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_close_file	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_get_file_size	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern int fio_gf_open_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_open_file	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern int fio_gf_setup(struct thread_data *td);$/;"	z	prototype:fio_gf_setup	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:fio_gf_unlink_file	typeref:struct:thread_data *	file:
td	engines/gfapi.h	/^extern void fio_gf_cleanup(struct thread_data *td);$/;"	z	prototype:fio_gf_cleanup	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^int fio_gf_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_close_file	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^int fio_gf_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_get_file_size	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^int fio_gf_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_open_file	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^int fio_gf_setup(struct thread_data *td)$/;"	z	function:fio_gf_setup	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^int fio_gf_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_gf_unlink_file	typeref:struct:thread_data *	file:
td	engines/glusterfs.c	/^void fio_gf_cleanup(struct thread_data *td)$/;"	z	function:fio_gf_cleanup	typeref:struct:thread_data *	file:
td	engines/glusterfs_async.c	/^static enum fio_q_status fio_gf_async_queue(struct thread_data fio_unused * td,$/;"	z	function:fio_gf_async_queue	typeref:struct:thread_data fio_unused *	file:
td	engines/glusterfs_async.c	/^static int fio_gf_async_setup(struct thread_data *td)$/;"	z	function:fio_gf_async_setup	typeref:struct:thread_data *	file:
td	engines/glusterfs_async.c	/^static int fio_gf_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_gf_getevents	typeref:struct:thread_data *	file:
td	engines/glusterfs_async.c	/^static int fio_gf_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_io_u_init	typeref:struct:thread_data *	file:
td	engines/glusterfs_async.c	/^static struct io_u *fio_gf_event(struct thread_data *td, int event)$/;"	z	function:fio_gf_event	typeref:struct:thread_data *	file:
td	engines/glusterfs_async.c	/^static void fio_gf_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_io_u_free	typeref:struct:thread_data *	file:
td	engines/glusterfs_sync.c	/^static enum fio_q_status fio_gf_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_queue	typeref:struct:thread_data *	file:
td	engines/glusterfs_sync.c	/^static int fio_gf_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_gf_prep	typeref:struct:thread_data *	file:
td	engines/http.c	/^int fio_http_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_http_getevents	typeref:struct:thread_data *	file:
td	engines/http.c	/^static enum fio_q_status fio_http_queue(struct thread_data *td,$/;"	z	function:fio_http_queue	typeref:struct:thread_data *	file:
td	engines/http.c	/^static int fio_http_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_http_invalidate	typeref:struct:thread_data *	file:
td	engines/http.c	/^static int fio_http_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_http_open	typeref:struct:thread_data *	file:
td	engines/http.c	/^static int fio_http_setup(struct thread_data *td)$/;"	z	function:fio_http_setup	typeref:struct:thread_data *	file:
td	engines/http.c	/^static struct io_u *fio_http_event(struct thread_data *td, int event)$/;"	z	function:fio_http_event	typeref:struct:thread_data *	file:
td	engines/http.c	/^static void fio_http_cleanup(struct thread_data *td)$/;"	z	function:fio_http_cleanup	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static enum fio_q_status fio_ime_aio_queue(struct thread_data *td,$/;"	z	function:fio_ime_aio_queue	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static enum fio_q_status fio_ime_psync_queue(struct thread_data *td,$/;"	z	function:fio_ime_psync_queue	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static enum fio_q_status fio_ime_psyncv_queue(struct thread_data *td,$/;"	z	function:fio_ime_psyncv_queue	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_aio_commit(struct thread_data *td)$/;"	z	function:fio_ime_aio_commit	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_aio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ime_aio_getevents	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_aio_init(struct thread_data *td)$/;"	z	function:fio_ime_aio_init	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:fio_ime_close_file	typeref:struct:thread_data fio_unused *	file:
td	engines/ime.c	/^static int fio_ime_engine_init(struct thread_data *td)$/;"	z	function:fio_ime_engine_init	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_get_file_size	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_open_file	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_psync_end(struct thread_data *td, struct io_u *io_u, ssize_t ret)$/;"	z	function:fio_ime_psync_end	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_psyncv_commit(struct thread_data *td)$/;"	z	function:fio_ime_psyncv_commit	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_psyncv_end(struct thread_data *td, ssize_t bytes)$/;"	z	function:fio_ime_psyncv_end	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_psyncv_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ime_psyncv_getevents	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_psyncv_init(struct thread_data *td)$/;"	z	function:fio_ime_psyncv_init	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_setup(struct thread_data *td)$/;"	z	function:fio_ime_setup	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static int fio_ime_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ime_unlink_file	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static struct io_u *fio_ime_event(struct thread_data *td, int event)$/;"	z	function:fio_ime_event	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static void fio_ime_aio_clean(struct thread_data *td)$/;"	z	function:fio_ime_aio_clean	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static void fio_ime_engine_finalize(struct thread_data *td)$/;"	z	function:fio_ime_engine_finalize	typeref:struct:thread_data *	file:
td	engines/ime.c	/^static void fio_ime_psyncv_clean(struct thread_data *td)$/;"	z	function:fio_ime_psyncv_clean	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^	struct thread_data *td;$/;"	m	struct:ioring_options	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static enum fio_q_status fio_ioring_queue(struct thread_data *td,$/;"	z	function:fio_ioring_queue	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static inline void fio_ioring_cmdprio_prep(struct thread_data *td,$/;"	z	function:fio_ioring_cmdprio_prep	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ioring_close_file	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_commit(struct thread_data *td)$/;"	z	function:fio_ioring_commit	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_cqring_reap(struct thread_data *td, unsigned int events,$/;"	z	function:fio_ioring_cqring_reap	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_ioring_getevents	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_init(struct thread_data *td)$/;"	z	function:fio_ioring_init	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ioring_io_u_init	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_ioring_open_file	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_post_init(struct thread_data *td)$/;"	z	function:fio_ioring_post_init	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ioring_prep	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_queue_init(struct thread_data *td)$/;"	z	function:fio_ioring_queue_init	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static int fio_ioring_register_files(struct thread_data *td)$/;"	z	function:fio_ioring_register_files	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static struct io_u *fio_ioring_event(struct thread_data *td, int event)$/;"	z	function:fio_ioring_event	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static void fio_ioring_cleanup(struct thread_data *td)$/;"	z	function:fio_ioring_cleanup	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static void fio_ioring_probe(struct thread_data *td)$/;"	z	function:fio_ioring_probe	typeref:struct:thread_data *	file:
td	engines/io_uring.c	/^static void fio_ioring_queued(struct thread_data *td, int start, int nr)$/;"	z	function:fio_ioring_queued	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^	struct thread_data *td;$/;"	m	struct:libaio_options	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static enum fio_q_status fio_libaio_queue(struct thread_data *td,$/;"	z	function:fio_libaio_queue	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static inline void fio_libaio_cmdprio_prep(struct thread_data *td,$/;"	z	function:fio_libaio_cmdprio_prep	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_cancel(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libaio_cancel	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_commit(struct thread_data *td)$/;"	z	function:fio_libaio_commit	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_commit(struct thread_data *td);$/;"	z	prototype:fio_libaio_commit	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_libaio_getevents	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_init(struct thread_data *td)$/;"	z	function:fio_libaio_init	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_init(struct thread_data *td);$/;"	z	prototype:fio_libaio_init	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_post_init(struct thread_data *td)$/;"	z	function:fio_libaio_post_init	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static int fio_libaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libaio_prep	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static struct io_u *fio_libaio_event(struct thread_data *td, int event)$/;"	z	function:fio_libaio_event	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static void fio_libaio_cleanup(struct thread_data *td)$/;"	z	function:fio_libaio_cleanup	typeref:struct:thread_data *	file:
td	engines/libaio.c	/^static void fio_libaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_libaio_queued	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^	struct thread_data *td;$/;"	m	struct:libcufile_options	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static enum fio_q_status fio_libcufile_queue(struct thread_data *td,$/;"	z	function:fio_libcufile_queue	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static inline int fio_libcufile_post_read(struct thread_data *td,$/;"	z	function:fio_libcufile_post_read	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static inline int fio_libcufile_pre_write(struct thread_data *td,$/;"	z	function:fio_libcufile_pre_write	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static int fio_libcufile_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libcufile_close_file	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static int fio_libcufile_find_gpu_id(struct thread_data *td)$/;"	z	function:fio_libcufile_find_gpu_id	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static int fio_libcufile_init(struct thread_data *td)$/;"	z	function:fio_libcufile_init	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static int fio_libcufile_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	z	function:fio_libcufile_iomem_alloc	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static int fio_libcufile_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libcufile_open_file	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static void fio_libcufile_cleanup(struct thread_data *td)$/;"	z	function:fio_libcufile_cleanup	typeref:struct:thread_data *	file:
td	engines/libcufile.c	/^static void fio_libcufile_iomem_free(struct thread_data *td)$/;"	z	function:fio_libcufile_iomem_free	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^int fio_hdfsio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_hdfsio_close_file	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^int fio_hdfsio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_hdfsio_open_file	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static enum fio_q_status fio_hdfsio_queue(struct thread_data *td,$/;"	z	function:fio_hdfsio_queue	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static int fio_hdfsio_init(struct thread_data *td)$/;"	z	function:fio_hdfsio_init	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static int fio_hdfsio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_io_u_init	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static int fio_hdfsio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_prep	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static int fio_hdfsio_setup(struct thread_data *td)$/;"	z	function:fio_hdfsio_setup	typeref:struct:thread_data *	file:
td	engines/libhdfs.c	/^static void fio_hdfsio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_hdfsio_io_u_free	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static enum fio_q_status fio_iscsi_queue(struct thread_data *td,$/;"	z	function:fio_iscsi_queue	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_iscsi_close_file	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_iscsi_getevents	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_init(struct thread_data *td) {$/;"	z	function:fio_iscsi_init	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_iscsi_open_file	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_iscsi_prep	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static int fio_iscsi_setup(struct thread_data *td)$/;"	z	function:fio_iscsi_setup	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static struct io_u *fio_iscsi_event(struct thread_data *td, int event)$/;"	z	function:fio_iscsi_event	typeref:struct:thread_data *	file:
td	engines/libiscsi.c	/^static void fio_iscsi_cleanup(struct thread_data *td)$/;"	z	function:fio_iscsi_cleanup	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static enum fio_q_status fio_libpmem_queue(struct thread_data *td,$/;"	z	function:fio_libpmem_queue	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static int fio_libpmem_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libpmem_close_file	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static int fio_libpmem_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_libpmem_file	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static int fio_libpmem_init(struct thread_data *td)$/;"	z	function:fio_libpmem_init	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static int fio_libpmem_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libpmem_open_file	typeref:struct:thread_data *	file:
td	engines/libpmem.c	/^static int fio_libpmem_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_libpmem_prep	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:server_queue	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	z	function:client_io_flush	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	z	prototype:client_io_flush	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static int client_init(struct thread_data *td)$/;"	z	function:client_init	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:server_open_file	typeref:struct:thread_data *	file:
td	engines/librpma_apm.c	/^static void client_cleanup(struct thread_data *td)$/;"	z	function:client_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	z	function:librpma_fio_allocate_dram	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	z	function:librpma_fio_allocate_pmem	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^enum fio_q_status librpma_fio_client_queue(struct thread_data *td,$/;"	z	function:librpma_fio_client_queue	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_client_commit(struct thread_data *td)$/;"	z	function:librpma_fio_client_commit	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_client_get_file_size(struct thread_data *td,$/;"	z	function:librpma_fio_client_get_file_size	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:librpma_fio_client_getevents	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_client_init(struct thread_data *td,$/;"	z	function:librpma_fio_client_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_client_post_init(struct thread_data *td)$/;"	z	function:librpma_fio_client_post_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f)$/;"	z	function:librpma_fio_file_nop	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_server_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:librpma_fio_server_close_file	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_server_init(struct thread_data *td)$/;"	z	function:librpma_fio_server_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_server_open_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:librpma_fio_server_open_file	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	z	function:librpma_fio_td_port	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^static enum fio_q_status client_queue_sync(struct thread_data *td,$/;"	z	function:client_queue_sync	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^static int client_getevent_process(struct thread_data *td)$/;"	z	function:client_getevent_process	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event)$/;"	z	function:librpma_fio_client_event	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^void librpma_fio_client_cleanup(struct thread_data *td)$/;"	z	function:librpma_fio_client_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_fio.c	/^void librpma_fio_server_cleanup(struct thread_data *td)$/;"	z	function:librpma_fio_server_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^		struct thread_data *td)$/;"	z	function:librpma_fio_client_io_complete_all_sends	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^char *librpma_fio_allocate_dram(struct thread_data *td, size_t size,$/;"	z	prototype:librpma_fio_allocate_dram	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^char *librpma_fio_allocate_pmem(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:librpma_fio_allocate_pmem	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^enum fio_q_status librpma_fio_client_queue(struct thread_data *td,$/;"	z	prototype:librpma_fio_client_queue	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_client_commit(struct thread_data *td);$/;"	z	prototype:librpma_fio_client_commit	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_client_get_file_size(struct thread_data *td,$/;"	z	prototype:librpma_fio_client_get_file_size	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_client_getevents(struct thread_data *td, unsigned int min,$/;"	z	prototype:librpma_fio_client_getevents	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_client_init(struct thread_data *td,$/;"	z	prototype:librpma_fio_client_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_client_post_init(struct thread_data *td);$/;"	z	prototype:librpma_fio_client_post_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_file_nop(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:librpma_fio_file_nop	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_server_close_file(struct thread_data *td,$/;"	z	prototype:librpma_fio_server_close_file	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_server_init(struct thread_data *td);$/;"	z	prototype:librpma_fio_server_init	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_server_open_file(struct thread_data *td,$/;"	z	prototype:librpma_fio_server_open_file	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^int librpma_fio_td_port(const char *port_base_str, struct thread_data *td,$/;"	z	prototype:librpma_fio_td_port	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^static inline int librpma_fio_client_io_read(struct thread_data *td,$/;"	z	function:librpma_fio_client_io_read	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^static inline int librpma_fio_client_io_write(struct thread_data *td,$/;"	z	function:librpma_fio_client_io_write	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^struct io_u *librpma_fio_client_event(struct thread_data *td, int event);$/;"	z	prototype:librpma_fio_client_event	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^void librpma_fio_client_cleanup(struct thread_data *td);$/;"	z	prototype:librpma_fio_client_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_fio.h	/^void librpma_fio_server_cleanup(struct thread_data *td);$/;"	z	prototype:librpma_fio_server_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static enum fio_q_status server_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:server_queue	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	z	function:client_io_flush	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static inline int client_io_flush(struct thread_data *td,$/;"	z	prototype:client_io_flush	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static inline int server_queue_process(struct thread_data *td)$/;"	z	function:server_queue_process	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int client_init(struct thread_data *td)$/;"	z	function:client_init	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int client_post_init(struct thread_data *td)$/;"	z	function:client_post_init	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int prepare_connection(struct thread_data *td,$/;"	z	function:prepare_connection	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int server_cmpl_process(struct thread_data *td)$/;"	z	function:server_cmpl_process	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int server_init(struct thread_data *td)$/;"	z	function:server_init	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int server_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:server_open_file	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int server_post_init(struct thread_data *td)$/;"	z	function:server_post_init	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static int server_qe_process(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:server_qe_process	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static void client_cleanup(struct thread_data *td)$/;"	z	function:client_cleanup	typeref:struct:thread_data *	file:
td	engines/librpma_gpspm.c	/^static void server_cleanup(struct thread_data *td)$/;"	z	function:server_cleanup	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^ssize_t libzbc_rw(struct thread_data *td, struct io_u *io_u)$/;"	z	function:libzbc_rw	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static enum fio_q_status libzbc_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:libzbc_queue	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_close_dev(struct thread_data *td)$/;"	z	function:libzbc_close_dev	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_close_file	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_get_file_size	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_get_max_open_zones	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_get_zoned_model	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_invalidate	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_open_dev(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_open_dev	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:libzbc_open_file	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_report_zones	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static int libzbc_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:libzbc_reset_wp	typeref:struct:thread_data *	file:
td	engines/libzbc.c	/^static void libzbc_cleanup(struct thread_data *td)$/;"	z	function:libzbc_cleanup	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static bool fio_madvise_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_madvise_file	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static enum fio_q_status fio_mmapio_queue(struct thread_data *td,$/;"	z	function:fio_mmapio_queue	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmap_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_mmap_file	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmap_get_shared(struct thread_data *td)$/;"	z	function:fio_mmap_get_shared	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mmapio_close_file	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_init(struct thread_data *td)$/;"	z	function:fio_mmapio_init	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mmapio_open_file	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_prep_full(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep_full	typeref:struct:thread_data *	file:
td	engines/mmap.c	/^static int fio_mmapio_prep_limited(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_mmapio_prep_limited	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static enum fio_q_status fio_mtd_queue(struct thread_data *td,$/;"	z	function:fio_mtd_queue	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static int fio_mtd_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_close_file	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static int fio_mtd_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_get_file_size	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static int fio_mtd_is_bad(struct thread_data *td,$/;"	z	function:fio_mtd_is_bad	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static int fio_mtd_maybe_mark_bad(struct thread_data *td,$/;"	z	function:fio_mtd_maybe_mark_bad	typeref:struct:thread_data *	file:
td	engines/mtd.c	/^static int fio_mtd_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_mtd_open_file	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static enum fio_q_status nbd_queue(struct thread_data *td,$/;"	z	function:nbd_queue	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:nbd_getevents	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_init(struct thread_data *td)$/;"	z	function:nbd_init	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:nbd_invalidate	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:nbd_io_u_init	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:nbd_open_file	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static int nbd_setup(struct thread_data *td)$/;"	z	function:nbd_setup	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static struct io_u *nbd_event(struct thread_data *td, int event)$/;"	z	function:nbd_event	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static void nbd_cleanup(struct thread_data *td)$/;"	z	function:nbd_cleanup	typeref:struct:thread_data *	file:
td	engines/nbd.c	/^static void nbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:nbd_io_u_free	typeref:struct:thread_data *	file:
td	engines/net.c	/^	struct thread_data *td;$/;"	m	struct:netio_options	typeref:struct:thread_data *	file:
td	engines/net.c	/^static enum fio_q_status __fio_netio_queue(struct thread_data *td,$/;"	z	function:__fio_netio_queue	typeref:struct:thread_data *	file:
td	engines/net.c	/^static enum fio_q_status fio_netio_queue(struct thread_data *td,$/;"	z	function:fio_netio_queue	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_fill_addr(struct thread_data *td, const char *host, int af,$/;"	z	function:fio_fill_addr	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_accept(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_accept	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_close_file	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_connect(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_connect	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_init(struct thread_data *td)$/;"	z	function:fio_netio_init	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_open_file	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_prep	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_recv(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_recv	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_send(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_send	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_send_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_send_open	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup(struct thread_data *td)$/;"	z	function:fio_netio_setup	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_connect(struct thread_data *td)$/;"	z	function:fio_netio_setup_connect	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_connect_inet(struct thread_data *td,$/;"	z	function:fio_netio_setup_connect_inet	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_connect_unix(struct thread_data *td,$/;"	z	function:fio_netio_setup_connect_unix	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_listen(struct thread_data *td)$/;"	z	function:fio_netio_setup_listen	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_listen_inet(struct thread_data *td, short port)$/;"	z	function:fio_netio_setup_listen_inet	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_listen_unix(struct thread_data *td, const char *path)$/;"	z	function:fio_netio_setup_listen_unix	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_setup_splice(struct thread_data *td)$/;"	z	function:fio_netio_setup_splice	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_splice_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_splice_in	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_splice_out(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_netio_splice_out	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int fio_netio_udp_recv_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_udp_recv_open	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int poll_wait(struct thread_data *td, int fd, short events)$/;"	z	function:poll_wait	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int set_mss(struct thread_data *td, int fd)$/;"	z	function:set_mss	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int set_window_size(struct thread_data *td, int fd)$/;"	z	function:set_window_size	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int splice_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:splice_in	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int splice_out(struct thread_data *td, struct io_u *io_u,$/;"	z	function:splice_out	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int vmsplice_io_u_in(struct thread_data *td, struct io_u *io_u)$/;"	z	function:vmsplice_io_u_in	typeref:struct:thread_data *	file:
td	engines/net.c	/^static int vmsplice_io_u_out(struct thread_data *td, struct io_u *io_u,$/;"	z	function:vmsplice_io_u_out	typeref:struct:thread_data *	file:
td	engines/net.c	/^static void fio_netio_cleanup(struct thread_data *td)$/;"	z	function:fio_netio_cleanup	typeref:struct:thread_data *	file:
td	engines/net.c	/^static void fio_netio_send_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_netio_send_close	typeref:struct:thread_data *	file:
td	engines/net.c	/^static void fio_netio_terminate(struct thread_data *td)$/;"	z	function:fio_netio_terminate	typeref:struct:thread_data *	file:
td	engines/net.c	/^static void verify_udp_seq(struct thread_data *td, struct netio_data *nd,$/;"	z	function:verify_udp_seq	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static enum fio_q_status fio_libnfs_queue(struct thread_data *td,$/;"	z	function:fio_libnfs_queue	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int do_mount(struct thread_data *td, const char *url)$/;"	z	function:do_mount	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int fio_libnfs_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libnfs_close	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int fio_libnfs_commit(struct thread_data *td) {$/;"	z	function:fio_libnfs_commit	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int fio_libnfs_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_libnfs_getevents	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int fio_libnfs_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_libnfs_open	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int fio_libnfs_setup(struct thread_data *td)$/;"	z	function:fio_libnfs_setup	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static int nfs_event_loop(struct thread_data *td, bool flush) {$/;"	z	function:nfs_event_loop	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static struct io_u *fio_libnfs_event(struct thread_data *td, int event)$/;"	z	function:fio_libnfs_event	typeref:struct:thread_data *	file:
td	engines/nfs.c	/^static void fio_libnfs_cleanup(struct thread_data *td)$/;"	z	function:fio_libnfs_cleanup	typeref:struct:thread_data *	file:
td	engines/null.c	/^	NullData(struct thread_data *td)$/;"	z	function:NullData::NullData	typeref:struct:thread_data *	file:
td	engines/null.c	/^	fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:NullData::fio_null_queue	typeref:struct:thread_data *	file:
td	engines/null.c	/^	int fio_null_commit(struct thread_data *td)$/;"	z	function:NullData::fio_null_commit	typeref:struct:thread_data *	file:
td	engines/null.c	/^	static NullData *get(struct thread_data *td)$/;"	z	function:NullData::get	typeref:struct:thread_data *	file:
td	engines/null.c	/^static enum fio_q_status fio_null_queue(struct thread_data *td,$/;"	z	function:fio_null_queue	typeref:struct:thread_data *	file:
td	engines/null.c	/^static enum fio_q_status null_queue(struct thread_data *td,$/;"	z	function:null_queue	typeref:struct:thread_data *	file:
td	engines/null.c	/^static fio_q_status fio_null_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_null_queue	typeref:struct:thread_data *	file:
td	engines/null.c	/^static int fio_null_commit(struct thread_data *td)$/;"	z	function:fio_null_commit	typeref:struct:thread_data *	file:
td	engines/null.c	/^static int fio_null_getevents(struct thread_data *td, unsigned int min_events,$/;"	z	function:fio_null_getevents	typeref:struct:thread_data *	file:
td	engines/null.c	/^static int fio_null_init(struct thread_data *td)$/;"	z	function:fio_null_init	typeref:struct:thread_data *	file:
td	engines/null.c	/^static int fio_null_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_null_open	typeref:struct:thread_data *	file:
td	engines/null.c	/^static int null_commit(struct thread_data *td, struct null_data *nd)$/;"	z	function:null_commit	typeref:struct:thread_data *	file:
td	engines/null.c	/^static struct io_u *fio_null_event(struct thread_data *td, int event)$/;"	z	function:fio_null_event	typeref:struct:thread_data *	file:
td	engines/null.c	/^static struct null_data *null_init(struct thread_data *td)$/;"	z	function:null_init	typeref:struct:thread_data *	file:
td	engines/null.c	/^static void fio_null_cleanup(struct thread_data *td)$/;"	z	function:fio_null_cleanup	typeref:struct:thread_data *	file:
td	engines/pmemblk.c	/^static enum fio_q_status fio_pmemblk_queue(struct thread_data *td,$/;"	z	function:fio_pmemblk_queue	typeref:struct:thread_data *	file:
td	engines/pmemblk.c	/^static int fio_pmemblk_close_file(struct thread_data fio_unused *td,$/;"	z	function:fio_pmemblk_close_file	typeref:struct:thread_data fio_unused *	file:
td	engines/pmemblk.c	/^static int fio_pmemblk_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_get_file_size	typeref:struct:thread_data *	file:
td	engines/pmemblk.c	/^static int fio_pmemblk_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_open_file	typeref:struct:thread_data *	file:
td	engines/pmemblk.c	/^static int fio_pmemblk_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_pmemblk_unlink_file	typeref:struct:thread_data *	file:
td	engines/pmemblk.c	/^static int pmb_get_flags(struct thread_data *td, uint64_t *pflags)$/;"	z	function:pmb_get_flags	typeref:struct:thread_data *	file:
td	engines/posixaio.c	/^static enum fio_q_status fio_posixaio_queue(struct thread_data *td,$/;"	z	function:fio_posixaio_queue	typeref:struct:thread_data *	file:
td	engines/posixaio.c	/^static int fio_posixaio_cancel(struct thread_data fio_unused *td,$/;"	z	function:fio_posixaio_cancel	typeref:struct:thread_data fio_unused *	file:
td	engines/posixaio.c	/^static int fio_posixaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_posixaio_getevents	typeref:struct:thread_data *	file:
td	engines/posixaio.c	/^static int fio_posixaio_init(struct thread_data *td)$/;"	z	function:fio_posixaio_init	typeref:struct:thread_data *	file:
td	engines/posixaio.c	/^static int fio_posixaio_prep(struct thread_data fio_unused *td,$/;"	z	function:fio_posixaio_prep	typeref:struct:thread_data fio_unused *	file:
td	engines/posixaio.c	/^static struct io_u *fio_posixaio_event(struct thread_data *td, int event)$/;"	z	function:fio_posixaio_event	typeref:struct:thread_data *	file:
td	engines/posixaio.c	/^static void fio_posixaio_cleanup(struct thread_data *td)$/;"	z	function:fio_posixaio_cleanup	typeref:struct:thread_data *	file:
td	engines/rados.c	/^	struct thread_data *td;$/;"	m	struct:fio_rados_iou	typeref:struct:thread_data *	file:
td	engines/rados.c	/^int fio_rados_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rados_getevents	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static enum fio_q_status fio_rados_queue(struct thread_data *td,$/;"	z	function:fio_rados_queue	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int _fio_rados_connect(struct thread_data *td)$/;"	z	function:_fio_rados_connect	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int _fio_setup_rados_data(struct thread_data *td,$/;"	z	function:_fio_setup_rados_data	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int fio_rados_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rados_invalidate	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int fio_rados_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rados_io_u_init	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int fio_rados_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rados_open	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static int fio_rados_setup(struct thread_data *td)$/;"	z	function:fio_rados_setup	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static struct io_u *fio_rados_event(struct thread_data *td, int event)$/;"	z	function:fio_rados_event	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static void _fio_rados_rm_objects(struct thread_data *td, struct rados_data *rados)$/;"	z	function:_fio_rados_rm_objects	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static void fio_rados_cleanup(struct thread_data *td)$/;"	z	function:fio_rados_cleanup	typeref:struct:thread_data *	file:
td	engines/rados.c	/^static void fio_rados_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rados_io_u_free	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static enum fio_q_status fio_rbd_queue(struct thread_data *td,$/;"	z	function:fio_rbd_queue	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int _fio_rbd_connect(struct thread_data *td)$/;"	z	function:_fio_rbd_connect	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int _fio_setup_rbd_data(struct thread_data *td,$/;"	z	function:_fio_setup_rbd_data	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rbd_getevents	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_init(struct thread_data *td)$/;"	z	function:fio_rbd_init	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rbd_invalidate	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rbd_io_u_init	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rbd_open	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int fio_rbd_setup(struct thread_data *td)$/;"	z	function:fio_rbd_setup	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static int rbd_iter_events(struct thread_data *td, unsigned int *events,$/;"	z	function:rbd_iter_events	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static struct io_u *fio_rbd_event(struct thread_data *td, int event)$/;"	z	function:fio_rbd_event	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static void fio_rbd_cleanup(struct thread_data *td)$/;"	z	function:fio_rbd_cleanup	typeref:struct:thread_data *	file:
td	engines/rbd.c	/^static void fio_rbd_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rbd_io_u_free	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^	struct thread_data *td;$/;"	m	struct:rdmaio_options	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static enum fio_q_status fio_rdmaio_queue(struct thread_data *td,$/;"	z	function:fio_rdmaio_queue	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int aton(struct thread_data *td, const char *host,$/;"	z	function:aton	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int check_set_rlimits(struct thread_data *td)$/;"	z	function:check_set_rlimits	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int client_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:client_recv	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int compat_options(struct thread_data *td)$/;"	z	function:compat_options	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int cq_event_handler(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	z	function:cq_event_handler	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_accept(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_accept	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_close_file	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_commit(struct thread_data *td)$/;"	z	function:fio_rdmaio_commit	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_connect(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_connect	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_rdmaio_getevents	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_init(struct thread_data *td)$/;"	z	function:fio_rdmaio_init	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_rdmaio_open_file	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_post_init(struct thread_data *td)$/;"	z	function:fio_rdmaio_post_init	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_rdmaio_prep	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_recv(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_recv	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_send(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_send	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_setup(struct thread_data *td)$/;"	z	function:fio_rdmaio_setup	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_setup_connect(struct thread_data *td, const char *host,$/;"	z	function:fio_rdmaio_setup_connect	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_setup_control_msg_buffers(struct thread_data *td)$/;"	z	function:fio_rdmaio_setup_control_msg_buffers	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_setup_listen(struct thread_data *td, short port)$/;"	z	function:fio_rdmaio_setup_listen	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int fio_rdmaio_setup_qp(struct thread_data *td)$/;"	z	function:fio_rdmaio_setup_qp	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int get_next_channel_event(struct thread_data *td,$/;"	z	function:get_next_channel_event	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int rdma_poll_wait(struct thread_data *td, enum ibv_wc_opcode opcode)$/;"	z	function:rdma_poll_wait	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static int server_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:server_recv	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static struct io_u *fio_rdmaio_event(struct thread_data *td, int event)$/;"	z	function:fio_rdmaio_event	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static void fio_rdmaio_cleanup(struct thread_data *td)$/;"	z	function:fio_rdmaio_cleanup	typeref:struct:thread_data *	file:
td	engines/rdma.c	/^static void fio_rdmaio_queued(struct thread_data *td, struct io_u **io_us,$/;"	z	function:fio_rdmaio_queued	typeref:struct:thread_data *	file:
td	engines/sg.c	/^int fio_sgio_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_close	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static enum fio_q_status fio_sgio_doio(struct thread_data *td,$/;"	z	function:fio_sgio_doio	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static enum fio_q_status fio_sgio_ioctl_doio(struct thread_data *td,$/;"	z	function:fio_sgio_ioctl_doio	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static enum fio_q_status fio_sgio_queue(struct thread_data *td,$/;"	z	function:fio_sgio_queue	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static enum fio_q_status fio_sgio_rw_doio(struct thread_data *td,$/;"	z	function:fio_sgio_rw_doio	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static inline bool sgio_unbuffered(struct thread_data *td)$/;"	z	function:sgio_unbuffered	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_commit(struct thread_data *td)$/;"	z	function:fio_sgio_commit	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_get_file_size	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_sgio_getevents	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_init(struct thread_data *td)$/;"	z	function:fio_sgio_init	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_init(struct thread_data fio_unused *td)$/;"	z	function:fio_sgio_init	typeref:struct:thread_data fio_unused *	file:
td	engines/sg.c	/^static int fio_sgio_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_open	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_sgio_prep	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_read_capacity(struct thread_data *td, unsigned int *bs,$/;"	z	function:fio_sgio_read_capacity	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static int fio_sgio_type_check(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_sgio_type_check	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static struct io_u *fio_sgio_event(struct thread_data *td, int event)$/;"	z	function:fio_sgio_event	typeref:struct:thread_data *	file:
td	engines/sg.c	/^static void fio_sgio_cleanup(struct thread_data *td)$/;"	z	function:fio_sgio_cleanup	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static enum fio_q_status fio_skeleton_queue(struct thread_data *td,$/;"	z	function:fio_skeleton_queue	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_cancel(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_skeleton_cancel	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_skeleton_close	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_get_max_open_zones(struct thread_data *td,$/;"	z	function:fio_skeleton_get_max_open_zones	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_get_zoned_model(struct thread_data *td,$/;"	z	function:fio_skeleton_get_zoned_model	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_skeleton_getevents	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_init(struct thread_data *td)$/;"	z	function:fio_skeleton_init	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_skeleton_open	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_skeleton_prep	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_skeleton_report_zones	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static int fio_skeleton_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:fio_skeleton_reset_wp	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static struct io_u *fio_skeleton_event(struct thread_data *td, int event)$/;"	z	function:fio_skeleton_event	typeref:struct:thread_data *	file:
td	engines/skeleton_external.c	/^static void fio_skeleton_cleanup(struct thread_data *td)$/;"	z	function:fio_skeleton_cleanup	typeref:struct:thread_data *	file:
td	engines/solarisaio.c	/^static enum fio_q_status fio_solarisaio_queue(struct thread_data fio_unused *td,$/;"	z	function:fio_solarisaio_queue	typeref:struct:thread_data fio_unused *	file:
td	engines/solarisaio.c	/^static int fio_solarisaio_cancel(struct thread_data fio_unused *td,$/;"	z	function:fio_solarisaio_cancel	typeref:struct:thread_data fio_unused *	file:
td	engines/solarisaio.c	/^static int fio_solarisaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_solarisaio_getevents	typeref:struct:thread_data *	file:
td	engines/solarisaio.c	/^static int fio_solarisaio_init(struct thread_data *td)$/;"	z	function:fio_solarisaio_init	typeref:struct:thread_data *	file:
td	engines/solarisaio.c	/^static int fio_solarisaio_prep(struct thread_data fio_unused *td,$/;"	z	function:fio_solarisaio_prep	typeref:struct:thread_data fio_unused *	file:
td	engines/solarisaio.c	/^static struct io_u *fio_solarisaio_event(struct thread_data *td, int event)$/;"	z	function:fio_solarisaio_event	typeref:struct:thread_data *	file:
td	engines/solarisaio.c	/^static void fio_solarisaio_cleanup(struct thread_data *td)$/;"	z	function:fio_solarisaio_cleanup	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static enum fio_q_status fio_spliceio_queue(struct thread_data *td,$/;"	z	function:fio_spliceio_queue	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static int fio_splice_read(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_read	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static int fio_splice_read_old(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_read_old	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static int fio_splice_write(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_splice_write	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static int fio_spliceio_init(struct thread_data *td)$/;"	z	function:fio_spliceio_init	typeref:struct:thread_data *	file:
td	engines/splice.c	/^static void fio_spliceio_cleanup(struct thread_data *td)$/;"	z	function:fio_spliceio_cleanup	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static enum fio_q_status fio_psyncio_queue(struct thread_data *td,$/;"	z	function:fio_psyncio_queue	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static enum fio_q_status fio_pvsyncio2_queue(struct thread_data *td,$/;"	z	function:fio_pvsyncio2_queue	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static enum fio_q_status fio_pvsyncio_queue(struct thread_data *td,$/;"	z	function:fio_pvsyncio_queue	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static enum fio_q_status fio_syncio_queue(struct thread_data *td,$/;"	z	function:fio_syncio_queue	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static enum fio_q_status fio_vsyncio_queue(struct thread_data *td,$/;"	z	function:fio_vsyncio_queue	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_io_end(struct thread_data *td, struct io_u *io_u, int ret)$/;"	z	function:fio_io_end	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_syncio_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_syncio_prep	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_vsyncio_append(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_vsyncio_append	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_vsyncio_commit(struct thread_data *td)$/;"	z	function:fio_vsyncio_commit	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_vsyncio_end(struct thread_data *td, ssize_t bytes)$/;"	z	function:fio_vsyncio_end	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_vsyncio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_vsyncio_getevents	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static int fio_vsyncio_init(struct thread_data *td)$/;"	z	function:fio_vsyncio_init	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static struct io_u *fio_vsyncio_event(struct thread_data *td, int event)$/;"	z	function:fio_vsyncio_event	typeref:struct:thread_data *	file:
td	engines/sync.c	/^static void fio_vsyncio_cleanup(struct thread_data *td)$/;"	z	function:fio_vsyncio_cleanup	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^	struct thread_data *td;$/;"	m	struct:windowsaio_options	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static enum fio_q_status fio_windowsaio_queue(struct thread_data *td,$/;"	z	function:fio_windowsaio_queue	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowaio_getevents_thread(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowaio_getevents_thread	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:fio_windowsaio_close_file	typeref:struct:thread_data fio_unused *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_getevents(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowsaio_getevents	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_getevents_nothread(struct thread_data *td, unsigned int min,$/;"	z	function:fio_windowsaio_getevents_nothread	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_init(struct thread_data *td)$/;"	z	function:fio_windowsaio_init	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_windowsaio_io_u_init	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static int fio_windowsaio_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_windowsaio_open_file	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static struct io_u* fio_windowsaio_event(struct thread_data *td, int event)$/;"	z	function:fio_windowsaio_event	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static void fio_windowsaio_cleanup(struct thread_data *td)$/;"	z	function:fio_windowsaio_cleanup	typeref:struct:thread_data *	file:
td	engines/windowsaio.c	/^static void fio_windowsaio_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_windowsaio_io_u_free	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static enum fio_q_status xnvme_fioe_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_queue	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int _dev_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:_dev_open	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_close(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_close	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_get_file_size	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:xnvme_fioe_get_max_open_zones	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:xnvme_fioe_get_zoned_model	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:xnvme_fioe_getevents	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_init(struct thread_data *td)$/;"	z	function:xnvme_fioe_init	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_invalidate	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_io_u_init	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	z	function:xnvme_fioe_iomem_alloc	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_open(struct thread_data *td, struct fio_file *f)$/;"	z	function:xnvme_fioe_open	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_report_zones(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_report_zones	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static int xnvme_fioe_reset_wp(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	z	function:xnvme_fioe_reset_wp	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static struct io_u *xnvme_fioe_event(struct thread_data *td, int event)$/;"	z	function:xnvme_fioe_event	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static struct xnvme_opts xnvme_opts_from_fioe(struct thread_data *td)$/;"	z	function:xnvme_opts_from_fioe	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static void _dev_close(struct thread_data *td, struct xnvme_fioe_fwrap *fwrap)$/;"	z	function:_dev_close	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static void xnvme_fioe_cleanup(struct thread_data *td)$/;"	z	function:xnvme_fioe_cleanup	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static void xnvme_fioe_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	z	function:xnvme_fioe_io_u_free	typeref:struct:thread_data *	file:
td	engines/xnvme.c	/^static void xnvme_fioe_iomem_free(struct thread_data *td)$/;"	z	function:xnvme_fioe_iomem_free	typeref:struct:thread_data *	file:
td	eta.c	/^static unsigned long thread_eta(struct thread_data *td)$/;"	z	function:thread_eta	typeref:struct:thread_data *	file:
td	eta.c	/^static void check_str_update(struct thread_data *td)$/;"	z	function:check_str_update	typeref:struct:thread_data *	file:
td	file.h	/^extern unsigned long long get_rand_file_size(struct thread_data *td);$/;"	z	prototype:get_rand_file_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^bool fio_files_done(struct thread_data *td)$/;"	z	function:fio_files_done	typeref:struct:thread_data *	file:
td	filesetup.c	/^bool init_random_map(struct thread_data *td)$/;"	z	function:init_random_map	typeref:struct:thread_data *	file:
td	filesetup.c	/^bool pre_read_files(struct thread_data *td)$/;"	z	function:pre_read_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^int add_dir_files(struct thread_data *td, const char *path)$/;"	z	function:add_dir_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^int add_file(struct thread_data *td, const char *fname, int numjob, int inc)$/;"	z	function:add_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^int add_file_exclusive(struct thread_data *td, const char *fname)$/;"	z	function:add_file_exclusive	typeref:struct:thread_data *	file:
td	filesetup.c	/^int file_invalidate_cache(struct thread_data *td, struct fio_file *f)$/;"	z	function:file_invalidate_cache	typeref:struct:thread_data *	file:
td	filesetup.c	/^int fio_set_directio(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_set_directio	typeref:struct:thread_data *	file:
td	filesetup.c	/^int generic_close_file(struct thread_data fio_unused *td, struct fio_file *f)$/;"	z	function:generic_close_file	typeref:struct:thread_data fio_unused *	file:
td	filesetup.c	/^int generic_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_get_file_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^int generic_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_open_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^int generic_prepopulate_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:generic_prepopulate_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^int get_fileno(struct thread_data *td, const char *fname)$/;"	z	function:get_fileno	typeref:struct:thread_data *	file:
td	filesetup.c	/^int put_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:put_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^int setup_files(struct thread_data *td)$/;"	z	function:setup_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^static bool create_work_dirs(struct thread_data *td, const char *fname)$/;"	z	function:create_work_dirs	typeref:struct:thread_data *	file:
td	filesetup.c	/^static bool init_rand_distribution(struct thread_data *td)$/;"	z	function:init_rand_distribution	typeref:struct:thread_data *	file:
td	filesetup.c	/^static bool pre_read_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:pre_read_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^static bool recurse_dir(struct thread_data *td, const char *dirname)$/;"	z	function:recurse_dir	typeref:struct:thread_data *	file:
td	filesetup.c	/^static inline void clear_error(struct thread_data *td)$/;"	z	function:clear_error	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int __file_invalidate_cache(struct thread_data *td, struct fio_file *f,$/;"	z	function:__file_invalidate_cache	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int bdev_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:bdev_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int char_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:char_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int check_rand_gen_limits(struct thread_data *td, struct fio_file *f,$/;"	z	function:check_rand_gen_limits	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int extend_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:extend_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int file_close_shadow_fds(struct thread_data *td)$/;"	z	function:file_close_shadow_fds	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:file_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_file_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int get_file_sizes(struct thread_data *td)$/;"	z	function:get_file_sizes	typeref:struct:thread_data *	file:
td	filesetup.c	/^static int native_fallocate(struct thread_data *td, struct fio_file *f)$/;"	z	function:native_fallocate	typeref:struct:thread_data *	file:
td	filesetup.c	/^static struct fio_file *alloc_new_file(struct thread_data *td)$/;"	z	function:alloc_new_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^static unsigned long long get_fs_free_counts(struct thread_data *td)$/;"	z	function:get_fs_free_counts	typeref:struct:thread_data *	file:
td	filesetup.c	/^static void __init_rand_distribution(struct thread_data *td, struct fio_file *f)$/;"	z	function:__init_rand_distribution	typeref:struct:thread_data *	file:
td	filesetup.c	/^static void fallocate_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:fallocate_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^uint64_t get_start_offset(struct thread_data *td, struct fio_file *f)$/;"	z	function:get_start_offset	typeref:struct:thread_data *	file:
td	filesetup.c	/^unsigned long long get_rand_file_size(struct thread_data *td)$/;"	z	function:get_rand_file_size	typeref:struct:thread_data *	file:
td	filesetup.c	/^void close_and_free_files(struct thread_data *td)$/;"	z	function:close_and_free_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^void close_files(struct thread_data *td)$/;"	z	function:close_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^void dup_files(struct thread_data *td, struct thread_data *org)$/;"	z	function:dup_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^void fio_file_reset(struct thread_data *td, struct fio_file *f)$/;"	z	function:fio_file_reset	typeref:struct:thread_data *	file:
td	filesetup.c	/^void free_release_files(struct thread_data *td)$/;"	z	function:free_release_files	typeref:struct:thread_data *	file:
td	filesetup.c	/^void lock_file(struct thread_data *td, struct fio_file *f, enum fio_ddir ddir)$/;"	z	function:lock_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^void unlock_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:unlock_file	typeref:struct:thread_data *	file:
td	filesetup.c	/^void unlock_file_all(struct thread_data *td, struct fio_file *f)$/;"	z	function:unlock_file_all	typeref:struct:thread_data *	file:
td	fio.h	/^extern int io_queue_event(struct thread_data *td, struct io_u *io_u, int *ret,$/;"	z	prototype:io_queue_event	typeref:struct:thread_data *	file:
td	fio.h	/^extern void fio_options_set_ioengine_opts(struct option *long_options, struct thread_data *td);$/;"	z	prototype:fio_options_set_ioengine_opts	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool fio_fill_issue_time(struct thread_data *td)$/;"	z	function:fio_fill_issue_time	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool option_check_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:option_check_rate	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool should_check_rate(struct thread_data *td)$/;"	z	function:should_check_rate	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool should_fsync(struct thread_data *td)$/;"	z	function:should_fsync	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool td_async_processing(struct thread_data *td)$/;"	z	function:td_async_processing	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool td_ioengine_flagged(struct thread_data *td,$/;"	z	function:td_ioengine_flagged	typeref:struct:thread_data *	file:
td	fio.h	/^static inline bool td_offload_overlap(struct thread_data *td)$/;"	z	function:td_offload_overlap	typeref:struct:thread_data *	file:
td	fio.h	/^static inline unsigned long long td_max_bs(struct thread_data *td)$/;"	z	function:td_max_bs	typeref:struct:thread_data *	file:
td	fio.h	/^static inline unsigned long long td_min_bs(struct thread_data *td)$/;"	z	function:td_min_bs	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void __td_io_u_lock(struct thread_data *td)$/;"	z	function:__td_io_u_lock	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void __td_io_u_unlock(struct thread_data *td)$/;"	z	function:__td_io_u_unlock	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void fio_ro_check(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:fio_ro_check	typeref:typename:const struct thread_data *	file:
td	fio.h	/^static inline void td_flags_clear(struct thread_data *td, unsigned int *flags,$/;"	z	function:td_flags_clear	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void td_flags_set(struct thread_data *td, unsigned int *flags,$/;"	z	function:td_flags_set	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void td_io_u_free_notify(struct thread_data *td)$/;"	z	function:td_io_u_free_notify	typeref:struct:thread_data *	file:
td	fio.h	/^static inline void td_set_ioengine_flags(struct thread_data *td)$/;"	z	function:td_set_ioengine_flags	typeref:struct:thread_data *	file:
td	flow.c	/^int flow_threshold_exceeded(struct thread_data *td)$/;"	z	function:flow_threshold_exceeded	typeref:struct:thread_data *	file:
td	flow.c	/^void flow_exit_job(struct thread_data *td)$/;"	z	function:flow_exit_job	typeref:struct:thread_data *	file:
td	flow.c	/^void flow_init_job(struct thread_data *td)$/;"	z	function:flow_init_job	typeref:struct:thread_data *	file:
td	flow.h	/^int flow_threshold_exceeded(struct thread_data *td);$/;"	z	prototype:flow_threshold_exceeded	typeref:struct:thread_data *	file:
td	flow.h	/^void flow_exit_job(struct thread_data *td);$/;"	z	prototype:flow_exit_job	typeref:struct:thread_data *	file:
td	flow.h	/^void flow_init_job(struct thread_data *td);$/;"	z	prototype:flow_init_job	typeref:struct:thread_data *	file:
td	init.c	/^int ioengine_load(struct thread_data *td)$/;"	z	function:ioengine_load	typeref:struct:thread_data *	file:
td	init.c	/^static int __parse_jobs_ini(struct thread_data *td,$/;"	z	function:__parse_jobs_ini	typeref:struct:thread_data *	file:
td	init.c	/^static int __setup_rate(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:__setup_rate	typeref:struct:thread_data *	file:
td	init.c	/^static int add_job(struct thread_data *td, const char *jobname, int job_add_num,$/;"	z	function:add_job	typeref:struct:thread_data *	file:
td	init.c	/^static int fixup_options(struct thread_data *td)$/;"	z	function:fixup_options	typeref:struct:thread_data *	file:
td	init.c	/^static int setup_random_seeds(struct thread_data *td)$/;"	z	function:setup_random_seeds	typeref:struct:thread_data *	file:
td	init.c	/^static int setup_rate(struct thread_data *td)$/;"	z	function:setup_rate	typeref:struct:thread_data *	file:
td	init.c	/^static int verify_per_group_options(struct thread_data *td, const char *jobname)$/;"	z	function:verify_per_group_options	typeref:struct:thread_data *	file:
td	init.c	/^static void dump_opt_list(struct thread_data *td)$/;"	z	function:dump_opt_list	typeref:struct:thread_data *	file:
td	init.c	/^static void init_flags(struct thread_data *td)$/;"	z	function:init_flags	typeref:struct:thread_data *	file:
td	init.c	/^static void init_rand_file_service(struct thread_data *td)$/;"	z	function:init_rand_file_service	typeref:struct:thread_data *	file:
td	init.c	/^static void put_job(struct thread_data *td)$/;"	z	function:put_job	typeref:struct:thread_data *	file:
td	init.c	/^static void td_fill_rand_seeds_internal(struct thread_data *td, bool use64)$/;"	z	function:td_fill_rand_seeds_internal	typeref:struct:thread_data *	file:
td	init.c	/^void td_fill_rand_seeds(struct thread_data *td)$/;"	z	function:td_fill_rand_seeds	typeref:struct:thread_data *	file:
td	init.c	/^void td_fill_verify_state_seed(struct thread_data *td)$/;"	z	function:td_fill_verify_state_seed	typeref:struct:thread_data *	file:
td	io_u.c	/^bool queue_full(const struct thread_data *td)$/;"	z	function:queue_full	typeref:typename:const struct thread_data *	file:
td	io_u.c	/^int do_io_u_sync(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:do_io_u_sync	typeref:typename:const struct thread_data *	file:
td	io_u.c	/^int do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:do_io_u_trim	typeref:typename:const struct thread_data *	file:
td	io_u.c	/^int io_u_queued_complete(struct thread_data *td, int min_evts)$/;"	z	function:io_u_queued_complete	typeref:struct:thread_data *	file:
td	io_u.c	/^int io_u_quiesce(struct thread_data *td)$/;"	z	function:io_u_quiesce	typeref:struct:thread_data *	file:
td	io_u.c	/^int io_u_sync_complete(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_sync_complete	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool __lat_target_failed(struct thread_data *td)$/;"	z	function:__lat_target_failed	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool check_get_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:check_get_trim	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool check_get_verify(struct thread_data *td, struct io_u *io_u)$/;"	z	function:check_get_verify	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool lat_target_failed(struct thread_data *td)$/;"	z	function:lat_target_failed	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool should_account(struct thread_data *td)$/;"	z	function:should_account	typeref:struct:thread_data *	file:
td	io_u.c	/^static bool should_do_random(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:should_do_random	typeref:struct:thread_data *	file:
td	io_u.c	/^static enum fio_ddir get_rw_ddir(struct thread_data *td)$/;"	z	function:get_rw_ddir	typeref:struct:thread_data *	file:
td	io_u.c	/^static enum fio_ddir rate_ddir(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:rate_ddir	typeref:struct:thread_data *	file:
td	io_u.c	/^static inline bool gtod_reduce(struct thread_data *td)$/;"	z	function:gtod_reduce	typeref:struct:thread_data *	file:
td	io_u.c	/^static inline bool io_u_fits(struct thread_data *td, struct io_u *io_u,$/;"	z	function:io_u_fits	typeref:struct:thread_data *	file:
td	io_u.c	/^static inline enum fio_ddir get_rand_ddir(struct thread_data *td)$/;"	z	function:get_rand_ddir	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:__get_next_rand_offset	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset_gauss(struct thread_data *td,$/;"	z	function:__get_next_rand_offset_gauss	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset_pareto(struct thread_data *td,$/;"	z	function:__get_next_rand_offset_pareto	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset_zipf(struct thread_data *td,$/;"	z	function:__get_next_rand_offset_zipf	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset_zoned(struct thread_data *td,$/;"	z	function:__get_next_rand_offset_zoned	typeref:struct:thread_data *	file:
td	io_u.c	/^static int __get_next_rand_offset_zoned_abs(struct thread_data *td,$/;"	z	function:__get_next_rand_offset_zoned_abs	typeref:struct:thread_data *	file:
td	io_u.c	/^static int do_sync_file_range(const struct thread_data *td,$/;"	z	function:do_sync_file_range	typeref:typename:const struct thread_data *	file:
td	io_u.c	/^static int fill_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:fill_io_u	typeref:struct:thread_data *	file:
td	io_u.c	/^static int get_next_block(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_block	typeref:struct:thread_data *	file:
td	io_u.c	/^static int get_next_offset(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_offset	typeref:struct:thread_data *	file:
td	io_u.c	/^static int get_next_rand_block(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_rand_block	typeref:struct:thread_data *	file:
td	io_u.c	/^static int get_next_rand_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_rand_offset	typeref:struct:thread_data *	file:
td	io_u.c	/^static int get_next_seq_offset(struct thread_data *td, struct fio_file *f,$/;"	z	function:get_next_seq_offset	typeref:struct:thread_data *	file:
td	io_u.c	/^static long set_io_u_file(struct thread_data *td, struct io_u *io_u)$/;"	z	function:set_io_u_file	typeref:struct:thread_data *	file:
td	io_u.c	/^static struct fio_file *__get_next_file(struct thread_data *td)$/;"	z	function:__get_next_file	typeref:struct:thread_data *	file:
td	io_u.c	/^static struct fio_file *get_next_file(struct thread_data *td)$/;"	z	function:get_next_file	typeref:struct:thread_data *	file:
td	io_u.c	/^static struct fio_file *get_next_file_rand(struct thread_data *td,$/;"	z	function:get_next_file_rand	typeref:struct:thread_data *	file:
td	io_u.c	/^static struct fio_file *get_next_file_rr(struct thread_data *td, int goodf,$/;"	z	function:get_next_file_rr	typeref:struct:thread_data *	file:
td	io_u.c	/^static struct frand_state *get_buf_state(struct thread_data *td)$/;"	z	function:get_buf_state	typeref:struct:thread_data *	file:
td	io_u.c	/^static uint64_t last_block(struct thread_data *td, struct fio_file *f,$/;"	z	function:last_block	typeref:struct:thread_data *	file:
td	io_u.c	/^static uint64_t mark_random_map(struct thread_data *td, struct io_u *io_u,$/;"	z	function:mark_random_map	typeref:struct:thread_data *	file:
td	io_u.c	/^static unsigned int __get_next_fileno_rand(struct thread_data *td)$/;"	z	function:__get_next_fileno_rand	typeref:struct:thread_data *	file:
td	io_u.c	/^static unsigned long long get_next_buflen(struct thread_data *td, struct io_u *io_u,$/;"	z	function:get_next_buflen	typeref:struct:thread_data *	file:
td	io_u.c	/^static void __io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	z	function:__io_u_log_error	typeref:struct:thread_data *	file:
td	io_u.c	/^static void account_io_completion(struct thread_data *td, struct io_u *io_u,$/;"	z	function:account_io_completion	typeref:struct:thread_data *	file:
td	io_u.c	/^static void file_log_write_comp(const struct thread_data *td, struct fio_file *f,$/;"	z	function:file_log_write_comp	typeref:typename:const struct thread_data *	file:
td	io_u.c	/^static void init_icd(struct thread_data *td, struct io_completion_data *icd,$/;"	z	function:init_icd	typeref:struct:thread_data *	file:
td	io_u.c	/^static void io_completed(struct thread_data *td, struct io_u **io_u_ptr,$/;"	z	function:io_completed	typeref:struct:thread_data *	file:
td	io_u.c	/^static void io_u_mark_lat_msec(struct thread_data *td, unsigned long long msec)$/;"	z	function:io_u_mark_lat_msec	typeref:struct:thread_data *	file:
td	io_u.c	/^static void io_u_mark_lat_nsec(struct thread_data *td, unsigned long long nsec)$/;"	z	function:io_u_mark_lat_nsec	typeref:struct:thread_data *	file:
td	io_u.c	/^static void io_u_mark_lat_usec(struct thread_data *td, unsigned long long usec)$/;"	z	function:io_u_mark_lat_usec	typeref:struct:thread_data *	file:
td	io_u.c	/^static void io_u_mark_latency(struct thread_data *td, unsigned long long nsec)$/;"	z	function:io_u_mark_latency	typeref:struct:thread_data *	file:
td	io_u.c	/^static void ios_completed(struct thread_data *td,$/;"	z	function:ios_completed	typeref:struct:thread_data *	file:
td	io_u.c	/^static void lat_fatal(struct thread_data *td, struct io_u *io_u, struct io_completion_data *icd,$/;"	z	function:lat_fatal	typeref:struct:thread_data *	file:
td	io_u.c	/^static void lat_new_cycle(struct thread_data *td)$/;"	z	function:lat_new_cycle	typeref:struct:thread_data *	file:
td	io_u.c	/^static void lat_target_success(struct thread_data *td)$/;"	z	function:lat_target_success	typeref:struct:thread_data *	file:
td	io_u.c	/^static void loop_cache_invalidate(struct thread_data *td, struct fio_file *f)$/;"	z	function:loop_cache_invalidate	typeref:struct:thread_data *	file:
td	io_u.c	/^static void save_buf_state(struct thread_data *td, struct frand_state *rs)$/;"	z	function:save_buf_state	typeref:struct:thread_data *	file:
td	io_u.c	/^static void set_rw_ddir(struct thread_data *td, struct io_u *io_u)$/;"	z	function:set_rw_ddir	typeref:struct:thread_data *	file:
td	io_u.c	/^static void set_rwmix_bytes(struct thread_data *td)$/;"	z	function:set_rwmix_bytes	typeref:struct:thread_data *	file:
td	io_u.c	/^static void setup_strided_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	z	function:setup_strided_zone_mode	typeref:struct:thread_data *	file:
td	io_u.c	/^static void trim_block_info(struct thread_data *td, struct io_u *io_u)$/;"	z	function:trim_block_info	typeref:struct:thread_data *	file:
td	io_u.c	/^struct io_u *__get_io_u(struct thread_data *td)$/;"	z	function:__get_io_u	typeref:struct:thread_data *	file:
td	io_u.c	/^struct io_u *get_io_u(struct thread_data *td)$/;"	z	function:get_io_u	typeref:struct:thread_data *	file:
td	io_u.c	/^void clear_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:clear_io_u	typeref:struct:thread_data *	file:
td	io_u.c	/^void fill_io_buffer(struct thread_data *td, void *buf, unsigned long long min_write,$/;"	z	function:fill_io_buffer	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_fill_buffer(struct thread_data *td, struct io_u *io_u,$/;"	z	function:io_u_fill_buffer	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_log_error(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_log_error	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_mark_complete(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_complete	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_mark_depth(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_depth	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_mark_submit(struct thread_data *td, unsigned int nr)$/;"	z	function:io_u_mark_submit	typeref:struct:thread_data *	file:
td	io_u.c	/^void io_u_queued(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_queued	typeref:struct:thread_data *	file:
td	io_u.c	/^void lat_target_check(struct thread_data *td)$/;"	z	function:lat_target_check	typeref:struct:thread_data *	file:
td	io_u.c	/^void lat_target_init(struct thread_data *td)$/;"	z	function:lat_target_init	typeref:struct:thread_data *	file:
td	io_u.c	/^void lat_target_reset(struct thread_data *td)$/;"	z	function:lat_target_reset	typeref:struct:thread_data *	file:
td	io_u.c	/^void put_file_log(struct thread_data *td, struct fio_file *f)$/;"	z	function:put_file_log	typeref:struct:thread_data *	file:
td	io_u.c	/^void put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:put_io_u	typeref:struct:thread_data *	file:
td	io_u.c	/^void requeue_io_u(struct thread_data *td, struct io_u **io_u)$/;"	z	function:requeue_io_u	typeref:struct:thread_data *	file:
td	io_u.h	/^extern void io_u_fill_buffer(struct thread_data *td, struct io_u *, unsigned long long, unsigned/;"	z	prototype:io_u_fill_buffer	typeref:struct:thread_data *	file:
td	ioengines.c	/^enum fio_q_status td_io_queue(struct thread_data *td, struct io_u *io_u)$/;"	z	function:td_io_queue	typeref:struct:thread_data *	file:
td	ioengines.c	/^fio_load_dynamic_engines(struct thread_data *td)$/;"	z	function:fio_load_dynamic_engines	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_close_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_close_file	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_get_file_size	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	z	function:td_io_getevents	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_init(struct thread_data *td)$/;"	z	function:td_io_init	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_open_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_open_file	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_prep(struct thread_data *td, struct io_u *io_u)$/;"	z	function:td_io_prep	typeref:struct:thread_data *	file:
td	ioengines.c	/^int td_io_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	z	function:td_io_unlink_file	typeref:struct:thread_data *	file:
td	ioengines.c	/^static bool check_engine_ops(struct thread_data *td, struct ioengine_ops *ops)$/;"	z	function:check_engine_ops	typeref:struct:thread_data *	file:
td	ioengines.c	/^static struct ioengine_ops *dlopen_ioengine(struct thread_data *td,$/;"	z	function:dlopen_ioengine	typeref:struct:thread_data *	file:
td	ioengines.c	/^static void *dlopen_external(struct thread_data *td, const char *engine)$/;"	z	function:dlopen_external	typeref:struct:thread_data *	file:
td	ioengines.c	/^struct ioengine_ops *load_ioengine(struct thread_data *td)$/;"	z	function:load_ioengine	typeref:struct:thread_data *	file:
td	ioengines.c	/^void close_ioengine(struct thread_data *td)$/;"	z	function:close_ioengine	typeref:struct:thread_data *	file:
td	ioengines.c	/^void free_ioengine(struct thread_data *td)$/;"	z	function:free_ioengine	typeref:struct:thread_data *	file:
td	ioengines.c	/^void td_io_commit(struct thread_data *td)$/;"	z	function:td_io_commit	typeref:struct:thread_data *	file:
td	iolog.c	/^bool init_iolog(struct thread_data *td)$/;"	z	function:init_iolog	typeref:struct:thread_data *	file:
td	iolog.c	/^int iolog_compress_init(struct thread_data *td, struct sk_out *sk_out)$/;"	z	function:iolog_compress_init	typeref:struct:thread_data *	file:
td	iolog.c	/^int read_iolog_get(struct thread_data *td, struct io_u *io_u)$/;"	z	function:read_iolog_get	typeref:struct:thread_data *	file:
td	iolog.c	/^int64_t iolog_items_to_fetch(struct thread_data *td)$/;"	z	function:iolog_items_to_fetch	typeref:struct:thread_data *	file:
td	iolog.c	/^static bool init_iolog_read(struct thread_data *td, char *fname)$/;"	z	function:init_iolog_read	typeref:struct:thread_data *	file:
td	iolog.c	/^static bool init_iolog_write(struct thread_data *td)$/;"	z	function:init_iolog_write	typeref:struct:thread_data *	file:
td	iolog.c	/^static bool read_iolog(struct thread_data *td)$/;"	z	function:read_iolog	typeref:struct:thread_data *	file:
td	iolog.c	/^static bool read_iolog(struct thread_data *td);$/;"	z	prototype:read_iolog	typeref:struct:thread_data *	file:
td	iolog.c	/^static int __write_log(struct thread_data *td, struct io_log *log, int try)$/;"	z	function:__write_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int finish_log(struct thread_data *td, struct io_log *log, int trylock)$/;"	z	function:finish_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int ipo_special(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:ipo_special	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_bandw_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_bandw_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_clat_hist_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_hist_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_clat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_iops_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_iops_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_lat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_lat_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static int write_slat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_slat_log	typeref:struct:thread_data *	file:
td	iolog.c	/^static void iolog_delay(struct thread_data *td, unsigned long delay)$/;"	z	function:iolog_delay	typeref:struct:thread_data *	file:
td	iolog.c	/^unsigned long long delay_since_ttime(const struct thread_data *td,$/;"	z	function:delay_since_ttime	typeref:typename:const struct thread_data *	file:
td	iolog.c	/^void iolog_compress_exit(struct thread_data *td)$/;"	z	function:iolog_compress_exit	typeref:struct:thread_data *	file:
td	iolog.c	/^void log_file(struct thread_data *td, struct fio_file *f,$/;"	z	function:log_file	typeref:struct:thread_data *	file:
td	iolog.c	/^void log_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	z	function:log_io_piece	typeref:struct:thread_data *	file:
td	iolog.c	/^void log_io_u(const struct thread_data *td, const struct io_u *io_u)$/;"	z	function:log_io_u	typeref:typename:const struct thread_data *	file:
td	iolog.c	/^void prune_io_piece_log(struct thread_data *td)$/;"	z	function:prune_io_piece_log	typeref:struct:thread_data *	file:
td	iolog.c	/^void queue_io_piece(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:queue_io_piece	typeref:struct:thread_data *	file:
td	iolog.c	/^void td_writeout_logs(struct thread_data *td, bool unit_logs)$/;"	z	function:td_writeout_logs	typeref:struct:thread_data *	file:
td	iolog.c	/^void unlog_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	z	function:unlog_io_piece	typeref:struct:thread_data *	file:
td	iolog.c	/^void write_iolog_close(struct thread_data *td)$/;"	z	function:write_iolog_close	typeref:struct:thread_data *	file:
td	iolog.h	/^	struct thread_data *td;$/;"	m	struct:io_log	typeref:struct:thread_data *
td	iolog.h	/^	struct thread_data *td;$/;"	m	struct:log_params	typeref:struct:thread_data *
td	iolog.h	/^extern bool __must_check init_iolog(struct thread_data *td);$/;"	z	prototype:init_iolog	typeref:struct:thread_data *	file:
td	iolog.h	/^extern void finalize_logs(struct thread_data *td, bool);$/;"	z	prototype:finalize_logs	typeref:struct:thread_data *	file:
td	iolog.h	/^int64_t iolog_items_to_fetch(struct thread_data *td);$/;"	z	prototype:iolog_items_to_fetch	typeref:struct:thread_data *	file:
td	libfio.c	/^int td_bump_runstate(struct thread_data *td, int new_state)$/;"	z	function:td_bump_runstate	typeref:struct:thread_data *	file:
td	libfio.c	/^static void reset_io_counters(struct thread_data *td, int all)$/;"	z	function:reset_io_counters	typeref:struct:thread_data *	file:
td	libfio.c	/^void clear_io_state(struct thread_data *td, int all)$/;"	z	function:clear_io_state	typeref:struct:thread_data *	file:
td	libfio.c	/^void fio_mark_td_terminate(struct thread_data *td)$/;"	z	function:fio_mark_td_terminate	typeref:struct:thread_data *	file:
td	libfio.c	/^void reset_all_stats(struct thread_data *td)$/;"	z	function:reset_all_stats	typeref:struct:thread_data *	file:
td	libfio.c	/^void td_restore_runstate(struct thread_data *td, int old_state)$/;"	z	function:td_restore_runstate	typeref:struct:thread_data *	file:
td	libfio.c	/^void td_set_runstate(struct thread_data *td, int runstate)$/;"	z	function:td_set_runstate	typeref:struct:thread_data *	file:
td	memory.c	/^int allocate_io_mem(struct thread_data *td)$/;"	z	function:allocate_io_mem	typeref:struct:thread_data *	file:
td	memory.c	/^int fio_pin_memory(struct thread_data *td)$/;"	z	function:fio_pin_memory	typeref:struct:thread_data *	file:
td	memory.c	/^static int alloc_mem_cudamalloc(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_cudamalloc	typeref:struct:thread_data *	file:
td	memory.c	/^static int alloc_mem_malloc(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_malloc	typeref:struct:thread_data *	file:
td	memory.c	/^static int alloc_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_mmap	typeref:struct:thread_data *	file:
td	memory.c	/^static int alloc_mem_shm(struct thread_data *td, unsigned int total_mem)$/;"	z	function:alloc_mem_shm	typeref:struct:thread_data *	file:
td	memory.c	/^static void free_mem_cudamalloc(struct thread_data *td)$/;"	z	function:free_mem_cudamalloc	typeref:struct:thread_data *	file:
td	memory.c	/^static void free_mem_malloc(struct thread_data *td)$/;"	z	function:free_mem_malloc	typeref:struct:thread_data *	file:
td	memory.c	/^static void free_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	z	function:free_mem_mmap	typeref:struct:thread_data *	file:
td	memory.c	/^static void free_mem_shm(struct thread_data *td)$/;"	z	function:free_mem_shm	typeref:struct:thread_data *	file:
td	memory.c	/^void fio_unpin_memory(struct thread_data *td)$/;"	z	function:fio_unpin_memory	typeref:struct:thread_data *	file:
td	memory.c	/^void free_io_mem(struct thread_data *td)$/;"	z	function:free_io_mem	typeref:struct:thread_data *	file:
td	options.c	/^				   struct thread_data *td)$/;"	z	function:fio_options_set_ioengine_opts	typeref:struct:thread_data *	file:
td	options.c	/^int fio_cmd_ioengine_option_parse(struct thread_data *td, const char *opt,$/;"	z	function:fio_cmd_ioengine_option_parse	typeref:struct:thread_data *	file:
td	options.c	/^int fio_cmd_option_parse(struct thread_data *td, const char *opt, char *val)$/;"	z	function:fio_cmd_option_parse	typeref:struct:thread_data *	file:
td	options.c	/^int fio_options_parse(struct thread_data *td, char **opts, int num_opts)$/;"	z	function:fio_options_parse	typeref:struct:thread_data *	file:
td	options.c	/^int str_split_parse(struct thread_data *td, char *str,$/;"	z	function:str_split_parse	typeref:struct:thread_data *	file:
td	options.c	/^static int ignore_error_type(struct thread_data *td, enum error_type_bit etype,$/;"	z	function:ignore_error_type	typeref:struct:thread_data *	file:
td	options.c	/^static int parse_zoned_distribution(struct thread_data *td, const char *input,$/;"	z	function:parse_zoned_distribution	typeref:struct:thread_data *	file:
td	options.c	/^static int set_cpus_allowed(struct thread_data *td, os_cpu_mask_t *mask,$/;"	z	function:set_cpus_allowed	typeref:struct:thread_data *	file:
td	options.c	/^void fio_dump_options_free(struct thread_data *td)$/;"	z	function:fio_dump_options_free	typeref:struct:thread_data *	file:
td	options.c	/^void fio_fill_default_options(struct thread_data *td)$/;"	z	function:fio_fill_default_options	typeref:struct:thread_data *	file:
td	options.c	/^void fio_options_free(struct thread_data *td)$/;"	z	function:fio_options_free	typeref:struct:thread_data *	file:
td	options.c	/^void fio_options_mem_dupe(struct thread_data *td)$/;"	z	function:fio_options_mem_dupe	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^extern int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:blkzoned_get_max_open_zones	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^extern int blkzoned_get_zoned_model(struct thread_data *td,$/;"	z	prototype:blkzoned_get_zoned_model	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^extern int blkzoned_report_zones(struct thread_data *td,$/;"	z	prototype:blkzoned_report_zones	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^extern int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	prototype:blkzoned_reset_wp	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^static inline int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_max_open_zones	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^static inline int blkzoned_get_zoned_model(struct thread_data *td,$/;"	z	function:blkzoned_get_zoned_model	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^static inline int blkzoned_report_zones(struct thread_data *td,$/;"	z	function:blkzoned_report_zones	typeref:struct:thread_data *	file:
td	oslib/blkzoned.h	/^static inline int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_reset_wp	typeref:struct:thread_data *	file:
td	oslib/linux-blkzoned.c	/^int blkzoned_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_max_open_zones	typeref:struct:thread_data *	file:
td	oslib/linux-blkzoned.c	/^int blkzoned_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_get_zoned_model	typeref:struct:thread_data *	file:
td	oslib/linux-blkzoned.c	/^int blkzoned_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_report_zones	typeref:struct:thread_data *	file:
td	oslib/linux-blkzoned.c	/^int blkzoned_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:blkzoned_reset_wp	typeref:struct:thread_data *	file:
td	profile.c	/^int profile_td_init(struct thread_data *td)$/;"	z	function:profile_td_init	typeref:struct:thread_data *	file:
td	profile.c	/^void profile_add_hooks(struct thread_data *td)$/;"	z	function:profile_add_hooks	typeref:struct:thread_data *	file:
td	profile.c	/^void profile_td_exit(struct thread_data *td)$/;"	z	function:profile_td_exit	typeref:struct:thread_data *	file:
td	profiles/act.c	/^static int act_io_u_lat(struct thread_data *td, uint64_t nsec)$/;"	z	function:act_io_u_lat	typeref:struct:thread_data *	file:
td	profiles/act.c	/^static int act_td_init(struct thread_data *td)$/;"	z	function:act_td_init	typeref:struct:thread_data *	file:
td	profiles/act.c	/^static void act_td_exit(struct thread_data *td)$/;"	z	function:act_td_exit	typeref:struct:thread_data *	file:
td	profiles/act.c	/^static void put_act_ref(struct thread_data *td)$/;"	z	function:put_act_ref	typeref:struct:thread_data *	file:
td	rate-submit.c	/^int rate_submit_init(struct thread_data *td, struct sk_out *sk_out)$/;"	z	function:rate_submit_init	typeref:struct:thread_data *	file:
td	rate-submit.c	/^void rate_submit_exit(struct thread_data *td)$/;"	z	function:rate_submit_exit	typeref:struct:thread_data *	file:
td	server.c	/^int fio_send_iolog(struct thread_data *td, struct io_log *log, const char *name)$/;"	z	function:fio_send_iolog	typeref:struct:thread_data *	file:
td	server.c	/^void fio_server_send_add_job(struct thread_data *td)$/;"	z	function:fio_server_send_add_job	typeref:struct:thread_data *	file:
td	server.c	/^void fio_server_send_start(struct thread_data *td)$/;"	z	function:fio_server_send_start	typeref:struct:thread_data *	file:
td	stat.c	/^static int __add_samples(struct thread_data *td, struct timespec *parent_tv,$/;"	z	function:__add_samples	typeref:struct:thread_data *	file:
td	stat.c	/^static int add_bw_samples(struct thread_data *td, struct timespec *t)$/;"	z	function:add_bw_samples	typeref:struct:thread_data *	file:
td	stat.c	/^static int add_iops_samples(struct thread_data *td, struct timespec *t)$/;"	z	function:add_iops_samples	typeref:struct:thread_data *	file:
td	stat.c	/^static unsigned long add_log_sample(struct thread_data *td,$/;"	z	function:add_log_sample	typeref:struct:thread_data *	file:
td	stat.c	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_block_info	typeref:struct:thread_data *	file:
td	stat.c	/^void add_bw_sample(struct thread_data *td, struct io_u *io_u,$/;"	z	function:add_bw_sample	typeref:struct:thread_data *	file:
td	stat.c	/^void add_clat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_clat_sample	typeref:struct:thread_data *	file:
td	stat.c	/^void add_iops_sample(struct thread_data *td, struct io_u *io_u,$/;"	z	function:add_iops_sample	typeref:struct:thread_data *	file:
td	stat.c	/^void add_lat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_lat_sample	typeref:struct:thread_data *	file:
td	stat.c	/^void add_slat_sample(struct thread_data *td, enum fio_ddir ddir,$/;"	z	function:add_slat_sample	typeref:struct:thread_data *	file:
td	stat.c	/^void clear_rusage_stat(struct thread_data *td)$/;"	z	function:clear_rusage_stat	typeref:struct:thread_data *	file:
td	stat.c	/^void finalize_logs(struct thread_data *td, bool unit_logs)$/;"	z	function:finalize_logs	typeref:struct:thread_data *	file:
td	stat.c	/^void regrow_logs(struct thread_data *td)$/;"	z	function:regrow_logs	typeref:struct:thread_data *	file:
td	stat.c	/^void reset_io_stats(struct thread_data *td)$/;"	z	function:reset_io_stats	typeref:struct:thread_data *	file:
td	stat.c	/^void update_rusage_stat(struct thread_data *td)$/;"	z	function:update_rusage_stat	typeref:struct:thread_data *	file:
td	stat.h	/^uint32_t *io_u_block_info(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:io_u_block_info	typeref:struct:thread_data *	file:
td	steadystate.c	/^				  struct thread_data *td)$/;"	z	function:steadystate_deviation	typeref:struct:thread_data *	file:
td	steadystate.c	/^			      struct thread_data *td)$/;"	z	function:steadystate_slope	typeref:struct:thread_data *	file:
td	steadystate.c	/^int td_steadystate_init(struct thread_data *td)$/;"	z	function:td_steadystate_init	typeref:struct:thread_data *	file:
td	steadystate.c	/^static void steadystate_alloc(struct thread_data *td)$/;"	z	function:steadystate_alloc	typeref:struct:thread_data *	file:
td	steadystate.c	/^void steadystate_free(struct thread_data *td)$/;"	z	function:steadystate_free	typeref:struct:thread_data *	file:
td	t/memlock.c	/^} td;$/;"	v	typeref:struct:thread_data
td	td_error.c	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	z	function:td_non_fatal_error	typeref:struct:thread_data *	file:
td	td_error.c	/^void update_error_count(struct thread_data *td, int err)$/;"	z	function:update_error_count	typeref:struct:thread_data *	file:
td	td_error.h	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	z	prototype:td_non_fatal_error	typeref:struct:thread_data *	file:
td	td_error.h	/^void update_error_count(struct thread_data *td, int err);$/;"	z	prototype:update_error_count	typeref:struct:thread_data *	file:
td	thread_options.h	/^extern int str_split_parse(struct thread_data *td, char *str,$/;"	z	prototype:str_split_parse	typeref:struct:thread_data *	file:
td	time.c	/^bool in_ramp_time(struct thread_data *td)$/;"	z	function:in_ramp_time	typeref:struct:thread_data *	file:
td	time.c	/^bool ramp_time_over(struct thread_data *td)$/;"	z	function:ramp_time_over	typeref:struct:thread_data *	file:
td	time.c	/^static bool parent_update_ramp(struct thread_data *td)$/;"	z	function:parent_update_ramp	typeref:struct:thread_data *	file:
td	time.c	/^uint64_t usec_sleep(struct thread_data *td, unsigned long usec)$/;"	z	function:usec_sleep	typeref:struct:thread_data *	file:
td	time.c	/^void set_epoch_time(struct thread_data *td, int log_alternate_epoch, clockid_t clock_id)$/;"	z	function:set_epoch_time	typeref:struct:thread_data *	file:
td	trim.c	/^bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_trim	typeref:struct:thread_data *	file:
td	trim.c	/^bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_should_trim	typeref:struct:thread_data *	file:
td	trim.h	/^extern bool __must_check get_next_trim(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:get_next_trim	typeref:struct:thread_data *	file:
td	trim.h	/^extern bool io_u_should_trim(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:io_u_should_trim	typeref:struct:thread_data *	file:
td	trim.h	/^static inline bool get_next_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_trim	typeref:struct:thread_data *	file:
td	trim.h	/^static inline bool io_u_should_trim(struct thread_data *td, struct io_u *io_u)$/;"	z	function:io_u_should_trim	typeref:struct:thread_data *	file:
td	trim.h	/^static inline void remove_trim_entry(struct thread_data *td, struct io_piece *ipo)$/;"	z	function:remove_trim_entry	typeref:struct:thread_data *	file:
td	verify.c	/^	struct thread_data *td;$/;"	m	struct:vcont	typeref:struct:thread_data *	file:
td	verify.c	/^int get_next_verify(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_next_verify	typeref:struct:thread_data *	file:
td	verify.c	/^int verify_async_init(struct thread_data *td)$/;"	z	function:verify_async_init	typeref:struct:thread_data *	file:
td	verify.c	/^int verify_io_u(struct thread_data *td, struct io_u **io_u_ptr)$/;"	z	function:verify_io_u	typeref:struct:thread_data *	file:
td	verify.c	/^int verify_io_u_async(struct thread_data *td, struct io_u **io_u_ptr)$/;"	z	function:verify_io_u_async	typeref:struct:thread_data *	file:
td	verify.c	/^int verify_load_state(struct thread_data *td, const char *prefix)$/;"	z	function:verify_load_state	typeref:struct:thread_data *	file:
td	verify.c	/^int verify_state_should_stop(struct thread_data *td, struct io_u *io_u)$/;"	z	function:verify_state_should_stop	typeref:struct:thread_data *	file:
td	verify.c	/^static inline unsigned int hdr_size(struct thread_data *td,$/;"	z	function:hdr_size	typeref:struct:thread_data *	file:
td	verify.c	/^static int __fill_file_completions(struct thread_data *td,$/;"	z	function:__fill_file_completions	typeref:struct:thread_data *	file:
td	verify.c	/^static int fill_file_completions(struct thread_data *td,$/;"	z	function:fill_file_completions	typeref:struct:thread_data *	file:
td	verify.c	/^static int verify_header(struct io_u *io_u, struct thread_data *td,$/;"	z	function:verify_header	typeref:struct:thread_data *	file:
td	verify.c	/^static int verify_trimmed_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:verify_trimmed_io_u	typeref:struct:thread_data *	file:
td	verify.c	/^static unsigned int get_hdr_inc(struct thread_data *td, struct io_u *io_u)$/;"	z	function:get_hdr_inc	typeref:struct:thread_data *	file:
td	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:__fill_hdr	typeref:struct:thread_data *	file:
td	verify.c	/^static void __fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:__fill_hdr	typeref:struct:thread_data *	file:
td	verify.c	/^static void fill_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:fill_hdr	typeref:struct:thread_data *	file:
td	verify.c	/^static void fill_pattern_headers(struct thread_data *td, struct io_u *io_u,$/;"	z	function:fill_pattern_headers	typeref:struct:thread_data *	file:
td	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	function:populate_hdr	typeref:struct:thread_data *	file:
td	verify.c	/^static void populate_hdr(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:populate_hdr	typeref:struct:thread_data *	file:
td	verify.c	/^void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len)$/;"	z	function:fill_buffer_pattern	typeref:struct:thread_data *	file:
td	verify.c	/^void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len,$/;"	z	function:fill_verify_pattern	typeref:struct:thread_data *	file:
td	verify.c	/^void fio_verify_init(struct thread_data *td)$/;"	z	function:fio_verify_init	typeref:struct:thread_data *	file:
td	verify.c	/^void populate_verify_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:populate_verify_io_u	typeref:struct:thread_data *	file:
td	verify.c	/^void verify_assign_state(struct thread_data *td, void *p)$/;"	z	function:verify_assign_state	typeref:struct:thread_data *	file:
td	verify.c	/^void verify_async_exit(struct thread_data *td)$/;"	z	function:verify_async_exit	typeref:struct:thread_data *	file:
td	verify.c	/^void verify_free_state(struct thread_data *td)$/;"	z	function:verify_free_state	typeref:struct:thread_data *	file:
td	verify.h	/^extern int __must_check get_next_verify(struct thread_data *td, struct io_u *);$/;"	z	prototype:get_next_verify	typeref:struct:thread_data *	file:
td	verify.h	/^extern void fill_buffer_pattern(struct thread_data *td, void *p, unsigned int len);$/;"	z	prototype:fill_buffer_pattern	typeref:struct:thread_data *	file:
td	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:struct:thread_data *	file:
td	verify.h	/^extern void fio_verify_init(struct thread_data *td);$/;"	z	prototype:fio_verify_init	typeref:struct:thread_data *	file:
td	workqueue.c	/^int workqueue_init(struct thread_data *td, struct workqueue *wq,$/;"	z	function:workqueue_init	typeref:struct:thread_data *	file:
td	workqueue.h	/^	struct thread_data *td;$/;"	m	struct:workqueue	typeref:struct:thread_data *
td	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	z	prototype:workqueue_init	typeref:struct:thread_data *	file:
td	zbd.c	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	z	function:zbd_adjust_ddir	typeref:struct:thread_data *	file:
td	zbd.c	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_adjust_block	typeref:struct:thread_data *	file:
td	zbd.c	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_do_io_u_trim	typeref:typename:const struct thread_data *	file:
td	zbd.c	/^int zbd_init_files(struct thread_data *td)$/;"	z	function:zbd_init_files	typeref:struct:thread_data *	file:
td	zbd.c	/^int zbd_setup_files(struct thread_data *td)$/;"	z	function:zbd_setup_files	typeref:struct:thread_data *	file:
td	zbd.c	/^static bool zbd_dec_and_reset_write_cnt(const struct thread_data *td,$/;"	z	function:zbd_dec_and_reset_write_cnt	typeref:typename:const struct thread_data *	file:
td	zbd.c	/^static bool zbd_open_zone(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zbd_open_zone	typeref:struct:thread_data *	file:
td	zbd.c	/^static bool zbd_zone_align_file_sizes(struct thread_data *td,$/;"	z	function:zbd_zone_align_file_sizes	typeref:struct:thread_data *	file:
td	zbd.c	/^static int init_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:init_zone_info	typeref:struct:thread_data *	file:
td	zbd.c	/^static int parse_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:parse_zone_info	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_create_zone_info(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_create_zone_info	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_get_max_open_zones	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_get_zoned_model	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_init_zone_info(struct thread_data *td, struct fio_file *file)$/;"	z	function:zbd_init_zone_info	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_report_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_report_zones	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_wp	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_reset_zone(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_zone	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_reset_zones(struct thread_data *td, struct fio_file *f,$/;"	z	function:zbd_reset_zones	typeref:struct:thread_data *	file:
td	zbd.c	/^static int zbd_set_max_open_zones(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_set_max_open_zones	typeref:struct:thread_data *	file:
td	zbd.c	/^static struct fio_zone_info *zbd_convert_to_open_zone(struct thread_data *td,$/;"	z	function:zbd_convert_to_open_zone	typeref:struct:thread_data *	file:
td	zbd.c	/^static struct fio_zone_info *zbd_replay_write_order(struct thread_data *td,$/;"	z	function:zbd_replay_write_order	typeref:struct:thread_data *	file:
td	zbd.c	/^static uint64_t zbd_process_swd(struct thread_data *td,$/;"	z	function:zbd_process_swd	typeref:struct:thread_data *	file:
td	zbd.c	/^static void _zbd_reset_write_cnt(const struct thread_data *td,$/;"	z	function:_zbd_reset_write_cnt	typeref:typename:const struct thread_data *	file:
td	zbd.c	/^static void zbd_check_swd(struct thread_data *td, const struct fio_file *f)$/;"	z	function:zbd_check_swd	typeref:struct:thread_data *	file:
td	zbd.c	/^static void zbd_close_zone(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zbd_close_zone	typeref:struct:thread_data *	file:
td	zbd.c	/^static void zbd_end_zone_io(struct thread_data *td, const struct io_u *io_u,$/;"	z	function:zbd_end_zone_io	typeref:struct:thread_data *	file:
td	zbd.c	/^static void zbd_put_io(struct thread_data *td, const struct io_u *io_u)$/;"	z	function:zbd_put_io	typeref:struct:thread_data *	file:
td	zbd.c	/^static void zbd_queue_io(struct thread_data *td, struct io_u *io_u, int q,$/;"	z	function:zbd_queue_io	typeref:struct:thread_data *	file:
td	zbd.c	/^static void zbd_reset_write_cnt(const struct thread_data *td,$/;"	z	function:zbd_reset_write_cnt	typeref:typename:const struct thread_data *	file:
td	zbd.c	/^static void zone_lock(struct thread_data *td, const struct fio_file *f,$/;"	z	function:zone_lock	typeref:struct:thread_data *	file:
td	zbd.c	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u)$/;"	z	function:setup_zbd_zone_mode	typeref:struct:thread_data *	file:
td	zbd.c	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f)$/;"	z	function:zbd_file_reset	typeref:struct:thread_data *	file:
td	zbd.c	/^void zbd_recalc_options_with_zone_granularity(struct thread_data *td)$/;"	z	function:zbd_recalc_options_with_zone_granularity	typeref:struct:thread_data *	file:
td	zbd.c	/^zbd_find_zone(struct thread_data *td, struct io_u *io_u, uint64_t min_bytes,$/;"	z	function:zbd_find_zone	typeref:struct:thread_data *	file:
td	zbd.h	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	z	prototype:zbd_adjust_ddir	typeref:struct:thread_data *	file:
td	zbd.h	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:zbd_adjust_block	typeref:struct:thread_data *	file:
td	zbd.h	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:zbd_do_io_u_trim	typeref:typename:const struct thread_data *	file:
td	zbd.h	/^int zbd_init_files(struct thread_data *td);$/;"	z	prototype:zbd_init_files	typeref:struct:thread_data *	file:
td	zbd.h	/^int zbd_setup_files(struct thread_data *td);$/;"	z	prototype:zbd_setup_files	typeref:struct:thread_data *	file:
td	zbd.h	/^static inline void zbd_put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	z	function:zbd_put_io_u	typeref:struct:thread_data *	file:
td	zbd.h	/^static inline void zbd_queue_io_u(struct thread_data *td, struct io_u *io_u,$/;"	z	function:zbd_queue_io_u	typeref:struct:thread_data *	file:
td	zbd.h	/^void setup_zbd_zone_mode(struct thread_data *td, struct io_u *io_u);$/;"	z	prototype:setup_zbd_zone_mode	typeref:struct:thread_data *	file:
td	zbd.h	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f);$/;"	z	prototype:zbd_file_reset	typeref:struct:thread_data *	file:
td	zbd.h	/^void zbd_recalc_options_with_zone_granularity(struct thread_data *td);$/;"	z	prototype:zbd_recalc_options_with_zone_granularity	typeref:struct:thread_data *	file:
td	zone-dist.c	/^static bool has_zones(struct thread_data *td)$/;"	z	function:has_zones	typeref:struct:thread_data *	file:
td	zone-dist.c	/^static void __td_zone_gen_index(struct thread_data *td, enum fio_ddir ddir)$/;"	z	function:__td_zone_gen_index	typeref:struct:thread_data *	file:
td	zone-dist.c	/^void td_zone_free_index(struct thread_data *td)$/;"	z	function:td_zone_free_index	typeref:struct:thread_data *	file:
td	zone-dist.c	/^void td_zone_gen_index(struct thread_data *td)$/;"	z	function:td_zone_gen_index	typeref:struct:thread_data *	file:
td	zone-dist.h	/^void td_zone_free_index(struct thread_data *td);$/;"	z	prototype:td_zone_free_index	typeref:struct:thread_data *	file:
td	zone-dist.h	/^void td_zone_gen_index(struct thread_data *td);$/;"	z	prototype:td_zone_gen_index	typeref:struct:thread_data *	file:
td_async_processing	fio.h	/^static inline bool td_async_processing(struct thread_data *td)$/;"	f	typeref:typename:bool
td_bump_runstate	fio.h	/^extern int td_bump_runstate(struct thread_data *, int);$/;"	p	typeref:typename:int
td_bump_runstate	libfio.c	/^int td_bump_runstate(struct thread_data *td, int new_state)$/;"	f	typeref:typename:int
td_clear_error	fio.h	/^#define td_clear_error(/;"	d
td_ddir	io_ddir.h	/^enum td_ddir {$/;"	g
td_ddir	thread_options.h	/^	enum td_ddir td_ddir;$/;"	m	struct:thread_options	typeref:enum:td_ddir
td_ddir	thread_options.h	/^	uint32_t td_ddir;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
td_error_type	td_error.c	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err)$/;"	f	typeref:enum:error_type_bit
td_error_type	td_error.h	/^enum error_type_bit td_error_type(enum fio_ddir ddir, int err);$/;"	p	typeref:enum:error_type_bit
td_exit	profile.h	/^	void (*td_exit)(struct thread_data *);$/;"	m	struct:prof_io_ops	typeref:typename:void (*)(struct thread_data *)
td_fill_rand_seeds	fio.h	/^extern void td_fill_rand_seeds(struct thread_data *);$/;"	p	typeref:typename:void
td_fill_rand_seeds	init.c	/^void td_fill_rand_seeds(struct thread_data *td)$/;"	f	typeref:typename:void
td_fill_rand_seeds_internal	init.c	/^static void td_fill_rand_seeds_internal(struct thread_data *td, bool use64)$/;"	f	typeref:typename:void	file:
td_fill_verify_state_seed	fio.h	/^extern void td_fill_verify_state_seed(struct thread_data *);$/;"	p	typeref:typename:void
td_fill_verify_state_seed	init.c	/^void td_fill_verify_state_seed(struct thread_data *td)$/;"	f	typeref:typename:void
td_flags_clear	fio.h	/^static inline void td_flags_clear(struct thread_data *td, unsigned int *flags,$/;"	f	typeref:typename:void
td_flags_set	fio.h	/^static inline void td_flags_set(struct thread_data *td, unsigned int *flags,$/;"	f	typeref:typename:void
td_init	profile.h	/^	int (*td_init)(struct thread_data *);$/;"	m	struct:prof_io_ops	typeref:typename:int (*)(struct thread_data *)
td_io_close_file	ioengines.c	/^int td_io_close_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
td_io_close_file	ioengines.h	/^extern int td_io_close_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int
td_io_commit	ioengines.c	/^void td_io_commit(struct thread_data *td)$/;"	f	typeref:typename:void
td_io_commit	ioengines.h	/^extern void td_io_commit(struct thread_data *);$/;"	p	typeref:typename:void
td_io_get_file_size	ioengines.c	/^int td_io_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
td_io_get_file_size	ioengines.h	/^extern int __must_check td_io_get_file_size(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
td_io_getevents	ioengines.c	/^int td_io_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	f	typeref:typename:int
td_io_getevents	ioengines.h	/^extern int __must_check td_io_getevents(struct thread_data *, unsigned int, unsigned int, const /;"	p	typeref:typename:int __must_check
td_io_init	ioengines.c	/^int td_io_init(struct thread_data *td)$/;"	f	typeref:typename:int
td_io_init	ioengines.h	/^extern int __must_check td_io_init(struct thread_data *);$/;"	p	typeref:typename:int __must_check
td_io_open_file	ioengines.c	/^int td_io_open_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
td_io_open_file	ioengines.h	/^extern int __must_check td_io_open_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int __must_check
td_io_prep	ioengines.c	/^int td_io_prep(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
td_io_prep	ioengines.h	/^extern int __must_check td_io_prep(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int __must_check
td_io_queue	ioengines.c	/^enum fio_q_status td_io_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status
td_io_queue	ioengines.h	/^extern enum fio_q_status __must_check td_io_queue(struct thread_data *, struct io_u *);$/;"	p	typeref:enum:fio_q_status __must_check
td_io_u_free_notify	fio.h	/^static inline void td_io_u_free_notify(struct thread_data *td)$/;"	f	typeref:typename:void
td_io_unlink_file	ioengines.c	/^int td_io_unlink_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int
td_io_unlink_file	ioengines.h	/^extern int td_io_unlink_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:int
td_ioengine_flagged	fio.h	/^static inline bool td_ioengine_flagged(struct thread_data *td,$/;"	f	typeref:typename:bool
td_max_bs	fio.h	/^static inline unsigned long long td_max_bs(struct thread_data *td)$/;"	f	typeref:typename:unsigned long long
td_min_bs	fio.h	/^static inline unsigned long long td_min_bs(struct thread_data *td)$/;"	f	typeref:typename:unsigned long long
td_non_fatal_error	td_error.c	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	f	typeref:typename:int
td_non_fatal_error	td_error.h	/^int td_non_fatal_error(struct thread_data *td, enum error_type_bit etype,$/;"	p	typeref:typename:int
td_offload_overlap	fio.h	/^static inline bool td_offload_overlap(struct thread_data *td)$/;"	f	typeref:typename:bool
td_random	io_ddir.h	/^#define td_random(/;"	d
td_read	io_ddir.h	/^#define td_read(/;"	d
td_restore_runstate	fio.h	/^extern void td_restore_runstate(struct thread_data *, int);$/;"	p	typeref:typename:void
td_restore_runstate	libfio.c	/^void td_restore_runstate(struct thread_data *td, int old_state)$/;"	f	typeref:typename:void
td_runstates	libfio.c	/^static const char *td_runstates[] = {$/;"	v	typeref:typename:const char * []	file:
td_rw	io_ddir.h	/^#define td_rw(/;"	d
td_set_ioengine_flags	fio.h	/^static inline void td_set_ioengine_flags(struct thread_data *td)$/;"	f	typeref:typename:void
td_set_runstate	fio.h	/^extern void td_set_runstate(struct thread_data *, int);$/;"	p	typeref:typename:void
td_set_runstate	libfio.c	/^void td_set_runstate(struct thread_data *td, int runstate)$/;"	f	typeref:typename:void
td_steadystate_init	steadystate.c	/^int td_steadystate_init(struct thread_data *td)$/;"	f	typeref:typename:int
td_steadystate_init	steadystate.h	/^extern int td_steadystate_init(struct thread_data *);$/;"	p	typeref:typename:int
td_trim	io_ddir.h	/^#define td_trim(/;"	d
td_trimwrite	io_ddir.h	/^#define td_trimwrite(/;"	d
td_var	parse.h	/^static inline void *td_var(void *to, const struct fio_option *o,$/;"	f	typeref:typename:void *
td_verror	fio.h	/^#define td_verror(/;"	d
td_vmsg	fio.h	/^#define td_vmsg(/;"	d
td_write	io_ddir.h	/^#define td_write(/;"	d
td_writeout_logs	iolog.c	/^void td_writeout_logs(struct thread_data *td, bool unit_logs)$/;"	f	typeref:typename:void
td_writeout_logs	iolog.h	/^extern void td_writeout_logs(struct thread_data *, bool);$/;"	p	typeref:typename:void
td_zone_free_index	zone-dist.c	/^void td_zone_free_index(struct thread_data *td)$/;"	f	typeref:typename:void
td_zone_free_index	zone-dist.h	/^void td_zone_free_index(struct thread_data *td);$/;"	p	typeref:typename:void
td_zone_gen_index	zone-dist.c	/^void td_zone_gen_index(struct thread_data *td)$/;"	f	typeref:typename:void
td_zone_gen_index	zone-dist.h	/^void td_zone_gen_index(struct thread_data *td);$/;"	p	typeref:typename:void
tearDownClass	tools/hist/fio-histo-log-pctiles.py	/^    def tearDownClass(cls):$/;"	m	class:Test
temp_stall_ts	backend.c	/^int temp_stall_ts;$/;"	v	typeref:typename:int
tempdir	tools/hist/fio-histo-log-pctiles.py	/^    tempdir = None$/;"	v	class:Test
templates_path	doc/conf.py	/^templates_path = ['_templates']$/;"	v
terminate	fio.h	/^	volatile bool terminate;$/;"	m	struct:thread_data	typeref:typename:volatile bool
terminate	ioengines.h	/^	void (*terminate)(struct thread_data *);$/;"	m	struct:ioengine_ops	typeref:typename:void (*)(struct thread_data *)
terminate	libfio.c	/^void fio_terminate_threads(unsigned int group_id, unsigned int terminate)$/;"	z	function:fio_terminate_threads	typeref:typename:unsigned int	file:
terminate_time	fio.h	/^	struct timespec terminate_time;$/;"	m	struct:thread_data	typeref:struct:timespec
terse	stat.c	/^		     int terse, struct buf_output *out)$/;"	z	function:print_disk_util	typeref:typename:int	file:
terse	stat.c	/^static void show_agg_stats(struct disk_util_agg *agg, int terse,$/;"	z	function:show_agg_stats	typeref:typename:int	file:
terse	stat.c	/^void show_disk_util(int terse, struct json_object *parent,$/;"	z	function:show_disk_util	typeref:typename:int	file:
terse	stat.h	/^extern void print_disk_util(struct disk_util_stat *, struct disk_util_agg *, int terse, struct b/;"	z	prototype:print_disk_util	typeref:typename:int	file:
terse_version	init.c	/^int terse_version = 3;$/;"	v	typeref:typename:int
test	Makefile	/^test: fio$/;"	t
test	lib/memcpy.c	/^static void t_hybrid(struct memcpy_test *test)$/;"	z	function:t_hybrid	typeref:struct:memcpy_test *	file:
test	lib/memcpy.c	/^static void t_memcpy(struct memcpy_test *test)$/;"	z	function:t_memcpy	typeref:struct:memcpy_test *	file:
test	lib/memcpy.c	/^static void t_memmove(struct memcpy_test *test)$/;"	z	function:t_memmove	typeref:struct:memcpy_test *	file:
test	lib/memcpy.c	/^static void t_simple(struct memcpy_test *test)$/;"	z	function:t_simple	typeref:struct:memcpy_test *	file:
test_a_add_histos	tools/hist/fio-histo-log-pctiles.py	/^    def test_a_add_histos(self):$/;"	m	class:Test
test_b1_parse_log	tools/hist/fio-histo-log-pctiles.py	/^    def test_b1_parse_log(self):$/;"	m	class:Test
test_b2_parse_empty_log	tools/hist/fio-histo-log-pctiles.py	/^    def test_b2_parse_empty_log(self):$/;"	m	class:Test
test_b3_parse_empty_records	tools/hist/fio-histo-log-pctiles.py	/^    def test_b3_parse_empty_records(self):$/;"	m	class:Test
test_b4_parse_non_int	tools/hist/fio-histo-log-pctiles.py	/^    def test_b4_parse_non_int(self):$/;"	m	class:Test
test_b5_parse_neg_int	tools/hist/fio-histo-log-pctiles.py	/^    def test_b5_parse_neg_int(self):$/;"	m	class:Test
test_b6_parse_too_few_int	tools/hist/fio-histo-log-pctiles.py	/^    def test_b6_parse_too_few_int(self):$/;"	m	class:Test
test_b7_parse_invalid_direction	tools/hist/fio-histo-log-pctiles.py	/^    def test_b7_parse_invalid_direction(self):$/;"	m	class:Test
test_b8_parse_bsz_too_big	tools/hist/fio-histo-log-pctiles.py	/^    def test_b8_parse_bsz_too_big(self):$/;"	m	class:Test
test_b9_parse_wrong_bucket_count	tools/hist/fio-histo-log-pctiles.py	/^    def test_b9_parse_wrong_bucket_count(self):$/;"	m	class:Test
test_c1_time_ranges	tools/hist/fio-histo-log-pctiles.py	/^    def test_c1_time_ranges(self):$/;"	m	class:Test
test_clock	t/time-test.c	/^static long long test_clock(int mode, int cycles_per_usec, int fast_test,$/;"	f	typeref:typename:long long	file:
test_d1_align_histo_log_1_quantum	tools/hist/fio-histo-log-pctiles.py	/^    def test_d1_align_histo_log_1_quantum(self):$/;"	m	class:Test
test_d1a_align_2rec_histo_log_epoch_1_quantum_1sec	tools/hist/fio-histo-log-pctiles.py	/^    def test_d1a_align_2rec_histo_log_epoch_1_quantum_1sec(self):$/;"	m	class:Test
test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec	tools/hist/fio-histo-log-pctiles.py	/^    def test_d1b_align_2rec_histo_log_epoch_1_quantum_5sec(self):$/;"	m	class:Test
test_d2_align_histo_log_2_quantum	tools/hist/fio-histo-log-pctiles.py	/^    def test_d2_align_histo_log_2_quantum(self):$/;"	m	class:Test
test_duration	profiles/act.c	/^	unsigned long long test_duration;$/;"	m	struct:act_options	typeref:typename:unsigned long long	file:
test_e1_get_pctiles_flat_histo	tools/hist/fio-histo-log-pctiles.py	/^    def test_e1_get_pctiles_flat_histo(self):$/;"	m	class:Test
test_e2_get_pctiles_highest_pct	tools/hist/fio-histo-log-pctiles.py	/^    def test_e2_get_pctiles_highest_pct(self):$/;"	m	class:Test
test_memalign_1	unittests/lib/memalign.c	/^static void test_memalign_1(void)$/;"	f	typeref:typename:void	file:
test_multi	t/axmap.c	/^static int test_multi(uint64_t size, unsigned int bit_off)$/;"	f	typeref:typename:int	file:
test_next_free	t/axmap.c	/^static int test_next_free(uint64_t size, int seed)$/;"	f	typeref:typename:int	file:
test_num2str	unittests/lib/num2str.c	/^static void test_num2str(void)$/;"	f	typeref:typename:void	file:
test_overlap	t/axmap.c	/^static int test_overlap(void)$/;"	f	typeref:typename:int	file:
test_regular	t/axmap.c	/^static int test_regular(uint64_t size, int seed)$/;"	f	typeref:typename:int	file:
test_strcasestr_1	unittests/oslib/strcasestr.c	/^static void test_strcasestr_1(void)$/;"	f	typeref:typename:void	file:
test_strcasestr_2	unittests/oslib/strcasestr.c	/^static void test_strcasestr_2(void)$/;"	f	typeref:typename:void	file:
test_strcasestr_3	unittests/oslib/strcasestr.c	/^static void test_strcasestr_3(void)$/;"	f	typeref:typename:void	file:
test_strlcat_1	unittests/oslib/strlcat.c	/^static void test_strlcat_1(void)$/;"	f	typeref:typename:void	file:
test_strlcat_2	unittests/oslib/strlcat.c	/^static void test_strlcat_2(void)$/;"	f	typeref:typename:void	file:
test_strndup_1	unittests/oslib/strndup.c	/^static void test_strndup_1(void)$/;"	f	typeref:typename:void	file:
test_strndup_2	unittests/oslib/strndup.c	/^static void test_strndup_2(void)$/;"	f	typeref:typename:void	file:
test_strndup_3	unittests/oslib/strndup.c	/^static void test_strndup_3(void)$/;"	f	typeref:typename:void	file:
test_strntol_1	unittests/lib/strntol.c	/^static void test_strntol_1(void)$/;"	f	typeref:typename:void	file:
test_strntol_2	unittests/lib/strntol.c	/^static void test_strntol_2(void)$/;"	f	typeref:typename:void	file:
test_strntol_3	unittests/lib/strntol.c	/^static void test_strntol_3(void)$/;"	f	typeref:typename:void	file:
test_strsep_1	unittests/oslib/strsep.c	/^static void test_strsep_1(void)$/;"	f	typeref:typename:void	file:
test_strsep_2	unittests/oslib/strsep.c	/^static void test_strsep_2(void)$/;"	f	typeref:typename:void	file:
test_strsep_3	unittests/oslib/strsep.c	/^static void test_strsep_3(void)$/;"	f	typeref:typename:void	file:
test_type	crc/test.c	/^struct test_type {$/;"	s	file:
testcase	unittests/lib/num2str.c	/^struct testcase {$/;"	s	file:
testcases	unittests/lib/num2str.c	/^static const struct testcase testcases[] = {$/;"	v	typeref:typename:const struct testcase[]	file:
tests	lib/memcpy.c	/^static struct memcpy_test tests[] = {$/;"	v	typeref:struct:memcpy_test[]	file:
tests	t/readonly.py	/^    tests = [$/;"	v
tests	t/strided.py	/^    tests = [   # randommap enabled$/;"	v
tests	unittests/lib/memalign.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/lib/num2str.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/lib/strntol.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/oslib/strcasestr.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/oslib/strlcat.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/oslib/strndup.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
tests	unittests/oslib/strsep.c	/^static struct fio_unittest_entry tests[] = {$/;"	v	typeref:struct:fio_unittest_entry[]	file:
texinfo	doc/Makefile	/^texinfo:$/;"	t
texinfo_documents	doc/conf.py	/^texinfo_documents = [$/;"	v
text	cairo_text_helpers.c	/^					const char *text)$/;"	z	function:draw_vertical_centered_text	typeref:typename:const char *	file:
text	cairo_text_helpers.c	/^				double fontsize, const char *text)$/;"	z	function:draw_left_justified_text	typeref:typename:const char *	file:
text	cairo_text_helpers.c	/^				double fontsize, const char *text)$/;"	z	function:draw_right_justified_text	typeref:typename:const char *	file:
text	cairo_text_helpers.c	/^			       double fontsize, const char *text)$/;"	z	function:draw_centered_text	typeref:typename:const char *	file:
text	cairo_text_helpers.c	/^			       double fontsize, const char *text, int alignment)$/;"	z	function:draw_aligned_text	typeref:typename:const char *	file:
text	cairo_text_helpers.h	/^					const char *text);$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:const char *	file:
text	cairo_text_helpers.h	/^				double fontsize, const char *text);$/;"	z	prototype:draw_left_justified_text	typeref:typename:const char *	file:
text	cairo_text_helpers.h	/^				double fontsize, const char *text);$/;"	z	prototype:draw_right_justified_text	typeref:typename:const char *	file:
text	cairo_text_helpers.h	/^			       double fontsize, const char *text);$/;"	z	prototype:draw_centered_text	typeref:typename:const char *	file:
text	client.h	/^	client_cmd_op		*text;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
text	doc/Makefile	/^text:$/;"	t
text	gcompat.c	/^				     const gchar *text)$/;"	z	function:gtk_combo_box_text_prepend_text	typeref:typename:const gchar *	file:
text	gcompat.c	/^				    const gchar *text)$/;"	z	function:gtk_combo_box_text_append_text	typeref:typename:const gchar *	file:
text	gcompat.c	/^				    const gchar *text)$/;"	z	function:gtk_combo_box_text_insert_text	typeref:typename:const gchar *	file:
text	gcompat.h	/^void gtk_combo_box_text_append_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	z	prototype:gtk_combo_box_text_append_text	typeref:typename:const gchar *	file:
text	gcompat.h	/^void gtk_combo_box_text_insert_text(GtkComboBoxText *combo_box, gint position, const gchar *text/;"	z	prototype:gtk_combo_box_text_insert_text	typeref:typename:const gchar *	file:
text	gcompat.h	/^void gtk_combo_box_text_prepend_text(GtkComboBoxText *combo_box, const gchar *text);$/;"	z	prototype:gtk_combo_box_text_prepend_text	typeref:typename:const gchar *	file:
text	gfio.c	/^				const char *text)$/;"	z	function:set_menu_entry_text	typeref:typename:const char *	file:
text	ghelpers.c	/^			    const char *text)$/;"	z	function:multitext_update_entry	typeref:typename:const char *	file:
text	ghelpers.c	/^void multitext_add_entry(struct multitext_widget *mt, const char *text)$/;"	z	function:multitext_add_entry	typeref:typename:const char *	file:
text	ghelpers.h	/^			    const char *text);$/;"	z	prototype:multitext_update_entry	typeref:typename:const char *	file:
text	ghelpers.h	/^	char **text;$/;"	m	struct:multitext_widget	typeref:typename:char **
text	ghelpers.h	/^void multitext_add_entry(struct multitext_widget *mt, const char *text);$/;"	z	prototype:multitext_add_entry	typeref:typename:const char *	file:
text	goptions.c	/^				       struct fio_option *o, const char *text,$/;"	z	function:gopt_new_combo_str	typeref:typename:const char *	file:
text	goptions.c	/^				       struct fio_option *o, const char *text,$/;"	z	function:gopt_new_str_store	typeref:typename:const char *	file:
text	goptions.c	/^static void gopt_combo_str_set_val(struct gopt_combo *c, const char *text)$/;"	z	function:gopt_combo_str_set_val	typeref:typename:const char *	file:
text	goptions.c	/^static void gopt_str_store_set_val(struct gopt_str *s, const char *text)$/;"	z	function:gopt_str_store_set_val	typeref:typename:const char *	file:
text	server.h	/^	uint8_t text[];$/;"	m	struct:cmd_single_line_pdu	typeref:typename:uint8_t[]
text_color	tools/fiograph/fiograph.conf	/^text_color=darkblue$/;"	k	section:ioengine
text_color	tools/fiograph/fiograph.conf	/^text_color=darkgreen$/;"	k	section:fio_jobs
text_color	tools/fiograph/fiograph.conf	/^text_color=red$/;"	k	section:exec_postrun
text_color	tools/fiograph/fiograph.conf	/^text_color=red$/;"	k	section:exec_prerun
text_color	tools/fiograph/fiograph.conf	/^text_color=red$/;"	k	section:numjobs
tf	t/steadystate_tests.py	/^        tf = "steadystate_job{0}.json".format(jobnum)$/;"	v
theta	lib/zipf.c	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	function:zipf_init	typeref:typename:double	file:
theta	lib/zipf.h	/^	double theta;$/;"	m	struct:zipf_state	typeref:typename:double
theta	lib/zipf.h	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	prototype:zipf_init	typeref:typename:double	file:
thinktime	thread_options.h	/^	uint32_t thinktime;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
thinktime	thread_options.h	/^	unsigned int thinktime;$/;"	m	struct:thread_options	typeref:typename:unsigned int
thinktime_blocks	thread_options.h	/^	uint32_t thinktime_blocks;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
thinktime_blocks	thread_options.h	/^	unsigned int thinktime_blocks;$/;"	m	struct:thread_options	typeref:typename:unsigned int
thinktime_blocks_counter	fio.h	/^	uint64_t *thinktime_blocks_counter;$/;"	m	struct:thread_data	typeref:typename:uint64_t *
thinktime_blocks_type	thread_options.h	/^	uint32_t thinktime_blocks_type;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
thinktime_blocks_type	thread_options.h	/^	unsigned int thinktime_blocks_type;$/;"	m	struct:thread_options	typeref:typename:unsigned int
thinktime_iotime	thread_options.h	/^	uint32_t thinktime_iotime;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
thinktime_iotime	thread_options.h	/^	unsigned int thinktime_iotime;$/;"	m	struct:thread_options	typeref:typename:unsigned int
thinktime_spin	thread_options.h	/^	uint32_t thinktime_spin;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
thinktime_spin	thread_options.h	/^	unsigned int thinktime_spin;$/;"	m	struct:thread_options	typeref:typename:unsigned int
this_bytes	backend.c	/^static bool io_bytes_exceeded(struct thread_data *td, uint64_t *this_bytes)$/;"	z	function:io_bytes_exceeded	typeref:typename:uint64_t *	file:
this_depth	blktrace.c	/^static void depth_end(struct blk_io_trace *t, int *this_depth, int *depth)$/;"	z	function:depth_end	typeref:typename:int *	file:
this_io_blocks	fio.h	/^	uint64_t this_io_blocks[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
this_io_bytes	fio.h	/^	uint64_t this_io_bytes[DDIR_RWDIR_CNT];$/;"	m	struct:thread_data	typeref:typename:uint64_t[]
this_io_bytes	stat.c	/^			 uint64_t *this_io_bytes, uint64_t *stat_io_bytes,$/;"	z	function:__add_samples	typeref:typename:uint64_t *	file:
thp	engines/mmap.c	/^	unsigned int thp;$/;"	m	struct:mmap_options	typeref:typename:unsigned int	file:
thr_number	eta.c	/^void print_status_init(int thr_number)$/;"	z	function:print_status_init	typeref:typename:int	file:
thread	fio.h	/^	pthread_t thread;$/;"	m	struct:thread_data	typeref:typename:pthread_t
thread	gettime.c	/^	pthread_t thread;$/;"	m	struct:clock_thread	typeref:typename:pthread_t	file:
thread	helper_thread.c	/^	pthread_t thread;$/;"	m	struct:helper_data	typeref:typename:pthread_t	file:
thread	idletime.h	/^	pthread_t thread;$/;"	m	struct:idle_prof_thread	typeref:typename:pthread_t
thread	server.c	/^		pthread_t thread;$/;"	m	union:ffi_element::__anon0e7c93ed020a	typeref:typename:pthread_t	file:
thread	server.c	/^static void fio_server_add_job_pid(struct flist_head *job_list, pthread_t thread)$/;"	z	function:fio_server_add_job_pid	typeref:typename:pthread_t	file:
thread	t/dedupe.c	/^	pthread_t thread;$/;"	m	struct:worker_thread	typeref:typename:pthread_t	file:
thread	t/dedupe.c	/^static int do_work(struct worker_thread *thread, void *buf)$/;"	z	function:do_work	typeref:struct:worker_thread *	file:
thread	t/dedupe.c	/^static void thread_init_zlib_control(struct worker_thread *thread)$/;"	z	function:thread_init_zlib_control	typeref:struct:worker_thread *	file:
thread	t/io_uring.c	/^	pthread_t thread;$/;"	m	struct:submitter	typeref:typename:pthread_t	file:
thread	t/read-to-pipe-async.c	/^	pthread_t thread;$/;"	m	struct:thread_data	typeref:typename:pthread_t	file:
thread	t/read-to-pipe-async.c	/^	pthread_t thread;$/;"	m	struct:work_item	typeref:typename:pthread_t	file:
thread	t/read-to-pipe-async.c	/^	struct thread_data thread;$/;"	m	struct:reader_thread	typeref:struct:thread_data	file:
thread	t/read-to-pipe-async.c	/^	struct thread_data thread;$/;"	m	struct:writer_thread	typeref:struct:thread_data	file:
thread	t/read-to-pipe-async.c	/^static void exit_thread(struct thread_data *thread,$/;"	z	function:exit_thread	typeref:struct:thread_data *	file:
thread	t/read-to-pipe-async.c	/^static void init_thread(struct thread_data *thread)$/;"	z	function:init_thread	typeref:struct:thread_data *	file:
thread	t/read-to-pipe-async.c	/^static void thread_exiting(struct thread_data *thread)$/;"	z	function:thread_exiting	typeref:struct:thread_data *	file:
thread	verify.h	/^	uint16_t thread;$/;"	m	struct:verify_header	typeref:typename:uint16_t
thread	workqueue.h	/^	pthread_t thread;$/;"	m	struct:submit_worker	typeref:typename:pthread_t
thread_ctx	engines/windowsaio.c	/^struct thread_ctx {$/;"	s	file:
thread_data	fio.h	/^struct thread_data {$/;"	s
thread_data	t/memlock.c	/^static struct thread_data {$/;"	s	file:
thread_data	t/read-to-pipe-async.c	/^struct thread_data {$/;"	s	file:
thread_eta	eta.c	/^static unsigned long thread_eta(struct thread_data *td)$/;"	f	typeref:typename:unsigned long	file:
thread_exiting	t/read-to-pipe-async.c	/^static void thread_exiting(struct thread_data *thread)$/;"	f	typeref:typename:void	file:
thread_fn	t/dedupe.c	/^static void *thread_fn(void *data)$/;"	f	typeref:typename:void *	file:
thread_init_zlib_control	t/dedupe.c	/^static void thread_init_zlib_control(struct worker_thread *thread)$/;"	f	typeref:typename:void	file:
thread_io_list	verify-state.h	/^struct thread_io_list {$/;"	s
thread_io_list_sz	verify-state.h	/^static inline size_t thread_io_list_sz(struct thread_io_list *s)$/;"	f	typeref:typename:size_t
thread_main	backend.c	/^static void *thread_main(void *data)$/;"	f	typeref:typename:void *	file:
thread_number	backend.c	/^unsigned int thread_number = 0;$/;"	v	typeref:typename:unsigned int
thread_number	client.h	/^	uint32_t thread_number;$/;"	m	struct:fio_client	typeref:typename:uint32_t
thread_number	fio.h	/^	unsigned int thread_number;$/;"	m	struct:thread_data	typeref:typename:unsigned int
thread_number	server.h	/^	uint32_t thread_number;$/;"	m	struct:cmd_add_job_pdu	typeref:typename:uint32_t
thread_number	server.h	/^	uint32_t thread_number;$/;"	m	struct:cmd_iolog_pdu	typeref:typename:uint32_t
thread_number	stat.h	/^	uint32_t thread_number;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
thread_options	thread_options.h	/^struct thread_options {$/;"	s
thread_options_pack	thread_options.h	/^struct thread_options_pack {$/;"	s
thread_rand32_state	verify-state.h	/^struct thread_rand32_state {$/;"	s
thread_rand64_state	verify-state.h	/^struct thread_rand64_state {$/;"	s
thread_rand_state	verify-state.h	/^struct thread_rand_state {$/;"	s
thread_segment	fio.h	/^struct thread_segment {$/;"	s
thread_stat	stat.h	/^struct thread_stat {$/;"	s
thread_status	client.h	/^	client_cmd_op		*thread_status;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
thread_status_pb	gfio.h	/^	GtkWidget *thread_status_pb;$/;"	m	struct:gui	typeref:typename:GtkWidget *
thread_status_pb	gfio.h	/^	GtkWidget *thread_status_pb;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
threadnumber	server.c	/^int fio_server_get_verify_state(const char *name, int threadnumber,$/;"	z	function:fio_server_get_verify_state	typeref:typename:int	file:
threads	fio.h	/^	struct thread_data *threads;$/;"	m	struct:thread_segment	typeref:struct:thread_data *
threads	t/dedupe.c	/^static void show_progress(struct worker_thread *threads, unsigned long total)$/;"	z	function:show_progress	typeref:struct:worker_thread *	file:
threads	verify-state.h	/^	uint64_t threads;$/;"	m	struct:all_io_list	typeref:typename:uint64_t
threads_per_queue	profiles/act.c	/^	unsigned int threads_per_queue;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
threadstats	stat.c	/^static void init_per_prio_stats(struct thread_stat *threadstats, int nr_ts)$/;"	z	function:init_per_prio_stats	typeref:struct:thread_stat *	file:
tick_value	graph.c	/^struct tick_value {$/;"	s	file:
tickmark	tickmarks.h	/^struct tickmark {$/;"	s
ticks	diskutil.h	/^	uint64_t ticks[2];$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t[2]
ticks	diskutil.h	/^	uint64_t ticks[2];$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t[2]
tid	t/io_uring.c	/^	int tid;$/;"	m	struct:submitter	typeref:typename:int	file:
time	backend.c	/^			     struct timespec *time)$/;"	z	function:handle_thinktime	typeref:struct:timespec *	file:
time	backend.c	/^static int wait_for_completions(struct thread_data *td, struct timespec *time)$/;"	z	function:wait_for_completions	typeref:struct:timespec *	file:
time	blktrace_api.h	/^	__u64 time;		\/* in nanoseconds *\/$/;"	m	struct:blk_io_trace	typeref:typename:__u64
time	diskutil.h	/^	struct timespec time;$/;"	m	struct:disk_util	typeref:struct:timespec
time	eta.c	/^bool eta_time_within_slack(unsigned int time)$/;"	z	function:eta_time_within_slack	typeref:typename:unsigned int	file:
time	fio.h	/^extern bool eta_time_within_slack(unsigned int time);$/;"	z	prototype:eta_time_within_slack	typeref:typename:unsigned int	file:
time	gfio.c	/^				   guint info, guint time, gpointer *data)$/;"	z	function:drag_and_drop_received	typeref:typename:guint	file:
time	io_u.c	/^	struct timespec time;		\/* output *\/$/;"	m	struct:io_completion_data	typeref:struct:timespec	file:
time	iolog.c	/^	       unsigned long long time)$/;"	z	function:delay_since_ttime	typeref:typename:unsigned long long	file:
time	iolog.h	/^	uint64_t time;$/;"	m	struct:io_sample	typeref:typename:uint64_t
time_based	thread_options.h	/^	uint32_t time_based;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
time_based	thread_options.h	/^	unsigned int time_based;$/;"	m	struct:thread_options	typeref:typename:unsigned int
time_in_queue	diskutil.h	/^	uint64_t time_in_queue;$/;"	m	struct:disk_util_agg	typeref:typename:uint64_t
time_in_queue	diskutil.h	/^	uint64_t time_in_queue;$/;"	m	struct:disk_util_stats	typeref:typename:uint64_t
time_nsec	verify.h	/^	uint32_t time_nsec;$/;"	m	struct:verify_header	typeref:typename:uint32_t
time_offset	fio.h	/^	long time_offset;$/;"	m	struct:thread_data	typeref:typename:long
time_ranges	tools/hist/fio-histo-log-pctiles.py	/^def time_ranges(groups, counters_per_group, fio_version=3):$/;"	f
time_sec	verify.h	/^	uint32_t time_sec;$/;"	m	struct:verify_header	typeref:typename:uint32_t
time_since_genesis	fio_time.h	/^extern uint64_t time_since_genesis(void);$/;"	p	typeref:typename:uint64_t
time_since_genesis	time.c	/^uint64_t time_since_genesis(void)$/;"	f	typeref:typename:uint64_t
time_since_now	fio_time.h	/^extern uint64_t time_since_now(const struct timespec *);$/;"	p	typeref:typename:uint64_t
time_since_now	gettime.c	/^uint64_t time_since_now(const struct timespec *s)$/;"	f	typeref:typename:uint64_t
timed_out	client.h	/^	client_timed_out_op	*timed_out;$/;"	m	struct:client_ops	typeref:typename:client_timed_out_op *
timeout	os/windows/posix.c	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout)$/;"	z	function:poll	typeref:typename:int	file:
timeout	os/windows/posix/include/poll.h	/^int poll(struct pollfd fds[], nfds_t nfds, int timeout);$/;"	z	prototype:poll	typeref:typename:int	file:
timeout	server.c	/^bool fio_server_poll_fd(int fd, short events, int timeout)$/;"	z	function:fio_server_poll_fd	typeref:typename:int	file:
timeout	server.h	/^extern bool fio_server_poll_fd(int fd, short events, int timeout);$/;"	z	prototype:fio_server_poll_fd	typeref:typename:int	file:
timeout	thread_options.h	/^	uint64_t timeout;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
timeout	thread_options.h	/^	unsigned long long timeout;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
timeout_expired	engines/windowsaio.c	/^static BOOL timeout_expired(DWORD start_count, DWORD end_count)$/;"	f	typeref:typename:BOOL	file:
timeout_flags	os/linux/io_uring.h	/^		__u32		timeout_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
timeout_ms	helper_thread.c	/^static uint8_t wait_for_action(int fd, unsigned int timeout_ms)$/;"	z	function:wait_for_action	typeref:typename:unsigned int	file:
timer	helper_thread.c	/^static int reset_timers(struct interval_timer timer[], int num_timers,$/;"	z	function:reset_timers	typeref:struct:interval_timer[]	file:
timerfd	helper_thread.c	/^static int timerfd = -1;$/;"	v	typeref:typename:int	file:
timespec_add_msec	fio_time.h	/^extern void timespec_add_msec(struct timespec *, unsigned int);$/;"	p	typeref:typename:void
timespec_add_msec	time.c	/^void timespec_add_msec(struct timespec *ts, unsigned int msec)$/;"	f	typeref:typename:void
tiobench_options	profiles/tiobench.c	/^static struct tiobench_options tiobench_options;$/;"	v	typeref:struct:tiobench_options	file:
tiobench_options	profiles/tiobench.c	/^struct tiobench_options {$/;"	s	file:
tiobench_profile	profiles/tiobench.c	/^static struct profile_ops tiobench_profile = {$/;"	v	typeref:struct:profile_ops	file:
tiobench_register	profiles/tiobench.c	/^static void fio_init tiobench_register(void)$/;"	f	typeref:typename:void fio_init	file:
tiobench_unregister	profiles/tiobench.c	/^static void fio_exit tiobench_unregister(void)$/;"	f	typeref:typename:void fio_exit	file:
title	gclient.c	/^static struct graph *setup_clat_graph(char *title, unsigned long long *ovals,$/;"	z	function:setup_clat_graph	typeref:typename:char *	file:
title	gclient.c	/^static struct graph *setup_lat_bucket_graph(const char *title, double *lat,$/;"	z	function:setup_lat_bucket_graph	typeref:typename:const char *	file:
title	gerror.c	/^void gfio_report_info(struct gui *ui, const char *title, const char *message)$/;"	z	function:gfio_report_info	typeref:typename:const char *	file:
title	gerror.h	/^extern void gfio_report_info(struct gui *ui, const char *title, const char *message);$/;"	z	prototype:gfio_report_info	typeref:typename:const char *	file:
title	ghelpers.c	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	function:tree_view_column	typeref:typename:const char *	file:
title	ghelpers.h	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	prototype:tree_view_column	typeref:typename:const char *	file:
title	graph.c	/^	char *title;$/;"	m	struct:graph	typeref:typename:char *	file:
title	graph.c	/^void graph_title(struct graph *bg, const char *title)$/;"	z	function:graph_title	typeref:typename:const char *	file:
title	graph.c	/^void graph_x_title(struct graph *bg, const char *title)$/;"	z	function:graph_x_title	typeref:typename:const char *	file:
title	graph.c	/^void graph_y_title(struct graph *bg, const char *title)$/;"	z	function:graph_y_title	typeref:typename:const char *	file:
title	graph.h	/^void graph_title(struct graph *g, const char *title);$/;"	z	prototype:graph_title	typeref:typename:const char *	file:
title	graph.h	/^void graph_x_title(struct graph *g, const char *title);$/;"	z	prototype:graph_x_title	typeref:typename:const char *	file:
title	graph.h	/^void graph_y_title(struct graph *g, const char *title);$/;"	z	prototype:graph_y_title	typeref:typename:const char *	file:
title_style	tools/fiograph/fiograph.conf	/^title_style=<<table border='0' cellborder='0' cellspacing='1'> <tr> <td align='center'> <b> {} </;"	k	section:fio_jobs
tlen	options.c	/^int set_name_idx(char *target, size_t tlen, char *input, int index,$/;"	z	function:set_name_idx	typeref:typename:size_t	file:
tm	tickmarks.c	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	function:calc_tickmarks	typeref:struct:tickmark **	file:
tm	tickmarks.c	/^static void shorten(struct tickmark *tm, int nticks, int *power_of_ten,$/;"	z	function:shorten	typeref:struct:tickmark *	file:
tm	tickmarks.h	/^int calc_tickmarks(double min, double max, int nticks, struct tickmark **tm,$/;"	z	prototype:calc_tickmarks	typeref:struct:tickmark **	file:
tnsec	io_u.c	/^		      unsigned long long tnsec, unsigned long long max_nsec)$/;"	z	function:lat_fatal	typeref:typename:unsigned long long	file:
tnumber	fio.h	/^static inline struct thread_data *tnumber_to_td(unsigned int tnumber)$/;"	z	function:tnumber_to_td	typeref:typename:unsigned int	file:
tnumber_to_td	fio.h	/^static inline struct thread_data *tnumber_to_td(unsigned int tnumber)$/;"	f	typeref:struct:thread_data *
to	engines/cmdprio.c	/^static int fio_cmdprio_bssplit_ddir(struct thread_options *to, void *cb_arg,$/;"	z	function:fio_cmdprio_bssplit_ddir	typeref:struct:thread_options *	file:
to	goptions.c	/^			     struct thread_options *to)$/;"	z	function:gopt_add_options	typeref:struct:thread_options *	file:
to	goptions.c	/^			     struct thread_options *to)$/;"	z	function:gopt_set_options	typeref:struct:thread_options *	file:
to	goptions.c	/^			    struct gopt *gopt, struct thread_options *to)$/;"	z	function:gopt_set_option	typeref:struct:thread_options *	file:
to	goptions.c	/^			    struct thread_options *to)$/;"	z	function:gopt_add_option	typeref:struct:thread_options *	file:
to	parse.h	/^static inline void *td_var(void *to, const struct fio_option *o,$/;"	z	function:td_var	typeref:typename:void *	file:
to_submit	engines/io_uring.c	/^static int io_uring_enter(struct ioring_data *ld, unsigned int to_submit,$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
to_submit	t/io_uring.c	/^static int io_uring_enter(struct submitter *s, unsigned int to_submit,$/;"	z	function:io_uring_enter	typeref:typename:unsigned int	file:
todo_include_todos	doc/conf.py	/^todo_include_todos = False$/;"	v
tools/plot/fio2gnuplot.1	Makefile	/^tools\/plot\/fio2gnuplot.1:$/;"	t
tooltip	gfio.c	/^			      gboolean keyboard_mode, GtkTooltip *tooltip,$/;"	z	function:graph_tooltip	typeref:typename:GtkTooltip *	file:
tooltip	graph.c	/^				  const char *tooltip)$/;"	z	function:graph_label_add_value	typeref:typename:const char *	file:
tooltip	graph.c	/^		      const double x, const double y, const char *tooltip)$/;"	z	function:graph_add_xy_data	typeref:typename:const char *	file:
tooltip	graph.c	/^	char *tooltip;$/;"	m	struct:graph_value	typeref:typename:char *	file:
tooltip	graph.h	/^		const double x, const double y, const char *tooltip);$/;"	z	prototype:graph_add_xy_data	typeref:typename:const char *	file:
tooltiptext	gfio.c	/^	const char *tooltiptext[2];$/;"	m	struct:button_spec	typeref:typename:const char * [2]	file:
top	cconv.c	/^				   struct thread_options_pack *top)$/;"	z	function:convert_thread_options_to_cpu	typeref:struct:thread_options_pack *	file:
top	cconv.c	/^void convert_thread_options_to_net(struct thread_options_pack *top,$/;"	z	function:convert_thread_options_to_net	typeref:struct:thread_options_pack *	file:
top	gclient.c	/^			struct thread_options_pack *top)$/;"	z	function:gfio_client_add_job	typeref:struct:thread_options_pack *	file:
top	server.h	/^	struct thread_options_pack top;$/;"	m	struct:cmd_add_job_pdu	typeref:struct:thread_options_pack
top	thread_options.h	/^extern void convert_thread_options_to_cpu(struct thread_options *o, struct thread_options_pack */;"	z	prototype:convert_thread_options_to_cpu	typeref:struct:thread_options_pack *	file:
top	thread_options.h	/^extern void convert_thread_options_to_net(struct thread_options_pack *top, struct thread_options/;"	z	prototype:convert_thread_options_to_net	typeref:struct:thread_options_pack *	file:
top_extra	graph.c	/^	double top_extra;$/;"	m	struct:graph	typeref:typename:double	file:
top_level	exp/expression-parser.y	/^top_level:	expression {$/;"	l
top_percent	graph.c	/^			   double right_percent, double top_percent,$/;"	z	function:graph_add_extra_space	typeref:typename:double	file:
top_percent	graph.h	/^				double top_percent, double bottom_percent);$/;"	z	prototype:graph_add_extra_space	typeref:typename:double	file:
tot_perc	engines/cmdprio.h	/^	uint32_t tot_perc;$/;"	m	struct:cmdprio_bsprio	typeref:typename:uint32_t
total	stat.c	/^void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist)$/;"	z	function:stat_calc_dist	typeref:typename:unsigned long	file:
total	stat.h	/^extern void stat_calc_dist(uint64_t *map, unsigned long total, double *io_u_dist);$/;"	z	prototype:stat_calc_dist	typeref:typename:unsigned long	file:
total	t/dedupe.c	/^static void show_progress(struct worker_thread *threads, unsigned long total)$/;"	z	function:show_progress	typeref:typename:unsigned long	file:
total_complete	stat.h	/^	uint64_t total_complete;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
total_err_count	fio.h	/^	unsigned int total_err_count;$/;"	m	struct:thread_data	typeref:typename:unsigned int
total_err_count	stat.h	/^	uint64_t total_err_count;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
total_io_size	fio.h	/^	uint64_t total_io_size;$/;"	m	struct:thread_data	typeref:typename:uint64_t
total_io_u	stat.h	/^	uint64_t total_io_u[DDIR_RWDIR_SYNC_CNT];$/;"	m	struct:thread_stat	typeref:typename:uint64_t[]
total_ios	profiles/act.c	/^	uint64_t total_ios;$/;"	m	struct:act_slice	typeref:typename:uint64_t	file:
total_len	crc/xxhash.h	/^    uint64_t total_len;$/;"	m	struct:XXH_state32_t	typeref:typename:uint64_t
total_mem	engines/libcufile.c	/^	size_t              total_mem;     \/* size for cu_mem_ptr and junk_buf *\/$/;"	m	struct:libcufile_options	typeref:typename:size_t	file:
total_mem	engines/libcufile.c	/^static int fio_libcufile_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	z	function:fio_libcufile_iomem_alloc	typeref:typename:size_t	file:
total_mem	engines/xnvme.c	/^static int xnvme_fioe_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	z	function:xnvme_fioe_iomem_alloc	typeref:typename:size_t	file:
total_mem	memory.c	/^static int alloc_mem_cudamalloc(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_cudamalloc	typeref:typename:size_t	file:
total_mem	memory.c	/^static int alloc_mem_malloc(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_malloc	typeref:typename:size_t	file:
total_mem	memory.c	/^static int alloc_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	z	function:alloc_mem_mmap	typeref:typename:size_t	file:
total_mem	memory.c	/^static int alloc_mem_shm(struct thread_data *td, unsigned int total_mem)$/;"	z	function:alloc_mem_shm	typeref:typename:unsigned int	file:
total_mem	memory.c	/^static void free_mem_mmap(struct thread_data *td, size_t total_mem)$/;"	z	function:free_mem_mmap	typeref:typename:size_t	file:
total_run_time	stat.h	/^	uint64_t total_run_time;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
total_size	t/dedupe.c	/^static uint64_t total_size;$/;"	v	typeref:typename:uint64_t	file:
total_submit	stat.h	/^	uint64_t total_submit;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
total_weight	flow.c	/^	unsigned int total_weight;$/;"	m	struct:fio_flow	typeref:typename:unsigned int	file:
touch_objects	engines/rados.c	/^	int touch_objects;$/;"	m	struct:rados_options	typeref:typename:int	file:
tp	gettime.c	/^static void __fio_gettime(struct timespec *tp)$/;"	z	function:__fio_gettime	typeref:struct:timespec *	file:
tp	gettime.c	/^void fio_gettime(struct timespec *tp, void *caller)$/;"	z	function:fio_gettime	typeref:struct:timespec *	file:
tp	os/windows/posix.c	/^int clock_gettime(clockid_t clock_id, struct timespec *tp)$/;"	z	function:clock_gettime	typeref:struct:timespec *	file:
tp	os/windows/posix.c	/^int gettimeofday(struct timeval *restrict tp, void *restrict tzp)$/;"	z	function:gettimeofday	typeref:struct:timeval * 	file:
tp	os/windows/posix.h	/^extern int clock_gettime(clockid_t clock_id, struct timespec *tp);$/;"	z	prototype:clock_gettime	typeref:struct:timespec *	file:
tpe	idletime.h	/^	struct timespec tpe;$/;"	m	struct:idle_prof_thread	typeref:struct:timespec
tps	idletime.h	/^	struct timespec tps;$/;"	m	struct:idle_prof_thread	typeref:struct:timespec
trace_add_file	blktrace.c	/^static int trace_add_file(struct thread_data *td, __u32 device,$/;"	f	typeref:typename:int	file:
trace_add_open_close_event	blktrace.c	/^static void trace_add_open_close_event(struct thread_data *td, int fileno, enum file_log_act act/;"	f	typeref:typename:void	file:
trace_fifo_get	t/btrace2fio.c	/^static int trace_fifo_get(struct fifo *fifo, int fd, void *buf,$/;"	f	typeref:typename:int	file:
trace_file	t/btrace2fio.c	/^static int trace_needs_swap(const char *trace_file, int *swap)$/;"	z	function:trace_needs_swap	typeref:typename:const char *	file:
trace_file	t/btrace2fio.c	/^struct trace_file {$/;"	s	file:
trace_needs_swap	t/btrace2fio.c	/^static int trace_needs_swap(const char *trace_file, int *swap)$/;"	f	typeref:typename:int	file:
tree_view	ghelpers.c	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	function:tree_view_column	typeref:typename:GtkWidget *	file:
tree_view	ghelpers.h	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	z	prototype:tree_view_column	typeref:typename:GtkWidget *	file:
tree_view_column	ghelpers.c	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	f	typeref:typename:GtkTreeViewColumn *
tree_view_column	ghelpers.h	/^GtkTreeViewColumn *tree_view_column(GtkWidget *tree_view, int index, const char *title, unsigned/;"	p	typeref:typename:GtkTreeViewColumn *
trigger_cmd	init.c	/^char *trigger_cmd = NULL;$/;"	v	typeref:typename:char *
trigger_file	init.c	/^char *trigger_file = NULL;$/;"	v	typeref:typename:char *
trigger_remote_cmd	init.c	/^char *trigger_remote_cmd = NULL;$/;"	v	typeref:typename:char *
trigger_timedout	backend.c	/^static bool trigger_timedout(void)$/;"	f	typeref:typename:bool	file:
trigger_timeout	init.c	/^long long trigger_timeout = 0;$/;"	v	typeref:typename:long long
trim_backlog	thread_options.h	/^	uint64_t trim_backlog;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
trim_backlog	thread_options.h	/^	unsigned long long trim_backlog;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
trim_batch	fio.h	/^	unsigned int trim_batch;$/;"	m	struct:thread_data	typeref:typename:unsigned int
trim_batch	thread_options.h	/^	uint32_t trim_batch;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
trim_batch	thread_options.h	/^	unsigned int trim_batch;$/;"	m	struct:thread_options	typeref:typename:unsigned int
trim_block_info	io_u.c	/^static void trim_block_info(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
trim_bw	gfio.h	/^	GtkWidget *trim_bw;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
trim_bw	gfio.h	/^	graph_label_t trim_bw;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
trim_entries	fio.h	/^	unsigned long trim_entries;$/;"	m	struct:thread_data	typeref:typename:unsigned long
trim_io_piece	iolog.c	/^void trim_io_piece(const struct io_u *io_u)$/;"	f	typeref:typename:void
trim_io_piece	iolog.h	/^extern void trim_io_piece(const struct io_u *);$/;"	p	typeref:typename:void
trim_io_us	engines/sg.c	/^	struct io_u **trim_io_us;$/;"	m	struct:sgio_trim	typeref:struct:io_u **	file:
trim_iops	gfio.h	/^	GtkWidget *trim_iops;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
trim_iops	gfio.h	/^	graph_label_t trim_iops;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
trim_list	fio.h	/^	struct flist_head trim_list;$/;"	m	struct:thread_data	typeref:struct:flist_head
trim_list	iolog.h	/^	struct flist_head trim_list;$/;"	m	struct:io_piece	typeref:struct:flist_head
trim_percentage	thread_options.h	/^	uint32_t trim_percentage;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
trim_percentage	thread_options.h	/^	unsigned int trim_percentage;$/;"	m	struct:thread_options	typeref:typename:unsigned int
trim_queue_map	engines/sg.c	/^	unsigned int *trim_queue_map;$/;"	m	struct:sgio_data	typeref:typename:unsigned int *	file:
trim_queues	engines/sg.c	/^	struct sgio_trim **trim_queues;$/;"	m	struct:sgio_data	typeref:struct:sgio_trim **	file:
trim_state	fio.h	/^	struct frand_state trim_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
trim_zero	thread_options.h	/^	uint32_t trim_zero;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
trim_zero	thread_options.h	/^	unsigned int trim_zero;$/;"	m	struct:thread_options	typeref:typename:unsigned int
true	lib/types.h	/^#define true	/;"	d
truncated	server.h	/^	uint16_t truncated;$/;"	m	struct:cmd_job_option	typeref:typename:uint16_t
try	iolog.c	/^static int __write_log(struct thread_data *td, struct io_log *log, int try)$/;"	z	function:__write_log	typeref:typename:int	file:
try	iolog.c	/^static int write_bandw_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_bandw_log	typeref:typename:int	file:
try	iolog.c	/^static int write_clat_hist_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_hist_log	typeref:typename:int	file:
try	iolog.c	/^static int write_clat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_log	typeref:typename:int	file:
try	iolog.c	/^static int write_iops_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_iops_log	typeref:typename:int	file:
try	iolog.c	/^static int write_lat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_lat_log	typeref:typename:int	file:
try	iolog.c	/^static int write_slat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_slat_log	typeref:typename:int	file:
trylock	filelock.c	/^static bool __fio_lock_file(const char *fname, int trylock)$/;"	z	function:__fio_lock_file	typeref:typename:int	file:
trylock	filelock.c	/^static struct fio_filelock *fio_hash_get(uint32_t hash, int trylock)$/;"	z	function:fio_hash_get	typeref:typename:int	file:
trylock	filelock.c	/^static struct fio_filelock *get_filelock(int trylock, int *retry)$/;"	z	function:get_filelock	typeref:typename:int	file:
trylock	iolog.c	/^static int finish_log(struct thread_data *td, struct io_log *log, int trylock)$/;"	z	function:finish_log	typeref:typename:int	file:
ts	engines/cmdprio.c	/^			       int max_unique_prios, struct thread_stat *ts)$/;"	z	function:init_cmdprio_values	typeref:struct:thread_stat *	file:
ts	engines/cmdprio.c	/^static int init_ts_clat_prio(struct thread_stat *ts, enum fio_ddir ddir,$/;"	z	function:init_ts_clat_prio	typeref:struct:thread_stat *	file:
ts	fio.h	/^	struct thread_stat ts __attribute__ ((aligned(8)));$/;"	m	struct:thread_data	typeref:struct:thread_stat
ts	gclient.c	/^				       GtkWidget *vbox, struct thread_stat *ts,$/;"	z	function:gfio_show_clat_percentiles	typeref:struct:thread_stat *	file:
ts	gclient.c	/^				       struct thread_stat *ts, unsigned int len)$/;"	z	function:gfio_add_total_depths_tree	typeref:struct:thread_stat *	file:
ts	gclient.c	/^				       struct thread_stat *ts,$/;"	z	function:__gfio_display_end_results	typeref:struct:thread_stat *	file:
ts	gclient.c	/^				      struct thread_stat *ts)$/;"	z	function:gfio_show_latency_buckets	typeref:struct:thread_stat *	file:
ts	gclient.c	/^				    struct thread_stat *ts, unsigned int len,$/;"	z	function:gfio_add_sc_depths_tree	typeref:struct:thread_stat *	file:
ts	gclient.c	/^				  struct thread_stat *ts, int ddir)$/;"	z	function:gfio_show_ddir_status	typeref:struct:thread_stat *	file:
ts	gclient.c	/^static void gfio_add_end_results(struct gfio_client *gc, struct thread_stat *ts,$/;"	z	function:gfio_add_end_results	typeref:struct:thread_stat *	file:
ts	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	z	function:gfio_display_ts	typeref:struct:thread_stat *	file:
ts	gclient.c	/^static void gfio_display_ts(struct fio_client *client, struct thread_stat *ts,$/;"	z	prototype:gfio_display_ts	typeref:struct:thread_stat *	file:
ts	gclient.c	/^static void gfio_show_cpu_usage(GtkWidget *vbox, struct thread_stat *ts)$/;"	z	function:gfio_show_cpu_usage	typeref:struct:thread_stat *	file:
ts	gclient.c	/^static void gfio_show_io_depths(GtkWidget *vbox, struct thread_stat *ts)$/;"	z	function:gfio_show_io_depths	typeref:struct:thread_stat *	file:
ts	gettime.c	/^int fio_get_mono_time(struct timespec *ts)$/;"	z	function:fio_get_mono_time	typeref:struct:timespec *	file:
ts	gettime.h	/^	struct timespec ts;$/;"	m	struct:fio_ts	typeref:struct:timespec
ts	gettime.h	/^static inline int fio_gettime_offload(struct timespec *ts)$/;"	z	function:fio_gettime_offload	typeref:struct:timespec *	file:
ts	gfio.h	/^	struct thread_stat ts;$/;"	m	struct:end_results	typeref:struct:thread_stat
ts	os/linux/io_uring.h	/^	__u64	ts;$/;"	m	struct:io_uring_getevents_arg	typeref:typename:__u64
ts	server.c	/^void fio_server_send_ts(struct thread_stat *ts, struct group_run_stats *rs)$/;"	z	function:fio_server_send_ts	typeref:struct:thread_stat *	file:
ts	server.h	/^	struct thread_stat ts;$/;"	m	struct:cmd_ts_pdu	typeref:struct:thread_stat
ts	server.h	/^	struct timespec ts;$/;"	m	struct:fio_net_cmd_reply	typeref:struct:timespec
ts	stat.c	/^				   struct thread_stat *ts,$/;"	z	function:show_mixed_ddir_status	typeref:struct:thread_stat *	file:
ts	stat.c	/^add_lat_percentile_prio_sample(struct thread_stat *ts, unsigned long long nsec,$/;"	z	function:add_lat_percentile_prio_sample	typeref:struct:thread_stat *	file:
ts	stat.c	/^int alloc_clat_prio_stat_ddir(struct thread_stat *ts, enum fio_ddir ddir,$/;"	z	function:alloc_clat_prio_stat_ddir	typeref:struct:thread_stat *	file:
ts	stat.c	/^static inline void add_lat_percentile_sample(struct thread_stat *ts,$/;"	z	function:add_lat_percentile_sample	typeref:struct:thread_stat *	file:
ts	stat.c	/^static inline void reset_clat_prio_stats(struct thread_stat *ts)$/;"	z	function:reset_clat_prio_stats	typeref:struct:thread_stat *	file:
ts	stat.c	/^static int get_nr_prios_with_samples(struct thread_stat *ts, enum fio_ddir ddir)$/;"	z	function:get_nr_prios_with_samples	typeref:struct:thread_stat *	file:
ts	stat.c	/^static struct json_object *add_ddir_lat_json(struct thread_stat *ts,$/;"	z	function:add_ddir_lat_json	typeref:struct:thread_stat *	file:
ts	stat.c	/^static struct json_object *show_thread_status_json(struct thread_stat *ts,$/;"	z	function:show_thread_status_json	typeref:struct:thread_stat *	file:
ts	stat.c	/^static struct thread_stat *gen_mixed_ddir_stats_from_ts(struct thread_stat *ts)$/;"	z	function:gen_mixed_ddir_stats_from_ts	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void add_ddir_status_json(struct thread_stat *ts,$/;"	z	function:add_ddir_status_json	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void add_mixed_ddir_status_json(struct thread_stat *ts,$/;"	z	function:add_mixed_ddir_status_json	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_ddir_status(struct group_run_stats *rs, struct thread_stat *ts,$/;"	z	function:show_ddir_status	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_ddir_status_terse(struct thread_stat *ts,$/;"	z	function:show_ddir_status_terse	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_latencies(struct thread_stat *ts, struct buf_output *out)$/;"	z	function:show_latencies	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_mixed_ddir_status_terse(struct thread_stat *ts,$/;"	z	function:show_mixed_ddir_status_terse	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_ss_normal(struct thread_stat *ts, struct buf_output *out)$/;"	z	function:show_ss_normal	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_thread_status_normal(struct thread_stat *ts,$/;"	z	function:show_thread_status_normal	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_thread_status_terse(struct thread_stat *ts,$/;"	z	function:show_thread_status_terse	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void show_thread_status_terse_all(struct thread_stat *ts,$/;"	z	function:show_thread_status_terse_all	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void stat_calc_lat(struct thread_stat *ts, double *dst,$/;"	z	function:stat_calc_lat	typeref:struct:thread_stat *	file:
ts	stat.c	/^static void stat_calc_lat_nu(struct thread_stat *ts, double *io_u_lat_u)$/;"	z	function:stat_calc_lat_nu	typeref:struct:thread_stat *	file:
ts	stat.c	/^struct json_object *show_thread_status(struct thread_stat *ts,$/;"	z	function:show_thread_status	typeref:struct:thread_stat *	file:
ts	stat.c	/^void add_sync_clat_sample(struct thread_stat *ts, unsigned long long nsec)$/;"	z	function:add_sync_clat_sample	typeref:struct:thread_stat *	file:
ts	stat.c	/^void free_clat_prio_stats(struct thread_stat *ts)$/;"	z	function:free_clat_prio_stats	typeref:struct:thread_stat *	file:
ts	stat.c	/^void init_thread_stat(struct thread_stat *ts)$/;"	z	function:init_thread_stat	typeref:struct:thread_stat *	file:
ts	stat.c	/^void init_thread_stat_min_vals(struct thread_stat *ts)$/;"	z	function:init_thread_stat_min_vals	typeref:struct:thread_stat *	file:
ts	stat.c	/^void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_m	typeref:struct:thread_stat *	file:
ts	stat.c	/^void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_n	typeref:struct:thread_stat *	file:
ts	stat.c	/^void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat)$/;"	z	function:stat_calc_lat_u	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern struct json_object * show_thread_status(struct thread_stat *ts, struct group_run_stats *r/;"	z	prototype:show_thread_status	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void add_sync_clat_sample(struct thread_stat *ts,$/;"	z	prototype:add_sync_clat_sample	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void init_thread_stat(struct thread_stat *ts);$/;"	z	prototype:init_thread_stat	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void init_thread_stat_min_vals(struct thread_stat *ts);$/;"	z	prototype:init_thread_stat_min_vals	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void stat_calc_lat_m(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_m	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void stat_calc_lat_n(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_n	typeref:struct:thread_stat *	file:
ts	stat.h	/^extern void stat_calc_lat_u(struct thread_stat *ts, double *io_u_lat);$/;"	z	prototype:stat_calc_lat_u	typeref:struct:thread_stat *	file:
ts	steadystate.c	/^uint64_t steadystate_bw_mean(struct thread_stat *ts)$/;"	z	function:steadystate_bw_mean	typeref:struct:thread_stat *	file:
ts	steadystate.c	/^uint64_t steadystate_iops_mean(struct thread_stat *ts)$/;"	z	function:steadystate_iops_mean	typeref:struct:thread_stat *	file:
ts	time.c	/^void timespec_add_msec(struct timespec *ts, unsigned int msec)$/;"	z	function:timespec_add_msec	typeref:struct:timespec *	file:
ts	zbd.c	/^char *zbd_write_status(const struct thread_stat *ts)$/;"	z	function:zbd_write_status	typeref:typename:const struct thread_stat *	file:
ts	zbd.h	/^char *zbd_write_status(const struct thread_stat *ts);$/;"	z	prototype:zbd_write_status	typeref:typename:const struct thread_stat *	file:
ts_cache	fio.h	/^	struct timespec ts_cache;$/;"	m	struct:thread_data	typeref:struct:timespec
ts_cache_mask	fio.h	/^	unsigned int ts_cache_mask;$/;"	m	struct:thread_data	typeref:typename:unsigned int
ts_cache_nr	fio.h	/^	unsigned int ts_cache_nr;$/;"	m	struct:thread_data	typeref:typename:unsigned int
ts_utime_since_now	engines/posixaio.c	/^static unsigned long long ts_utime_since_now(const struct timespec *start)$/;"	f	typeref:typename:unsigned long long	file:
tsc	gettime.c	/^	uint64_t tsc;$/;"	m	struct:clock_entry	typeref:typename:uint64_t	file:
tsc_rate	t/io_uring.c	/^static unsigned long tsc_rate;$/;"	v	typeref:typename:unsigned long	file:
tsc_reliable	gettime.c	/^bool tsc_reliable = false;$/;"	v	typeref:typename:bool
ttime	blktrace.c	/^				 unsigned long long ttime,$/;"	z	function:handle_trace_discard	typeref:typename:unsigned long long	file:
ttime	blktrace.c	/^			       unsigned long long ttime, unsigned long *ios,$/;"	z	function:handle_trace_flush	typeref:typename:unsigned long long	file:
ttime	blktrace.c	/^			    unsigned long long ttime, unsigned long *ios,$/;"	z	function:handle_trace_fs	typeref:typename:unsigned long long	file:
ttime	blktrace.c	/^		      unsigned int bytes, int rw, unsigned long long ttime,$/;"	z	function:store_ipo	typeref:typename:unsigned long long	file:
ttl	engines/net.c	/^	unsigned int ttl;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
tv	engines/solarisaio.c	/^static void wait_for_event(struct timeval *tv)$/;"	z	function:wait_for_event	typeref:struct:timeval *	file:
tv_tls_key	gettime.c	/^static pthread_key_t tv_tls_key;$/;"	v	typeref:typename:pthread_key_t	file:
tv_valid	gettime.c	/^struct tv_valid {$/;"	s	file:
tvec	unittests/unittest.c	/^	CU_CleanupFunc cleanfn, struct fio_unittest_entry *tvec)$/;"	z	function:fio_unittest_add_suite	typeref:struct:fio_unittest_entry *	file:
type	client.c	/^					   const char *hostname, int type,$/;"	z	function:fio_client_add_explicit	typeref:typename:int	file:
type	client.h	/^	uint32_t type;$/;"	m	struct:fio_client	typeref:typename:uint32_t
type	crc/test.c	/^int fio_crctest(const char *type)$/;"	z	function:fio_crctest	typeref:typename:const char *	file:
type	crc/test.c	/^static unsigned int get_test_mask(const char *type)$/;"	z	function:get_test_mask	typeref:typename:const char *	file:
type	crc/test.h	/^int fio_crctest(const char *type);$/;"	z	prototype:fio_crctest	typeref:typename:const char *	file:
type	debug.c	/^void __dprint(int type, const char *str, ...)$/;"	z	function:__dprint	typeref:typename:int	file:
type	debug.h	/^static inline void dprint(int type, const char *str, ...)$/;"	z	function:dprint	typeref:typename:int	file:
type	debug.h	/^void __dprint(int type, const char *str, ...) __attribute__((format (printf, 2, 3)));$/;"	z	prototype:__dprint	typeref:typename:int	file:
type	engines/http.c	/^static int _curl_trace(CURL *handle, curl_infotype type,$/;"	z	function:_curl_trace	typeref:typename:curl_infotype	file:
type	gclient.c	/^				       unsigned long long nr, const char *type)$/;"	z	function:gfio_show_clat_percentiles	typeref:typename:const char *	file:
type	gfio.h	/^	int type;$/;"	m	struct:gui_entry	typeref:typename:int
type	goptions.c	/^					   unsigned int idx, int type)$/;"	z	function:__gopt_new_combo	typeref:typename:int	file:
type	goptions.c	/^			    unsigned int idx, int type)$/;"	z	function:gopt_mark_index	typeref:typename:int	file:
type	init.c	/^		char *file, int is_buf, int stonewall_flag, int type,$/;"	z	function:__parse_jobs_ini	typeref:typename:int	file:
type	init.c	/^int parse_jobs_ini(char *file, int is_buf, int stonewall_flag, int type)$/;"	z	function:parse_jobs_ini	typeref:typename:int	file:
type	json.h	/^	int type;$/;"	m	struct:json_value	typeref:typename:int
type	lib/memcpy.c	/^int fio_memcpy_test(const char *type)$/;"	z	function:fio_memcpy_test	typeref:typename:const char *	file:
type	lib/memcpy.c	/^static unsigned int get_test_mask(const char *type)$/;"	z	function:get_test_mask	typeref:typename:const char *	file:
type	lib/memcpy.h	/^int fio_memcpy_test(const char *type);$/;"	z	prototype:fio_memcpy_test	typeref:typename:const char *	file:
type	log.c	/^void log_prevalist(int type, const char *fmt, va_list args)$/;"	z	function:log_prevalist	typeref:typename:int	file:
type	log.h	/^extern void log_prevalist(int type, const char *str, va_list);$/;"	z	prototype:log_prevalist	typeref:typename:int	file:
type	oslib/libmtd.h	/^	int type;$/;"	m	struct:mtd_dev_info	typeref:typename:int
type	oslib/linux-blkzoned.c	/^	__u8	type;           \/* Zone type *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u8	file:
type	parse.h	/^	enum fio_opt_type type;		\/* option type *\/$/;"	m	struct:fio_option	typeref:enum:fio_opt_type
type	pshared.c	/^int mutex_init_pshared_with_type(pthread_mutex_t *mutex, int type)$/;"	z	function:mutex_init_pshared_with_type	typeref:typename:int	file:
type	t/debug.c	/^void __dprint(int type, const char *str, ...)$/;"	z	function:__dprint	typeref:typename:int	file:
type	verify.c	/^		     const char *type, struct fio_file *f)$/;"	z	function:dump_buf	typeref:typename:const char *	file:
type	zbd.h	/^	enum zbd_zone_type	type:2;$/;"	m	struct:fio_zone_info	typeref:enum:zbd_zone_type:2
type	zbd_types.h	/^	enum zbd_zone_type	type;$/;"	m	struct:zbd_zone	typeref:enum:zbd_zone_type
type_checked	engines/sg.c	/^	int type_checked;$/;"	m	struct:sgio_data	typeref:typename:int	file:
type_str	oslib/libmtd.h	/^	char type_str[MTD_TYPE_MAX + 1];$/;"	m	struct:mtd_dev_info	typeref:typename:char[]
type_str2int	oslib/libmtd.c	/^static int type_str2int(const char *str)$/;"	f	typeref:typename:int	file:
typecheck	compiler/compiler.h	/^#define typecheck(/;"	d
types	stat.c	/^				  unsigned int *types)$/;"	z	function:calc_block_percentiles	typeref:typename:unsigned int *	file:
tzp	os/windows/posix.c	/^int gettimeofday(struct timeval *restrict tp, void *restrict tzp)$/;"	z	function:gettimeofday	typeref:typename:void * 	file:
u	lib/ieee754.h	/^	} u;$/;"	m	struct:fio_fp64	typeref:union:fio_fp64::__anon13aa3979010a
u32	os/kcompat.h	/^#define u32 /;"	d
u64	os/kcompat.h	/^#define u64 /;"	d
udp_close_msg	engines/net.c	/^struct udp_close_msg {$/;"	s	file:
udp_recv_seq	engines/net.c	/^	uint64_t udp_recv_seq;$/;"	m	struct:netio_data	typeref:typename:uint64_t	file:
udp_send_seq	engines/net.c	/^	uint64_t udp_send_seq;$/;"	m	struct:netio_data	typeref:typename:uint64_t	file:
udp_seq	engines/net.c	/^struct udp_seq {$/;"	s	file:
ui	gclient.c	/^static void gfio_update_thread_status_all(struct gui *ui, char *status_message,$/;"	z	function:gfio_update_thread_status_all	typeref:struct:gui *	file:
ui	gerror.c	/^void gfio_report_info(struct gui *ui, const char *title, const char *message)$/;"	z	function:gfio_report_info	typeref:struct:gui *	file:
ui	gerror.h	/^extern void gfio_report_info(struct gui *ui, const char *title, const char *message);$/;"	z	prototype:gfio_report_info	typeref:struct:gui *	file:
ui	gfio.c	/^				   struct gui *ui)$/;"	z	function:get_menubar_menu	typeref:struct:gui *	file:
ui	gfio.c	/^static GtkWidget *new_main_page(struct gui *ui)$/;"	z	function:new_main_page	typeref:struct:gui *	file:
ui	gfio.c	/^static int do_file_open_with_tab(struct gui *ui, const gchar *uri)$/;"	z	function:do_file_open_with_tab	typeref:struct:gui *	file:
ui	gfio.c	/^static struct gui_entry *alloc_new_gui_entry(struct gui *ui)$/;"	z	function:alloc_new_gui_entry	typeref:struct:gui *	file:
ui	gfio.c	/^static struct gui_entry *get_ge_from_cur_tab(struct gui *ui)$/;"	z	function:get_ge_from_cur_tab	typeref:struct:gui *	file:
ui	gfio.c	/^static struct gui_entry *get_ge_from_page(struct gui *ui, gint cur_page,$/;"	z	function:get_ge_from_page	typeref:struct:gui *	file:
ui	gfio.c	/^static struct gui_entry *get_new_ge_with_tab(struct gui *ui, const char *name)$/;"	z	function:get_new_ge_with_tab	typeref:struct:gui *	file:
ui	gfio.c	/^static void add_recent_file_items(struct gui *ui)$/;"	z	function:add_recent_file_items	typeref:struct:gui *	file:
ui	gfio.c	/^static void file_add_recent(struct gui *ui, const gchar *uri)$/;"	z	function:file_add_recent	typeref:struct:gui *	file:
ui	gfio.c	/^static void gfio_quit(struct gui *ui)$/;"	z	function:gfio_quit	typeref:struct:gui *	file:
ui	gfio.c	/^static void gfio_start_server(struct gui *ui)$/;"	z	function:gfio_start_server	typeref:struct:gui *	file:
ui	gfio.c	/^static void gfio_ui_setup_log(struct gui *ui)$/;"	z	function:gfio_ui_setup_log	typeref:struct:gui *	file:
ui	gfio.c	/^static void init_ui(int *argc, char **argv[], struct gui *ui)$/;"	z	function:init_ui	typeref:struct:gui *	file:
ui	gfio.c	/^static void set_job_menu_visible(struct gui *ui, int visible)$/;"	z	function:set_job_menu_visible	typeref:struct:gui *	file:
ui	gfio.c	/^static void set_menu_entry_text(struct gui *ui, const char *path,$/;"	z	function:set_menu_entry_text	typeref:struct:gui *	file:
ui	gfio.c	/^static void set_menu_entry_visible(struct gui *ui, const char *path, int show)$/;"	z	function:set_menu_entry_visible	typeref:struct:gui *	file:
ui	gfio.c	/^static void set_view_results_visible(struct gui *ui, int visible)$/;"	z	function:set_view_results_visible	typeref:struct:gui *	file:
ui	gfio.c	/^static void update_button_states(struct gui *ui, struct gui_entry *ge)$/;"	z	function:update_button_states	typeref:struct:gui *	file:
ui	gfio.c	/^void gfio_view_log(struct gui *ui)$/;"	z	function:gfio_view_log	typeref:struct:gui *	file:
ui	gfio.h	/^	struct gui *ui;$/;"	m	struct:gui_entry	typeref:struct:gui *
ui	gfio.h	/^extern void gfio_view_log(struct gui *ui);$/;"	z	prototype:gfio_view_log	typeref:struct:gui *	file:
ui_manager	gfio.c	/^		   GtkWidget *vbox, GtkUIManager *ui_manager)$/;"	z	function:gfio_ui_setup	typeref:typename:GtkUIManager *	file:
ui_manager	gfio.c	/^static GtkWidget *get_menubar_menu(GtkWidget *window, GtkUIManager *ui_manager,$/;"	z	function:get_menubar_menu	typeref:typename:GtkUIManager *	file:
ui_string	gfio.c	/^static const gchar *ui_string = " \\$/;"	v	typeref:typename:const gchar *	file:
uid	os/os-windows.h	/^int setuid(uid_t uid);$/;"	z	prototype:setuid	typeref:typename:uid_t	file:
uid	os/windows/posix.c	/^int setuid(uid_t uid)$/;"	z	function:setuid	typeref:typename:uid_t	file:
uid	os/windows/posix/include/sys/shm.h	/^	uid_t    uid;    \/* owner's user ID *\/$/;"	m	struct:ipc_perm	typeref:typename:uid_t
uid	thread_options.h	/^	uint32_t uid;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
uid	thread_options.h	/^	unsigned int uid;$/;"	m	struct:thread_options	typeref:typename:unsigned int
uid_t	os/windows/posix/include/sys/shm.h	/^typedef int uid_t;$/;"	t	typeref:typename:int
uimanager	gfio.h	/^	GtkUIManager *uimanager;$/;"	m	struct:gui	typeref:typename:GtkUIManager *
uint32_t_S	crc/xxhash.c	/^typedef struct _uint32_t_S { uint32_t v; } _PACKED uint32_t_S;$/;"	t	typeref:struct:_uint32_t_S _PACKED	file:
uncached	engines/io_uring.c	/^	unsigned int uncached;$/;"	m	struct:ioring_options	typeref:typename:unsigned int	file:
uncached	engines/sync.c	/^	unsigned int uncached;$/;"	m	struct:psyncv2_options	typeref:typename:unsigned int	file:
unified_rw_rep	eta.c	/^static void calc_iops(int unified_rw_rep, unsigned long mtime,$/;"	z	function:calc_iops	typeref:typename:int	file:
unified_rw_rep	eta.c	/^static void calc_rate(int unified_rw_rep, unsigned long mtime,$/;"	z	function:calc_rate	typeref:typename:int	file:
unified_rw_rep	stat.h	/^	uint32_t unified_rw_rep;$/;"	m	struct:group_run_stats	typeref:typename:uint32_t
unified_rw_rep	stat.h	/^	uint32_t unified_rw_rep;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
unified_rw_rep	thread_options.h	/^	uint32_t unified_rw_rep;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
unified_rw_rep	thread_options.h	/^	unsigned int unified_rw_rep;$/;"	m	struct:thread_options	typeref:typename:unsigned int
unique_capacity	t/dedupe.c	/^			      uint64_t *unique_capacity)$/;"	z	function:run_dedupe_threads	typeref:typename:uint64_t *	file:
unique_capacity	t/dedupe.c	/^			 uint64_t *ndupes, uint64_t *unique_capacity,$/;"	z	function:insert_chunks	typeref:typename:uint64_t *	file:
unique_capacity	t/dedupe.c	/^			uint64_t *nchunks, uint64_t *unique_capacity)$/;"	z	function:dedupe_check	typeref:typename:uint64_t *	file:
unique_capacity	t/dedupe.c	/^		      uint64_t unique_capacity)$/;"	z	function:show_stat	typeref:typename:uint64_t	file:
unique_capacity	t/dedupe.c	/^	unsigned long long unique_capacity;$/;"	m	struct:worker_thread	typeref:typename:unsigned long long	file:
unique_capacity	t/dedupe.c	/^static int account_unique_capacity(uint64_t offset, uint64_t *unique_capacity,$/;"	z	function:account_unique_capacity	typeref:typename:uint64_t *	file:
unique_capacity	t/dedupe.c	/^static int insert_chunk(struct item *i, uint64_t *unique_capacity,$/;"	z	function:insert_chunk	typeref:typename:uint64_t *	file:
unique_filename	options.c	/^		 bool unique_filename)$/;"	z	function:set_name_idx	typeref:typename:bool	file:
unique_filename	thread_options.h	/^	uint32_t unique_filename;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
unique_filename	thread_options.h	/^	unsigned int unique_filename;$/;"	m	struct:thread_options	typeref:typename:unsigned int
unit	unittests/lib/num2str.c	/^	enum n2s_unit unit;$/;"	m	struct:testcase	typeref:enum:n2s_unit	file:
unit_base	stat.h	/^	uint32_t unit_base;$/;"	m	struct:group_run_stats	typeref:typename:uint32_t
unit_base	stat.h	/^	uint32_t unit_base;$/;"	m	struct:thread_stat	typeref:typename:uint32_t
unit_base	thread_options.h	/^	uint32_t unit_base;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
unit_base	thread_options.h	/^	unsigned int unit_base;$/;"	m	struct:thread_options	typeref:typename:unsigned int
unit_log	iolog.c	/^static int write_bandw_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_bandw_log	typeref:typename:bool	file:
unit_log	iolog.c	/^static int write_clat_hist_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_hist_log	typeref:typename:bool	file:
unit_log	iolog.c	/^static int write_clat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_clat_log	typeref:typename:bool	file:
unit_log	iolog.c	/^static int write_iops_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_iops_log	typeref:typename:bool	file:
unit_log	iolog.c	/^static int write_lat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_lat_log	typeref:typename:bool	file:
unit_log	iolog.c	/^static int write_slat_log(struct thread_data *td, int try, bool unit_log)$/;"	z	function:write_slat_log	typeref:typename:bool	file:
unit_logs	iolog.c	/^void fio_writeout_logs(bool unit_logs)$/;"	z	function:fio_writeout_logs	typeref:typename:bool	file:
unit_logs	iolog.c	/^void td_writeout_logs(struct thread_data *td, bool unit_logs)$/;"	z	function:td_writeout_logs	typeref:typename:bool	file:
unit_logs	stat.c	/^void finalize_logs(struct thread_data *td, bool unit_logs)$/;"	z	function:finalize_logs	typeref:typename:bool	file:
unit_out	t/dedupe.c	/^static uint64_t bytes_to_human_readable_unit(uint64_t n, const char **unit_out)$/;"	z	function:bytes_to_human_readable_unit	typeref:typename:const char **	file:
units	lib/num2str.c	/^char *num2str(uint64_t num, int maxlen, int base, int pow2, enum n2s_unit units)$/;"	z	function:num2str	typeref:enum:n2s_unit	file:
units_specified	lex.yy.c	/^		int *has_error, int *units_specified, const char *msg);$/;"	z	prototype:yyerror	typeref:typename:int *	file:
units_specified	y.tab.c	/^		__attribute__((unused)) int *units_specified,$/;"	z	function:yyerror	typeref:typename:int *	file:
units_specified	y.tab.c	/^		__attribute__((unused)) int *units_specified,$/;"	z	prototype:yyerror	typeref:typename:int *	file:
units_specified	y.tab.c	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:int *	file:
units_specified	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:int *	file:
units_specified	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:int *	file:
units_specified	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:int *	file:
units_specified	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:int *	file:
units_specified	y.tab.c	/^yyparse (long long *result, double *dresult, int *has_error, int *units_specified)$/;"	z	function:yyparse	typeref:typename:int *	file:
units_specified	y.tab.h	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	z	prototype:yyparse	typeref:typename:int *	file:
unittest2_imported	tools/hist/fio-histo-log-pctiles.py	/^    unittest2_imported = False$/;"	v
unittest2_imported	tools/hist/fio-histo-log-pctiles.py	/^unittest2_imported = True$/;"	v
unittests	t/run-fio-tests.py	/^    def unittests(cls):$/;"	m	class:Requirements
unittests/unittest	Makefile	/^unittests\/unittest: $(UT_OBJS) $(UT_TARGET_OBJS)$/;"	t
unlink	thread_options.h	/^	uint32_t unlink;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
unlink	thread_options.h	/^	unsigned int unlink;$/;"	m	struct:thread_options	typeref:typename:unsigned int
unlink_all_files	backend.c	/^static int unlink_all_files(struct thread_data *td)$/;"	f	typeref:typename:int	file:
unlink_each_loop	thread_options.h	/^	uint32_t unlink_each_loop;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
unlink_each_loop	thread_options.h	/^	unsigned int unlink_each_loop;$/;"	m	struct:thread_options	typeref:typename:unsigned int
unlink_file	ioengines.h	/^	int (*unlink_file)(struct thread_data *, struct fio_file *);$/;"	m	struct:ioengine_ops	typeref:typename:int (*)(struct thread_data *,struct fio_file *)
unlink_flags	os/linux/io_uring.h	/^		__u32		unlink_flags;$/;"	m	union:io_uring_sqe::__anon2bbba927030a	typeref:typename:__u32
unlock	zbd.c	/^unlock:$/;"	L	function:zbd_queue_io	file:
unlock_file	file.h	/^extern void unlock_file(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:void
unlock_file	filesetup.c	/^void unlock_file(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void
unlock_file_all	file.h	/^extern void unlock_file_all(struct thread_data *, struct fio_file *);$/;"	p	typeref:typename:void
unlock_file_all	filesetup.c	/^void unlock_file_all(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void
unlog_io_piece	iolog.c	/^void unlog_io_piece(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
unlog_io_piece	iolog.h	/^extern void unlog_io_piece(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:void
unmap_param	engines/sg.c	/^	uint8_t *unmap_param;$/;"	m	struct:sgio_trim	typeref:typename:uint8_t *	file:
unmap_range_count	engines/sg.c	/^	unsigned int unmap_range_count;$/;"	m	struct:sgio_trim	typeref:typename:unsigned int	file:
unpack754	lib/ieee754.c	/^long double unpack754(uint64_t i, unsigned bits, unsigned expbits)$/;"	f	typeref:typename:long double
unpack754	lib/ieee754.h	/^extern long double unpack754(uint64_t i, unsigned bits, unsigned expbits);$/;"	p	typeref:typename:long double
unput	lex.yy.c	/^#define unput(/;"	d	file:
unregister_ioengine	ioengines.c	/^void unregister_ioengine(struct ioengine_ops *ops)$/;"	f	typeref:typename:void
unregister_ioengine	ioengines.h	/^extern void unregister_ioengine(struct ioengine_ops *);$/;"	p	typeref:typename:void
unregister_profile	profile.c	/^void unregister_profile(struct profile_ops *ops)$/;"	f	typeref:typename:void
unregister_profile	profile.h	/^void unregister_profile(struct profile_ops *);$/;"	p	typeref:typename:void
unused	lib/axmap.c	/^			   unsigned int bit, void *unused)$/;"	z	function:axmap_isset_fn	typeref:typename:void *	file:
unused	options.c	/^static int str_directory_cb(void *data, const char fio_unused *unused)$/;"	z	function:str_directory_cb	typeref:typename:const char fio_unused *	file:
update_acct_fn	workqueue.h	/^	workqueue_update_acct_fn *update_acct_fn;$/;"	m	struct:workqueue_ops	typeref:typename:workqueue_update_acct_fn *
update_button_states	gfio.c	/^static void update_button_states(struct gui *ui, struct gui_entry *ge)$/;"	f	typeref:typename:void	file:
update_clock	t/time-test.c	/^static void update_clock(unsigned long long t)$/;"	f	typeref:typename:void	file:
update_condensed_str	eta.c	/^static void update_condensed_str(char *rstr, char *run_str_condensed)$/;"	f	typeref:typename:void	file:
update_error_count	td_error.c	/^void update_error_count(struct thread_data *td, int err)$/;"	f	typeref:typename:void
update_error_count	td_error.h	/^void update_error_count(struct thread_data *td, int err);$/;"	p	typeref:typename:void
update_extreme	tools/hist/fiologparser_hist.py	/^def update_extreme(val, fncn, new_val):$/;"	f
update_graph_limits	gfio.c	/^static void update_graph_limits(void)$/;"	f	typeref:typename:void	file:
update_io_tick_disk	diskutil.c	/^static void update_io_tick_disk(struct disk_util *du)$/;"	f	typeref:typename:void	file:
update_io_ticks	diskutil.c	/^int update_io_ticks(void)$/;"	f	typeref:typename:int
update_io_ticks	diskutil.h	/^extern int update_io_ticks(void);$/;"	p	typeref:typename:int
update_io_ticks	diskutil.h	/^static inline int update_io_ticks(void)$/;"	f	typeref:typename:int
update_job	client.h	/^	client_cmd_op		*update_job;$/;"	m	struct:client_ops	typeref:typename:client_cmd_op *
update_job_done	gfio.h	/^	volatile uint32_t update_job_done;$/;"	m	struct:gfio_client	typeref:typename:volatile uint32_t
update_job_status	gfio.h	/^	uint32_t update_job_status;$/;"	m	struct:gfio_client	typeref:typename:uint32_t
update_runtime	backend.c	/^static inline void update_runtime(struct thread_data *td,$/;"	f	typeref:typename:void	file:
update_rusage	fio.h	/^	volatile int update_rusage;$/;"	m	struct:thread_data	typeref:typename:volatile int
update_rusage_stat	stat.c	/^void update_rusage_stat(struct thread_data *td)$/;"	f	typeref:typename:void
update_rusage_stat	stat.h	/^extern void update_rusage_stat(struct thread_data *);$/;"	p	typeref:typename:void
update_ts_cache	backend.c	/^static inline void update_ts_cache(struct thread_data *td)$/;"	f	typeref:typename:void	file:
upper_bin_vals	tools/hist/fiologparser_hist.py	/^upper_bin_vals = [] # upper edge of each bin $/;"	v
uri	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_aws_auth_header	typeref:typename:const char *	file:
uri	engines/http.c	/^		int op, const char *uri, char *buf, size_t len)$/;"	z	function:_add_swift_header	typeref:typename:const char *	file:
uri	engines/http.c	/^static char *_aws_uriencode(const char *uri)$/;"	z	function:_aws_uriencode	typeref:typename:const char *	file:
uri	engines/nbd.c	/^	char *uri;$/;"	m	struct:nbd_options	typeref:typename:char *	file:
uri	gfio.c	/^static gchar *get_filename_from_uri(const gchar *uri)$/;"	z	function:get_filename_from_uri	typeref:typename:const gchar *	file:
uri	gfio.c	/^static int do_file_open(struct gui_entry *ge, const gchar *uri)$/;"	z	function:do_file_open	typeref:typename:const gchar *	file:
uri	gfio.c	/^static int do_file_open_with_tab(struct gui *ui, const gchar *uri)$/;"	z	function:do_file_open_with_tab	typeref:typename:const gchar *	file:
uri	gfio.c	/^static void file_add_recent(struct gui *ui, const gchar *uri)$/;"	z	function:file_add_recent	typeref:typename:const gchar *	file:
url	engines/libiscsi.c	/^	struct iscsi_url        *url;$/;"	m	struct:iscsi_lun	typeref:struct:iscsi_url *	file:
url	engines/nfs.c	/^static int do_mount(struct thread_data *td, const char *url)$/;"	z	function:do_mount	typeref:typename:const char *	file:
us	t/read-to-pipe-async.c	/^static void add_lat(struct stats *s, unsigned int us, const char *name)$/;"	z	function:add_lat	typeref:typename:unsigned int	file:
usage	init.c	/^static void usage(const char *name)$/;"	f	typeref:typename:void	file:
usage	t/btrace2fio.c	/^static int usage(char *argv[])$/;"	f	typeref:typename:int	file:
usage	t/dedupe.c	/^static int usage(char *argv[])$/;"	f	typeref:typename:int	file:
usage	t/genzipf.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	t/io_uring.c	/^static void usage(char *argv, int status)$/;"	f	typeref:typename:void	file:
usage	t/lfsr-test.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	t/one-core-peak.sh	/^usage() {$/;"	f
usage	t/read-to-pipe-async.c	/^static int usage(char *argv[])$/;"	f	typeref:typename:int	file:
usage	t/zbd/run-tests-against-nullb	/^usage()$/;"	f
usage	t/zbd/test-zbd-support	/^usage() {$/;"	f
use64	init.c	/^static void td_fill_rand_seeds_internal(struct thread_data *td, bool use64)$/;"	z	function:td_fill_rand_seeds_internal	typeref:typename:bool	file:
use64	lib/rand.c	/^void init_rand(struct frand_state *state, bool use64)$/;"	z	function:init_rand	typeref:typename:bool	file:
use64	lib/rand.c	/^void init_rand_seed(struct frand_state *state, uint64_t seed, bool use64)$/;"	z	function:init_rand_seed	typeref:typename:bool	file:
use64	lib/rand.h	/^	unsigned int use64;$/;"	m	struct:frand_state	typeref:typename:unsigned int
use64	verify-state.h	/^	uint64_t use64;$/;"	m	struct:thread_rand_state	typeref:typename:uint64_t
use_KMG_symbols	tickmarks.c	/^			int use_KMG_symbols, int base_offset)$/;"	z	function:shorten	typeref:typename:int	file:
use_KMG_symbols	tickmarks.c	/^		int *power_of_ten, int use_KMG_symbols, int base_offset)$/;"	z	function:calc_tickmarks	typeref:typename:int	file:
use_KMG_symbols	tickmarks.h	/^			int *power_of_ten, int use_KMG_symbols, int base_off);$/;"	z	prototype:calc_tickmarks	typeref:typename:int	file:
use_bloom	t/dedupe.c	/^static unsigned int use_bloom = 1;$/;"	v	typeref:typename:unsigned int	file:
use_direct	engines/libhdfs.c	/^	unsigned int use_direct;$/;"	m	struct:hdfsio_options	typeref:typename:unsigned int	file:
use_ipv6	server.c	/^static int use_ipv6;$/;"	v	typeref:typename:int	file:
use_seed	verify.c	/^				 uint64_t seed, int use_seed)$/;"	z	function:fill_pattern_headers	typeref:typename:int	file:
use_seed	verify.c	/^			 struct io_u *io_u, uint64_t seed, int use_seed)$/;"	z	function:fill_verify_pattern	typeref:typename:int	file:
use_seed	verify.h	/^extern void fill_verify_pattern(struct thread_data *td, void *p, unsigned int len, struct io_u */;"	z	prototype:fill_verify_pattern	typeref:typename:int	file:
use_splice	engines/net.c	/^	int use_splice;$/;"	m	struct:netio_data	typeref:typename:int	file:
use_sync	t/io_uring.c	/^static int use_sync = 0;	\/* use preadv2 *\/$/;"	v	typeref:typename:int	file:
use_thread	thread_options.h	/^	uint32_t use_thread;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
use_thread	thread_options.h	/^	unsigned int use_thread;$/;"	m	struct:thread_options	typeref:typename:unsigned int
use_zlib	server.c	/^static unsigned int use_zlib;$/;"	v	typeref:typename:unsigned int	file:
usec	io_u.c	/^static void io_u_mark_lat_usec(struct thread_data *td, unsigned long long usec)$/;"	z	function:io_u_mark_lat_usec	typeref:typename:unsigned long long	file:
usec	time.c	/^uint64_t usec_sleep(struct thread_data *td, unsigned long usec)$/;"	z	function:usec_sleep	typeref:typename:unsigned long	file:
usec	time.c	/^uint64_t usec_spin(unsigned int usec)$/;"	z	function:usec_spin	typeref:typename:unsigned int	file:
usec_for_io	backend.c	/^static long long usec_for_io(struct thread_data *td, enum fio_ddir ddir)$/;"	f	typeref:typename:long long	file:
usec_sleep	fio_time.h	/^extern uint64_t usec_sleep(struct thread_data *, unsigned long);$/;"	p	typeref:typename:uint64_t
usec_sleep	time.c	/^uint64_t usec_sleep(struct thread_data *td, unsigned long usec)$/;"	f	typeref:typename:uint64_t
usec_spin	fio_time.h	/^extern uint64_t usec_spin(unsigned int);$/;"	p	typeref:typename:uint64_t
usec_spin	time.c	/^uint64_t usec_spin(unsigned int usec)$/;"	f	typeref:typename:uint64_t
useconds	os/windows/posix.c	/^int usleep(useconds_t useconds)$/;"	z	function:usleep	typeref:typename:useconds_t	file:
usecs	backend.c	/^static void do_usleep(unsigned int usecs)$/;"	z	function:do_usleep	typeref:typename:unsigned int	file:
user	engines/http.c	/^	char *user;$/;"	m	struct:http_options	typeref:typename:char *	file:
user_data	os/linux/io_uring.h	/^	__u64	user_data;	\/* data to be passed back at completion time *\/$/;"	m	struct:io_uring_sqe	typeref:typename:__u64
user_data	os/linux/io_uring.h	/^	__u64	user_data;	\/* sqe->data submission passed back *\/$/;"	m	struct:io_uring_cqe	typeref:typename:__u64
user_defined	lex.yy.c	/^void yyset_extra ( YY_EXTRA_TYPE user_defined  );$/;"	z	prototype:yyset_extra	typeref:typename:YY_EXTRA_TYPE	file:
user_io_getevents	engines/libaio.c	/^static int user_io_getevents(io_context_t aio_ctx, unsigned int max,$/;"	f	typeref:typename:int	file:
userp	engines/http.c	/^	     void *userp)$/;"	z	function:_curl_trace	typeref:typename:void *	file:
users	diskutil.h	/^	unsigned long users;$/;"	m	struct:disk_util	typeref:typename:unsigned long
userspace_reap	engines/libaio.c	/^	unsigned int userspace_reap;$/;"	m	struct:libaio_options	typeref:typename:unsigned int	file:
usleep	os/windows/posix.c	/^int usleep(useconds_t useconds)$/;"	f	typeref:typename:int
usr_time	stat.h	/^	uint64_t usr_time;$/;"	m	struct:thread_stat	typeref:typename:uint64_t
utime_since	fio_time.h	/^extern uint64_t utime_since(const struct timespec *, const struct timespec *);$/;"	p	typeref:typename:uint64_t
utime_since	gettime.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	f	typeref:typename:uint64_t
utime_since	t/read-to-pipe-async.c	/^uint64_t utime_since(const struct timespec *s, const struct timespec *e)$/;"	f	typeref:typename:uint64_t
utime_since_genesis	fio_time.h	/^extern uint64_t utime_since_genesis(void);$/;"	p	typeref:typename:uint64_t
utime_since_genesis	time.c	/^uint64_t utime_since_genesis(void)$/;"	f	typeref:typename:uint64_t
utime_since_now	fio_time.h	/^extern uint64_t utime_since_now(const struct timespec *);$/;"	p	typeref:typename:uint64_t
utime_since_now	gettime.c	/^uint64_t utime_since_now(const struct timespec *s)$/;"	f	typeref:typename:uint64_t
v	crc/xxhash.c	/^typedef struct _uint32_t_S { uint32_t v; } _PACKED uint32_t_S;$/;"	m	struct:_uint32_t_S	typeref:typename:uint32_t	file:
v	graph.c	/^static double getx(struct graph_value *v)$/;"	z	function:getx	typeref:struct:graph_value *	file:
v	graph.c	/^static double gety(struct graph_value *v)$/;"	z	function:gety	typeref:struct:graph_value *	file:
v	graph.c	/^static void __graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	z	function:__graph_value_drop	typeref:struct:graph_value *	file:
v	graph.c	/^static void graph_value_drop(struct graph_label *l, struct graph_value *v)$/;"	z	function:graph_value_drop	typeref:struct:graph_value *	file:
v	libfio.c	/^		uint64_t v;$/;"	m	union:endian_check::__anona626c76b030a	typeref:typename:uint64_t	file:
v	y.tab.c	/^	struct parser_value_type v;$/;"	m	union:valtype	typeref:struct:parser_value_type	file:
v	y.tab.c	/^	} v;$/;"	m	union:valtype	typeref:struct:valtype::parser_value_type	file:
v	y.tab.h	/^	} v;$/;"	m	union:valtype	typeref:struct:valtype::parser_value_type
v1	crc/xxhash.h	/^    uint32_t v1;$/;"	m	struct:XXH_state32_t	typeref:typename:uint32_t
v2	crc/xxhash.h	/^    uint32_t v2;$/;"	m	struct:XXH_state32_t	typeref:typename:uint32_t
v3	crc/xxhash.h	/^    uint32_t v3;$/;"	m	struct:XXH_state32_t	typeref:typename:uint32_t
v4	crc/xxhash.h	/^    uint32_t v4;$/;"	m	struct:XXH_state32_t	typeref:typename:uint32_t
val	arch/arch-x86_64.h	/^static inline int arch_rand_long(unsigned long *val)$/;"	z	function:arch_rand_long	typeref:typename:unsigned long *	file:
val	cgroup.c	/^			     const char *filename, unsigned int val,$/;"	z	function:write_int_to_file	typeref:typename:unsigned int	file:
val	diskutil.h	/^static inline void disk_util_mod(struct disk_util *du, int val)$/;"	z	function:disk_util_mod	typeref:typename:int	file:
val	engines/io_uring.c	/^static int fio_ioring_sqpoll_cb(void *data, unsigned long long *val)$/;"	z	function:fio_ioring_sqpoll_cb	typeref:typename:unsigned long long *	file:
val	engines/libaio.c	/^static inline void ring_inc(struct libaio_data *ld, unsigned int *val,$/;"	z	function:ring_inc	typeref:typename:unsigned int *	file:
val	engines/sg.c	/^static inline void sgio_set_be16(uint16_t val, uint8_t *buf)$/;"	z	function:sgio_set_be16	typeref:typename:uint16_t	file:
val	engines/sg.c	/^static inline void sgio_set_be32(uint32_t val, uint8_t *buf)$/;"	z	function:sgio_set_be32	typeref:typename:uint32_t	file:
val	engines/sg.c	/^static inline void sgio_set_be64(uint64_t val, uint8_t *buf)$/;"	z	function:sgio_set_be64	typeref:typename:uint64_t	file:
val	fio.h	/^extern char *fio_uint_to_kmg(unsigned int val);$/;"	z	prototype:fio_uint_to_kmg	typeref:typename:unsigned int	file:
val	ghelpers.c	/^void entry_set_int_value(GtkWidget *entry, unsigned int val)$/;"	z	function:entry_set_int_value	typeref:typename:unsigned int	file:
val	ghelpers.c	/^void label_set_int_value(GtkWidget *entry, unsigned int val)$/;"	z	function:label_set_int_value	typeref:typename:unsigned int	file:
val	ghelpers.h	/^void entry_set_int_value(GtkWidget *entry, unsigned int val);$/;"	z	prototype:entry_set_int_value	typeref:typename:unsigned int	file:
val	ghelpers.h	/^void label_set_int_value(GtkWidget *entry, unsigned int val);$/;"	z	prototype:label_set_int_value	typeref:typename:unsigned int	file:
val	goptions.c	/^				  struct fio_option *o, unsigned int *val,$/;"	z	function:gopt_new_bool	typeref:typename:unsigned int *	file:
val	goptions.c	/^static void gopt_bool_set_val(struct gopt_bool *b, unsigned int val)$/;"	z	function:gopt_bool_set_val	typeref:typename:unsigned int	file:
val	goptions.c	/^static void gopt_str_multi_set_val(struct gopt_str_multi *m, int val)$/;"	z	function:gopt_str_multi_set_val	typeref:typename:int	file:
val	goptions.c	/^static void gopt_str_val_set_val(struct gopt_str_val *g, unsigned long long val)$/;"	z	function:gopt_str_val_set_val	typeref:typename:unsigned long long	file:
val	hash.h	/^static inline uint64_t __hash_u64(uint64_t val)$/;"	z	function:__hash_u64	typeref:typename:uint64_t	file:
val	hash.h	/^static inline unsigned long __hash_long(uint64_t val)$/;"	z	function:__hash_long	typeref:typename:uint64_t	file:
val	hash.h	/^static inline unsigned long hash_long(unsigned long val, unsigned int bits)$/;"	z	function:hash_long	typeref:typename:unsigned long	file:
val	iolog.h	/^	uint64_t val;$/;"	m	union:io_sample_data	typeref:typename:uint64_t
val	json.h	/^					       const char *val)$/;"	z	function:json_object_add_value_string	typeref:typename:const char *	file:
val	json.h	/^					       struct json_object *val)$/;"	z	function:json_object_add_value_object	typeref:struct:json_object *	file:
val	json.h	/^					      const char *name, double val)$/;"	z	function:json_object_add_value_float	typeref:typename:double	file:
val	json.h	/^					      const char *val)$/;"	z	function:json_array_add_value_string	typeref:typename:const char *	file:
val	json.h	/^					      struct json_array *val)$/;"	z	function:json_object_add_value_array	typeref:struct:json_array *	file:
val	json.h	/^					      struct json_object *val)$/;"	z	function:json_array_add_value_object	typeref:struct:json_object *	file:
val	json.h	/^					     double val)$/;"	z	function:json_array_add_value_float	typeref:typename:double	file:
val	json.h	/^					     struct json_array *val)$/;"	z	function:json_array_add_value_array	typeref:struct:json_array *	file:
val	json.h	/^					    const char *name, long long val)$/;"	z	function:json_object_add_value_int	typeref:typename:long long	file:
val	json.h	/^					   long long val)$/;"	z	function:json_array_add_value_int	typeref:typename:long long	file:
val	json.h	/^			       const struct json_value *val);$/;"	z	prototype:json_object_add_value_type	typeref:typename:const struct json_value *	file:
val	json.h	/^			      const struct json_value *val);$/;"	z	prototype:json_array_add_value_type	typeref:typename:const struct json_value *	file:
val	lib/bswap.h	/^static inline uint32_t __be32_to_cpu(uint32_t val)$/;"	z	function:__be32_to_cpu	typeref:typename:uint32_t	file:
val	lib/bswap.h	/^static inline uint64_t __be64_to_cpu(uint64_t val)$/;"	z	function:__be64_to_cpu	typeref:typename:uint64_t	file:
val	lib/pow2.h	/^static inline bool is_power_of_2(uint64_t val)$/;"	z	function:is_power_of_2	typeref:typename:uint64_t	file:
val	options.c	/^				char *val)$/;"	z	function:fio_cmd_ioengine_option_parse	typeref:typename:char *	file:
val	options.c	/^			const char *name, int val)$/;"	z	function:add_to_lopt	typeref:typename:int	file:
val	options.c	/^int fio_cmd_option_parse(struct thread_data *td, const char *opt, char *val)$/;"	z	function:fio_cmd_option_parse	typeref:typename:char *	file:
val	options.c	/^static bool split_parse_distr(const char *str, double *val, double *center)$/;"	z	function:split_parse_distr	typeref:typename:double *	file:
val	options.c	/^static int str_cpumask_cb(void *data, unsigned long long *val)$/;"	z	function:str_cpumask_cb	typeref:typename:unsigned long long *	file:
val	options.c	/^static int str_rwmix_read_cb(void *data, unsigned long long *val)$/;"	z	function:str_rwmix_read_cb	typeref:typename:unsigned long long *	file:
val	options.c	/^static int str_rwmix_write_cb(void *data, unsigned long long *val)$/;"	z	function:str_rwmix_write_cb	typeref:typename:unsigned long long *	file:
val	os/os.h	/^static inline uint16_t fio_swap16(uint16_t val)$/;"	z	function:fio_swap16	typeref:typename:uint16_t	file:
val	os/os.h	/^static inline uint32_t fio_swap32(uint32_t val)$/;"	z	function:fio_swap32	typeref:typename:uint32_t	file:
val	os/os.h	/^static inline uint64_t fio_swap64(uint64_t val)$/;"	z	function:fio_swap64	typeref:typename:uint64_t	file:
val	oslib/getopt.h	/^	int val;$/;"	m	struct:option	typeref:typename:int
val	parse.c	/^int check_str_bytes(const char *p, long long *val, void *data)$/;"	z	function:check_str_bytes	typeref:typename:long long *	file:
val	parse.c	/^int check_str_time(const char *p, long long *val, int is_seconds)$/;"	z	function:check_str_time	typeref:typename:long long *	file:
val	parse.c	/^int parse_cmd_option(const char *opt, const char *val,$/;"	z	function:parse_cmd_option	typeref:typename:const char *	file:
val	parse.c	/^int str_to_decimal(const char *str, long long *val, int kilo, void *data,$/;"	z	function:str_to_decimal	typeref:typename:long long *	file:
val	parse.c	/^int str_to_float(const char *str, double *val, int is_time)$/;"	z	function:str_to_float	typeref:typename:double *	file:
val	parse.c	/^static bool val_too_large(const struct fio_option *o, unsigned long long val,$/;"	z	function:val_too_large	typeref:typename:unsigned long long	file:
val	parse.c	/^static bool val_too_small(const struct fio_option *o, unsigned long long val,$/;"	z	function:val_too_small	typeref:typename:unsigned long long	file:
val	parse.c	/^static int check_int(const char *p, int *val)$/;"	z	function:check_int	typeref:typename:int *	file:
val	parse.c	/^static int check_range_bytes(const char *str, long long *val, void *data)$/;"	z	function:check_range_bytes	typeref:typename:long long *	file:
val	parse.h	/^extern int check_str_bytes(const char *p, long long *val, void *data);$/;"	z	prototype:check_str_bytes	typeref:typename:long long *	file:
val	parse.h	/^extern int check_str_time(const char *p, long long *val, int);$/;"	z	prototype:check_str_time	typeref:typename:long long *	file:
val	parse.h	/^extern int str_to_float(const char *str, double *val, int is_time);$/;"	z	prototype:str_to_float	typeref:typename:double *	file:
val	parse.h	/^static inline int parse_is_percent(unsigned long long val)$/;"	z	function:parse_is_percent	typeref:typename:unsigned long long	file:
val	parse.h	/^static inline int parse_is_percent_uncapped(unsigned long long val)$/;"	z	function:parse_is_percent_uncapped	typeref:typename:unsigned long long	file:
val	parse.h	/^static inline int parse_is_zone(unsigned long long val)$/;"	z	function:parse_is_zone	typeref:typename:unsigned long long	file:
val	stat.c	/^static unsigned int plat_val_to_idx(unsigned long long val)$/;"	z	function:plat_val_to_idx	typeref:typename:unsigned long long	file:
val	t/genzipf.c	/^	unsigned long long val;$/;"	m	struct:node	typeref:typename:unsigned long long	file:
val	t/genzipf.c	/^static struct node *hash_lookup(unsigned long long val)$/;"	z	function:hash_lookup	typeref:typename:unsigned long long	file:
val	t/genzipf.c	/^static unsigned int hashv(unsigned long long val)$/;"	z	function:hashv	typeref:typename:unsigned long long	file:
val	t/genzipf.c	/^static void hash_insert(struct node *n, unsigned long long val)$/;"	z	function:hash_insert	typeref:typename:unsigned long long	file:
val	t/io_uring.c	/^static unsigned int plat_val_to_idx(unsigned long val)$/;"	z	function:plat_val_to_idx	typeref:typename:unsigned long	file:
val	t/read-to-pipe-async.c	/^static unsigned int plat_val_to_idx(unsigned int val)$/;"	z	function:plat_val_to_idx	typeref:typename:unsigned int	file:
val1	thread_options.h	/^	unsigned long long val1[ZONESPLIT_MAX];$/;"	m	struct:split	typeref:typename:unsigned long long[]
val2	thread_options.h	/^	unsigned long long val2[ZONESPLIT_MAX];$/;"	m	struct:split	typeref:typename:unsigned long long[]
val_store	parse.c	/^#define val_store(/;"	d	file:
val_too_large	parse.c	/^static bool val_too_large(const struct fio_option *o, unsigned long long val,$/;"	f	typeref:typename:bool	file:
val_too_small	parse.c	/^static bool val_too_small(const struct fio_option *o, unsigned long long val,$/;"	f	typeref:typename:bool	file:
validate	tools/fio_jsonplus_clat2csv	/^def validate(args, jsondata, col_labels):$/;"	f
vals	blktrace.c	/^static int init_merge_param_list(fio_fp64_t *vals, struct blktrace_cursor *bcs,$/;"	z	function:init_merge_param_list	typeref:typename:fio_fp64_t *	file:
vals	goptions.c	/^static void gopt_int_range_set_val(struct gopt_range *r, unsigned int *vals)$/;"	z	function:gopt_int_range_set_val	typeref:typename:unsigned int *	file:
valtype	y.tab.c	/^typedef union valtype {$/;"	u	file:
valtype	y.tab.c	/^union valtype$/;"	u	file:
valtype	y.tab.h	/^union valtype$/;"	u
value	fio.h	/^				  unsigned int value)$/;"	z	function:td_flags_clear	typeref:typename:unsigned int	file:
value	fio.h	/^				unsigned int value)$/;"	z	function:td_flags_set	typeref:typename:unsigned int	file:
value	fio_sem.c	/^int __fio_sem_init(struct fio_sem *sem, int value)$/;"	z	function:__fio_sem_init	typeref:typename:int	file:
value	fio_sem.c	/^struct fio_sem *fio_sem_init(int value)$/;"	z	function:fio_sem_init	typeref:typename:int	file:
value	fio_sem.h	/^	int value;$/;"	m	struct:fio_sem	typeref:typename:int
value	gfio.c	/^static void ge_update_settings_fn(gpointer key, gpointer value, gpointer data)$/;"	z	function:ge_update_settings_fn	typeref:typename:gpointer	file:
value	graph.c	/^	double value;$/;"	m	struct:tick_value	typeref:typename:double	file:
value	graph.c	/^	void *value;$/;"	m	struct:graph_value	typeref:typename:void *	file:
value	graph.c	/^int graph_add_data(struct graph *bg, graph_label_t label, const double value)$/;"	z	function:graph_add_data	typeref:typename:const double	file:
value	graph.c	/^static void graph_label_add_value(struct graph_label *i, void *value,$/;"	z	function:graph_label_add_value	typeref:typename:void *	file:
value	graph.c	/^static void setstring(char **str, const char *value)$/;"	z	function:setstring	typeref:typename:const char *	file:
value	graph.h	/^int graph_add_data(struct graph *g, graph_label_t label, const double value);$/;"	z	prototype:graph_add_data	typeref:typename:const double	file:
value	json.c	/^static int json_array_add_value(struct json_array *array, struct json_value *value)$/;"	z	function:json_array_add_value	typeref:struct:json_value *	file:
value	json.c	/^static int json_value_level(struct json_value *value)$/;"	z	function:json_value_level	typeref:struct:json_value *	file:
value	json.c	/^static int json_value_level(struct json_value *value);$/;"	z	prototype:json_value_level	typeref:struct:json_value *	file:
value	json.c	/^static struct json_pair *json_create_pair(const char *name, struct json_value *value)$/;"	z	function:json_create_pair	typeref:struct:json_value *	file:
value	json.c	/^static void json_free_value(struct json_value *value)$/;"	z	function:json_free_value	typeref:struct:json_value *	file:
value	json.c	/^static void json_free_value(struct json_value *value);$/;"	z	prototype:json_free_value	typeref:struct:json_value *	file:
value	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *);$/;"	z	prototype:json_print_value	typeref:struct:json_value *	file:
value	json.c	/^static void json_print_value(struct json_value *value, struct buf_output *out)$/;"	z	function:json_print_value	typeref:struct:json_value *	file:
value	json.h	/^	struct json_value *value;$/;"	m	struct:json_pair	typeref:struct:json_value *
value	lib/prio_tree.h	/^	unsigned long		value;$/;"	m	struct:prio_tree_iter	typeref:typename:unsigned long
value	oslib/libmtd.c	/^static int dev_read_hex_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_hex_int	typeref:typename:int *	file:
value	oslib/libmtd.c	/^static int dev_read_pos_int(const char *patt, int mtd_num, int *value)$/;"	z	function:dev_read_pos_int	typeref:typename:int *	file:
value	oslib/libmtd.c	/^static int dev_read_pos_ll(const char *patt, int mtd_num, long long *value)$/;"	z	function:dev_read_pos_ll	typeref:typename:long long *	file:
value	oslib/libmtd.c	/^static int read_hex_int(const char *file, int *value)$/;"	z	function:read_hex_int	typeref:typename:int *	file:
value	oslib/libmtd.c	/^static int read_hex_ll(const char *file, long long *value)$/;"	z	function:read_hex_ll	typeref:typename:long long *	file:
value	oslib/libmtd.c	/^static int read_pos_int(const char *file, int *value)$/;"	z	function:read_pos_int	typeref:typename:int *	file:
value	oslib/libmtd.c	/^static int read_pos_ll(const char *file, long long *value)$/;"	z	function:read_pos_ll	typeref:typename:long long *	file:
value	parse.h	/^	char *value;$/;"	m	struct:print_option	typeref:typename:char *
value	server.h	/^	uint8_t value[128];$/;"	m	struct:cmd_job_option	typeref:typename:uint8_t[128]
value	tickmarks.h	/^	double value;$/;"	m	struct:tickmark	typeref:typename:double
value_cnt	json.h	/^	int value_cnt;$/;"	m	struct:json_array	typeref:typename:int
value_count	graph.c	/^	int value_count;$/;"	m	struct:graph_label	typeref:typename:int	file:
value_list	graph.c	/^	struct flist_head value_list;$/;"	m	struct:graph_label	typeref:struct:flist_head	file:
value_pair	parse.h	/^struct value_pair {$/;"	s
values	engines/cmdprio.c	/^				   struct cmdprio_values *values)$/;"	z	function:assign_clat_prio_index	typeref:struct:cmdprio_values *	file:
values	engines/cmdprio.c	/^				   struct cmdprio_values *values,$/;"	z	function:fio_cmdprio_fill_bsprio	typeref:struct:cmdprio_values *	file:
values	engines/cmdprio.c	/^				 struct cmdprio_values *values,$/;"	z	function:fio_cmdprio_generate_bsprio_desc	typeref:struct:cmdprio_values *	file:
values	engines/cmdprio.c	/^			     struct cmdprio_values *values)$/;"	z	function:init_ts_clat_prio	typeref:struct:cmdprio_values *	file:
values	engines/cmdprio.c	/^static int init_cmdprio_values(struct cmdprio_values *values,$/;"	z	function:init_cmdprio_values	typeref:struct:cmdprio_values *	file:
values	json.h	/^	struct json_value **values;$/;"	m	struct:json_array	typeref:struct:json_value **
values	t/ieee754.c	/^static double values[] = { -17.23, 17.23, 123.4567, 98765.4321,$/;"	v	typeref:typename:double[]	file:
vasprintf	oslib/asprintf.c	/^int vasprintf(char **strp, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
vasprintf	oslib/asprintf.h	/^int vasprintf(char **strp, const char *fmt, va_list ap);$/;"	p	typeref:typename:int
vbox	gclient.c	/^				       GtkWidget *vbox, struct thread_stat *ts,$/;"	z	function:gfio_show_clat_percentiles	typeref:typename:GtkWidget *	file:
vbox	gclient.c	/^static void gfio_show_cpu_usage(GtkWidget *vbox, struct thread_stat *ts)$/;"	z	function:gfio_show_cpu_usage	typeref:typename:GtkWidget *	file:
vbox	gclient.c	/^static void gfio_show_io_depths(GtkWidget *vbox, struct thread_stat *ts)$/;"	z	function:gfio_show_io_depths	typeref:typename:GtkWidget *	file:
vbox	gclient.c	/^static void gfio_show_lat(GtkWidget *vbox, const char *name, unsigned long long min,$/;"	z	function:gfio_show_lat	typeref:typename:GtkWidget *	file:
vbox	gclient.c	/^static void gfio_show_latency_buckets(struct gfio_client *gc, GtkWidget *vbox,$/;"	z	function:gfio_show_latency_buckets	typeref:typename:GtkWidget *	file:
vbox	gfio.c	/^		   GtkWidget *vbox, GtkUIManager *ui_manager)$/;"	z	function:gfio_ui_setup	typeref:typename:GtkWidget *	file:
vbox	gfio.h	/^	GtkWidget *vbox;$/;"	m	struct:gui	typeref:typename:GtkWidget *
vbox	gfio.h	/^	GtkWidget *vbox;$/;"	m	struct:gui_entry	typeref:typename:GtkWidget *
vbox	goptions.c	/^	GtkWidget *vbox[2];$/;"	m	struct:gopt_frame_widget	typeref:typename:GtkWidget * [2]	file:
vboxes	goptions.c	/^	GtkWidget *vboxes[__FIO_OPT_C_NR];$/;"	m	struct:gopt_job_view	typeref:typename:GtkWidget * []	file:
vc	verify.c	/^static inline void *io_u_verify_off(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:io_u_verify_off	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_crc16(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc16	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_crc32(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc32	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_crc32c(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc32c	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_crc64(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc64	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_crc7(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_crc7	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_md5(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_md5	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_pattern(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_pattern	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha1(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha1	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha256(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha256	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha3(struct verify_header *hdr, struct vcont *vc,$/;"	z	function:verify_io_u_sha3	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha3_224(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_224	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha3_256(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_256	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha3_384(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_384	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha3_512(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha3_512	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_sha512(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_sha512	typeref:struct:vcont *	file:
vc	verify.c	/^static int verify_io_u_xxhash(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:verify_io_u_xxhash	typeref:struct:vcont *	file:
vc	verify.c	/^static void __dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:__dump_verify_buffers	typeref:struct:vcont *	file:
vc	verify.c	/^static void dump_verify_buffers(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:dump_verify_buffers	typeref:struct:vcont *	file:
vc	verify.c	/^static void log_verify_failure(struct verify_header *hdr, struct vcont *vc)$/;"	z	function:log_verify_failure	typeref:struct:vcont *	file:
vcont	verify.c	/^struct vcont {$/;"	s	file:
vectored	t/io_uring.c	/^static int vectored = 1;$/;"	v	typeref:typename:int	file:
ver	stat.c	/^					 struct group_run_stats *rs, int ver,$/;"	z	function:show_thread_status_terse_all	typeref:typename:int	file:
ver	stat.c	/^				   enum fio_ddir ddir, int ver,$/;"	z	function:show_ddir_status_terse	typeref:typename:int	file:
ver	stat.c	/^				   int ver, struct buf_output *out)$/;"	z	function:show_mixed_ddir_status_terse	typeref:typename:int	file:
verb	engines/rdma.c	/^	enum rdma_io_mode verb;$/;"	m	struct:rdmaio_options	typeref:enum:rdma_io_mode	file:
verbose	engines/http.c	/^	int verbose;$/;"	m	struct:http_options	typeref:typename:int	file:
verbose	oslib/libmtd_common.h	/^#define verbose(/;"	d
verify	parse.h	/^	int (*verify)(const struct fio_option *, void *);$/;"	m	struct:fio_option	typeref:typename:int (*)(const struct fio_option *,void *)
verify	thread_options.h	/^	uint32_t verify;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify	thread_options.h	/^	unsigned int verify;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_assign_state	verify-state.h	/^extern void verify_assign_state(struct thread_data *, void *);$/;"	p	typeref:typename:void
verify_assign_state	verify.c	/^void verify_assign_state(struct thread_data *td, void *p)$/;"	f	typeref:typename:void
verify_async	thread_options.h	/^	uint32_t verify_async;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_async	thread_options.h	/^	unsigned int verify_async;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_async_exit	verify.c	/^void verify_async_exit(struct thread_data *td)$/;"	f	typeref:typename:void
verify_async_exit	verify.h	/^extern void verify_async_exit(struct thread_data *);$/;"	p	typeref:typename:void
verify_async_init	verify.c	/^int verify_async_init(struct thread_data *td)$/;"	f	typeref:typename:int
verify_async_init	verify.h	/^extern int verify_async_init(struct thread_data *);$/;"	p	typeref:typename:int
verify_async_thread	verify.c	/^static void *verify_async_thread(void *data)$/;"	f	typeref:typename:void *	file:
verify_backlog	thread_options.h	/^	uint64_t verify_backlog;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
verify_backlog	thread_options.h	/^	unsigned long long verify_backlog;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
verify_batch	fio.h	/^	unsigned int verify_batch;$/;"	m	struct:thread_data	typeref:typename:unsigned int
verify_batch	thread_options.h	/^	uint32_t verify_batch;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_batch	thread_options.h	/^	unsigned int verify_batch;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_block	zbd.h	/^	uint32_t		verify_block;$/;"	m	struct:fio_zone_info	typeref:typename:uint32_t
verify_bytes	backend.c	/^static void do_verify(struct thread_data *td, uint64_t verify_bytes)$/;"	z	function:do_verify	typeref:typename:uint64_t	file:
verify_cond	fio.h	/^	pthread_cond_t verify_cond;$/;"	m	struct:thread_data	typeref:typename:pthread_cond_t
verify_convert_cmd	server.c	/^static int verify_convert_cmd(struct fio_net_cmd *cmd)$/;"	f	typeref:typename:int	file:
verify_cpumask	thread_options.h	/^	os_cpu_mask_t verify_cpumask;$/;"	m	struct:thread_options	typeref:typename:os_cpu_mask_t
verify_dump	thread_options.h	/^	uint32_t verify_dump;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_dump	thread_options.h	/^	unsigned int verify_dump;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_fatal	thread_options.h	/^	uint32_t verify_fatal;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_fatal	thread_options.h	/^	unsigned int verify_fatal;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_fmt	thread_options.h	/^	struct pattern_fmt verify_fmt[8];$/;"	m	struct:thread_options	typeref:struct:pattern_fmt[8]
verify_fmt_sz	thread_options.h	/^	unsigned int verify_fmt_sz;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_free_state	verify-state.h	/^extern void verify_free_state(struct thread_data *);$/;"	p	typeref:typename:void
verify_free_state	verify.c	/^void verify_free_state(struct thread_data *td)$/;"	f	typeref:typename:void
verify_header	verify.c	/^static int verify_header(struct io_u *io_u, struct thread_data *td,$/;"	f	typeref:typename:int	file:
verify_header	verify.h	/^struct verify_header {$/;"	s
verify_interval	thread_options.h	/^	uint32_t verify_interval;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_interval	thread_options.h	/^	unsigned int verify_interval;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_io_u	verify.c	/^int verify_io_u(struct thread_data *td, struct io_u **io_u_ptr)$/;"	f	typeref:typename:int
verify_io_u	verify.h	/^extern int __must_check verify_io_u(struct thread_data *, struct io_u **);$/;"	p	typeref:typename:int __must_check
verify_io_u_async	verify.c	/^int verify_io_u_async(struct thread_data *td, struct io_u **io_u_ptr)$/;"	f	typeref:typename:int
verify_io_u_async	verify.h	/^extern int verify_io_u_async(struct thread_data *, struct io_u **);$/;"	p	typeref:typename:int
verify_io_u_crc16	verify.c	/^static int verify_io_u_crc16(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_crc32	verify.c	/^static int verify_io_u_crc32(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_crc32c	verify.c	/^static int verify_io_u_crc32c(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_crc64	verify.c	/^static int verify_io_u_crc64(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_crc7	verify.c	/^static int verify_io_u_crc7(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_md5	verify.c	/^static int verify_io_u_md5(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_pattern	verify.c	/^static int verify_io_u_pattern(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha1	verify.c	/^static int verify_io_u_sha1(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha256	verify.c	/^static int verify_io_u_sha256(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha3	verify.c	/^static int verify_io_u_sha3(struct verify_header *hdr, struct vcont *vc,$/;"	f	typeref:typename:int	file:
verify_io_u_sha3_224	verify.c	/^static int verify_io_u_sha3_224(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha3_256	verify.c	/^static int verify_io_u_sha3_256(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha3_384	verify.c	/^static int verify_io_u_sha3_384(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha3_512	verify.c	/^static int verify_io_u_sha3_512(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_sha512	verify.c	/^static int verify_io_u_sha512(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_io_u_xxhash	verify.c	/^static int verify_io_u_xxhash(struct verify_header *hdr, struct vcont *vc)$/;"	f	typeref:typename:int	file:
verify_list	fio.h	/^	struct flist_head verify_list;$/;"	m	struct:thread_data	typeref:struct:flist_head
verify_list	io_u.h	/^		struct flist_head verify_list;$/;"	m	union:io_u::__anon04db5ec7030a	typeref:struct:flist_head
verify_load_state	verify-state.h	/^extern int verify_load_state(struct thread_data *, const char *);$/;"	p	typeref:typename:int
verify_load_state	verify.c	/^int verify_load_state(struct thread_data *td, const char *prefix)$/;"	f	typeref:typename:int
verify_offset	io_u.h	/^	unsigned long long verify_offset;	\/* is really ->offset *\/$/;"	m	struct:io_u	typeref:typename:unsigned long long
verify_offset	thread_options.h	/^	uint32_t verify_offset;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_offset	thread_options.h	/^	unsigned int verify_offset;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_only	thread_options.h	/^	unsigned int verify_only;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_pattern	thread_options.h	/^	char verify_pattern[MAX_PATTERN_SIZE];$/;"	m	struct:thread_options	typeref:typename:char[]
verify_pattern	thread_options.h	/^	uint8_t verify_pattern[MAX_PATTERN_SIZE];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
verify_pattern_bytes	thread_options.h	/^	uint32_t verify_pattern_bytes;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_pattern_bytes	thread_options.h	/^	unsigned int verify_pattern_bytes;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_per_group_options	init.c	/^static int verify_per_group_options(struct thread_data *td, const char *jobname)$/;"	f	typeref:typename:int	file:
verify_save_state	verify-state.h	/^extern void verify_save_state(int mask);$/;"	p	typeref:typename:void
verify_save_state	verify.c	/^void verify_save_state(int mask)$/;"	f	typeref:typename:void
verify_state	fio.h	/^	struct frand_state verify_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
verify_state	thread_options.h	/^	uint32_t verify_state;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_state	thread_options.h	/^	unsigned int verify_state;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_state_gen_name	verify-state.h	/^static inline void verify_state_gen_name(char *out, size_t size,$/;"	f	typeref:typename:void
verify_state_hdr	verify-state.h	/^extern int verify_state_hdr(struct verify_state_hdr *, struct thread_io_list *);$/;"	p	typeref:typename:int
verify_state_hdr	verify-state.h	/^struct verify_state_hdr {$/;"	s
verify_state_hdr	verify.c	/^int verify_state_hdr(struct verify_state_hdr *hdr, struct thread_io_list *s)$/;"	f	typeref:typename:int
verify_state_save	thread_options.h	/^	uint32_t verify_state_save;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
verify_state_save	thread_options.h	/^	unsigned int verify_state_save;$/;"	m	struct:thread_options	typeref:typename:unsigned int
verify_state_should_stop	verify-state.h	/^extern int verify_state_should_stop(struct thread_data *, struct io_u *);$/;"	p	typeref:typename:int
verify_state_should_stop	verify.c	/^int verify_state_should_stop(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
verify_thread_exit	fio.h	/^	int verify_thread_exit;$/;"	m	struct:thread_data	typeref:typename:int
verify_threads	fio.h	/^	pthread_t *verify_threads;$/;"	m	struct:thread_data	typeref:typename:pthread_t *
verify_trimmed_io_u	verify.c	/^static int verify_trimmed_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
verify_type	verify.c	/^static inline unsigned int __hdr_size(int verify_type)$/;"	z	function:__hdr_size	typeref:typename:int	file:
verify_type	verify.h	/^	uint16_t verify_type;$/;"	m	struct:verify_header	typeref:typename:uint16_t
verify_udp_seq	engines/net.c	/^static void verify_udp_seq(struct thread_data *td, struct netio_data *nd,$/;"	f	typeref:typename:void	file:
verror	fio.h	/^	char verror[FIO_VERROR_SIZE];$/;"	m	struct:thread_data	typeref:typename:char[]
verror	stat.h	/^	char verror[FIO_VERROR_SIZE];$/;"	m	struct:thread_stat	typeref:typename:char[]
version	doc/conf.py	/^version, release = fio_version()$/;"	v
version	ioengines.h	/^	int version;$/;"	m	struct:ioengine_ops	typeref:typename:int
version	server.h	/^	uint16_t version;	\/* protocol version *\/$/;"	m	struct:fio_net_cmd	typeref:typename:uint16_t
version	verify-state.h	/^	uint64_t version;$/;"	m	struct:verify_state_hdr	typeref:typename:uint64_t
vhdr_crc16	verify.h	/^struct vhdr_crc16 {$/;"	s
vhdr_crc32	verify.h	/^struct vhdr_crc32 {$/;"	s
vhdr_crc64	verify.h	/^struct vhdr_crc64 {$/;"	s
vhdr_crc7	verify.h	/^struct vhdr_crc7 {$/;"	s
vhdr_md5	verify.h	/^struct vhdr_md5 {$/;"	s
vhdr_sha1	verify.h	/^struct vhdr_sha1 {$/;"	s
vhdr_sha256	verify.h	/^struct vhdr_sha256 {$/;"	s
vhdr_sha3_224	verify.h	/^struct vhdr_sha3_224 {$/;"	s
vhdr_sha3_256	verify.h	/^struct vhdr_sha3_256 {$/;"	s
vhdr_sha3_384	verify.h	/^struct vhdr_sha3_384 {$/;"	s
vhdr_sha3_512	verify.h	/^struct vhdr_sha3_512 {$/;"	s
vhdr_sha512	verify.h	/^struct vhdr_sha512 {$/;"	s
vhdr_xxhash	verify.h	/^struct vhdr_xxhash {$/;"	s
view_log	gfio.c	/^static void view_log(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
view_log_destroy	gfio.c	/^static void view_log_destroy(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
view_results	gfio.c	/^static void view_results(GtkWidget *w, gpointer data)$/;"	f	typeref:typename:void	file:
visible	gfio.c	/^static void set_job_menu_visible(struct gui *ui, int visible)$/;"	z	function:set_job_menu_visible	typeref:typename:int	file:
visible	gfio.c	/^static void set_view_results_visible(struct gui *ui, int visible)$/;"	z	function:set_view_results_visible	typeref:typename:int	file:
visible	goptions.c	/^				      gboolean visible)$/;"	z	function:gopt_set_children_visible	typeref:typename:gboolean	file:
vmsplice_io_u	engines/net.c	/^static int vmsplice_io_u(struct io_u *io_u, int fd, unsigned int len)$/;"	f	typeref:typename:int	file:
vmsplice_io_u_in	engines/net.c	/^static int vmsplice_io_u_in(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
vmsplice_io_u_out	engines/net.c	/^static int vmsplice_io_u_out(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:int	file:
vmsplice_to_user	engines/splice.c	/^	int vmsplice_to_user;$/;"	m	struct:spliceio_data	typeref:typename:int	file:
vmsplice_to_user_map	engines/splice.c	/^	int vmsplice_to_user_map;$/;"	m	struct:spliceio_data	typeref:typename:int	file:
volume	engines/glusterfs.c	/^			       char *volume, char *brick)$/;"	z	function:fio_gf_get_glfs	typeref:typename:char *	file:
volume	engines/glusterfs.c	/^	char			*volume;$/;"	m	struct:glfs_info	typeref:typename:char *	file:
volume	engines/glusterfs.c	/^static glfs_t *fio_gf_new_fs(char *volume, char *brick)$/;"	z	function:fio_gf_new_fs	typeref:typename:char *	file:
vp	engines/nbd.c	/^static int cmd_completed (void *vp, int *error)$/;"	z	function:cmd_completed	typeref:typename:void *	file:
vp	parse.c	/^static int str_match_len(const struct value_pair *vp, const char *str)$/;"	z	function:str_match_len	typeref:typename:const struct value_pair *	file:
vp_cmp	parse.c	/^static int vp_cmp(const void *p1, const void *p2)$/;"	f	typeref:typename:int	file:
vpmap	parse.c	/^static void posval_sort(const struct fio_option *o, struct value_pair *vpmap)$/;"	z	function:posval_sort	typeref:struct:value_pair *	file:
vstate	fio.h	/^	struct thread_io_list *vstate;$/;"	m	struct:thread_data	typeref:struct:thread_io_list *
w	engines/cpu.c	/^	uint32_t w;$/;"	m	struct:mwc	typeref:typename:uint32_t	file:
w	gclient.c	/^static gboolean results_window_delete(GtkWidget *w, gpointer data)$/;"	z	function:results_window_delete	typeref:typename:GtkWidget *	file:
w	gclient.c	/^static gint on_config_lat_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	z	function:on_config_lat_drawing_area	typeref:typename:GtkWidget *	file:
w	gclient.c	/^static int on_expose_lat_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_lat_drawing_area	typeref:typename:GtkWidget *	file:
w	gclient.c	/^static void disk_util_destroy(GtkWidget *w, gpointer data)$/;"	z	function:disk_util_destroy	typeref:typename:GtkWidget *	file:
w	gclient.c	/^static void results_close(GtkWidget *w, gpointer *data)$/;"	z	function:results_close	typeref:typename:GtkWidget *	file:
w	gclient.c	/^static void results_print(GtkWidget *w, gpointer *data)$/;"	z	function:results_print	typeref:typename:GtkWidget *	file:
w	gcompat.c	/^guint gtk_widget_get_allocated_height(GtkWidget *w)$/;"	z	function:gtk_widget_get_allocated_height	typeref:typename:GtkWidget *	file:
w	gcompat.c	/^guint gtk_widget_get_allocated_width(GtkWidget *w)$/;"	z	function:gtk_widget_get_allocated_width	typeref:typename:GtkWidget *	file:
w	gcompat.h	/^guint gtk_widget_get_allocated_height(GtkWidget *w);$/;"	z	prototype:gtk_widget_get_allocated_height	typeref:typename:GtkWidget *	file:
w	gcompat.h	/^guint gtk_widget_get_allocated_width(GtkWidget *w);$/;"	z	prototype:gtk_widget_get_allocated_width	typeref:typename:GtkWidget *	file:
w	gcompat.h	/^static inline GdkWindow *gtk_widget_get_window(GtkWidget *w)$/;"	z	function:gtk_widget_get_window	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static gboolean graph_tooltip(GtkWidget *w, gint x, gint y,$/;"	z	function:graph_tooltip	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static gint on_config_drawing_area(GtkWidget *w, GdkEventConfigure *event,$/;"	z	function:on_config_drawing_area	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static int on_expose_drawing_area(GtkWidget *w, GdkEvent *event, gpointer p)$/;"	z	function:on_expose_drawing_area	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void about_dialog(GtkWidget *w, gpointer data)$/;"	z	function:about_dialog	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void connect_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:connect_job_entry	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void edit_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:edit_job_entry	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void file_close(GtkWidget *w, gpointer data)$/;"	z	function:file_close	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void file_new(GtkWidget *w, gpointer data)$/;"	z	function:file_new	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void file_open(GtkWidget *w, gpointer data)$/;"	z	function:file_open	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void file_open(GtkWidget *w, gpointer data);$/;"	z	prototype:file_open	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void file_save(GtkWidget *w, gpointer data)$/;"	z	function:file_save	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void ge_widget_destroy(GtkWidget *w, gpointer data)$/;"	z	function:ge_widget_destroy	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void preferences(GtkWidget *w, gpointer data)$/;"	z	function:preferences	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void send_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:send_job_entry	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void start_job_entry(GtkWidget *w, gpointer data)$/;"	z	function:start_job_entry	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void view_log(GtkWidget *w, gpointer data)$/;"	z	function:view_log	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void view_log_destroy(GtkWidget *w, gpointer data)$/;"	z	function:view_log_destroy	typeref:typename:GtkWidget *	file:
w	gfio.c	/^static void view_results(GtkWidget *w, gpointer data)$/;"	z	function:view_results	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_bool_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_bool_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_combo_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_combo_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_int_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_int_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_range_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_range_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_str_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_str_multi_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_multi_destroy	typeref:typename:GtkWidget *	file:
w	goptions.c	/^static void gopt_str_val_destroy(GtkWidget *w, gpointer data)$/;"	z	function:gopt_str_val_destroy	typeref:typename:GtkWidget *	file:
w	lib/hweight.c	/^unsigned int hweight32(uint32_t w)$/;"	z	function:hweight32	typeref:typename:uint32_t	file:
w	lib/hweight.c	/^unsigned int hweight64(uint64_t w)$/;"	z	function:hweight64	typeref:typename:uint64_t	file:
w	lib/hweight.c	/^unsigned int hweight8(uint8_t w)$/;"	z	function:hweight8	typeref:typename:uint8_t	file:
w	lib/hweight.h	/^unsigned int hweight32(uint32_t w);$/;"	z	prototype:hweight32	typeref:typename:uint32_t	file:
w	lib/hweight.h	/^unsigned int hweight64(uint64_t w);$/;"	z	prototype:hweight64	typeref:typename:uint64_t	file:
w	lib/hweight.h	/^unsigned int hweight8(uint8_t w);$/;"	z	prototype:hweight8	typeref:typename:uint8_t	file:
w	t/read-to-pipe-async.c	/^static struct work_item *find_seq(struct writer_thread *w, unsigned int seq)$/;"	z	function:find_seq	typeref:struct:writer_thread *	file:
wait	engines/rbd.c	/^			   unsigned int min_evts, int wait)$/;"	z	function:rbd_iter_events	typeref:typename:int	file:
wait	server.c	/^static int fio_recv_data(int sk, void *buf, unsigned int len, bool wait)$/;"	z	function:fio_recv_data	typeref:typename:bool	file:
wait	server.c	/^struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait)$/;"	z	function:fio_net_recv_cmd	typeref:typename:bool	file:
wait	server.h	/^	struct fio_sem wait;	\/* wake backend when items added to list *\/$/;"	m	struct:sk_out	typeref:struct:fio_sem
wait	server.h	/^extern struct fio_net_cmd *fio_net_recv_cmd(int sk, bool wait);$/;"	z	prototype:fio_net_recv_cmd	typeref:typename:bool	file:
wait_connect_time	os/windows/posix.c	/^static HANDLE create_named_pipe(char *pipe_name, int wait_connect_time)$/;"	z	function:create_named_pipe	typeref:typename:int	file:
wait_event	engines/rdma.c	/^				  enum rdma_cm_event_type wait_event)$/;"	z	function:get_next_channel_event	typeref:enum:rdma_cm_event_type	file:
wait_for	thread_options.h	/^	char *wait_for;$/;"	m	struct:thread_options	typeref:typename:char *
wait_for	thread_options.h	/^	uint8_t wait_for[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
wait_for_action	helper_thread.c	/^static uint8_t wait_for_action(int fd, unsigned int timeout_ms)$/;"	f	typeref:typename:uint8_t	file:
wait_for_completions	backend.c	/^static int wait_for_completions(struct thread_data *td, struct timespec *time)$/;"	f	typeref:typename:int	file:
wait_for_event	engines/solarisaio.c	/^static void wait_for_event(struct timeval *tv)$/;"	f	typeref:typename:void	file:
wait_for_ok	init.c	/^static bool wait_for_ok(const char *jobname, struct thread_options *o)$/;"	f	typeref:typename:bool	file:
waitee	init.c	/^static int check_waitees(char *waitee)$/;"	z	function:check_waitees	typeref:typename:char *	file:
waitee_running	backend.c	/^static bool waitee_running(struct thread_data *me)$/;"	f	typeref:typename:bool	file:
waiters	fio_sem.h	/^	int waiters;$/;"	m	struct:fio_sem	typeref:typename:int
waitpid	os/windows/posix.c	/^pid_t waitpid(pid_t pid, int *stat_loc, int options)$/;"	f	typeref:typename:pid_t
waitpid	os/windows/posix/include/sys/wait.h	/^pid_t waitpid(pid_t, int *stat_loc, int options);$/;"	p	typeref:typename:pid_t
wake_idle	workqueue.h	/^	volatile int wake_idle;$/;"	m	struct:workqueue	typeref:typename:volatile int
warned	gettime.c	/^	int warned;$/;"	m	struct:tv_valid	typeref:typename:int	file:
warnings_fatal	init.c	/^int warnings_fatal = 0;$/;"	v	typeref:typename:int
warnmsg	oslib/libmtd_common.h	/^#define warnmsg(/;"	d
wc	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	z	function:client_get_io_u_index	typeref:struct:ibv_wc *	file:
wc	engines/librpma_apm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	z	prototype:client_get_io_u_index	typeref:struct:ibv_wc *	file:
wc	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index)$/;"	z	function:client_get_io_u_index	typeref:struct:ibv_wc *	file:
wc	engines/librpma_gpspm.c	/^static int client_get_io_u_index(struct ibv_wc *wc, unsigned int *io_u_index);$/;"	z	prototype:client_get_io_u_index	typeref:struct:ibv_wc *	file:
wc	engines/librpma_gpspm.c	/^static int server_qe_process(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:server_qe_process	typeref:struct:ibv_wc *	file:
wc	engines/rdma.c	/^static int client_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:client_recv	typeref:struct:ibv_wc *	file:
wc	engines/rdma.c	/^static int server_recv(struct thread_data *td, struct ibv_wc *wc)$/;"	z	function:server_recv	typeref:struct:ibv_wc *	file:
wd	engines/windowsaio.c	/^	struct windowsaio_data *wd;$/;"	m	struct:thread_ctx	typeref:struct:windowsaio_data *	file:
weight	flow.c	/^				        unsigned int weight)$/;"	z	function:flow_put	typeref:typename:unsigned int	file:
weighted_average	tools/hist/fiologparser_hist.py	/^def weighted_average(vs, ws):$/;"	f
weighted_percentile	tools/hist/fiologparser_hist.py	/^def weighted_percentile(percs, vs, ws):$/;"	f
weights	tools/hist/fiologparser_hist.py	/^def weights(start_ts, end_ts, start, end):$/;"	f
what	iolog.c	/^	      enum file_log_act what)$/;"	z	function:log_file	typeref:enum:file_log_act	file:
which	os/os-android.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
which	os/os-linux.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
who	libfio.c	/^int fio_set_fd_nonblocking(int fd, const char *who)$/;"	z	function:fio_set_fd_nonblocking	typeref:typename:const char *	file:
who	os/os-android.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
who	os/os-linux.h	/^static inline int ioprio_set(int which, int who, int ioprio_class, int ioprio)$/;"	z	function:ioprio_set	typeref:typename:int	file:
who	os/windows/posix.c	/^int getrusage(int who, struct rusage *r_usage)$/;"	z	function:getrusage	typeref:typename:int	file:
who	os/windows/posix/include/sys/resource.h	/^int getrusage(int who, struct rusage *r_usage);$/;"	z	prototype:getrusage	typeref:typename:int	file:
widget	gcompat.c	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus)$/;"	z	function:gtk_widget_set_can_focus	typeref:typename:GtkWidget *	file:
widget	gcompat.h	/^void gtk_widget_set_can_focus(GtkWidget *widget, gboolean can_focus);$/;"	z	prototype:gtk_widget_set_can_focus	typeref:typename:GtkWidget *	file:
widget	gerror.c	/^static void on_info_bar_response(GtkWidget *widget, gint response,$/;"	z	function:on_info_bar_response	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static gboolean notebook_switch_page(GtkNotebook *notebook, GtkWidget *widget,$/;"	z	function:notebook_switch_page	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void combo_entry_destroy(GtkWidget *widget, gpointer data)$/;"	z	function:combo_entry_destroy	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data)$/;"	z	function:connect_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void connect_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:connect_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void drag_and_drop_received(GtkWidget *widget, GdkDragContext *ctx,$/;"	z	function:drag_and_drop_received	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void quit_clicked(__attribute__((unused)) GtkWidget *widget,$/;"	z	function:quit_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data)$/;"	z	function:send_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void send_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:send_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void start_job_clicked(GtkWidget *widget, gpointer data);$/;"	z	prototype:start_job_clicked	typeref:typename:GtkWidget *	file:
widget	gfio.c	/^static void start_job_clicked(__attribute__((unused)) GtkWidget *widget,$/;"	z	function:start_job_clicked	typeref:typename:GtkWidget *	file:
width	printing.c	/^	gdouble width, height, xdpi, ydpi;$/;"	m	struct:printing_parameters	typeref:typename:gdouble	file:
win	gclient.c	/^static void __gfio_display_end_results(GtkWidget *win, struct gfio_client *gc,$/;"	z	function:__gfio_display_end_results	typeref:typename:GtkWidget *	file:
win_to_posix_error	os/windows/posix.c	/^int win_to_posix_error(DWORD winerr)$/;"	f	typeref:typename:int
win_to_posix_error	os/windows/posix.h	/^extern int win_to_posix_error(DWORD winerr);$/;"	p	typeref:typename:int
window	gclient.c	/^static GtkWidget *get_results_menubar(GtkWidget *window, struct gui_entry *ge)$/;"	z	function:get_results_menubar	typeref:typename:GtkWidget *	file:
window	gfio.c	/^static GtkWidget *get_menubar_menu(GtkWidget *window, GtkUIManager *ui_manager,$/;"	z	function:get_menubar_menu	typeref:typename:GtkWidget *	file:
window	gfio.h	/^	GtkWidget *window;$/;"	m	struct:gui	typeref:typename:GtkWidget *
window	goptions.c	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc)$/;"	z	function:gopt_get_options_window	typeref:typename:GtkWidget *	file:
window	goptions.h	/^void gopt_get_options_window(GtkWidget *window, struct gfio_client *gc);$/;"	z	prototype:gopt_get_options_window	typeref:typename:GtkWidget *	file:
window	printing.c	/^static void printing_error_dialog(GtkWidget *window, GError *print_error)$/;"	z	function:printing_error_dialog	typeref:typename:GtkWidget *	file:
window_size	engines/net.c	/^	unsigned int window_size;$/;"	m	struct:netio_options	typeref:typename:unsigned int	file:
windows_create_job	os/os-windows.h	/^HANDLE windows_create_job(void);$/;"	p	typeref:typename:HANDLE
windows_create_job	os/windows/posix.c	/^HANDLE windows_create_job(void)$/;"	f	typeref:typename:HANDLE
windows_create_process	os/windows/posix.c	/^static BOOL windows_create_process(PROCESS_INFORMATION *pi, const char *args, HANDLE *hjob)$/;"	f	typeref:typename:BOOL	file:
windows_handle_connection	os/os-windows.h	/^HANDLE windows_handle_connection(HANDLE hjob, int sk);$/;"	p	typeref:typename:HANDLE
windows_handle_connection	os/windows/posix.c	/^HANDLE windows_handle_connection(HANDLE hjob, int sk)$/;"	f	typeref:typename:HANDLE
windowsaio_data	engines/windowsaio.c	/^struct windowsaio_data {$/;"	s	file:
windowsaio_invalidate_cache	engines/windowsaio.c	/^static int windowsaio_invalidate_cache(struct fio_file *f)$/;"	f	typeref:typename:int	file:
windowsaio_options	engines/windowsaio.c	/^struct windowsaio_options {$/;"	s	file:
winerr	os/windows/posix.c	/^int win_to_posix_error(DWORD winerr)$/;"	z	function:win_to_posix_error	typeref:typename:DWORD	file:
winerr	os/windows/posix.h	/^extern int win_to_posix_error(DWORD winerr);$/;"	z	prototype:win_to_posix_error	typeref:typename:DWORD	file:
with	engines/exec.c	/^char *str_replace(char *orig, const char *rep, const char *with)$/;"	z	function:str_replace	typeref:typename:const char *	file:
word	crc/sha256.c	/^static inline uint32_t ror32(uint32_t word, unsigned int shift)$/;"	z	function:ror32	typeref:typename:uint32_t	file:
word	hash.h	/^static inline uint32_t rol32(uint32_t word, uint32_t shift)$/;"	z	function:rol32	typeref:typename:uint32_t	file:
word	lib/ffz.h	/^static inline int ffs64(uint64_t word)$/;"	z	function:ffs64	typeref:typename:uint64_t	file:
word	options.c	/^	const char *word;$/;"	m	struct:fio_keyword	typeref:typename:const char *	file:
word	smalloc.c	/^static int find_next_zero(int word, int start)$/;"	z	function:find_next_zero	typeref:typename:int	file:
work	io_u.h	/^		struct workqueue_work work;$/;"	m	union:io_u::__anon04db5ec7030a	typeref:struct:workqueue_work
work	iolog.c	/^	struct workqueue_work work;$/;"	m	struct:iolog_flush_data	typeref:struct:workqueue_work	file:
work	iolog.c	/^static int gz_work_async(struct submit_worker *sw, struct workqueue_work *work)$/;"	z	function:gz_work_async	typeref:struct:workqueue_work *	file:
work	rate-submit.c	/^			   struct workqueue_work *work)$/;"	z	function:io_workqueue_fn	typeref:struct:workqueue_work *	file:
work	t/read-to-pipe-async.c	/^static int write_work(struct work_item *work)$/;"	z	function:write_work	typeref:struct:work_item *	file:
work	t/read-to-pipe-async.c	/^static void queue_work(struct reader_thread *rt, struct work_item *work)$/;"	z	function:queue_work	typeref:struct:work_item *	file:
work	t/read-to-pipe-async.c	/^static void reader_work(struct work_item *work)$/;"	z	function:reader_work	typeref:struct:work_item *	file:
work	workqueue.c	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work)$/;"	z	function:workqueue_enqueue	typeref:struct:workqueue_work *	file:
work	workqueue.h	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work);$/;"	z	prototype:workqueue_enqueue	typeref:struct:workqueue_work *	file:
work_item	t/read-to-pipe-async.c	/^struct work_item {$/;"	s	file:
work_list	workqueue.h	/^	struct flist_head work_list;$/;"	m	struct:submit_worker	typeref:struct:flist_head
work_seq	workqueue.h	/^	uint64_t work_seq;$/;"	m	struct:workqueue	typeref:typename:uint64_t
worker	t/memlock.c	/^static void *worker(void *data)$/;"	f	typeref:typename:void *	file:
worker_thread	t/dedupe.c	/^struct worker_thread {$/;"	s	file:
worker_thread	workqueue.c	/^static void *worker_thread(void *data)$/;"	f	typeref:typename:void *	file:
workers	workqueue.h	/^	struct submit_worker *workers;$/;"	m	struct:workqueue	typeref:struct:submit_worker *
workqueue	workqueue.h	/^struct workqueue {$/;"	s
workqueue_alloc_worker_fn	workqueue.h	/^typedef int (workqueue_alloc_worker_fn)(struct submit_worker *);$/;"	t	typeref:typename:int ()(struct submit_worker *)
workqueue_enqueue	workqueue.c	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work)$/;"	f	typeref:typename:void
workqueue_enqueue	workqueue.h	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work);$/;"	p	typeref:typename:void
workqueue_exit	workqueue.c	/^void workqueue_exit(struct workqueue *wq)$/;"	f	typeref:typename:void
workqueue_exit	workqueue.h	/^void workqueue_exit(struct workqueue *wq);$/;"	p	typeref:typename:void
workqueue_exit_worker	workqueue.h	/^static inline void workqueue_exit_worker(struct submit_worker *sw,$/;"	f	typeref:typename:void
workqueue_exit_worker_fn	workqueue.h	/^typedef void (workqueue_exit_worker_fn)(struct submit_worker *, unsigned int *);$/;"	t	typeref:typename:void ()(struct submit_worker *,unsigned int *)
workqueue_flush	workqueue.c	/^void workqueue_flush(struct workqueue *wq)$/;"	f	typeref:typename:void
workqueue_flush	workqueue.h	/^void workqueue_flush(struct workqueue *wq);$/;"	p	typeref:typename:void
workqueue_free_worker_fn	workqueue.h	/^typedef void (workqueue_free_worker_fn)(struct submit_worker *);$/;"	t	typeref:typename:void ()(struct submit_worker *)
workqueue_init	workqueue.c	/^int workqueue_init(struct thread_data *td, struct workqueue *wq,$/;"	f	typeref:typename:int
workqueue_init	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	p	typeref:typename:int
workqueue_init_worker	workqueue.h	/^static inline int workqueue_init_worker(struct submit_worker *sw)$/;"	f	typeref:typename:int
workqueue_init_worker_fn	workqueue.h	/^typedef int (workqueue_init_worker_fn)(struct submit_worker *);$/;"	t	typeref:typename:int ()(struct submit_worker *)
workqueue_ops	workqueue.h	/^struct workqueue_ops {$/;"	s
workqueue_pre_sleep	workqueue.h	/^static inline void workqueue_pre_sleep(struct submit_worker *sw)$/;"	f	typeref:typename:void
workqueue_pre_sleep_check	workqueue.h	/^static inline bool workqueue_pre_sleep_check(struct submit_worker *sw)$/;"	f	typeref:typename:bool
workqueue_pre_sleep_flush_fn	workqueue.h	/^typedef bool (workqueue_pre_sleep_flush_fn)(struct submit_worker *);$/;"	t	typeref:typename:bool ()(struct submit_worker *)
workqueue_pre_sleep_fn	workqueue.h	/^typedef void (workqueue_pre_sleep_fn)(struct submit_worker *);$/;"	t	typeref:typename:void ()(struct submit_worker *)
workqueue_update_acct_fn	workqueue.h	/^typedef void (workqueue_update_acct_fn)(struct submit_worker *);$/;"	t	typeref:typename:void ()(struct submit_worker *)
workqueue_work	workqueue.h	/^struct workqueue_work {$/;"	s
workqueue_work_fn	workqueue.h	/^typedef int (workqueue_work_fn)(struct submit_worker *, struct workqueue_work *);$/;"	t	typeref:typename:int ()(struct submit_worker *,struct workqueue_work *)
wp	oslib/linux-blkzoned.c	/^	__u64	wp;             \/* Zone write pointer position *\/$/;"	m	struct:blk_zone_v2	typeref:typename:__u64	file:
wp	zbd.h	/^	uint64_t		wp;$/;"	m	struct:fio_zone_info	typeref:typename:uint64_t
wp	zbd_types.h	/^	uint64_t		wp;$/;"	m	struct:zbd_zone	typeref:typename:uint64_t
wp_sectors_with_data	zbd.h	/^	uint64_t		wp_sectors_with_data;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint64_t
wq	workqueue.c	/^int workqueue_init(struct thread_data *td, struct workqueue *wq,$/;"	z	function:workqueue_init	typeref:struct:workqueue *	file:
wq	workqueue.c	/^static bool all_sw_idle(struct workqueue *wq)$/;"	z	function:all_sw_idle	typeref:struct:workqueue *	file:
wq	workqueue.c	/^static int start_worker(struct workqueue *wq, unsigned int index,$/;"	z	function:start_worker	typeref:struct:workqueue *	file:
wq	workqueue.c	/^static struct submit_worker *__get_submit_worker(struct workqueue *wq,$/;"	z	function:__get_submit_worker	typeref:struct:workqueue *	file:
wq	workqueue.c	/^static struct submit_worker *get_submit_worker(struct workqueue *wq)$/;"	z	function:get_submit_worker	typeref:struct:workqueue *	file:
wq	workqueue.c	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work)$/;"	z	function:workqueue_enqueue	typeref:struct:workqueue *	file:
wq	workqueue.c	/^void workqueue_exit(struct workqueue *wq)$/;"	z	function:workqueue_exit	typeref:struct:workqueue *	file:
wq	workqueue.c	/^void workqueue_flush(struct workqueue *wq)$/;"	z	function:workqueue_flush	typeref:struct:workqueue *	file:
wq	workqueue.h	/^	struct workqueue *wq;$/;"	m	struct:submit_worker	typeref:struct:workqueue *
wq	workqueue.h	/^int workqueue_init(struct thread_data *td, struct workqueue *wq, struct workqueue_ops *ops, unsi/;"	z	prototype:workqueue_init	typeref:struct:workqueue *	file:
wq	workqueue.h	/^void workqueue_enqueue(struct workqueue *wq, struct workqueue_work *work);$/;"	z	prototype:workqueue_enqueue	typeref:struct:workqueue *	file:
wq	workqueue.h	/^void workqueue_exit(struct workqueue *wq);$/;"	z	prototype:workqueue_exit	typeref:struct:workqueue *	file:
wq	workqueue.h	/^void workqueue_flush(struct workqueue *wq);$/;"	z	prototype:workqueue_flush	typeref:struct:workqueue *	file:
wq_fd	os/linux/io_uring.h	/^	__u32 wq_fd;$/;"	m	struct:io_uring_params	typeref:typename:__u32
wr_id	engines/rdma.c	/^	uint64_t wr_id;$/;"	m	struct:rdma_io_u_data	typeref:typename:uint64_t	file:
writable	oslib/libmtd.h	/^	unsigned int writable:1;$/;"	m	struct:mtd_dev_info	typeref:typename:unsigned int:1
write_bandw_log	iolog.c	/^static int write_bandw_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_barrier	arch/arch-aarch64.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-alpha.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-arm.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-generic.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-hppa.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-ia64.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-mips.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-ppc.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-s390.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-sh.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-sparc.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-sparc64.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-x86.h	/^#define write_barrier(/;"	d
write_barrier	arch/arch-x86_64.h	/^#define write_barrier(/;"	d
write_bw	gfio.h	/^	GtkWidget *write_bw;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
write_bw	gfio.h	/^	graph_label_t write_bw;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
write_bw_log	init.c	/^bool write_bw_log = false;$/;"	v	typeref:typename:bool
write_bw_log	thread_options.h	/^	uint32_t write_bw_log;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
write_bw_log	thread_options.h	/^	unsigned int write_bw_log;$/;"	m	struct:thread_options	typeref:typename:unsigned int
write_clat_hist_log	iolog.c	/^static int write_clat_hist_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_clat_log	iolog.c	/^static int write_clat_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_cnt	zbd.h	/^	uint32_t		write_cnt;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
write_fail	verify.c	/^write_fail:$/;"	L	function:write_thread_list_state	file:
write_hint	thread_options.h	/^	uint32_t write_hint;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
write_hint	thread_options.h	/^	unsigned int write_hint;$/;"	m	struct:thread_options	typeref:typename:unsigned int
write_hist_log	thread_options.h	/^	uint32_t write_hist_log;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
write_hist_log	thread_options.h	/^	unsigned int write_hist_log;$/;"	m	struct:thread_options	typeref:typename:unsigned int
write_int_to_file	cgroup.c	/^static int write_int_to_file(struct thread_data *td, const char *path,$/;"	f	typeref:typename:int	file:
write_iolog_close	iolog.c	/^void write_iolog_close(struct thread_data *td)$/;"	f	typeref:typename:void
write_iolog_close	iolog.h	/^extern void write_iolog_close(struct thread_data *);$/;"	p	typeref:typename:void
write_iolog_file	thread_options.h	/^	char *write_iolog_file;$/;"	m	struct:thread_options	typeref:typename:char *
write_iolog_file	thread_options.h	/^	uint8_t write_iolog_file[FIO_TOP_STR_MAX];$/;"	m	struct:thread_options_pack	typeref:typename:uint8_t[]
write_iops	gfio.h	/^	GtkWidget *write_iops;$/;"	m	struct:eta_widget	typeref:typename:GtkWidget *
write_iops	gfio.h	/^	graph_label_t write_iops;$/;"	m	struct:gfio_graphs	typeref:typename:graph_label_t
write_iops_log	iolog.c	/^static int write_iops_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_iops_log	thread_options.h	/^	uint32_t write_iops_log;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
write_iops_log	thread_options.h	/^	unsigned int write_iops_log;$/;"	m	struct:thread_options	typeref:typename:unsigned int
write_it	t/read-to-pipe-async.c	/^write_it:$/;"	L	function:reader_work	file:
write_lat_log	iolog.c	/^static int write_lat_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_lat_log	thread_options.h	/^	uint32_t write_lat_log;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
write_lat_log	thread_options.h	/^	unsigned int write_lat_log;$/;"	m	struct:thread_options	typeref:typename:unsigned int
write_mode	engines/sg.c	/^	unsigned int write_mode;$/;"	m	struct:sg_options	typeref:typename:unsigned int	file:
write_op	engines/rados.c	/^	rados_write_op_t write_op;$/;"	m	struct:fio_rados_iou	typeref:typename:rados_write_op_t	file:
write_pid	server.c	/^static int write_pid(pid_t pid, const char *pidfile)$/;"	f	typeref:typename:int	file:
write_seq	t/read-to-pipe-async.c	/^	int write_seq;$/;"	m	struct:reader_thread	typeref:typename:int	file:
write_seqlock_begin	lib/seqlock.h	/^static inline void write_seqlock_begin(struct seqlock *s)$/;"	f	typeref:typename:void
write_seqlock_end	lib/seqlock.h	/^static inline void write_seqlock_end(struct seqlock *s)$/;"	f	typeref:typename:void
write_size	profiles/act.c	/^	unsigned int write_size;$/;"	m	struct:act_options	typeref:typename:unsigned int	file:
write_slat_log	iolog.c	/^static int write_slat_log(struct thread_data *td, int try, bool unit_log)$/;"	f	typeref:typename:int	file:
write_thread_list_state	verify.c	/^static int write_thread_list_state(struct thread_io_list *s,$/;"	f	typeref:typename:int	file:
write_to_pipe	helper_thread.c	/^static int write_to_pipe(int fd, const void *buf, size_t len)$/;"	f	typeref:typename:int	file:
write_trace	blktrace.c	/^static int write_trace(FILE *fp, struct blk_io_trace *t)$/;"	f	typeref:typename:int	file:
write_tsc_rate	t/io_uring.c	/^static void write_tsc_rate(void)$/;"	f	typeref:typename:void	file:
write_work	t/read-to-pipe-async.c	/^static int write_work(struct work_item *work)$/;"	f	typeref:typename:int	file:
writefua	engines/sg.c	/^	unsigned int writefua;$/;"	m	struct:sg_options	typeref:typename:unsigned int	file:
writer	t/read-to-pipe-async.c	/^	struct writer_thread *writer;$/;"	m	struct:work_item	typeref:struct:writer_thread *	file:
writer_fn	t/read-to-pipe-async.c	/^static void *writer_fn(void *data)$/;"	f	typeref:typename:void *	file:
writer_thread	t/read-to-pipe-async.c	/^			void fn(struct writer_thread *),$/;"	z	function:exit_thread	typeref:typename:void fn (struct *)	file:
writer_thread	t/read-to-pipe-async.c	/^static struct writer_thread writer_thread;$/;"	v	typeref:struct:writer_thread	file:
writer_thread	t/read-to-pipe-async.c	/^struct writer_thread {$/;"	s	file:
writev	os/windows/posix.c	/^ssize_t writev(int fildes, const struct iovec *iov, int iovcnt)$/;"	f	typeref:typename:ssize_t
writev	os/windows/posix/include/sys/uio.h	/^ ssize_t writev(int fildes, const struct iovec *iov, int iovcnt);$/;"	p	typeref:typename:ssize_t
ws	engines/librpma_fio.h	/^	struct librpma_fio_workspace *ws;$/;"	m	struct:librpma_fio_client_data	typeref:struct:librpma_fio_workspace *
ws_mr	engines/librpma_fio.h	/^	struct rpma_mr_local *ws_mr;$/;"	m	struct:librpma_fio_server_data	typeref:struct:rpma_mr_local *
ws_ptr	engines/librpma_fio.h	/^	char *ws_ptr;$/;"	m	struct:librpma_fio_server_data	typeref:typename:char *
ws_size	engines/librpma_fio.h	/^	size_t ws_size;$/;"	m	struct:librpma_fio_client_data	typeref:typename:size_t
wt	t/read-to-pipe-async.c	/^			struct writer_thread *wt)$/;"	z	function:exit_thread	typeref:struct:writer_thread *	file:
wt	t/read-to-pipe-async.c	/^static void prune_done_entries(struct writer_thread *wt)$/;"	z	function:prune_done_entries	typeref:struct:writer_thread *	file:
x	cairo_text_helpers.c	/^				double x, double y,$/;"	z	function:draw_left_justified_text	typeref:typename:double	file:
x	cairo_text_helpers.c	/^				double x, double y,$/;"	z	function:draw_right_justified_text	typeref:typename:double	file:
x	cairo_text_helpers.c	/^static void draw_aligned_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_aligned_text	typeref:typename:double	file:
x	cairo_text_helpers.c	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_centered_text	typeref:typename:double	file:
x	cairo_text_helpers.c	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	function:draw_vertical_centered_text	typeref:typename:double	file:
x	cairo_text_helpers.h	/^				double x, double y,$/;"	z	prototype:draw_left_justified_text	typeref:typename:double	file:
x	cairo_text_helpers.h	/^				double x, double y,$/;"	z	prototype:draw_right_justified_text	typeref:typename:double	file:
x	cairo_text_helpers.h	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	prototype:draw_centered_text	typeref:typename:double	file:
x	cairo_text_helpers.h	/^void draw_vertical_centered_text(cairo_t *cr, const char *font, double x,$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:double	file:
x	crc/murmur3.c	/^static inline uint32_t rotl32(uint32_t x, int8_t r)$/;"	z	function:rotl32	typeref:typename:uint32_t	file:
x	crc/sha256.c	/^static inline uint32_t Ch(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Ch	typeref:typename:uint32_t	file:
x	crc/sha256.c	/^static inline uint32_t Maj(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Maj	typeref:typename:uint32_t	file:
x	crc/sha512.c	/^static inline uint64_t Ch(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Ch	typeref:typename:uint64_t	file:
x	crc/sha512.c	/^static inline uint64_t Maj(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Maj	typeref:typename:uint64_t	file:
x	crc/sha512.c	/^static inline uint64_t RORuint64_t(uint64_t x, uint64_t y)$/;"	z	function:RORuint64_t	typeref:typename:uint64_t	file:
x	crc/xxhash.c	/^static inline uint32_t XXH_swap32 (uint32_t x)$/;"	z	function:XXH_swap32	typeref:typename:uint32_t	file:
x	gfio.c	/^				   gint x, gint y, GtkSelectionData *seldata,$/;"	z	function:drag_and_drop_received	typeref:typename:gint	file:
x	gfio.c	/^static gboolean graph_tooltip(GtkWidget *w, gint x, gint y,$/;"	z	function:graph_tooltip	typeref:typename:gint	file:
x	graph.c	/^		      const double x, const double y, const char *tooltip)$/;"	z	function:graph_add_xy_data	typeref:typename:const double	file:
x	graph.c	/^	double x, y;$/;"	m	struct:xyvalue	typeref:typename:double	file:
x	graph.c	/^int graph_contains_xy(struct graph *g, int x, int y)$/;"	z	function:graph_contains_xy	typeref:typename:int	file:
x	graph.h	/^		const double x, const double y, const char *tooltip);$/;"	z	prototype:graph_add_xy_data	typeref:typename:const double	file:
x	graph.h	/^extern const char *graph_find_tooltip(struct graph *g, int x, int y);$/;"	z	prototype:graph_find_tooltip	typeref:typename:int	file:
x	graph.h	/^extern int graph_contains_xy(struct graph *p, int x, int y);$/;"	z	prototype:graph_contains_xy	typeref:typename:int	file:
x	lib/fls.h	/^static inline int __fls(int x)$/;"	z	function:__fls	typeref:typename:int	file:
x	lib/rand.c	/^static inline uint64_t __seed(uint64_t x, uint64_t m)$/;"	z	function:__seed	typeref:typename:uint64_t	file:
x	tickmarks.c	/^static double nicenum(double x, int round)$/;"	z	function:nicenum	typeref:typename:double	file:
x1	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
x1	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
x1	graph.c	/^static void graph_draw_common(struct graph *g, cairo_t *cr, double *x1,$/;"	z	function:graph_draw_common	typeref:typename:double *	file:
x2	graph.c	/^			      double *y1, double *x2, double *y2)$/;"	z	function:graph_draw_common	typeref:typename:double *	file:
x2	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
x2	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
x_axis_unit_change_callback	graph.c	/^	graph_axis_unit_change_callback x_axis_unit_change_callback;$/;"	m	struct:graph	typeref:typename:graph_axis_unit_change_callback	file:
xasprintf	oslib/libmtd_xalloc.h	/^static int xasprintf(char **strp, const char *fmt, ...)$/;"	f	typeref:typename:int
xcalloc	oslib/libmtd_xalloc.h	/^static void *xcalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
xdim	gclient.c	/^					    double xdim, double ydim)$/;"	z	function:setup_lat_bucket_graph	typeref:typename:double	file:
xdim	gclient.c	/^				      double xdim, double ydim)$/;"	z	function:setup_clat_graph	typeref:typename:double	file:
xdim	graph.c	/^	unsigned int xdim, ydim;$/;"	m	struct:graph	typeref:typename:unsigned int	file:
xdim	graph.c	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font)$/;"	z	function:graph_new	typeref:typename:unsigned int	file:
xdim	graph.c	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim)$/;"	z	function:graph_set_size	typeref:typename:unsigned int	file:
xdim	graph.h	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font);$/;"	z	prototype:graph_new	typeref:typename:unsigned int	file:
xdim	graph.h	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim);$/;"	z	prototype:graph_set_size	typeref:typename:unsigned int	file:
xdpi	printing.c	/^	gdouble width, height, xdpi, ydpi;$/;"	m	struct:printing_parameters	typeref:typename:gdouble	file:
xfer_buf	io_u.h	/^	void *xfer_buf;$/;"	m	struct:io_u	typeref:typename:void *
xfer_buflen	io_u.h	/^	unsigned long long xfer_buflen;$/;"	m	struct:io_u	typeref:typename:unsigned long long
xmalloc	oslib/libmtd_xalloc.h	/^static void *xmalloc(size_t size)$/;"	f	typeref:typename:void *
xmit	server.h	/^	struct fio_sem xmit;	\/* held while sending data *\/$/;"	m	struct:sk_out	typeref:struct:fio_sem
xml	doc/Makefile	/^xml:$/;"	t
xnvme_CFLAGS	Makefile	/^  xnvme_CFLAGS = $(LIBXNVME_CFLAGS)$/;"	m
xnvme_LIBS	Makefile	/^  xnvme_LIBS = $(LIBXNVME_LIBS)$/;"	m
xnvme_SRCS	Makefile	/^  xnvme_SRCS = engines\/xnvme.c$/;"	m
xnvme_admin	engines/xnvme.c	/^	char *xnvme_admin;$/;"	m	struct:xnvme_fioe_options	typeref:typename:char *	file:
xnvme_async	engines/xnvme.c	/^	char *xnvme_async;$/;"	m	struct:xnvme_fioe_options	typeref:typename:char *	file:
xnvme_be	engines/xnvme.c	/^	char *xnvme_be;$/;"	m	struct:xnvme_fioe_options	typeref:typename:char *	file:
xnvme_dev_nsid	engines/xnvme.c	/^	unsigned int xnvme_dev_nsid;$/;"	m	struct:xnvme_fioe_options	typeref:typename:unsigned int	file:
xnvme_fioe_cleanup	engines/xnvme.c	/^static void xnvme_fioe_cleanup(struct thread_data *td)$/;"	f	typeref:typename:void	file:
xnvme_fioe_close	engines/xnvme.c	/^static int xnvme_fioe_close(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
xnvme_fioe_data	engines/xnvme.c	/^struct xnvme_fioe_data {$/;"	s	file:
xnvme_fioe_event	engines/xnvme.c	/^static struct io_u *xnvme_fioe_event(struct thread_data *td, int event)$/;"	f	typeref:struct:io_u *	file:
xnvme_fioe_fwrap	engines/xnvme.c	/^struct xnvme_fioe_fwrap {$/;"	s	file:
xnvme_fioe_get_file_size	engines/xnvme.c	/^static int xnvme_fioe_get_file_size(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
xnvme_fioe_get_max_open_zones	engines/xnvme.c	/^static int xnvme_fioe_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
xnvme_fioe_get_zoned_model	engines/xnvme.c	/^static int xnvme_fioe_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
xnvme_fioe_getevents	engines/xnvme.c	/^static int xnvme_fioe_getevents(struct thread_data *td, unsigned int min, unsigned int max,$/;"	f	typeref:typename:int	file:
xnvme_fioe_init	engines/xnvme.c	/^static int xnvme_fioe_init(struct thread_data *td)$/;"	f	typeref:typename:int	file:
xnvme_fioe_invalidate	engines/xnvme.c	/^static int xnvme_fioe_invalidate(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
xnvme_fioe_io_u_free	engines/xnvme.c	/^static void xnvme_fioe_io_u_free(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void	file:
xnvme_fioe_io_u_init	engines/xnvme.c	/^static int xnvme_fioe_io_u_init(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int	file:
xnvme_fioe_iomem_alloc	engines/xnvme.c	/^static int xnvme_fioe_iomem_alloc(struct thread_data *td, size_t total_mem)$/;"	f	typeref:typename:int	file:
xnvme_fioe_iomem_free	engines/xnvme.c	/^static void xnvme_fioe_iomem_free(struct thread_data *td)$/;"	f	typeref:typename:void	file:
xnvme_fioe_open	engines/xnvme.c	/^static int xnvme_fioe_open(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
xnvme_fioe_options	engines/xnvme.c	/^struct xnvme_fioe_options {$/;"	s	file:
xnvme_fioe_queue	engines/xnvme.c	/^static enum fio_q_status xnvme_fioe_queue(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:fio_q_status	file:
xnvme_fioe_report_zones	engines/xnvme.c	/^static int xnvme_fioe_report_zones(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	f	typeref:typename:int	file:
xnvme_fioe_reset_wp	engines/xnvme.c	/^static int xnvme_fioe_reset_wp(struct thread_data *td, struct fio_file *f, uint64_t offset,$/;"	f	typeref:typename:int	file:
xnvme_iovec	engines/xnvme.c	/^	unsigned int xnvme_iovec;$/;"	m	struct:xnvme_fioe_options	typeref:typename:unsigned int	file:
xnvme_opts_from_fioe	engines/xnvme.c	/^static struct xnvme_opts xnvme_opts_from_fioe(struct thread_data *td)$/;"	f	typeref:struct:xnvme_opts	file:
xnvme_sync	engines/xnvme.c	/^	char *xnvme_sync;$/;"	m	struct:xnvme_fioe_options	typeref:typename:char *	file:
xoffset	graph.c	/^	double xoffset, yoffset;$/;"	m	struct:graph	typeref:typename:double	file:
xoffset	graph.c	/^void graph_set_position(struct graph *g, double xoffset, double yoffset)$/;"	z	function:graph_set_position	typeref:typename:double	file:
xoffset	graph.h	/^void graph_set_position(struct graph *g, double xoffset, double yoffset);$/;"	z	prototype:graph_set_position	typeref:typename:double	file:
xormask	lib/lfsr.h	/^	uint64_t xormask;$/;"	m	struct:fio_lfsr	typeref:typename:uint64_t
xrealloc	oslib/libmtd_xalloc.h	/^static void *xrealloc(void *ptr, size_t size)$/;"	f	typeref:typename:void *
xstrdup	oslib/libmtd_xalloc.h	/^static char *xstrdup(const char *s)$/;"	f	typeref:typename:char *
xtick_delta	graph.c	/^	double xtick_delta;$/;"	m	struct:graph	typeref:typename:double	file:
xtick_one_val	graph.c	/^	double xtick_one_val;$/;"	m	struct:graph	typeref:typename:double	file:
xtick_zero	graph.c	/^	double xtick_zero;$/;"	m	struct:graph	typeref:typename:double	file:
xtick_zero_val	graph.c	/^	double xtick_zero_val;$/;"	m	struct:graph	typeref:typename:double	file:
xtitle	graph.c	/^	char *xtitle;$/;"	m	struct:graph	typeref:typename:char *	file:
xy_value_extractor	graph.c	/^typedef double (*xy_value_extractor)(struct graph_value *v);$/;"	t	typeref:typename:double (*)(struct graph_value * v)	file:
xyvalue	graph.c	/^struct xyvalue {$/;"	s	file:
xzalloc	oslib/libmtd_xalloc.h	/^static void *xzalloc(size_t size)$/;"	f	typeref:typename:void *
y	cairo_text_helpers.c	/^					double y, double fontsize,$/;"	z	function:draw_vertical_centered_text	typeref:typename:double	file:
y	cairo_text_helpers.c	/^				double x, double y,$/;"	z	function:draw_left_justified_text	typeref:typename:double	file:
y	cairo_text_helpers.c	/^				double x, double y,$/;"	z	function:draw_right_justified_text	typeref:typename:double	file:
y	cairo_text_helpers.c	/^static void draw_aligned_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_aligned_text	typeref:typename:double	file:
y	cairo_text_helpers.c	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	function:draw_centered_text	typeref:typename:double	file:
y	cairo_text_helpers.h	/^					double y, double fontsize,$/;"	z	prototype:draw_vertical_centered_text	typeref:typename:double	file:
y	cairo_text_helpers.h	/^				double x, double y,$/;"	z	prototype:draw_left_justified_text	typeref:typename:double	file:
y	cairo_text_helpers.h	/^				double x, double y,$/;"	z	prototype:draw_right_justified_text	typeref:typename:double	file:
y	cairo_text_helpers.h	/^void draw_centered_text(cairo_t *cr, const char *font, double x, double y,$/;"	z	prototype:draw_centered_text	typeref:typename:double	file:
y	crc/sha256.c	/^static inline uint32_t Ch(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Ch	typeref:typename:uint32_t	file:
y	crc/sha256.c	/^static inline uint32_t Maj(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Maj	typeref:typename:uint32_t	file:
y	crc/sha512.c	/^static inline uint64_t Ch(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Ch	typeref:typename:uint64_t	file:
y	crc/sha512.c	/^static inline uint64_t Maj(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Maj	typeref:typename:uint64_t	file:
y	crc/sha512.c	/^static inline uint64_t RORuint64_t(uint64_t x, uint64_t y)$/;"	z	function:RORuint64_t	typeref:typename:uint64_t	file:
y	gfio.c	/^				   gint x, gint y, GtkSelectionData *seldata,$/;"	z	function:drag_and_drop_received	typeref:typename:gint	file:
y	gfio.c	/^static gboolean graph_tooltip(GtkWidget *w, gint x, gint y,$/;"	z	function:graph_tooltip	typeref:typename:gint	file:
y	graph.c	/^		      const double x, const double y, const char *tooltip)$/;"	z	function:graph_add_xy_data	typeref:typename:const double	file:
y	graph.c	/^	double x, y;$/;"	m	struct:xyvalue	typeref:typename:double	file:
y	graph.c	/^int graph_contains_xy(struct graph *g, int x, int y)$/;"	z	function:graph_contains_xy	typeref:typename:int	file:
y	graph.h	/^		const double x, const double y, const char *tooltip);$/;"	z	prototype:graph_add_xy_data	typeref:typename:const double	file:
y	graph.h	/^extern const char *graph_find_tooltip(struct graph *g, int x, int y);$/;"	z	prototype:graph_find_tooltip	typeref:typename:int	file:
y	graph.h	/^extern int graph_contains_xy(struct graph *p, int x, int y);$/;"	z	prototype:graph_contains_xy	typeref:typename:int	file:
y.tab.c	Makefile	/^y.tab.c: exp\/expression-parser.y$/;"	t
y.tab.h	Makefile	/^y.tab.h: y.tab.c$/;"	t
y.tab.o	Makefile	/^y.tab.o: y.tab.c y.tab.h$/;"	t
y1	graph.c	/^			      double *y1, double *x2, double *y2)$/;"	z	function:graph_draw_common	typeref:typename:double *	file:
y1	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
y1	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
y2	graph.c	/^			      double *y1, double *x2, double *y2)$/;"	z	function:graph_draw_common	typeref:typename:double *	file:
y2	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_x_ticks	typeref:typename:double	file:
y2	graph.c	/^	double x1, double y1, double x2, double y2,$/;"	z	function:graph_draw_y_ticks	typeref:typename:double	file:
y_axis_unit_change_callback	graph.c	/^	graph_axis_unit_change_callback y_axis_unit_change_callback;$/;"	m	struct:graph	typeref:typename:graph_axis_unit_change_callback	file:
ydim	gclient.c	/^					    double xdim, double ydim)$/;"	z	function:setup_lat_bucket_graph	typeref:typename:double	file:
ydim	gclient.c	/^				      double xdim, double ydim)$/;"	z	function:setup_clat_graph	typeref:typename:double	file:
ydim	graph.c	/^	unsigned int xdim, ydim;$/;"	m	struct:graph	typeref:typename:unsigned int	file:
ydim	graph.c	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font)$/;"	z	function:graph_new	typeref:typename:unsigned int	file:
ydim	graph.c	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim)$/;"	z	function:graph_set_size	typeref:typename:unsigned int	file:
ydim	graph.h	/^struct graph *graph_new(unsigned int xdim, unsigned int ydim, const char *font);$/;"	z	prototype:graph_new	typeref:typename:unsigned int	file:
ydim	graph.h	/^void graph_set_size(struct graph *g, unsigned int xdim, unsigned int ydim);$/;"	z	prototype:graph_set_size	typeref:typename:unsigned int	file:
ydpi	printing.c	/^	gdouble width, height, xdpi, ydpi;$/;"	m	struct:printing_parameters	typeref:typename:gdouble	file:
yoffset	graph.c	/^	double xoffset, yoffset;$/;"	m	struct:graph	typeref:typename:double	file:
yoffset	graph.c	/^void graph_set_position(struct graph *g, double xoffset, double yoffset)$/;"	z	function:graph_set_position	typeref:typename:double	file:
yoffset	graph.h	/^void graph_set_position(struct graph *g, double xoffset, double yoffset);$/;"	z	prototype:graph_set_position	typeref:typename:double	file:
ytick_delta	graph.c	/^	double ytick_delta;$/;"	m	struct:graph	typeref:typename:double	file:
ytick_one_val	graph.c	/^	double ytick_one_val;$/;"	m	struct:graph	typeref:typename:double	file:
ytick_zero	graph.c	/^	double ytick_zero;$/;"	m	struct:graph	typeref:typename:double	file:
ytick_zero_val	graph.c	/^	double ytick_zero_val;$/;"	m	struct:graph	typeref:typename:double	file:
ytitle	graph.c	/^	char *ytitle;$/;"	m	struct:graph	typeref:typename:char *	file:
yy_accept	lex.yy.c	/^static const flex_int16_t yy_accept[47] =$/;"	v	typeref:typename:const flex_int16_t[47]	file:
yy_act	lex.yy.c	/^	int yy_act;$/;"	v	typeref:typename:int
yy_amount_of_matched_text	lex.yy.c	/^		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;$/;"	v	typeref:typename:int
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_base	lex.yy.c	/^static const flex_int16_t yy_base[49] =$/;"	v	typeref:typename:const flex_int16_t[49]	file:
yy_bp	lex.yy.c	/^	char *yy_cp, *yy_bp;$/;"	v	typeref:typename:char *
yy_bp	lex.yy.c	/^    static void yyunput (int c, char * yy_bp )$/;"	z	function:yyunput	typeref:typename:char *	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	typeref:typename:char *	file:
yy_buf_size	lex.yy.c	/^	int yy_buf_size;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = NULL; \/**< Stack as an array. *\/$/;"	v	typeref:typename:YY_BUFFER_STATE *	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	typeref:typename:size_t	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	typeref:typename:size_t	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_c	lex.yy.c	/^			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;$/;"	v	typeref:typename:YY_CHAR
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = NULL;$/;"	v	typeref:typename:char *	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	typeref:typename:char *	file:
yy_chk	lex.yy.c	/^static const flex_int16_t yy_chk[90] =$/;"	v	typeref:typename:const flex_int16_t[90]	file:
yy_cp	lex.yy.c	/^	char *yy_cp, *yy_bp;$/;"	v	typeref:typename:char *
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_create_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size  );$/;"	p	typeref:typename:YY_BUFFER_STATE	file:
yy_current_state	lex.yy.c	/^	yy_state_type yy_current_state;$/;"	v	typeref:typename:yy_state_type
yy_current_state	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	z	function:yy_try_NUL_trans	typeref:typename:yy_state_type	file:
yy_def	lex.yy.c	/^static const flex_int16_t yy_def[49] =$/;"	v	typeref:typename:const flex_int16_t[49]	file:
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	typeref:typename:void
yy_delete_buffer	lex.yy.c	/^void yy_delete_buffer ( YY_BUFFER_STATE b  );$/;"	p	typeref:typename:void	file:
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	typeref:typename:int	file:
yy_ec	lex.yy.c	/^static const YY_CHAR yy_ec[256] =$/;"	v	typeref:typename:const YY_CHAR[256]	file:
yy_fatal_error	lex.yy.c	/^static void yynoreturn yy_fatal_error ( const char* msg  );$/;"	p	typeref:typename:void yynoreturn	file:
yy_fatal_error	lex.yy.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	f	typeref:typename:void yynoreturn	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_find_action	lex.yy.c	/^yy_find_action:$/;"	L	file:
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 0;$/;"	v	typeref:typename:int
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen ( const char * );$/;"	p	typeref:typename:int	file:
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (const char * s )$/;"	f	typeref:typename:int	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy ( char *, const char *, int );$/;"	p	typeref:typename:void	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	f	typeref:typename:void	file:
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	typeref:typename:void
yy_flush_buffer	lex.yy.c	/^void yy_flush_buffer ( YY_BUFFER_STATE b  );$/;"	p	typeref:typename:void	file:
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer ( void );$/;"	p	typeref:typename:int	file:
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	typeref:typename:int	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	typeref:typename:yy_state_type	file:
yy_get_previous_state	lex.yy.c	/^static yy_state_type yy_get_previous_state ( void );$/;"	p	typeref:typename:yy_state_type	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	typeref:typename:char	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	typeref:typename:int	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	typeref:typename:void	file:
yy_init_buffer	lex.yy.c	/^static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file  );$/;"	p	typeref:typename:void	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals ( void );$/;"	p	typeref:typename:int	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	typeref:typename:int	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	typeref:typename:FILE *	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	typeref:typename:char *	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	typeref:typename:yy_state_type	file:
yy_load_buffer_state	lex.yy.c	/^		yy_load_buffer_state(  );$/;"	p	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	typeref:typename:void	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state ( void );$/;"	p	typeref:typename:void	file:
yy_match	lex.yy.c	/^yy_match:$/;"	L	file:
yy_meta	lex.yy.c	/^static const YY_CHAR yy_meta[25] =$/;"	v	typeref:typename:const YY_CHAR[25]	file:
yy_n_chars	lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_n_chars	lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	typeref:typename:int	file:
yy_new_buffer	lex.yy.c	/^#define yy_new_buffer /;"	d	file:
yy_next_state	lex.yy.c	/^			yy_state_type yy_next_state;$/;"	v	typeref:typename:yy_state_type
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yy_nxt	lex.yy.c	/^static const flex_int16_t yy_nxt[90] =$/;"	v	typeref:typename:const flex_int16_t[90]	file:
yy_reduce_print	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	f	typeref:typename:void	file:
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size  );$/;"	p	typeref:typename:YY_BUFFER_STATE	file:
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len  );$/;"	p	typeref:typename:YY_BUFFER_STATE	file:
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );$/;"	p	typeref:typename:YY_BUFFER_STATE	file:
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_set_bol	lex.yy.c	/^#define yy_set_bol(/;"	d	file:
yy_set_interactive	lex.yy.c	/^#define yy_set_interactive(/;"	d	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	typeref:typename:size_t	file:
yy_stack_print	y.tab.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	f	typeref:typename:void	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	typeref:typename:int	file:
yy_state_fast_t	y.tab.c	/^typedef int yy_state_fast_t;$/;"	t	typeref:typename:int	file:
yy_state_t	y.tab.c	/^typedef yytype_int8 yy_state_t;$/;"	t	typeref:typename:yytype_int8	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	typeref:typename:int	file:
yy_str	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string ( const char *yy_str  );$/;"	z	prototype:yy_scan_string	typeref:typename:const char *	file:
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	typeref:typename:void
yy_switch_to_buffer	lex.yy.c	/^void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer  );$/;"	p	typeref:typename:void	file:
yy_symbol_print	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	f	typeref:typename:void	file:
yy_symbol_value_print	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	f	typeref:typename:void	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	typeref:typename:yy_state_type	file:
yy_try_NUL_trans	lex.yy.c	/^static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  );$/;"	p	typeref:typename:yy_state_type	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yyabortlab	y.tab.c	/^yyabortlab:$/;"	L	function:yyparse	file:
yyacceptlab	y.tab.c	/^yyacceptlab:$/;"	L	function:yyparse	file:
yyalloc	lex.yy.c	/^void *yyalloc ( yy_size_t  );$/;"	p	typeref:typename:void *	file:
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f	typeref:typename:void *
yyalloc	y.tab.c	/^union yyalloc$/;"	u	file:
yybackup	y.tab.c	/^yybackup:$/;"	L	function:yyparse	file:
yybottom	y.tab.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	z	function:yy_stack_print	typeref:typename:yy_state_t *	file:
yybytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	z	function:yy_scan_bytes	typeref:typename:const char *	file:
yychar	y.tab.c	/^int yychar;$/;"	v	typeref:typename:int
yycheck	y.tab.c	/^static const yytype_int8 yycheck[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyclearin	y.tab.c	/^#define yyclearin /;"	d	file:
yyconst	lex.yy.c	/^#define yyconst /;"	d	file:
yydebug	y.tab.c	/^int yydebug;$/;"	v	typeref:typename:int
yydefact	y.tab.c	/^static const yytype_int8 yydefact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydefault	y.tab.c	/^yydefault:$/;"	L	function:yyparse	file:
yydefgoto	y.tab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydest	y.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	z	function:yystpcpy	typeref:typename:char *	file:
yydestruct	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	f	typeref:typename:void	file:
yyensure_buffer_stack	lex.yy.c	/^			yyensure_buffer_stack ();$/;"	p	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack ( void );$/;"	p	typeref:typename:void	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	typeref:typename:void	file:
yyerrlab	y.tab.c	/^yyerrlab:$/;"	L	function:yyparse	file:
yyerrlab1	y.tab.c	/^yyerrlab1:$/;"	L	function:yyparse	file:
yyerrok	y.tab.c	/^#define yyerrok /;"	d	file:
yyerror	lex.yy.c	/^extern int yyerror(long long *result, double *dresult,$/;"	p	typeref:typename:int	file:
yyerror	y.tab.c	/^int yyerror(__attribute__((unused)) long long *result,$/;"	f	typeref:typename:int
yyerror	y.tab.c	/^int yyerror(__attribute__((unused)) long long *result,$/;"	p	typeref:typename:int	file:
yyerrorlab	y.tab.c	/^yyerrorlab:$/;"	L	function:yyparse	file:
yyexhaustedlab	y.tab.c	/^yyexhaustedlab:$/;"	L	function:yyparse	file:
yyfree	lex.yy.c	/^void yyfree ( void *  );$/;"	p	typeref:typename:void	file:
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f	typeref:typename:void
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f	typeref:typename:int
yyget_debug	lex.yy.c	/^int yyget_debug ( void );$/;"	p	typeref:typename:int	file:
yyget_extra	lex.yy.c	/^YY_EXTRA_TYPE yyget_extra ( void );$/;"	p	typeref:typename:YY_EXTRA_TYPE	file:
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f	typeref:typename:FILE *
yyget_in	lex.yy.c	/^FILE *yyget_in ( void );$/;"	p	typeref:typename:FILE *	file:
yyget_leng	lex.yy.c	/^			int yyget_leng ( void );$/;"	p	typeref:typename:int	file:
yyget_leng	lex.yy.c	/^int yyget_leng  (void)$/;"	f	typeref:typename:int
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f	typeref:typename:int
yyget_lineno	lex.yy.c	/^int yyget_lineno ( void );$/;"	p	typeref:typename:int	file:
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f	typeref:typename:FILE *
yyget_out	lex.yy.c	/^FILE *yyget_out ( void );$/;"	p	typeref:typename:FILE *	file:
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f	typeref:typename:char *
yyget_text	lex.yy.c	/^char *yyget_text ( void );$/;"	p	typeref:typename:char *	file:
yyin	lex.yy.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v	typeref:typename:FILE *
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	typeref:typename:int	file:
yyinput	lex.yy.c	/^static int yyinput ( void );$/;"	p	typeref:typename:int	file:
yyleng	lex.yy.c	/^int yyleng;$/;"	v	typeref:typename:int
yyless	lex.yy.c	/^#define yyless(/;"	d	file:
yylex	lex.yy.c	/^extern int yylex (void);$/;"	p	typeref:typename:int	file:
yylex	y.tab.c	/^extern int yylex(void);$/;"	p	typeref:typename:int	file:
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f	typeref:typename:int
yylex_destroy	lex.yy.c	/^int yylex_destroy ( void );$/;"	p	typeref:typename:int	file:
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v	typeref:typename:int
yylval	y.tab.c	/^YYSTYPE yylval;$/;"	v	typeref:typename:YYSTYPE
yymore	lex.yy.c	/^#define yymore(/;"	d	file:
yymsg	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:const char *	file:
yymsg	y.tab.c	/^yysyntax_error (YYPTRDIFF_T *yymsg_alloc, char **yymsg,$/;"	z	function:yysyntax_error	typeref:typename:char **	file:
yymsg_alloc	y.tab.c	/^yysyntax_error (YYPTRDIFF_T *yymsg_alloc, char **yymsg,$/;"	z	function:yysyntax_error	typeref:typename:YYPTRDIFF_T *	file:
yynerrs	y.tab.c	/^int yynerrs;$/;"	v	typeref:typename:int
yynewstate	y.tab.c	/^yynewstate:$/;"	L	function:yyparse	file:
yynoreturn	lex.yy.c	/^#define yynoreturn /;"	d	file:
yynoreturn	lex.yy.c	/^#define yynoreturn$/;"	d	file:
yyo	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:FILE *	file:
yyo	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:FILE *	file:
yyout	lex.yy.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v	typeref:typename:FILE *
yypact	y.tab.c	/^static const yytype_int8 yypact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yypact_value_is_default	y.tab.c	/^#define yypact_value_is_default(/;"	d	file:
yyparse	y.tab.c	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	p	typeref:typename:int	file:
yyparse	y.tab.c	/^yyparse (long long *result, double *dresult, int *has_error, int *units_specified)$/;"	f	typeref:typename:int
yyparse	y.tab.h	/^int yyparse (long long *result, double *dresult, int *has_error, int *units_specified);$/;"	p	typeref:typename:int
yypgoto	y.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state ( void );$/;"	p	typeref:typename:void	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f	typeref:typename:void
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state ( YY_BUFFER_STATE new_buffer  );$/;"	p	typeref:typename:void	file:
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	typeref:typename:void
yyr1	y.tab.c	/^static const yytype_int8 yyr1[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr2	y.tab.c	/^static const yytype_int8 yyr2[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f	typeref:typename:void *
yyrealloc	lex.yy.c	/^void *yyrealloc ( void *, yy_size_t  );$/;"	p	typeref:typename:void *	file:
yyreduce	y.tab.c	/^yyreduce:$/;"	L	function:yyparse	file:
yyres	y.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	z	function:yytnamerr	typeref:typename:char *	file:
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f	typeref:typename:void
yyrestart	lex.yy.c	/^void yyrestart ( FILE *input_file  );$/;"	p	typeref:typename:void	file:
yyrestart	y.tab.c	/^extern void yyrestart(FILE *file);$/;"	p	typeref:typename:void	file:
yyreturn	y.tab.c	/^yyreturn:$/;"	L	function:yyparse	file:
yyrline	y.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	typeref:typename:const yytype_uint8[]	file:
yyrule	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:int	file:
yyset_debug	lex.yy.c	/^void yyset_debug ( int debug_flag  );$/;"	p	typeref:typename:void	file:
yyset_debug	lex.yy.c	/^void yyset_debug (int  _bdebug )$/;"	f	typeref:typename:void
yyset_extra	lex.yy.c	/^void yyset_extra ( YY_EXTRA_TYPE user_defined  );$/;"	p	typeref:typename:void	file:
yyset_in	lex.yy.c	/^void yyset_in  ( FILE * _in_str  );$/;"	p	typeref:typename:void	file:
yyset_in	lex.yy.c	/^void yyset_in (FILE *  _in_str )$/;"	f	typeref:typename:void
yyset_lineno	lex.yy.c	/^void yyset_lineno ( int _line_number  );$/;"	p	typeref:typename:void	file:
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  _line_number )$/;"	f	typeref:typename:void
yyset_out	lex.yy.c	/^void yyset_out  ( FILE * _out_str  );$/;"	p	typeref:typename:void	file:
yyset_out	lex.yy.c	/^void yyset_out (FILE *  _out_str )$/;"	f	typeref:typename:void
yysetstate	y.tab.c	/^yysetstate:$/;"	L	function:yyparse	file:
yysrc	y.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	z	function:yystpcpy	typeref:typename:const char *	file:
yyss_alloc	y.tab.c	/^  yy_state_t yyss_alloc;$/;"	m	union:yyalloc	typeref:typename:yy_state_t	file:
yyssp	y.tab.c	/^                yy_state_t *yyssp, int yytoken)$/;"	z	function:yysyntax_error	typeref:typename:yy_state_t *	file:
yyssp	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:yy_state_t *	file:
yystos	y.tab.c	/^static const yytype_int8 yystos[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yystpcpy	y.tab.c	/^#   define yystpcpy /;"	d	file:
yystpcpy	y.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	typeref:typename:char *	file:
yystr	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	z	function:yy_scan_string	typeref:typename:const char *	file:
yystr	y.tab.c	/^yystrlen (const char *yystr)$/;"	z	function:yystrlen	typeref:typename:const char *	file:
yystr	y.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	z	function:yytnamerr	typeref:typename:const char *	file:
yystrlen	y.tab.c	/^#   define yystrlen(/;"	d	file:
yystrlen	y.tab.c	/^yystrlen (const char *yystr)$/;"	f	typeref:typename:YYPTRDIFF_T	file:
yysyntax_error	y.tab.c	/^yysyntax_error (YYPTRDIFF_T *yymsg_alloc, char **yymsg,$/;"	f	typeref:typename:int	file:
yytable	y.tab.c	/^static const yytype_int8 yytable[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytable_value_is_error	y.tab.c	/^#define yytable_value_is_error(/;"	d	file:
yyterminate	lex.yy.c	/^	yyterminate();$/;"	p	file:
yyterminate	lex.yy.c	/^#define yyterminate(/;"	d	file:
yytext	lex.yy.c	/^char *yytext;$/;"	v	typeref:typename:char *
yytext_ptr	lex.yy.c	/^#define yytext_ptr /;"	d	file:
yytname	y.tab.c	/^static const char *const yytname[] =$/;"	v	typeref:typename:const char * const[]	file:
yytnamerr	y.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	typeref:typename:YYPTRDIFF_T	file:
yytoken	y.tab.c	/^                yy_state_t *yyssp, int yytoken)$/;"	z	function:yysyntax_error	typeref:typename:int	file:
yytokentype	y.tab.c	/^  enum yytokentype$/;"	g	file:
yytokentype	y.tab.h	/^  enum yytokentype$/;"	g
yytoknum	y.tab.c	/^static const yytype_int16 yytoknum[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yytop	y.tab.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	z	function:yy_stack_print	typeref:typename:yy_state_t *	file:
yytranslate	y.tab.c	/^static const yytype_int8 yytranslate[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytype	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:int	file:
yytype	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:int	file:
yytype	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:int	file:
yytype_int16	y.tab.c	/^typedef __INT_LEAST16_TYPE__ yytype_int16;$/;"	t	typeref:typename:__INT_LEAST16_TYPE__	file:
yytype_int16	y.tab.c	/^typedef int_least16_t yytype_int16;$/;"	t	typeref:typename:int_least16_t	file:
yytype_int16	y.tab.c	/^typedef short yytype_int16;$/;"	t	typeref:typename:short	file:
yytype_int8	y.tab.c	/^typedef __INT_LEAST8_TYPE__ yytype_int8;$/;"	t	typeref:typename:__INT_LEAST8_TYPE__	file:
yytype_int8	y.tab.c	/^typedef int_least8_t yytype_int8;$/;"	t	typeref:typename:int_least8_t	file:
yytype_int8	y.tab.c	/^typedef signed char yytype_int8;$/;"	t	typeref:typename:signed char	file:
yytype_uint16	y.tab.c	/^typedef __UINT_LEAST16_TYPE__ yytype_uint16;$/;"	t	typeref:typename:__UINT_LEAST16_TYPE__	file:
yytype_uint16	y.tab.c	/^typedef int yytype_uint16;$/;"	t	typeref:typename:int	file:
yytype_uint16	y.tab.c	/^typedef uint_least16_t yytype_uint16;$/;"	t	typeref:typename:uint_least16_t	file:
yytype_uint16	y.tab.c	/^typedef unsigned short yytype_uint16;$/;"	t	typeref:typename:unsigned short	file:
yytype_uint8	y.tab.c	/^typedef __UINT_LEAST8_TYPE__ yytype_uint8;$/;"	t	typeref:typename:__UINT_LEAST8_TYPE__	file:
yytype_uint8	y.tab.c	/^typedef short yytype_uint8;$/;"	t	typeref:typename:short	file:
yytype_uint8	y.tab.c	/^typedef uint_least8_t yytype_uint8;$/;"	t	typeref:typename:uint_least8_t	file:
yytype_uint8	y.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	typeref:typename:unsigned char	file:
yyunput	lex.yy.c	/^    static void yyunput ( int c, char *buf_ptr  );$/;"	p	typeref:typename:void	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	typeref:typename:void	file:
yyunput	lex.yy.c	/^static void __attribute__((unused)) yyunput(int c, char *buf_ptr);$/;"	p	typeref:typename:void	file:
yyvaluep	y.tab.c	/^yy_symbol_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result, doubl/;"	z	function:yy_symbol_print	typeref:typename:YYSTYPE const * const	file:
yyvaluep	y.tab.c	/^yy_symbol_value_print (FILE *yyo, int yytype, YYSTYPE const * const yyvaluep, long long *result,/;"	z	function:yy_symbol_value_print	typeref:typename:YYSTYPE const * const	file:
yyvaluep	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, long long *result, double *dresult/;"	z	function:yydestruct	typeref:typename:YYSTYPE *	file:
yyvs_alloc	y.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	typeref:typename:YYSTYPE	file:
yyvsp	y.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, int yyrule, long long *result, double *dresu/;"	z	function:yy_reduce_print	typeref:typename:YYSTYPE *	file:
yywrap	lex.yy.c	/^extern "C" int yywrap ( void );$/;"	p	typeref:typename:int	file:
yywrap	lex.yy.c	/^extern int yywrap ( void );$/;"	p	typeref:typename:int	file:
z	crc/sha256.c	/^static inline uint32_t Ch(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Ch	typeref:typename:uint32_t	file:
z	crc/sha256.c	/^static inline uint32_t Maj(uint32_t x, uint32_t y, uint32_t z)$/;"	z	function:Maj	typeref:typename:uint32_t	file:
z	crc/sha512.c	/^static inline uint64_t Ch(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Ch	typeref:typename:uint64_t	file:
z	crc/sha512.c	/^static inline uint64_t Maj(uint64_t x, uint64_t y, uint64_t z)$/;"	z	function:Maj	typeref:typename:uint64_t	file:
z	engines/cpu.c	/^	uint32_t z;$/;"	m	struct:mwc	typeref:typename:uint32_t	file:
z	zbd.c	/^						    struct fio_zone_info *z)$/;"	z	function:zbd_replay_write_order	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^			    struct fio_zone_info *z)$/;"	z	function:zbd_end_zone_io	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^			   struct fio_zone_info *z)$/;"	z	function:zbd_close_zone	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^			  struct fio_zone_info *z)$/;"	z	function:zbd_open_zone	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^			  struct fio_zone_info *z)$/;"	z	function:zbd_reset_zone	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^		      struct fio_zone_info *z)$/;"	z	function:zone_lock	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^static bool zbd_zone_full(const struct fio_file *f, struct fio_zone_info *z,$/;"	z	function:zbd_zone_full	typeref:struct:fio_zone_info *	file:
z	zbd.c	/^static inline uint64_t zbd_zone_capacity_end(const struct fio_zone_info *z)$/;"	z	function:zbd_zone_capacity_end	typeref:typename:const struct fio_zone_info *	file:
z	zbd.c	/^static inline uint64_t zbd_zone_end(const struct fio_zone_info *z)$/;"	z	function:zbd_zone_end	typeref:typename:const struct fio_zone_info *	file:
z	zbd.c	/^static inline void zone_unlock(struct fio_zone_info *z)$/;"	z	function:zone_unlock	typeref:struct:fio_zone_info *	file:
z_stream_init	iolog.c	/^static int z_stream_init(z_stream *stream, int gz_hdr)$/;"	f	typeref:typename:int	file:
zb	zbd.c	/^			   struct fio_zone_info *const zb,$/;"	z	function:zbd_reset_zones	typeref:struct:fio_zone_info * const	file:
zb	zbd.c	/^	      struct fio_zone_info *zb, struct fio_zone_info *zl)$/;"	z	function:zbd_find_zone	typeref:struct:fio_zone_info *	file:
zbd	t/run-fio-tests.py	/^    def zbd(cls):$/;"	m	class:Requirements
zbd_adjust_block	zbd.c	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:enum:io_u_action
zbd_adjust_block	zbd.h	/^enum io_u_action zbd_adjust_block(struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:enum:io_u_action
zbd_adjust_ddir	zbd.c	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:enum:fio_ddir
zbd_adjust_ddir	zbd.h	/^enum fio_ddir zbd_adjust_ddir(struct thread_data *td, struct io_u *io_u,$/;"	p	typeref:enum:fio_ddir
zbd_check_swd	zbd.c	/^static void zbd_check_swd(struct thread_data *td, const struct fio_file *f)$/;"	f	typeref:typename:void	file:
zbd_close_file	zbd.h	/^static inline void zbd_close_file(struct fio_file *f)$/;"	f	typeref:typename:void
zbd_close_zone	zbd.c	/^static void zbd_close_zone(struct thread_data *td, const struct fio_file *f,$/;"	f	typeref:typename:void	file:
zbd_convert_to_open_zone	zbd.c	/^static struct fio_zone_info *zbd_convert_to_open_zone(struct thread_data *td,$/;"	f	typeref:struct:fio_zone_info *	file:
zbd_create_zone_info	zbd.c	/^static int zbd_create_zone_info(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
zbd_dec_and_reset_write_cnt	zbd.c	/^static bool zbd_dec_and_reset_write_cnt(const struct thread_data *td,$/;"	f	typeref:typename:bool	file:
zbd_do_io_u_trim	zbd.c	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:int
zbd_do_io_u_trim	zbd.h	/^int zbd_do_io_u_trim(const struct thread_data *td, struct io_u *io_u);$/;"	p	typeref:typename:int
zbd_end_zone_io	zbd.c	/^static void zbd_end_zone_io(struct thread_data *td, const struct io_u *io_u,$/;"	f	typeref:typename:void	file:
zbd_file_reset	zbd.c	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:void
zbd_file_reset	zbd.h	/^void zbd_file_reset(struct thread_data *td, struct fio_file *f);$/;"	p	typeref:typename:void
zbd_find_zone	zbd.c	/^zbd_find_zone(struct thread_data *td, struct io_u *io_u, uint64_t min_bytes,$/;"	f	typeref:struct:fio_zone_info *	file:
zbd_free_zone_info	zbd.c	/^void zbd_free_zone_info(struct fio_file *f)$/;"	f	typeref:typename:void
zbd_free_zone_info	zbd.h	/^void zbd_free_zone_info(struct fio_file *f);$/;"	p	typeref:typename:void
zbd_get_max_open_zones	zbd.c	/^static int zbd_get_max_open_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_get_zone	zbd.c	/^static inline struct fio_zone_info *zbd_get_zone(const struct fio_file *f,$/;"	f	typeref:struct:fio_zone_info *	file:
zbd_get_zoned_model	zbd.c	/^static int zbd_get_zoned_model(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_info	file.h	/^	struct zoned_block_device_info *zbd_info;$/;"	m	struct:fio_file	typeref:struct:zoned_block_device_info *
zbd_init_files	zbd.c	/^int zbd_init_files(struct thread_data *td)$/;"	f	typeref:typename:int
zbd_init_files	zbd.h	/^int zbd_init_files(struct thread_data *td);$/;"	p	typeref:typename:int
zbd_init_zone_info	zbd.c	/^static int zbd_init_zone_info(struct thread_data *td, struct fio_file *file)$/;"	f	typeref:typename:int	file:
zbd_is_seq_job	zbd.c	/^static bool zbd_is_seq_job(struct fio_file *f)$/;"	f	typeref:typename:bool	file:
zbd_offset_to_zone	zbd.c	/^zbd_offset_to_zone(const struct fio_file *f,  uint64_t offset)$/;"	f	typeref:struct:fio_zone_info *	file:
zbd_offset_to_zone_idx	zbd.c	/^static unsigned int zbd_offset_to_zone_idx(const struct fio_file *f,$/;"	f	typeref:typename:unsigned int	file:
zbd_open_zone	zbd.c	/^static bool zbd_open_zone(struct thread_data *td, const struct fio_file *f,$/;"	f	typeref:typename:bool	file:
zbd_process_swd	zbd.c	/^static uint64_t zbd_process_swd(struct thread_data *td,$/;"	f	typeref:typename:uint64_t	file:
zbd_put_io	io_u.h	/^	void (*zbd_put_io)(struct thread_data *td, const struct io_u *);$/;"	m	struct:io_u	typeref:typename:void (*)(struct thread_data * td,const struct io_u *)
zbd_put_io	zbd.c	/^static void zbd_put_io(struct thread_data *td, const struct io_u *io_u)$/;"	f	typeref:typename:void	file:
zbd_put_io_u	zbd.h	/^static inline void zbd_put_io_u(struct thread_data *td, struct io_u *io_u)$/;"	f	typeref:typename:void
zbd_queue_io	io_u.h	/^	void (*zbd_queue_io)(struct thread_data *td, struct io_u *, int q,$/;"	m	struct:io_u	typeref:typename:void (*)(struct thread_data * td,struct io_u *,int q,bool success)
zbd_queue_io	zbd.c	/^static void zbd_queue_io(struct thread_data *td, struct io_u *io_u, int q,$/;"	f	typeref:typename:void	file:
zbd_queue_io_u	zbd.h	/^static inline void zbd_queue_io_u(struct thread_data *td, struct io_u *io_u,$/;"	f	typeref:typename:void
zbd_recalc_options_with_zone_granularity	zbd.c	/^void zbd_recalc_options_with_zone_granularity(struct thread_data *td)$/;"	f	typeref:typename:void
zbd_recalc_options_with_zone_granularity	zbd.h	/^void zbd_recalc_options_with_zone_granularity(struct thread_data *td);$/;"	p	typeref:typename:void
zbd_replay_write_order	zbd.c	/^static struct fio_zone_info *zbd_replay_write_order(struct thread_data *td,$/;"	f	typeref:struct:fio_zone_info *	file:
zbd_report_zones	zbd.c	/^static int zbd_report_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_reset_wp	zbd.c	/^static int zbd_reset_wp(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_reset_write_cnt	zbd.c	/^static void zbd_reset_write_cnt(const struct thread_data *td,$/;"	f	typeref:typename:void	file:
zbd_reset_zone	zbd.c	/^static int zbd_reset_zone(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_reset_zones	zbd.c	/^static int zbd_reset_zones(struct thread_data *td, struct fio_file *f,$/;"	f	typeref:typename:int	file:
zbd_set_max_open_zones	zbd.c	/^static int zbd_set_max_open_zones(struct thread_data *td, struct fio_file *f)$/;"	f	typeref:typename:int	file:
zbd_setup_files	zbd.c	/^int zbd_setup_files(struct thread_data *td)$/;"	f	typeref:typename:int
zbd_setup_files	zbd.h	/^int zbd_setup_files(struct thread_data *td);$/;"	p	typeref:typename:int
zbd_test_opts=	t/zbd/run-tests-against-nullb	/^		zbd_test_opts=()$/;"	f
zbd_test_opts=	t/zbd/run-tests-against-nullb	/^zbd_test_opts=()$/;"	f
zbd_unaligned_write	zbd.c	/^bool zbd_unaligned_write(int error_code)$/;"	f	typeref:typename:bool
zbd_unaligned_write	zbd.h	/^bool zbd_unaligned_write(int error_code);$/;"	p	typeref:typename:bool
zbd_using_direct_io	zbd.c	/^static bool zbd_using_direct_io(void)$/;"	f	typeref:typename:bool	file:
zbd_verify_bs	zbd.c	/^static bool zbd_verify_bs(void)$/;"	f	typeref:typename:bool	file:
zbd_verify_sizes	zbd.c	/^static bool zbd_verify_sizes(void)$/;"	f	typeref:typename:bool	file:
zbd_write_status	zbd.c	/^char *zbd_write_status(const struct thread_stat *ts)$/;"	f	typeref:typename:char *
zbd_write_status	zbd.h	/^char *zbd_write_status(const struct thread_stat *ts);$/;"	p	typeref:typename:char *
zbd_zone	zbd_types.h	/^struct zbd_zone {$/;"	s
zbd_zone_align_file_sizes	zbd.c	/^static bool zbd_zone_align_file_sizes(struct thread_data *td,$/;"	f	typeref:typename:bool	file:
zbd_zone_capacity_end	zbd.c	/^static inline uint64_t zbd_zone_capacity_end(const struct fio_zone_info *z)$/;"	f	typeref:typename:uint64_t	file:
zbd_zone_cond	zbd_types.h	/^enum zbd_zone_cond {$/;"	g
zbd_zone_end	zbd.c	/^static inline uint64_t zbd_zone_end(const struct fio_zone_info *z)$/;"	f	typeref:typename:uint64_t	file:
zbd_zone_full	zbd.c	/^static bool zbd_zone_full(const struct fio_file *f, struct fio_zone_info *z,$/;"	f	typeref:typename:bool	file:
zbd_zone_idx	zbd.c	/^static inline unsigned int zbd_zone_idx(const struct fio_file *f,$/;"	f	typeref:typename:unsigned int	file:
zbd_zone_type	zbd_types.h	/^enum zbd_zone_type {$/;"	g
zbd_zoned_model	zbd_types.h	/^enum zbd_zoned_model {$/;"	g
zbdz	engines/libzbc.c	/^			       uint64_t offset, struct zbd_zone *zbdz,$/;"	z	function:libzbc_report_zones	typeref:struct:zbd_zone *	file:
zbdz	engines/xnvme.c	/^				   struct zbd_zone *zbdz, unsigned int nr_zones)$/;"	z	function:xnvme_fioe_report_zones	typeref:struct:zbd_zone *	file:
zc	t/dedupe.c	/^				   struct zlib_ctrl *zc)$/;"	z	function:account_unique_capacity	typeref:struct:zlib_ctrl *	file:
zc	t/dedupe.c	/^			 struct zlib_ctrl *zc)$/;"	z	function:insert_chunks	typeref:struct:zlib_ctrl *	file:
zc	t/dedupe.c	/^			struct zlib_ctrl *zc)$/;"	z	function:insert_chunk	typeref:struct:zlib_ctrl *	file:
zc	t/dedupe.c	/^	struct zlib_ctrl zc;$/;"	m	struct:worker_thread	typeref:struct:zlib_ctrl	file:
zdev	engines/libzbc.c	/^	struct zbc_device	*zdev;$/;"	m	struct:libzbc_data	typeref:struct:zbc_device *	file:
ze	zbd.c	/^			   struct fio_zone_info *const ze)$/;"	z	function:zbd_reset_zones	typeref:struct:fio_zone_info * const	file:
zero_buffers	thread_options.h	/^	uint32_t zero_buffers;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
zero_buffers	thread_options.h	/^	unsigned int zero_buffers;$/;"	m	struct:thread_options	typeref:typename:unsigned int
zeta2	lib/zipf.h	/^	double zeta2;$/;"	m	struct:zipf_state	typeref:typename:double
zetan	lib/zipf.h	/^	double zetan;$/;"	m	struct:zipf_state	typeref:typename:double
zipf	file.h	/^		struct zipf_state zipf;$/;"	m	union:fio_file::__anonfd762ebb050a	typeref:struct:zipf_state
zipf_disable_hash	lib/zipf.c	/^void zipf_disable_hash(struct zipf_state *zs)$/;"	f	typeref:typename:void
zipf_disable_hash	lib/zipf.h	/^void zipf_disable_hash(struct zipf_state *zs);$/;"	p	typeref:typename:void
zipf_init	lib/zipf.c	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	f	typeref:typename:void
zipf_init	lib/zipf.h	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	p	typeref:typename:void
zipf_next	lib/zipf.c	/^uint64_t zipf_next(struct zipf_state *zs)$/;"	f	typeref:typename:uint64_t
zipf_next	lib/zipf.h	/^uint64_t zipf_next(struct zipf_state *zs);$/;"	p	typeref:typename:uint64_t
zipf_state	lib/zipf.h	/^struct zipf_state {$/;"	s
zipf_theta	fio.h	/^		double zipf_theta;$/;"	m	union:thread_data::__anon0f7035d90a0a	typeref:typename:double
zipf_theta	thread_options.h	/^	fio_fp64_t zipf_theta;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
zipf_theta	thread_options.h	/^	fio_fp64_t zipf_theta;$/;"	m	struct:thread_options_pack	typeref:typename:fio_fp64_t
zipf_update	lib/zipf.c	/^static void zipf_update(struct zipf_state *zs)$/;"	f	typeref:typename:void	file:
zl	zbd.c	/^	      struct fio_zone_info *zb, struct fio_zone_info *zl)$/;"	z	function:zbd_find_zone	typeref:struct:fio_zone_info *	file:
zlib_ctrl	t/dedupe.c	/^struct zlib_ctrl {$/;"	s	file:
zone	zbd.c	/^					struct fio_zone_info *zone)$/;"	z	function:zbd_zone_idx	typeref:struct:fio_zone_info *	file:
zone_bytes	fio.h	/^	uint64_t zone_bytes;$/;"	m	struct:thread_data	typeref:typename:uint64_t
zone_capacity	oslib/linux-blkzoned.c	/^static uint64_t zone_capacity(struct blk_zone_report *hdr,$/;"	f	typeref:typename:uint64_t	file:
zone_capacity	thread_options.h	/^	uint64_t zone_capacity;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
zone_capacity	thread_options.h	/^	unsigned long long zone_capacity;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
zone_idx	zbd.c	/^						 unsigned int zone_idx)$/;"	z	function:zbd_get_zone	typeref:typename:unsigned int	file:
zone_info	zbd.h	/^	struct fio_zone_info	zone_info[0];$/;"	m	struct:zoned_block_device_info	typeref:struct:fio_zone_info[0]
zone_lock	zbd.c	/^static void zone_lock(struct thread_data *td, const struct fio_file *f,$/;"	f	typeref:typename:void	file:
zone_mode	thread_options.h	/^	enum fio_zone_mode zone_mode;$/;"	m	struct:thread_options	typeref:enum:fio_zone_mode
zone_mode	thread_options.h	/^	uint32_t zone_mode;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
zone_range	thread_options.h	/^	uint64_t zone_range;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
zone_range	thread_options.h	/^	unsigned long long zone_range;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
zone_size	thread_options.h	/^	uint64_t zone_size;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
zone_size	thread_options.h	/^	unsigned long long zone_size;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
zone_size	zbd.h	/^	uint64_t		zone_size;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint64_t
zone_size_log2	zbd.h	/^	uint32_t		zone_size_log2;$/;"	m	struct:zoned_block_device_info	typeref:typename:uint32_t
zone_skip	thread_options.h	/^	uint64_t zone_skip;$/;"	m	struct:thread_options_pack	typeref:typename:uint64_t
zone_skip	thread_options.h	/^	unsigned long long zone_skip;$/;"	m	struct:thread_options	typeref:typename:unsigned long long
zone_skip_nz	thread_options.h	/^	uint32_t zone_skip_nz;$/;"	m	struct:thread_options	typeref:typename:uint32_t
zone_skip_nz	thread_options.h	/^	uint32_t zone_skip_nz;$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t
zone_split	thread_options.h	/^	struct zone_split *zone_split[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:struct:zone_split * []
zone_split	thread_options.h	/^	struct zone_split zone_split[DDIR_RWDIR_CNT][ZONESPLIT_MAX];$/;"	m	struct:thread_options_pack	typeref:struct:zone_split[][]
zone_split	thread_options.h	/^struct zone_split {$/;"	s
zone_split_ddir	options.c	/^static int zone_split_ddir(struct thread_options *o, void *eo,$/;"	f	typeref:typename:int	file:
zone_split_index	fio.h	/^struct zone_split_index {$/;"	s
zone_split_nr	thread_options.h	/^	uint32_t zone_split_nr[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options_pack	typeref:typename:uint32_t[]
zone_split_nr	thread_options.h	/^	unsigned int zone_split_nr[DDIR_RWDIR_CNT];$/;"	m	struct:thread_options	typeref:typename:unsigned int[]
zone_state	fio.h	/^	struct frand_state zone_state;$/;"	m	struct:thread_data	typeref:struct:frand_state
zone_state_index	fio.h	/^	struct zone_split_index **zone_state_index;$/;"	m	struct:thread_data	typeref:struct:zone_split_index **
zone_unlock	zbd.c	/^static inline void zone_unlock(struct fio_zone_info *z)$/;"	f	typeref:typename:void	file:
zoned_block_device_info	zbd.h	/^struct zoned_block_device_info {$/;"	s
zoned_nullb	t/run-fio-tests.py	/^    def zoned_nullb(cls):$/;"	m	class:Requirements
zones	engines/skeleton_external.c	/^				     uint64_t offset, struct zbd_zone *zones,$/;"	z	function:fio_skeleton_report_zones	typeref:struct:zbd_zone *	file:
zones	oslib/blkzoned.h	/^				struct zbd_zone *zones, unsigned int nr_zones)$/;"	z	function:blkzoned_report_zones	typeref:struct:zbd_zone *	file:
zones	oslib/blkzoned.h	/^				struct zbd_zone *zones, unsigned int nr_zones);$/;"	z	prototype:blkzoned_report_zones	typeref:struct:zbd_zone *	file:
zones	oslib/linux-blkzoned.c	/^			  uint64_t offset, struct zbd_zone *zones,$/;"	z	function:blkzoned_report_zones	typeref:struct:zbd_zone *	file:
zones	oslib/linux-blkzoned.c	/^struct blk_zone zones[0];$/;"	m	struct:blk_zone_report_v2	typeref:struct:blk_zone[0]	file:
zones	zbd.c	/^			    uint64_t offset, struct zbd_zone *zones,$/;"	z	function:zbd_report_zones	typeref:struct:zbd_zone *	file:
zrf	thread_options.h	/^	fio_fp64_t zrf;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
zrt	thread_options.h	/^	fio_fp64_t zrt;$/;"	m	struct:thread_options	typeref:typename:fio_fp64_t
zs	lib/zipf.c	/^static void shared_rand_init(struct zipf_state *zs, uint64_t nranges,$/;"	z	function:shared_rand_init	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^static void zipf_update(struct zipf_state *zs)$/;"	z	function:zipf_update	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^uint64_t pareto_next(struct zipf_state *zs)$/;"	z	function:pareto_next	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^uint64_t zipf_next(struct zipf_state *zs)$/;"	z	function:zipf_next	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	function:pareto_init	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^void zipf_disable_hash(struct zipf_state *zs)$/;"	z	function:zipf_disable_hash	typeref:struct:zipf_state *	file:
zs	lib/zipf.c	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	function:zipf_init	typeref:struct:zipf_state *	file:
zs	lib/zipf.h	/^uint64_t pareto_next(struct zipf_state *zs);$/;"	z	prototype:pareto_next	typeref:struct:zipf_state *	file:
zs	lib/zipf.h	/^uint64_t zipf_next(struct zipf_state *zs);$/;"	z	prototype:zipf_next	typeref:struct:zipf_state *	file:
zs	lib/zipf.h	/^void pareto_init(struct zipf_state *zs, uint64_t nranges, double h,$/;"	z	prototype:pareto_init	typeref:struct:zipf_state *	file:
zs	lib/zipf.h	/^void zipf_disable_hash(struct zipf_state *zs);$/;"	z	prototype:zipf_disable_hash	typeref:struct:zipf_state *	file:
zs	lib/zipf.h	/^void zipf_init(struct zipf_state *zs, uint64_t nranges, double theta,$/;"	z	prototype:zipf_init	typeref:struct:zipf_state *	file:
~NullData	engines/null.c	/^	~NullData()$/;"	f	struct:NullData	file:
